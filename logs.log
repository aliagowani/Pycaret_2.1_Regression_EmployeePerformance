2020-10-30 11:19:57,272:INFO:PyCaret Supervised Module
2020-10-30 11:19:57,272:INFO:ML Usecase: classification
2020-10-30 11:19:57,273:INFO:version 2.2
2020-10-30 11:19:57,273:INFO:Initializing setup()
2020-10-30 11:19:57,273:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-30 11:19:57,273:INFO:Checking environment
2020-10-30 11:19:57,273:INFO:python_version: 3.8.3
2020-10-30 11:19:57,273:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-30 11:19:57,273:INFO:machine: x86_64
2020-10-30 11:19:57,291:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-30 11:19:57,292:INFO:Memory: svmem(total=8589934592, available=2120802304, percent=75.3, used=4236324864, free=19116032, active=2104971264, inactive=2048434176, wired=2131353600)
2020-10-30 11:19:57,292:INFO:Physical Core: 4
2020-10-30 11:19:57,292:INFO:Logical Core: 8
2020-10-30 11:19:57,292:INFO:Checking libraries
2020-10-30 11:19:57,292:INFO:pd==1.0.5
2020-10-30 11:19:57,292:INFO:numpy==1.18.5
2020-10-30 11:19:57,292:INFO:sklearn==0.23.2
2020-10-30 11:19:57,863:INFO:xgboost==1.2.0
2020-10-30 11:19:57,864:INFO:lightgbm==2.3.1
2020-10-30 11:19:57,920:INFO:catboost==0.24.1
2020-10-30 11:19:58,709:INFO:mlflow==1.11.0
2020-10-30 11:19:58,709:INFO:Checking Exceptions
2020-10-30 11:19:58,710:INFO:Declaring global variables
2020-10-30 11:19:58,710:INFO:USI: 59a2
2020-10-30 11:19:58,710:INFO:pycaret_globals: {'iterative_imputation_iters_param', 'gpu_param', '_ml_usecase', 'create_model_container', 'fix_imbalance_method_param', 'y_test', '_all_models', 'html_param', '_gpu_n_jobs_param', 'fold_groups_param', 'experiment__', 'y', '_all_metrics', '_internal_pipeline', 'n_jobs_param', 'transform_target_method_param', 'exp_name_log', 'fold_shuffle_param', 'prep_pipe', 'data_before_preprocess', '_all_models_internal', 'transform_target_param', 'imputation_regressor', 'master_model_container', 'log_plots_param', 'logging_param', 'USI', 'stratify_param', 'imputation_classifier', 'X_train', 'display_container', 'fold_param', 'target_param', 'X_test', 'y_train', 'X', 'seed', 'fold_generator', 'fix_imbalance_param', 'pycaret_globals'}
2020-10-30 11:19:58,710:INFO:Preparing display monitor
2020-10-30 11:19:58,710:INFO:Preparing display monitor
2020-10-30 11:19:58,729:INFO:Importing libraries
2020-10-30 11:19:58,729:INFO:Copying data for preprocessing
2020-10-30 11:19:58,739:INFO:Declaring preprocessing parameters
2020-10-30 11:19:58,741:INFO:Setting up iterative imputation
2020-10-30 11:19:59,112:INFO:Creating preprocessing pipeline
2020-10-30 11:19:59,131:INFO:Preprocessing pipeline created successfully
2020-10-30 11:19:59,131:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-30 11:19:59,132:INFO:Creating global containers
2020-10-30 11:19:59,133:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-30 11:19:59,266:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:20:00,314:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:20:00,592:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:20:00,883:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:20:00,943:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:20:01,186:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:20:01,323:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:20:01,374:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:20:01,506:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:20:01,533:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:20:01,570:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:20:01,718:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:20:01,772:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:20:01,822:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:20:01,883:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:20:01,924:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:20:01,972:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:20:02,013:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:20:02,089:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:20:02,123:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:20:02,161:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:20:02,194:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:20:02,271:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:20:02,320:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:20:02,368:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:20:02,413:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:20:02,490:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:20:02,524:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:20:02,585:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:20:02,648:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:20:02,740:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:20:02,778:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:20:02,836:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:20:02,938:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:20:02,974:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:20:03,017:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:20:03,046:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:20:03,078:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:20:03,161:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:20:03,188:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:20:03,275:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:20:03,390:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:20:03,444:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:20:03,590:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:20:03,640:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:20:03,774:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:20:03,978:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:20:04,196:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:20:04,285:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:20:04,462:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:20:07,370:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:20:07,378:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:20:07,385:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:20:07,396:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:20:07,405:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:20:07,414:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:20:07,421:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:20:07,429:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:20:07,437:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:20:07,449:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:20:07,458:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:20:07,466:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:20:07,473:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:20:07,482:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:20:07,490:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:20:07,499:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:20:07,506:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:20:07,513:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:20:07,521:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:20:07,528:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:20:07,536:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:20:07,544:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:20:07,552:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:20:07,559:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:20:07,565:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:20:07,573:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:20:07,580:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:20:07,590:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:20:07,599:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:20:07,608:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:20:07,615:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:20:07,623:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:20:07,631:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:20:07,640:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:20:07,648:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:20:07,657:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:20:07,665:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:20:07,673:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:20:07,681:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:20:07,689:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:20:07,697:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:20:07,706:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:20:07,714:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:20:07,721:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:20:07,728:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:20:07,735:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:20:07,743:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:20:07,751:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:20:07,757:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:20:07,765:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:20:07,839:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:20:07,847:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:20:07,855:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:20:07,863:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:20:07,871:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:20:07,879:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:20:07,895:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:20:07,906:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:20:07,916:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:20:07,923:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:20:07,931:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:20:07,939:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:20:07,947:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:20:07,954:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:20:07,962:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:20:07,970:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:20:07,977:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:20:07,986:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:20:07,997:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:20:08,006:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:20:08,015:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:20:08,023:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:20:08,031:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:20:08,039:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:20:08,051:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:20:08,058:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:20:08,065:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:20:08,072:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:20:08,079:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:20:08,087:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:20:08,097:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:20:08,104:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:20:08,111:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:20:08,118:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:20:08,125:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:20:08,132:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:20:08,139:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:20:08,147:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:20:08,155:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:20:08,161:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:20:08,168:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:20:08,175:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:20:08,182:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:20:08,190:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:20:08,200:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:20:08,207:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:20:08,215:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:20:08,222:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:20:08,229:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:20:08,237:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:20:08,519:INFO:Creating grid variables
2020-10-30 11:20:08,560:INFO:create_model_container: 0
2020-10-30 11:20:08,560:INFO:master_model_container: 0
2020-10-30 11:20:08,560:INFO:display_container: 0
2020-10-30 11:20:08,573:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-30 11:20:08,573:INFO:setup() succesfully completed......................................
2020-10-30 11:20:20,120:INFO:Initializing get_config()
2020-10-30 11:20:20,120:INFO:get_config(variable=X_train)
2020-10-30 11:20:20,124:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Friday_multiply_Sunday  Sunday_multiply_Friday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-10-30 11:20:20,124:INFO:get_config() succesfully completed......................................
2020-10-30 11:20:25,292:INFO:Initializing compare_models()
2020-10-30 11:20:25,292:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-30 11:20:25,292:INFO:Checking exceptions
2020-10-30 11:20:25,294:INFO:Preparing display monitor
2020-10-30 11:20:25,294:INFO:Preparing display monitor
2020-10-30 11:20:25,320:INFO:Initializing Logistic Regression
2020-10-30 11:20:25,320:INFO:Total runtime is 2.3523966471354168e-06 minutes
2020-10-30 11:20:25,329:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:25,330:INFO:Initializing create_model()
2020-10-30 11:20:25,330:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:25,330:INFO:Checking exceptions
2020-10-30 11:20:25,330:INFO:Importing libraries
2020-10-30 11:20:25,331:INFO:Copying training dataset
2020-10-30 11:20:25,332:INFO:Defining folds
2020-10-30 11:20:25,332:INFO:Declaring metric variables
2020-10-30 11:20:25,339:INFO:Importing untrained model
2020-10-30 11:20:25,345:INFO:Logistic Regression Imported succesfully
2020-10-30 11:20:25,358:INFO:Starting cross validation
2020-10-30 11:20:25,358:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:30,518:INFO:Calculating mean and std
2020-10-30 11:20:30,526:INFO:Creating metrics dataframe
2020-10-30 11:20:30,541:INFO:Uploading results into container
2020-10-30 11:20:30,541:INFO:Uploading model into container now
2020-10-30 11:20:30,542:INFO:create_model_container: 1
2020-10-30 11:20:30,542:INFO:master_model_container: 1
2020-10-30 11:20:30,543:INFO:display_container: 1
2020-10-30 11:20:30,545:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-10-30 11:20:30,545:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:30,701:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:30,701:INFO:Creating metrics dataframe
2020-10-30 11:20:30,714:INFO:Initializing K Neighbors Classifier
2020-10-30 11:20:30,714:INFO:Total runtime is 0.08989296754201252 minutes
2020-10-30 11:20:30,724:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:30,724:INFO:Initializing create_model()
2020-10-30 11:20:30,724:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:30,725:INFO:Checking exceptions
2020-10-30 11:20:30,725:INFO:Importing libraries
2020-10-30 11:20:30,725:INFO:Copying training dataset
2020-10-30 11:20:30,726:INFO:Defining folds
2020-10-30 11:20:30,726:INFO:Declaring metric variables
2020-10-30 11:20:30,733:INFO:Importing untrained model
2020-10-30 11:20:30,741:INFO:K Neighbors Classifier Imported succesfully
2020-10-30 11:20:30,768:INFO:Starting cross validation
2020-10-30 11:20:30,769:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:31,103:INFO:Calculating mean and std
2020-10-30 11:20:31,104:INFO:Creating metrics dataframe
2020-10-30 11:20:31,112:INFO:Uploading results into container
2020-10-30 11:20:31,112:INFO:Uploading model into container now
2020-10-30 11:20:31,112:INFO:create_model_container: 2
2020-10-30 11:20:31,112:INFO:master_model_container: 2
2020-10-30 11:20:31,112:INFO:display_container: 1
2020-10-30 11:20:31,113:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-10-30 11:20:31,113:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:31,279:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:31,279:INFO:Creating metrics dataframe
2020-10-30 11:20:31,326:INFO:Initializing Naive Bayes
2020-10-30 11:20:31,326:INFO:Total runtime is 0.10009668270746866 minutes
2020-10-30 11:20:31,336:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:31,336:INFO:Initializing create_model()
2020-10-30 11:20:31,336:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:31,337:INFO:Checking exceptions
2020-10-30 11:20:31,337:INFO:Importing libraries
2020-10-30 11:20:31,337:INFO:Copying training dataset
2020-10-30 11:20:31,338:INFO:Defining folds
2020-10-30 11:20:31,339:INFO:Declaring metric variables
2020-10-30 11:20:31,356:INFO:Importing untrained model
2020-10-30 11:20:31,364:INFO:Naive Bayes Imported succesfully
2020-10-30 11:20:31,384:INFO:Starting cross validation
2020-10-30 11:20:31,384:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:31,455:INFO:Calculating mean and std
2020-10-30 11:20:31,457:INFO:Creating metrics dataframe
2020-10-30 11:20:31,466:INFO:Uploading results into container
2020-10-30 11:20:31,466:INFO:Uploading model into container now
2020-10-30 11:20:31,466:INFO:create_model_container: 3
2020-10-30 11:20:31,467:INFO:master_model_container: 3
2020-10-30 11:20:31,467:INFO:display_container: 1
2020-10-30 11:20:31,467:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-10-30 11:20:31,467:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:31,607:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:31,607:INFO:Creating metrics dataframe
2020-10-30 11:20:31,768:INFO:Initializing Decision Tree Classifier
2020-10-30 11:20:31,769:INFO:Total runtime is 0.10748578707377116 minutes
2020-10-30 11:20:31,784:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:31,784:INFO:Initializing create_model()
2020-10-30 11:20:31,785:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:31,785:INFO:Checking exceptions
2020-10-30 11:20:31,785:INFO:Importing libraries
2020-10-30 11:20:31,785:INFO:Copying training dataset
2020-10-30 11:20:31,789:INFO:Defining folds
2020-10-30 11:20:31,789:INFO:Declaring metric variables
2020-10-30 11:20:31,812:INFO:Importing untrained model
2020-10-30 11:20:31,825:INFO:Decision Tree Classifier Imported succesfully
2020-10-30 11:20:31,845:INFO:Starting cross validation
2020-10-30 11:20:31,845:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:31,931:INFO:Calculating mean and std
2020-10-30 11:20:31,933:INFO:Creating metrics dataframe
2020-10-30 11:20:31,946:INFO:Uploading results into container
2020-10-30 11:20:31,946:INFO:Uploading model into container now
2020-10-30 11:20:31,947:INFO:create_model_container: 4
2020-10-30 11:20:31,947:INFO:master_model_container: 4
2020-10-30 11:20:31,947:INFO:display_container: 1
2020-10-30 11:20:31,947:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-10-30 11:20:31,947:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:32,112:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:32,112:INFO:Creating metrics dataframe
2020-10-30 11:20:32,156:INFO:Initializing SVM - Linear Kernel
2020-10-30 11:20:32,156:INFO:Total runtime is 0.11392846504847208 minutes
2020-10-30 11:20:32,167:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:32,167:INFO:Initializing create_model()
2020-10-30 11:20:32,167:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:32,168:INFO:Checking exceptions
2020-10-30 11:20:32,168:INFO:Importing libraries
2020-10-30 11:20:32,168:INFO:Copying training dataset
2020-10-30 11:20:32,169:INFO:Defining folds
2020-10-30 11:20:32,170:INFO:Declaring metric variables
2020-10-30 11:20:32,177:INFO:Importing untrained model
2020-10-30 11:20:32,185:INFO:SVM - Linear Kernel Imported succesfully
2020-10-30 11:20:32,203:INFO:Starting cross validation
2020-10-30 11:20:32,203:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:32,260:INFO:Calculating mean and std
2020-10-30 11:20:32,262:INFO:Creating metrics dataframe
2020-10-30 11:20:32,269:INFO:Uploading results into container
2020-10-30 11:20:32,269:INFO:Uploading model into container now
2020-10-30 11:20:32,269:INFO:create_model_container: 5
2020-10-30 11:20:32,269:INFO:master_model_container: 5
2020-10-30 11:20:32,269:INFO:display_container: 1
2020-10-30 11:20:32,270:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-30 11:20:32,270:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:32,377:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:32,377:INFO:Creating metrics dataframe
2020-10-30 11:20:32,414:INFO:Initializing Ridge Classifier
2020-10-30 11:20:32,414:INFO:Total runtime is 0.11823096672693888 minutes
2020-10-30 11:20:32,425:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:32,425:INFO:Initializing create_model()
2020-10-30 11:20:32,425:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:32,426:INFO:Checking exceptions
2020-10-30 11:20:32,426:INFO:Importing libraries
2020-10-30 11:20:32,426:INFO:Copying training dataset
2020-10-30 11:20:32,428:INFO:Defining folds
2020-10-30 11:20:32,429:INFO:Declaring metric variables
2020-10-30 11:20:32,440:INFO:Importing untrained model
2020-10-30 11:20:32,449:INFO:Ridge Classifier Imported succesfully
2020-10-30 11:20:32,468:INFO:Starting cross validation
2020-10-30 11:20:32,469:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:32,581:INFO:Calculating mean and std
2020-10-30 11:20:32,582:INFO:Creating metrics dataframe
2020-10-30 11:20:32,589:INFO:Uploading results into container
2020-10-30 11:20:32,589:INFO:Uploading model into container now
2020-10-30 11:20:32,589:INFO:create_model_container: 6
2020-10-30 11:20:32,589:INFO:master_model_container: 6
2020-10-30 11:20:32,589:INFO:display_container: 1
2020-10-30 11:20:32,590:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-10-30 11:20:32,590:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:32,692:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:32,693:INFO:Creating metrics dataframe
2020-10-30 11:20:32,744:INFO:Initializing Random Forest Classifier
2020-10-30 11:20:32,744:INFO:Total runtime is 0.1237297495206197 minutes
2020-10-30 11:20:32,758:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:32,759:INFO:Initializing create_model()
2020-10-30 11:20:32,759:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:32,759:INFO:Checking exceptions
2020-10-30 11:20:32,759:INFO:Importing libraries
2020-10-30 11:20:32,759:INFO:Copying training dataset
2020-10-30 11:20:32,761:INFO:Defining folds
2020-10-30 11:20:32,761:INFO:Declaring metric variables
2020-10-30 11:20:32,780:INFO:Importing untrained model
2020-10-30 11:20:32,792:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:20:32,813:INFO:Starting cross validation
2020-10-30 11:20:32,814:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:33,862:INFO:Calculating mean and std
2020-10-30 11:20:33,863:INFO:Creating metrics dataframe
2020-10-30 11:20:33,867:INFO:Uploading results into container
2020-10-30 11:20:33,867:INFO:Uploading model into container now
2020-10-30 11:20:33,867:INFO:create_model_container: 7
2020-10-30 11:20:33,867:INFO:master_model_container: 7
2020-10-30 11:20:33,868:INFO:display_container: 1
2020-10-30 11:20:33,868:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-10-30 11:20:33,868:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:33,946:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:33,946:INFO:Creating metrics dataframe
2020-10-30 11:20:33,998:INFO:Initializing Quadratic Discriminant Analysis
2020-10-30 11:20:33,999:INFO:Total runtime is 0.14464136759440102 minutes
2020-10-30 11:20:34,027:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:34,028:INFO:Initializing create_model()
2020-10-30 11:20:34,028:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:34,029:INFO:Checking exceptions
2020-10-30 11:20:34,029:INFO:Importing libraries
2020-10-30 11:20:34,029:INFO:Copying training dataset
2020-10-30 11:20:34,031:INFO:Defining folds
2020-10-30 11:20:34,031:INFO:Declaring metric variables
2020-10-30 11:20:34,041:INFO:Importing untrained model
2020-10-30 11:20:34,051:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-10-30 11:20:34,073:INFO:Starting cross validation
2020-10-30 11:20:34,074:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:34,195:INFO:Calculating mean and std
2020-10-30 11:20:34,196:INFO:Creating metrics dataframe
2020-10-30 11:20:34,203:INFO:Uploading results into container
2020-10-30 11:20:34,204:INFO:Uploading model into container now
2020-10-30 11:20:34,204:INFO:create_model_container: 8
2020-10-30 11:20:34,204:INFO:master_model_container: 8
2020-10-30 11:20:34,204:INFO:display_container: 1
2020-10-30 11:20:34,205:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-10-30 11:20:34,205:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:34,296:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:34,296:INFO:Creating metrics dataframe
2020-10-30 11:20:34,369:INFO:Initializing Ada Boost Classifier
2020-10-30 11:20:34,370:INFO:Total runtime is 0.15082451502482094 minutes
2020-10-30 11:20:34,379:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:34,380:INFO:Initializing create_model()
2020-10-30 11:20:34,380:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:34,380:INFO:Checking exceptions
2020-10-30 11:20:34,381:INFO:Importing libraries
2020-10-30 11:20:34,381:INFO:Copying training dataset
2020-10-30 11:20:34,383:INFO:Defining folds
2020-10-30 11:20:34,383:INFO:Declaring metric variables
2020-10-30 11:20:34,393:INFO:Importing untrained model
2020-10-30 11:20:34,405:INFO:Ada Boost Classifier Imported succesfully
2020-10-30 11:20:34,420:INFO:Starting cross validation
2020-10-30 11:20:34,421:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:34,870:INFO:Calculating mean and std
2020-10-30 11:20:34,871:INFO:Creating metrics dataframe
2020-10-30 11:20:34,875:INFO:Uploading results into container
2020-10-30 11:20:34,876:INFO:Uploading model into container now
2020-10-30 11:20:34,876:INFO:create_model_container: 9
2020-10-30 11:20:34,876:INFO:master_model_container: 9
2020-10-30 11:20:34,876:INFO:display_container: 1
2020-10-30 11:20:34,876:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-10-30 11:20:34,876:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:34,948:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:34,949:INFO:Creating metrics dataframe
2020-10-30 11:20:34,984:INFO:Initializing Gradient Boosting Classifier
2020-10-30 11:20:34,984:INFO:Total runtime is 0.16106283664703366 minutes
2020-10-30 11:20:34,992:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:34,993:INFO:Initializing create_model()
2020-10-30 11:20:34,993:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:34,993:INFO:Checking exceptions
2020-10-30 11:20:34,993:INFO:Importing libraries
2020-10-30 11:20:34,993:INFO:Copying training dataset
2020-10-30 11:20:34,995:INFO:Defining folds
2020-10-30 11:20:34,995:INFO:Declaring metric variables
2020-10-30 11:20:35,003:INFO:Importing untrained model
2020-10-30 11:20:35,010:INFO:Gradient Boosting Classifier Imported succesfully
2020-10-30 11:20:35,026:INFO:Starting cross validation
2020-10-30 11:20:35,027:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:35,480:INFO:Calculating mean and std
2020-10-30 11:20:35,481:INFO:Creating metrics dataframe
2020-10-30 11:20:35,485:INFO:Uploading results into container
2020-10-30 11:20:35,485:INFO:Uploading model into container now
2020-10-30 11:20:35,486:INFO:create_model_container: 10
2020-10-30 11:20:35,486:INFO:master_model_container: 10
2020-10-30 11:20:35,486:INFO:display_container: 1
2020-10-30 11:20:35,487:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-30 11:20:35,487:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:35,570:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:35,570:INFO:Creating metrics dataframe
2020-10-30 11:20:35,611:INFO:Initializing Linear Discriminant Analysis
2020-10-30 11:20:35,611:INFO:Total runtime is 0.17151924769083657 minutes
2020-10-30 11:20:35,622:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:35,622:INFO:Initializing create_model()
2020-10-30 11:20:35,622:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:35,622:INFO:Checking exceptions
2020-10-30 11:20:35,623:INFO:Importing libraries
2020-10-30 11:20:35,623:INFO:Copying training dataset
2020-10-30 11:20:35,624:INFO:Defining folds
2020-10-30 11:20:35,624:INFO:Declaring metric variables
2020-10-30 11:20:35,631:INFO:Importing untrained model
2020-10-30 11:20:35,641:INFO:Linear Discriminant Analysis Imported succesfully
2020-10-30 11:20:35,661:INFO:Starting cross validation
2020-10-30 11:20:35,661:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:35,733:INFO:Calculating mean and std
2020-10-30 11:20:35,734:INFO:Creating metrics dataframe
2020-10-30 11:20:35,742:INFO:Uploading results into container
2020-10-30 11:20:35,742:INFO:Uploading model into container now
2020-10-30 11:20:35,743:INFO:create_model_container: 11
2020-10-30 11:20:35,743:INFO:master_model_container: 11
2020-10-30 11:20:35,743:INFO:display_container: 1
2020-10-30 11:20:35,743:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-10-30 11:20:35,744:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:35,833:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:35,833:INFO:Creating metrics dataframe
2020-10-30 11:20:35,879:INFO:Initializing Extra Trees Classifier
2020-10-30 11:20:35,879:INFO:Total runtime is 0.17598431507746376 minutes
2020-10-30 11:20:35,890:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:35,891:INFO:Initializing create_model()
2020-10-30 11:20:35,891:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:35,891:INFO:Checking exceptions
2020-10-30 11:20:35,892:INFO:Importing libraries
2020-10-30 11:20:35,892:INFO:Copying training dataset
2020-10-30 11:20:35,894:INFO:Defining folds
2020-10-30 11:20:35,894:INFO:Declaring metric variables
2020-10-30 11:20:35,901:INFO:Importing untrained model
2020-10-30 11:20:35,909:INFO:Extra Trees Classifier Imported succesfully
2020-10-30 11:20:35,924:INFO:Starting cross validation
2020-10-30 11:20:35,925:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:36,865:INFO:Calculating mean and std
2020-10-30 11:20:36,866:INFO:Creating metrics dataframe
2020-10-30 11:20:36,870:INFO:Uploading results into container
2020-10-30 11:20:36,870:INFO:Uploading model into container now
2020-10-30 11:20:36,871:INFO:create_model_container: 12
2020-10-30 11:20:36,871:INFO:master_model_container: 12
2020-10-30 11:20:36,871:INFO:display_container: 1
2020-10-30 11:20:36,871:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-10-30 11:20:36,871:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:36,941:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:36,941:INFO:Creating metrics dataframe
2020-10-30 11:20:36,985:INFO:Initializing Extreme Gradient Boosting
2020-10-30 11:20:36,985:INFO:Total runtime is 0.19442211786905922 minutes
2020-10-30 11:20:36,993:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:36,993:INFO:Initializing create_model()
2020-10-30 11:20:36,993:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:36,993:INFO:Checking exceptions
2020-10-30 11:20:36,994:INFO:Importing libraries
2020-10-30 11:20:36,994:INFO:Copying training dataset
2020-10-30 11:20:36,995:INFO:Defining folds
2020-10-30 11:20:36,995:INFO:Declaring metric variables
2020-10-30 11:20:37,005:INFO:Importing untrained model
2020-10-30 11:20:37,014:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:20:37,031:INFO:Starting cross validation
2020-10-30 11:20:37,032:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:39,061:INFO:Calculating mean and std
2020-10-30 11:20:39,062:INFO:Creating metrics dataframe
2020-10-30 11:20:39,067:INFO:Uploading results into container
2020-10-30 11:20:39,067:INFO:Uploading model into container now
2020-10-30 11:20:39,067:INFO:create_model_container: 13
2020-10-30 11:20:39,067:INFO:master_model_container: 13
2020-10-30 11:20:39,067:INFO:display_container: 1
2020-10-30 11:20:39,068:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-10-30 11:20:39,068:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:39,138:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:39,138:INFO:Creating metrics dataframe
2020-10-30 11:20:39,185:INFO:Initializing Light Gradient Boosting Machine
2020-10-30 11:20:39,185:INFO:Total runtime is 0.23108708461125688 minutes
2020-10-30 11:20:39,195:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:39,195:INFO:Initializing create_model()
2020-10-30 11:20:39,195:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:39,195:INFO:Checking exceptions
2020-10-30 11:20:39,195:INFO:Importing libraries
2020-10-30 11:20:39,196:INFO:Copying training dataset
2020-10-30 11:20:39,197:INFO:Defining folds
2020-10-30 11:20:39,197:INFO:Declaring metric variables
2020-10-30 11:20:39,204:INFO:Importing untrained model
2020-10-30 11:20:39,211:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:20:39,227:INFO:Starting cross validation
2020-10-30 11:20:39,227:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:39,463:INFO:Calculating mean and std
2020-10-30 11:20:39,465:INFO:Creating metrics dataframe
2020-10-30 11:20:39,472:INFO:Uploading results into container
2020-10-30 11:20:39,472:INFO:Uploading model into container now
2020-10-30 11:20:39,472:INFO:create_model_container: 14
2020-10-30 11:20:39,472:INFO:master_model_container: 14
2020-10-30 11:20:39,473:INFO:display_container: 1
2020-10-30 11:20:39,473:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:20:39,473:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:39,584:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:39,584:INFO:Creating metrics dataframe
2020-10-30 11:20:39,656:INFO:Initializing CatBoost Classifier
2020-10-30 11:20:39,656:INFO:Total runtime is 0.2389291683832804 minutes
2020-10-30 11:20:39,665:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:39,666:INFO:Initializing create_model()
2020-10-30 11:20:39,666:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:39,666:INFO:Checking exceptions
2020-10-30 11:20:39,666:INFO:Importing libraries
2020-10-30 11:20:39,666:INFO:Copying training dataset
2020-10-30 11:20:39,667:INFO:Defining folds
2020-10-30 11:20:39,667:INFO:Declaring metric variables
2020-10-30 11:20:39,681:INFO:Importing untrained model
2020-10-30 11:20:39,690:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:20:39,713:INFO:Starting cross validation
2020-10-30 11:20:39,717:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:58,539:INFO:Calculating mean and std
2020-10-30 11:20:58,547:INFO:Creating metrics dataframe
2020-10-30 11:20:58,559:INFO:Uploading results into container
2020-10-30 11:20:58,559:INFO:Uploading model into container now
2020-10-30 11:20:58,560:INFO:create_model_container: 15
2020-10-30 11:20:58,560:INFO:master_model_container: 15
2020-10-30 11:20:58,561:INFO:display_container: 1
2020-10-30 11:20:58,561:INFO:<catboost.core.CatBoostClassifier object at 0x7ff34fd41df0>
2020-10-30 11:20:58,561:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:58,689:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:58,690:INFO:Creating metrics dataframe
2020-10-30 11:20:58,772:INFO:Initializing create_model()
2020-10-30 11:20:58,772:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:20:58,772:INFO:Checking exceptions
2020-10-30 11:20:58,772:INFO:Importing libraries
2020-10-30 11:20:58,772:INFO:Copying training dataset
2020-10-30 11:20:58,773:INFO:Defining folds
2020-10-30 11:20:58,774:INFO:Declaring metric variables
2020-10-30 11:20:58,774:INFO:Importing untrained model
2020-10-30 11:20:58,774:INFO:Declaring custom model
2020-10-30 11:20:58,775:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:20:58,777:INFO:Cross validation set to False
2020-10-30 11:20:58,777:INFO:Fitting Model
2020-10-30 11:20:58,988:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-10-30 11:20:58,988:INFO:create_models() succesfully completed......................................
2020-10-30 11:20:59,133:INFO:Initializing create_model()
2020-10-30 11:20:59,133:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:20:59,133:INFO:Checking exceptions
2020-10-30 11:20:59,133:INFO:Importing libraries
2020-10-30 11:20:59,134:INFO:Copying training dataset
2020-10-30 11:20:59,134:INFO:Defining folds
2020-10-30 11:20:59,134:INFO:Declaring metric variables
2020-10-30 11:20:59,135:INFO:Importing untrained model
2020-10-30 11:20:59,135:INFO:Declaring custom model
2020-10-30 11:20:59,135:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:20:59,136:INFO:Cross validation set to False
2020-10-30 11:20:59,136:INFO:Fitting Model
2020-10-30 11:20:59,468:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-10-30 11:20:59,468:INFO:create_models() succesfully completed......................................
2020-10-30 11:20:59,588:INFO:Initializing create_model()
2020-10-30 11:20:59,588:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:20:59,588:INFO:Checking exceptions
2020-10-30 11:20:59,589:INFO:Importing libraries
2020-10-30 11:20:59,589:INFO:Copying training dataset
2020-10-30 11:20:59,589:INFO:Defining folds
2020-10-30 11:20:59,589:INFO:Declaring metric variables
2020-10-30 11:20:59,589:INFO:Importing untrained model
2020-10-30 11:20:59,590:INFO:Declaring custom model
2020-10-30 11:20:59,590:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:20:59,590:INFO:Cross validation set to False
2020-10-30 11:20:59,591:INFO:Fitting Model
2020-10-30 11:20:59,619:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:20:59,620:INFO:create_models() succesfully completed......................................
2020-10-30 11:20:59,715:INFO:Initializing create_model()
2020-10-30 11:20:59,715:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7ff34fd41df0>, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:20:59,715:INFO:Checking exceptions
2020-10-30 11:20:59,715:INFO:Importing libraries
2020-10-30 11:20:59,716:INFO:Copying training dataset
2020-10-30 11:20:59,716:INFO:Defining folds
2020-10-30 11:20:59,716:INFO:Declaring metric variables
2020-10-30 11:20:59,716:INFO:Importing untrained model
2020-10-30 11:20:59,716:INFO:Declaring custom model
2020-10-30 11:20:59,717:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:20:59,717:INFO:Cross validation set to False
2020-10-30 11:20:59,717:INFO:Fitting Model
2020-10-30 11:21:01,489:INFO:<catboost.core.CatBoostClassifier object at 0x7ff34fd6bca0>
2020-10-30 11:21:01,489:INFO:create_models() succesfully completed......................................
2020-10-30 11:21:01,569:INFO:Initializing create_model()
2020-10-30 11:21:01,570:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:21:01,570:INFO:Checking exceptions
2020-10-30 11:21:01,570:INFO:Importing libraries
2020-10-30 11:21:01,571:INFO:Copying training dataset
2020-10-30 11:21:01,571:INFO:Defining folds
2020-10-30 11:21:01,571:INFO:Declaring metric variables
2020-10-30 11:21:01,571:INFO:Importing untrained model
2020-10-30 11:21:01,572:INFO:Declaring custom model
2020-10-30 11:21:01,572:INFO:Gradient Boosting Classifier Imported succesfully
2020-10-30 11:21:01,572:INFO:Cross validation set to False
2020-10-30 11:21:01,573:INFO:Fitting Model
2020-10-30 11:21:01,684:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-30 11:21:01,684:INFO:create_models() succesfully completed......................................
2020-10-30 11:21:01,868:INFO:create_model_container: 15
2020-10-30 11:21:01,868:INFO:master_model_container: 15
2020-10-30 11:21:01,868:INFO:display_container: 1
2020-10-30 11:21:01,871:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7ff34fd6bca0>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)]
2020-10-30 11:21:01,871:INFO:compare_models() succesfully completed......................................
2020-10-30 11:23:13,155:INFO:Initializing tune_model()
2020-10-30 11:23:13,156:INFO:tune_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:23:13,156:INFO:Checking exceptions
2020-10-30 11:23:13,518:INFO:Preparing display monitor
2020-10-30 11:23:13,541:INFO:Copying training dataset
2020-10-30 11:23:13,542:INFO:Checking base model
2020-10-30 11:23:13,544:INFO:Base model : Extreme Gradient Boosting
2020-10-30 11:23:13,552:INFO:Declaring metric variables
2020-10-30 11:23:13,561:INFO:Defining Hyperparameters
2020-10-30 11:23:13,691:INFO:Tuning with n_jobs=-1
2020-10-30 11:23:13,693:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:24:11,954:INFO:best_params: {'actual_estimator__learning_rate': 0.46807608948065865, 'actual_estimator__n_estimators': 299, 'actual_estimator__subsample': 0.3901812579174967, 'actual_estimator__max_depth': 11, 'actual_estimator__colsample_bytree': 0.6538464942330674, 'actual_estimator__min_child_weight': 1, 'actual_estimator__reg_alpha': 2.064150172203819e-07, 'actual_estimator__reg_lambda': 0.02347753071161128, 'actual_estimator__scale_pos_weight': 34.99206769461724}
2020-10-30 11:24:11,954:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:24:11,958:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:24:11,959:INFO:Random search completed
2020-10-30 11:24:11,959:INFO:SubProcess create_model() called ==================================
2020-10-30 11:24:11,960:INFO:Initializing create_model()
2020-10-30 11:24:11,960:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=StratifiedKFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff35152e8e0>, kwargs={'learning_rate': 0.46807608948065865, 'n_estimators': 299, 'subsample': 0.3901812579174967, 'max_depth': 11, 'colsample_bytree': 0.6538464942330674, 'min_child_weight': 1, 'reg_alpha': 2.064150172203819e-07, 'reg_lambda': 0.02347753071161128, 'scale_pos_weight': 34.99206769461724})
2020-10-30 11:24:11,960:INFO:Checking exceptions
2020-10-30 11:24:11,960:INFO:Importing libraries
2020-10-30 11:24:11,960:INFO:Copying training dataset
2020-10-30 11:24:11,962:INFO:Defining folds
2020-10-30 11:24:11,962:INFO:Declaring metric variables
2020-10-30 11:24:11,970:INFO:Importing untrained model
2020-10-30 11:24:11,970:INFO:Declaring custom model
2020-10-30 11:24:11,979:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:24:11,994:INFO:Starting cross validation
2020-10-30 11:24:11,995:INFO:Cross validating with n_jobs=-1
2020-10-30 11:24:12,646:INFO:Calculating mean and std
2020-10-30 11:24:12,646:INFO:Creating metrics dataframe
2020-10-30 11:24:12,657:INFO:Finalizing model
2020-10-30 11:24:12,841:INFO:Uploading results into container
2020-10-30 11:24:12,841:INFO:Uploading model into container now
2020-10-30 11:24:12,842:INFO:create_model_container: 16
2020-10-30 11:24:12,842:INFO:master_model_container: 16
2020-10-30 11:24:12,842:INFO:display_container: 2
2020-10-30 11:24:12,844:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.6538464942330674, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46807608948065865, max_delta_step=0, max_depth=11,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=299, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=2.064150172203819e-07, reg_lambda=0.02347753071161128,
              scale_pos_weight=34.99206769461724, subsample=0.3901812579174967,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-10-30 11:24:12,844:INFO:create_model() succesfully completed......................................
2020-10-30 11:24:12,990:INFO:SubProcess create_model() end ==================================
2020-10-30 11:24:13,208:INFO:create_model_container: 16
2020-10-30 11:24:13,209:INFO:master_model_container: 16
2020-10-30 11:24:13,209:INFO:display_container: 2
2020-10-30 11:24:13,212:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.6538464942330674, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46807608948065865, max_delta_step=0, max_depth=11,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=299, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=2.064150172203819e-07, reg_lambda=0.02347753071161128,
              scale_pos_weight=34.99206769461724, subsample=0.3901812579174967,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-10-30 11:24:13,212:INFO:tune_model() succesfully completed......................................
2020-10-30 11:24:13,391:INFO:Initializing tune_model()
2020-10-30 11:24:13,391:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:24:13,391:INFO:Checking exceptions
2020-10-30 11:24:13,393:INFO:Preparing display monitor
2020-10-30 11:24:13,416:INFO:Copying training dataset
2020-10-30 11:24:13,418:INFO:Checking base model
2020-10-30 11:24:13,419:INFO:Base model : Random Forest Classifier
2020-10-30 11:24:13,433:INFO:Declaring metric variables
2020-10-30 11:24:13,443:INFO:Defining Hyperparameters
2020-10-30 11:24:13,550:INFO:Tuning with n_jobs=-1
2020-10-30 11:24:13,553:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:26:38,198:INFO:best_params: {'actual_estimator__n_estimators': 28, 'actual_estimator__max_depth': 9, 'actual_estimator__min_impurity_decrease': 6.213419475852968e-07, 'actual_estimator__max_features': 0.48378278087784554, 'actual_estimator__min_samples_split': 4, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__bootstrap': False, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced'}
2020-10-30 11:26:38,199:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:26:38,199:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:26:38,199:INFO:Random search completed
2020-10-30 11:26:38,200:INFO:SubProcess create_model() called ==================================
2020-10-30 11:26:38,200:INFO:Initializing create_model()
2020-10-30 11:26:38,200:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff333aaa130>, kwargs={'n_estimators': 28, 'max_depth': 9, 'min_impurity_decrease': 6.213419475852968e-07, 'max_features': 0.48378278087784554, 'min_samples_split': 4, 'min_samples_leaf': 3, 'bootstrap': False, 'criterion': 'gini', 'class_weight': 'balanced'})
2020-10-30 11:26:38,200:INFO:Checking exceptions
2020-10-30 11:26:38,200:INFO:Importing libraries
2020-10-30 11:26:38,200:INFO:Copying training dataset
2020-10-30 11:26:38,201:INFO:Defining folds
2020-10-30 11:26:38,201:INFO:Declaring metric variables
2020-10-30 11:26:38,208:INFO:Importing untrained model
2020-10-30 11:26:38,209:INFO:Declaring custom model
2020-10-30 11:26:38,217:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:26:38,235:INFO:Starting cross validation
2020-10-30 11:26:38,236:INFO:Cross validating with n_jobs=-1
2020-10-30 11:26:38,587:INFO:Calculating mean and std
2020-10-30 11:26:38,600:INFO:Creating metrics dataframe
2020-10-30 11:26:38,631:INFO:Finalizing model
2020-10-30 11:26:38,723:INFO:Uploading results into container
2020-10-30 11:26:38,724:INFO:Uploading model into container now
2020-10-30 11:26:38,724:INFO:create_model_container: 17
2020-10-30 11:26:38,724:INFO:master_model_container: 17
2020-10-30 11:26:38,725:INFO:display_container: 3
2020-10-30 11:26:38,726:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9,
                       max_features=0.48378278087784554, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=6.213419475852968e-07,
                       min_impurity_split=None, min_samples_leaf=3,
                       min_samples_split=4, min_weight_fraction_leaf=0.0,
                       n_estimators=28, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-10-30 11:26:38,726:INFO:create_model() succesfully completed......................................
2020-10-30 11:26:38,960:INFO:SubProcess create_model() end ==================================
2020-10-30 11:26:39,006:INFO:create_model_container: 17
2020-10-30 11:26:39,007:INFO:master_model_container: 17
2020-10-30 11:26:39,007:INFO:display_container: 3
2020-10-30 11:26:39,007:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9,
                       max_features=0.48378278087784554, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=6.213419475852968e-07,
                       min_impurity_split=None, min_samples_leaf=3,
                       min_samples_split=4, min_weight_fraction_leaf=0.0,
                       n_estimators=28, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-10-30 11:26:39,007:INFO:tune_model() succesfully completed......................................
2020-10-30 11:26:39,295:INFO:Initializing tune_model()
2020-10-30 11:26:39,295:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:26:39,296:INFO:Checking exceptions
2020-10-30 11:26:39,297:INFO:Preparing display monitor
2020-10-30 11:26:39,345:INFO:Copying training dataset
2020-10-30 11:26:39,346:INFO:Checking base model
2020-10-30 11:26:39,348:INFO:Base model : Light Gradient Boosting Machine
2020-10-30 11:26:39,360:INFO:Declaring metric variables
2020-10-30 11:26:39,367:INFO:Defining Hyperparameters
2020-10-30 11:26:39,499:INFO:Tuning with n_jobs=-1
2020-10-30 11:26:39,501:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:27:06,227:INFO:best_params: {'actual_estimator__num_leaves': 130, 'actual_estimator__learning_rate': 0.0009716364365347497, 'actual_estimator__n_estimators': 32, 'actual_estimator__min_split_gain': 0.3375044595780061, 'actual_estimator__reg_alpha': 0.8185838768336485, 'actual_estimator__reg_lambda': 2.3931890238094067e-10, 'actual_estimator__min_data_in_leaf': 5397, 'actual_estimator__feature_fraction': 0.4911171435565572, 'actual_estimator__bagging_fraction': 0.5208894218175022, 'actual_estimator__bagging_freq': 5, 'actual_estimator__min_child_samples': 8}
2020-10-30 11:27:06,227:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:27:06,228:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:27:06,228:INFO:Random search completed
2020-10-30 11:27:06,229:INFO:SubProcess create_model() called ==================================
2020-10-30 11:27:06,230:INFO:Initializing create_model()
2020-10-30 11:27:06,230:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff332ed2f10>, kwargs={'num_leaves': 130, 'learning_rate': 0.0009716364365347497, 'n_estimators': 32, 'min_split_gain': 0.3375044595780061, 'reg_alpha': 0.8185838768336485, 'reg_lambda': 2.3931890238094067e-10, 'min_data_in_leaf': 5397, 'feature_fraction': 0.4911171435565572, 'bagging_fraction': 0.5208894218175022, 'bagging_freq': 5, 'min_child_samples': 8})
2020-10-30 11:27:06,230:INFO:Checking exceptions
2020-10-30 11:27:06,230:INFO:Importing libraries
2020-10-30 11:27:06,230:INFO:Copying training dataset
2020-10-30 11:27:06,231:INFO:Defining folds
2020-10-30 11:27:06,232:INFO:Declaring metric variables
2020-10-30 11:27:06,241:INFO:Importing untrained model
2020-10-30 11:27:06,242:INFO:Declaring custom model
2020-10-30 11:27:06,252:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:27:06,272:INFO:Starting cross validation
2020-10-30 11:27:06,272:INFO:Cross validating with n_jobs=-1
2020-10-30 11:27:09,460:INFO:Calculating mean and std
2020-10-30 11:27:09,461:INFO:Creating metrics dataframe
2020-10-30 11:27:09,473:INFO:Finalizing model
2020-10-30 11:27:09,481:INFO:Uploading results into container
2020-10-30 11:27:09,481:INFO:Uploading model into container now
2020-10-30 11:27:09,481:INFO:create_model_container: 18
2020-10-30 11:27:09,481:INFO:master_model_container: 18
2020-10-30 11:27:09,481:INFO:display_container: 4
2020-10-30 11:27:09,482:INFO:LGBMClassifier(bagging_fraction=0.5208894218175022, bagging_freq=5,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.4911171435565572, importance_type='split',
               learning_rate=0.0009716364365347497, max_depth=-1,
               min_child_samples=8, min_child_weight=0.001,
               min_data_in_leaf=5397, min_split_gain=0.3375044595780061,
               n_estimators=32, n_jobs=-1, num_leaves=130, objective=None,
               random_state=786, reg_alpha=0.8185838768336485,
               reg_lambda=2.3931890238094067e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:27:09,482:INFO:create_model() succesfully completed......................................
2020-10-30 11:27:09,590:INFO:SubProcess create_model() end ==================================
2020-10-30 11:27:09,623:INFO:create_model_container: 18
2020-10-30 11:27:09,623:INFO:master_model_container: 18
2020-10-30 11:27:09,623:INFO:display_container: 4
2020-10-30 11:27:09,624:INFO:LGBMClassifier(bagging_fraction=0.5208894218175022, bagging_freq=5,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.4911171435565572, importance_type='split',
               learning_rate=0.0009716364365347497, max_depth=-1,
               min_child_samples=8, min_child_weight=0.001,
               min_data_in_leaf=5397, min_split_gain=0.3375044595780061,
               n_estimators=32, n_jobs=-1, num_leaves=130, objective=None,
               random_state=786, reg_alpha=0.8185838768336485,
               reg_lambda=2.3931890238094067e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:27:09,624:INFO:tune_model() succesfully completed......................................
2020-10-30 11:27:09,748:INFO:Initializing tune_model()
2020-10-30 11:27:09,749:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x7ff34fd6bca0>, fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:27:09,749:INFO:Checking exceptions
2020-10-30 11:27:09,751:INFO:Preparing display monitor
2020-10-30 11:27:09,788:INFO:Copying training dataset
2020-10-30 11:27:09,791:INFO:Checking base model
2020-10-30 11:27:09,791:INFO:Base model : CatBoost Classifier
2020-10-30 11:27:09,801:INFO:Declaring metric variables
2020-10-30 11:27:09,814:INFO:Defining Hyperparameters
2020-10-30 11:27:09,915:INFO:Tuning with n_jobs=-1
2020-10-30 11:27:09,916:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:32:08,683:INFO:best_params: {'actual_estimator__depth': 6, 'actual_estimator__n_estimators': 196, 'actual_estimator__random_strength': 0.16636242139482713, 'actual_estimator__l2_leaf_reg': 1}
2020-10-30 11:32:08,684:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:32:08,685:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:32:08,687:INFO:Random search completed
2020-10-30 11:32:08,687:INFO:SubProcess create_model() called ==================================
2020-10-30 11:32:08,688:INFO:Initializing create_model()
2020-10-30 11:32:08,688:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7ff33448f7f0>, fold=StratifiedKFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34fdc01c0>, kwargs={'depth': 6, 'n_estimators': 196, 'random_strength': 0.16636242139482713, 'l2_leaf_reg': 1})
2020-10-30 11:32:08,688:INFO:Checking exceptions
2020-10-30 11:32:08,688:INFO:Importing libraries
2020-10-30 11:32:08,689:INFO:Copying training dataset
2020-10-30 11:32:08,690:INFO:Defining folds
2020-10-30 11:32:08,690:INFO:Declaring metric variables
2020-10-30 11:32:08,704:INFO:Importing untrained model
2020-10-30 11:32:08,705:INFO:Declaring custom model
2020-10-30 11:32:08,714:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:32:08,730:INFO:Starting cross validation
2020-10-30 11:32:08,731:INFO:Cross validating with n_jobs=-1
2020-10-30 11:32:14,830:INFO:Calculating mean and std
2020-10-30 11:32:14,841:INFO:Creating metrics dataframe
2020-10-30 11:32:14,899:INFO:Finalizing model
2020-10-30 11:32:15,374:INFO:Uploading results into container
2020-10-30 11:32:15,375:INFO:Uploading model into container now
2020-10-30 11:32:15,376:INFO:create_model_container: 19
2020-10-30 11:32:15,376:INFO:master_model_container: 19
2020-10-30 11:32:15,376:INFO:display_container: 5
2020-10-30 11:32:15,376:INFO:<catboost.core.CatBoostClassifier object at 0x7ff333a8cd90>
2020-10-30 11:32:15,377:INFO:create_model() succesfully completed......................................
2020-10-30 11:32:15,997:INFO:SubProcess create_model() end ==================================
2020-10-30 11:32:16,022:INFO:create_model_container: 19
2020-10-30 11:32:16,023:INFO:master_model_container: 19
2020-10-30 11:32:16,023:INFO:display_container: 5
2020-10-30 11:32:16,023:INFO:<catboost.core.CatBoostClassifier object at 0x7ff333a8cd90>
2020-10-30 11:32:16,023:INFO:tune_model() succesfully completed......................................
2020-10-30 11:39:19,694:INFO:PyCaret Supervised Module
2020-10-30 11:39:19,696:INFO:ML Usecase: classification
2020-10-30 11:39:19,696:INFO:version 2.2.0
2020-10-30 11:39:19,696:INFO:Initializing setup()
2020-10-30 11:39:19,696:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-30 11:39:19,696:INFO:Checking environment
2020-10-30 11:39:19,696:INFO:python_version: 3.8.3
2020-10-30 11:39:19,696:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-30 11:39:19,696:INFO:machine: x86_64
2020-10-30 11:39:19,716:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-30 11:39:19,717:INFO:Memory: svmem(total=8589934592, available=917512192, percent=89.3, used=3170103296, free=30388224, active=890437632, inactive=860930048, wired=2279665664)
2020-10-30 11:39:19,717:INFO:Physical Core: 4
2020-10-30 11:39:19,717:INFO:Logical Core: 8
2020-10-30 11:39:19,717:INFO:Checking libraries
2020-10-30 11:39:19,717:INFO:pd==1.0.5
2020-10-30 11:39:19,717:INFO:numpy==1.18.5
2020-10-30 11:39:19,718:INFO:sklearn==0.23.2
2020-10-30 11:39:20,359:INFO:xgboost==1.2.0
2020-10-30 11:39:20,360:INFO:lightgbm==2.3.1
2020-10-30 11:39:20,421:INFO:catboost==0.24.1
2020-10-30 11:39:21,346:INFO:mlflow==1.11.0
2020-10-30 11:39:21,346:INFO:Checking Exceptions
2020-10-30 11:39:21,347:INFO:Declaring global variables
2020-10-30 11:39:21,347:INFO:USI: dab8
2020-10-30 11:39:21,347:INFO:pycaret_globals: {'_all_models_internal', '_gpu_n_jobs_param', 'transform_target_method_param', '_available_plots', 'transform_target_param', 'log_plots_param', '_internal_pipeline', 'y_test', 'fix_imbalance_param', 'experiment__', 'html_param', 'seed', 'n_jobs_param', 'prep_pipe', 'gpu_param', 'pycaret_globals', 'data_before_preprocess', 'iterative_imputation_iters_param', 'X_train', 'y', 'X_test', '_all_metrics', 'imputation_regressor', 'X', 'logging_param', '_all_models', 'target_param', 'fold_shuffle_param', 'master_model_container', 'fix_imbalance_method_param', 'fold_param', 'imputation_classifier', 'display_container', 'exp_name_log', 'create_model_container', 'stratify_param', 'fold_groups_param', 'USI', '_ml_usecase', 'fold_generator', 'y_train'}
2020-10-30 11:39:21,347:INFO:Preparing display monitor
2020-10-30 11:39:21,347:INFO:Preparing display monitor
2020-10-30 11:39:21,366:INFO:Importing libraries
2020-10-30 11:39:21,366:INFO:Copying data for preprocessing
2020-10-30 11:39:21,377:INFO:Declaring preprocessing parameters
2020-10-30 11:39:21,379:INFO:Setting up iterative imputation
2020-10-30 11:39:21,666:INFO:Creating preprocessing pipeline
2020-10-30 11:39:21,678:INFO:Preprocessing pipeline created successfully
2020-10-30 11:39:21,678:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-30 11:39:21,679:INFO:Creating global containers
2020-10-30 11:39:21,681:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-30 11:39:21,763:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:39:22,715:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:39:23,357:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:39:23,748:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:39:24,194:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:39:24,459:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:39:24,870:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:39:25,200:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:39:25,574:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:39:25,783:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:39:26,185:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:39:26,683:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:39:27,126:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:39:27,530:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:39:27,920:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:39:28,269:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:39:28,634:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:39:28,835:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:39:29,218:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:39:29,346:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:39:29,505:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:39:30,006:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:39:30,188:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:39:30,653:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:39:31,185:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:39:32,675:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:39:33,056:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:39:33,507:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:39:33,799:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:39:34,131:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:39:34,453:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:39:34,932:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:39:35,439:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:39:36,148:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:39:36,645:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:39:37,152:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:39:37,450:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:39:37,925:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:39:38,349:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:39:38,607:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:39:38,972:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:39:39,474:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:39:39,673:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:39:40,121:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:39:40,412:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:39:40,858:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:39:41,056:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:39:41,306:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:39:41,755:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:39:41,949:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:39:47,029:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:39:47,140:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:39:47,228:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:39:47,325:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:39:47,438:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:39:47,541:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:39:47,645:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:39:47,741:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:39:47,836:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:39:47,935:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:39:48,040:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:39:48,151:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:39:48,251:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:39:48,343:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:39:48,442:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:39:48,538:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:39:48,633:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:39:48,750:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:39:48,856:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:39:48,955:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:39:49,048:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:39:49,141:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:39:49,238:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:39:49,356:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:39:49,468:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:39:49,568:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:39:49,666:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:39:49,759:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:39:49,855:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:39:49,957:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:39:50,080:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:39:50,188:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:39:50,290:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:39:50,387:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:39:50,484:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:39:50,580:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:39:50,691:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:39:50,800:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:39:50,904:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:39:51,001:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:39:51,100:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:39:51,198:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:39:51,303:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:39:51,421:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:39:51,529:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:39:51,630:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:39:51,725:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:39:51,820:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:39:51,914:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:39:52,010:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:39:52,206:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:39:52,319:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:39:52,429:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:39:52,525:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:39:52,625:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:39:52,721:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:39:52,818:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:39:52,916:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:39:53,038:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:39:53,149:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:39:53,249:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:39:53,345:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:39:53,441:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:39:53,535:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:39:53,630:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:39:53,745:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:39:53,859:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:39:53,966:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:39:54,062:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:39:54,157:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:39:54,252:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:39:54,351:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:39:54,466:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:39:54,571:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:39:54,672:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:39:54,767:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:39:54,862:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:39:54,956:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:39:55,053:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:39:55,150:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:39:55,262:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:39:55,372:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:39:55,472:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:39:55,569:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:39:55,671:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:39:55,766:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:39:55,856:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:39:55,954:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:39:56,045:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:39:56,137:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:39:56,237:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:39:56,331:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:39:56,426:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:39:56,548:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:39:56,663:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:39:56,771:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:39:56,873:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:39:56,967:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:39:57,062:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:39:57,160:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:39:57,554:INFO:Creating grid variables
2020-10-30 11:39:57,606:INFO:create_model_container: 0
2020-10-30 11:39:57,606:INFO:master_model_container: 0
2020-10-30 11:39:57,606:INFO:display_container: 0
2020-10-30 11:39:57,627:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-30 11:39:57,627:INFO:setup() succesfully completed......................................
2020-10-30 11:40:11,282:INFO:Initializing get_config()
2020-10-30 11:40:11,283:INFO:get_config(variable=X_train)
2020-10-30 11:40:11,289:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Friday_multiply_Sunday  Sunday_multiply_Friday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-10-30 11:40:11,289:INFO:get_config() succesfully completed......................................
2020-10-30 11:40:34,330:INFO:Initializing compare_models()
2020-10-30 11:40:34,332:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-30 11:40:34,332:INFO:Checking exceptions
2020-10-30 11:40:34,354:INFO:Preparing display monitor
2020-10-30 11:40:34,364:INFO:Preparing display monitor
2020-10-30 11:40:34,437:INFO:Initializing Logistic Regression
2020-10-30 11:40:34,437:INFO:Total runtime is 2.7600924173990885e-05 minutes
2020-10-30 11:40:34,447:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:34,457:INFO:Initializing create_model()
2020-10-30 11:40:34,459:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:34,460:INFO:Checking exceptions
2020-10-30 11:40:34,460:INFO:Importing libraries
2020-10-30 11:40:34,460:INFO:Copying training dataset
2020-10-30 11:40:34,462:INFO:Defining folds
2020-10-30 11:40:34,462:INFO:Declaring metric variables
2020-10-30 11:40:34,469:INFO:Importing untrained model
2020-10-30 11:40:34,483:INFO:Logistic Regression Imported succesfully
2020-10-30 11:40:34,505:INFO:Starting cross validation
2020-10-30 11:40:34,511:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:41,558:INFO:Calculating mean and std
2020-10-30 11:40:41,581:INFO:Creating metrics dataframe
2020-10-30 11:40:41,620:INFO:Uploading results into container
2020-10-30 11:40:41,620:INFO:Uploading model into container now
2020-10-30 11:40:41,621:INFO:create_model_container: 1
2020-10-30 11:40:41,622:INFO:master_model_container: 1
2020-10-30 11:40:41,622:INFO:display_container: 1
2020-10-30 11:40:41,628:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-10-30 11:40:41,629:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:42,306:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:42,306:INFO:Creating metrics dataframe
2020-10-30 11:40:42,331:INFO:Initializing K Neighbors Classifier
2020-10-30 11:40:42,332:INFO:Total runtime is 0.13159894943237305 minutes
2020-10-30 11:40:42,351:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:42,352:INFO:Initializing create_model()
2020-10-30 11:40:42,352:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:42,353:INFO:Checking exceptions
2020-10-30 11:40:42,353:INFO:Importing libraries
2020-10-30 11:40:42,353:INFO:Copying training dataset
2020-10-30 11:40:42,354:INFO:Defining folds
2020-10-30 11:40:42,355:INFO:Declaring metric variables
2020-10-30 11:40:42,370:INFO:Importing untrained model
2020-10-30 11:40:42,387:INFO:K Neighbors Classifier Imported succesfully
2020-10-30 11:40:42,416:INFO:Starting cross validation
2020-10-30 11:40:42,417:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:42,636:INFO:Calculating mean and std
2020-10-30 11:40:42,638:INFO:Creating metrics dataframe
2020-10-30 11:40:42,645:INFO:Uploading results into container
2020-10-30 11:40:42,645:INFO:Uploading model into container now
2020-10-30 11:40:42,645:INFO:create_model_container: 2
2020-10-30 11:40:42,645:INFO:master_model_container: 2
2020-10-30 11:40:42,646:INFO:display_container: 1
2020-10-30 11:40:42,646:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-10-30 11:40:42,646:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:42,871:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:42,871:INFO:Creating metrics dataframe
2020-10-30 11:40:42,910:INFO:Initializing Naive Bayes
2020-10-30 11:40:42,910:INFO:Total runtime is 0.1412365476290385 minutes
2020-10-30 11:40:42,926:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:42,926:INFO:Initializing create_model()
2020-10-30 11:40:42,926:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:42,927:INFO:Checking exceptions
2020-10-30 11:40:42,927:INFO:Importing libraries
2020-10-30 11:40:42,927:INFO:Copying training dataset
2020-10-30 11:40:42,928:INFO:Defining folds
2020-10-30 11:40:42,928:INFO:Declaring metric variables
2020-10-30 11:40:42,946:INFO:Importing untrained model
2020-10-30 11:40:42,988:INFO:Naive Bayes Imported succesfully
2020-10-30 11:40:43,065:INFO:Starting cross validation
2020-10-30 11:40:43,065:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:43,155:INFO:Calculating mean and std
2020-10-30 11:40:43,181:INFO:Creating metrics dataframe
2020-10-30 11:40:43,190:INFO:Uploading results into container
2020-10-30 11:40:43,190:INFO:Uploading model into container now
2020-10-30 11:40:43,190:INFO:create_model_container: 3
2020-10-30 11:40:43,190:INFO:master_model_container: 3
2020-10-30 11:40:43,190:INFO:display_container: 1
2020-10-30 11:40:43,191:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-10-30 11:40:43,191:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:43,366:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:43,366:INFO:Creating metrics dataframe
2020-10-30 11:40:43,404:INFO:Initializing Decision Tree Classifier
2020-10-30 11:40:43,404:INFO:Total runtime is 0.14946825106938683 minutes
2020-10-30 11:40:43,419:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:43,420:INFO:Initializing create_model()
2020-10-30 11:40:43,420:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:43,420:INFO:Checking exceptions
2020-10-30 11:40:43,420:INFO:Importing libraries
2020-10-30 11:40:43,420:INFO:Copying training dataset
2020-10-30 11:40:43,422:INFO:Defining folds
2020-10-30 11:40:43,422:INFO:Declaring metric variables
2020-10-30 11:40:43,436:INFO:Importing untrained model
2020-10-30 11:40:43,451:INFO:Decision Tree Classifier Imported succesfully
2020-10-30 11:40:43,479:INFO:Starting cross validation
2020-10-30 11:40:43,479:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:43,548:INFO:Calculating mean and std
2020-10-30 11:40:43,551:INFO:Creating metrics dataframe
2020-10-30 11:40:43,562:INFO:Uploading results into container
2020-10-30 11:40:43,563:INFO:Uploading model into container now
2020-10-30 11:40:43,563:INFO:create_model_container: 4
2020-10-30 11:40:43,564:INFO:master_model_container: 4
2020-10-30 11:40:43,564:INFO:display_container: 1
2020-10-30 11:40:43,564:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-10-30 11:40:43,564:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:43,667:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:43,667:INFO:Creating metrics dataframe
2020-10-30 11:40:43,750:INFO:Initializing SVM - Linear Kernel
2020-10-30 11:40:43,750:INFO:Total runtime is 0.15523996750513716 minutes
2020-10-30 11:40:43,766:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:43,766:INFO:Initializing create_model()
2020-10-30 11:40:43,766:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:43,766:INFO:Checking exceptions
2020-10-30 11:40:43,766:INFO:Importing libraries
2020-10-30 11:40:43,766:INFO:Copying training dataset
2020-10-30 11:40:43,767:INFO:Defining folds
2020-10-30 11:40:43,768:INFO:Declaring metric variables
2020-10-30 11:40:43,777:INFO:Importing untrained model
2020-10-30 11:40:43,787:INFO:SVM - Linear Kernel Imported succesfully
2020-10-30 11:40:43,839:INFO:Starting cross validation
2020-10-30 11:40:43,840:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:43,933:INFO:Calculating mean and std
2020-10-30 11:40:43,934:INFO:Creating metrics dataframe
2020-10-30 11:40:43,939:INFO:Uploading results into container
2020-10-30 11:40:43,940:INFO:Uploading model into container now
2020-10-30 11:40:43,940:INFO:create_model_container: 5
2020-10-30 11:40:43,940:INFO:master_model_container: 5
2020-10-30 11:40:43,940:INFO:display_container: 1
2020-10-30 11:40:43,941:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-30 11:40:43,941:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:44,198:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:44,198:INFO:Creating metrics dataframe
2020-10-30 11:40:44,305:INFO:Initializing Ridge Classifier
2020-10-30 11:40:44,306:INFO:Total runtime is 0.1645003994305929 minutes
2020-10-30 11:40:44,322:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:44,329:INFO:Initializing create_model()
2020-10-30 11:40:44,329:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:44,329:INFO:Checking exceptions
2020-10-30 11:40:44,329:INFO:Importing libraries
2020-10-30 11:40:44,329:INFO:Copying training dataset
2020-10-30 11:40:44,331:INFO:Defining folds
2020-10-30 11:40:44,332:INFO:Declaring metric variables
2020-10-30 11:40:44,348:INFO:Importing untrained model
2020-10-30 11:40:44,367:INFO:Ridge Classifier Imported succesfully
2020-10-30 11:40:44,391:INFO:Starting cross validation
2020-10-30 11:40:44,392:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:44,472:INFO:Calculating mean and std
2020-10-30 11:40:44,477:INFO:Creating metrics dataframe
2020-10-30 11:40:44,483:INFO:Uploading results into container
2020-10-30 11:40:44,483:INFO:Uploading model into container now
2020-10-30 11:40:44,483:INFO:create_model_container: 6
2020-10-30 11:40:44,484:INFO:master_model_container: 6
2020-10-30 11:40:44,484:INFO:display_container: 1
2020-10-30 11:40:44,485:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-10-30 11:40:44,485:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:44,634:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:44,634:INFO:Creating metrics dataframe
2020-10-30 11:40:44,700:INFO:Initializing Random Forest Classifier
2020-10-30 11:40:44,700:INFO:Total runtime is 0.1710660020510356 minutes
2020-10-30 11:40:44,713:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:44,713:INFO:Initializing create_model()
2020-10-30 11:40:44,713:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:44,714:INFO:Checking exceptions
2020-10-30 11:40:44,714:INFO:Importing libraries
2020-10-30 11:40:44,714:INFO:Copying training dataset
2020-10-30 11:40:44,715:INFO:Defining folds
2020-10-30 11:40:44,715:INFO:Declaring metric variables
2020-10-30 11:40:44,730:INFO:Importing untrained model
2020-10-30 11:40:44,762:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:40:44,828:INFO:Starting cross validation
2020-10-30 11:40:44,829:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:46,276:INFO:Calculating mean and std
2020-10-30 11:40:46,277:INFO:Creating metrics dataframe
2020-10-30 11:40:46,284:INFO:Uploading results into container
2020-10-30 11:40:46,285:INFO:Uploading model into container now
2020-10-30 11:40:46,285:INFO:create_model_container: 7
2020-10-30 11:40:46,285:INFO:master_model_container: 7
2020-10-30 11:40:46,285:INFO:display_container: 1
2020-10-30 11:40:46,285:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-10-30 11:40:46,285:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:46,374:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:46,374:INFO:Creating metrics dataframe
2020-10-30 11:40:46,414:INFO:Initializing Quadratic Discriminant Analysis
2020-10-30 11:40:46,414:INFO:Total runtime is 0.19963910182317102 minutes
2020-10-30 11:40:46,424:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:46,424:INFO:Initializing create_model()
2020-10-30 11:40:46,424:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:46,424:INFO:Checking exceptions
2020-10-30 11:40:46,425:INFO:Importing libraries
2020-10-30 11:40:46,425:INFO:Copying training dataset
2020-10-30 11:40:46,426:INFO:Defining folds
2020-10-30 11:40:46,426:INFO:Declaring metric variables
2020-10-30 11:40:46,439:INFO:Importing untrained model
2020-10-30 11:40:46,450:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-10-30 11:40:46,475:INFO:Starting cross validation
2020-10-30 11:40:46,475:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:46,632:INFO:Calculating mean and std
2020-10-30 11:40:46,634:INFO:Creating metrics dataframe
2020-10-30 11:40:46,640:INFO:Uploading results into container
2020-10-30 11:40:46,640:INFO:Uploading model into container now
2020-10-30 11:40:46,640:INFO:create_model_container: 8
2020-10-30 11:40:46,640:INFO:master_model_container: 8
2020-10-30 11:40:46,640:INFO:display_container: 1
2020-10-30 11:40:46,641:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-10-30 11:40:46,641:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:46,753:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:46,753:INFO:Creating metrics dataframe
2020-10-30 11:40:46,803:INFO:Initializing Ada Boost Classifier
2020-10-30 11:40:46,804:INFO:Total runtime is 0.20612994829813644 minutes
2020-10-30 11:40:46,816:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:46,816:INFO:Initializing create_model()
2020-10-30 11:40:46,817:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:46,817:INFO:Checking exceptions
2020-10-30 11:40:46,817:INFO:Importing libraries
2020-10-30 11:40:46,818:INFO:Copying training dataset
2020-10-30 11:40:46,819:INFO:Defining folds
2020-10-30 11:40:46,820:INFO:Declaring metric variables
2020-10-30 11:40:46,832:INFO:Importing untrained model
2020-10-30 11:40:46,843:INFO:Ada Boost Classifier Imported succesfully
2020-10-30 11:40:46,865:INFO:Starting cross validation
2020-10-30 11:40:46,866:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:47,709:INFO:Calculating mean and std
2020-10-30 11:40:47,710:INFO:Creating metrics dataframe
2020-10-30 11:40:47,716:INFO:Uploading results into container
2020-10-30 11:40:47,716:INFO:Uploading model into container now
2020-10-30 11:40:47,716:INFO:create_model_container: 9
2020-10-30 11:40:47,716:INFO:master_model_container: 9
2020-10-30 11:40:47,716:INFO:display_container: 1
2020-10-30 11:40:47,717:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-10-30 11:40:47,717:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:47,828:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:47,828:INFO:Creating metrics dataframe
2020-10-30 11:40:47,873:INFO:Initializing Gradient Boosting Classifier
2020-10-30 11:40:47,873:INFO:Total runtime is 0.223961349328359 minutes
2020-10-30 11:40:47,886:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:47,886:INFO:Initializing create_model()
2020-10-30 11:40:47,887:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:47,887:INFO:Checking exceptions
2020-10-30 11:40:47,887:INFO:Importing libraries
2020-10-30 11:40:47,887:INFO:Copying training dataset
2020-10-30 11:40:47,888:INFO:Defining folds
2020-10-30 11:40:47,888:INFO:Declaring metric variables
2020-10-30 11:40:47,899:INFO:Importing untrained model
2020-10-30 11:40:47,921:INFO:Gradient Boosting Classifier Imported succesfully
2020-10-30 11:40:47,950:INFO:Starting cross validation
2020-10-30 11:40:47,951:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:49,416:INFO:Calculating mean and std
2020-10-30 11:40:49,418:INFO:Creating metrics dataframe
2020-10-30 11:40:49,424:INFO:Uploading results into container
2020-10-30 11:40:49,425:INFO:Uploading model into container now
2020-10-30 11:40:49,425:INFO:create_model_container: 10
2020-10-30 11:40:49,425:INFO:master_model_container: 10
2020-10-30 11:40:49,425:INFO:display_container: 1
2020-10-30 11:40:49,426:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-30 11:40:49,426:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:50,445:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:50,446:INFO:Creating metrics dataframe
2020-10-30 11:40:50,555:INFO:Initializing Linear Discriminant Analysis
2020-10-30 11:40:50,556:INFO:Total runtime is 0.26866438388824465 minutes
2020-10-30 11:40:50,572:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:50,573:INFO:Initializing create_model()
2020-10-30 11:40:50,573:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:50,573:INFO:Checking exceptions
2020-10-30 11:40:50,573:INFO:Importing libraries
2020-10-30 11:40:50,574:INFO:Copying training dataset
2020-10-30 11:40:50,575:INFO:Defining folds
2020-10-30 11:40:50,575:INFO:Declaring metric variables
2020-10-30 11:40:50,592:INFO:Importing untrained model
2020-10-30 11:40:50,600:INFO:Linear Discriminant Analysis Imported succesfully
2020-10-30 11:40:50,633:INFO:Starting cross validation
2020-10-30 11:40:50,633:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:50,826:INFO:Calculating mean and std
2020-10-30 11:40:50,828:INFO:Creating metrics dataframe
2020-10-30 11:40:50,845:INFO:Uploading results into container
2020-10-30 11:40:50,845:INFO:Uploading model into container now
2020-10-30 11:40:50,845:INFO:create_model_container: 11
2020-10-30 11:40:50,845:INFO:master_model_container: 11
2020-10-30 11:40:50,845:INFO:display_container: 1
2020-10-30 11:40:50,846:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-10-30 11:40:50,846:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:51,069:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:51,069:INFO:Creating metrics dataframe
2020-10-30 11:40:51,189:INFO:Initializing Extra Trees Classifier
2020-10-30 11:40:51,190:INFO:Total runtime is 0.27923150062561036 minutes
2020-10-30 11:40:51,213:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:51,217:INFO:Initializing create_model()
2020-10-30 11:40:51,218:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:51,218:INFO:Checking exceptions
2020-10-30 11:40:51,218:INFO:Importing libraries
2020-10-30 11:40:51,218:INFO:Copying training dataset
2020-10-30 11:40:51,222:INFO:Defining folds
2020-10-30 11:40:51,222:INFO:Declaring metric variables
2020-10-30 11:40:51,238:INFO:Importing untrained model
2020-10-30 11:40:51,252:INFO:Extra Trees Classifier Imported succesfully
2020-10-30 11:40:51,287:INFO:Starting cross validation
2020-10-30 11:40:51,289:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:52,440:INFO:Calculating mean and std
2020-10-30 11:40:52,442:INFO:Creating metrics dataframe
2020-10-30 11:40:52,447:INFO:Uploading results into container
2020-10-30 11:40:52,448:INFO:Uploading model into container now
2020-10-30 11:40:52,448:INFO:create_model_container: 12
2020-10-30 11:40:52,448:INFO:master_model_container: 12
2020-10-30 11:40:52,448:INFO:display_container: 1
2020-10-30 11:40:52,449:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-10-30 11:40:52,449:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:52,563:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:52,563:INFO:Creating metrics dataframe
2020-10-30 11:40:52,665:INFO:Initializing Extreme Gradient Boosting
2020-10-30 11:40:52,665:INFO:Total runtime is 0.30382533073425294 minutes
2020-10-30 11:40:52,695:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:52,697:INFO:Initializing create_model()
2020-10-30 11:40:52,697:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:52,698:INFO:Checking exceptions
2020-10-30 11:40:52,698:INFO:Importing libraries
2020-10-30 11:40:52,698:INFO:Copying training dataset
2020-10-30 11:40:52,700:INFO:Defining folds
2020-10-30 11:40:52,701:INFO:Declaring metric variables
2020-10-30 11:40:52,725:INFO:Importing untrained model
2020-10-30 11:40:52,918:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:40:52,946:INFO:Starting cross validation
2020-10-30 11:40:52,947:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:55,850:INFO:Calculating mean and std
2020-10-30 11:40:55,852:INFO:Creating metrics dataframe
2020-10-30 11:40:55,856:INFO:Uploading results into container
2020-10-30 11:40:55,857:INFO:Uploading model into container now
2020-10-30 11:40:55,857:INFO:create_model_container: 13
2020-10-30 11:40:55,857:INFO:master_model_container: 13
2020-10-30 11:40:55,857:INFO:display_container: 1
2020-10-30 11:40:55,858:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-10-30 11:40:55,858:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:55,945:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:55,945:INFO:Creating metrics dataframe
2020-10-30 11:40:56,004:INFO:Initializing Light Gradient Boosting Machine
2020-10-30 11:40:56,005:INFO:Total runtime is 0.35948206583658854 minutes
2020-10-30 11:40:56,013:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:56,014:INFO:Initializing create_model()
2020-10-30 11:40:56,014:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:56,014:INFO:Checking exceptions
2020-10-30 11:40:56,015:INFO:Importing libraries
2020-10-30 11:40:56,015:INFO:Copying training dataset
2020-10-30 11:40:56,016:INFO:Defining folds
2020-10-30 11:40:56,016:INFO:Declaring metric variables
2020-10-30 11:40:56,026:INFO:Importing untrained model
2020-10-30 11:40:56,035:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:40:56,056:INFO:Starting cross validation
2020-10-30 11:40:56,057:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:56,431:INFO:Calculating mean and std
2020-10-30 11:40:56,433:INFO:Creating metrics dataframe
2020-10-30 11:40:56,440:INFO:Uploading results into container
2020-10-30 11:40:56,441:INFO:Uploading model into container now
2020-10-30 11:40:56,441:INFO:create_model_container: 14
2020-10-30 11:40:56,441:INFO:master_model_container: 14
2020-10-30 11:40:56,441:INFO:display_container: 1
2020-10-30 11:40:56,442:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:40:56,442:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:56,557:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:56,558:INFO:Creating metrics dataframe
2020-10-30 11:40:56,656:INFO:Initializing CatBoost Classifier
2020-10-30 11:40:56,656:INFO:Total runtime is 0.3703399658203125 minutes
2020-10-30 11:40:56,678:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:56,679:INFO:Initializing create_model()
2020-10-30 11:40:56,679:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:56,679:INFO:Checking exceptions
2020-10-30 11:40:56,679:INFO:Importing libraries
2020-10-30 11:40:56,679:INFO:Copying training dataset
2020-10-30 11:40:56,681:INFO:Defining folds
2020-10-30 11:40:56,681:INFO:Declaring metric variables
2020-10-30 11:40:56,811:INFO:Importing untrained model
2020-10-30 11:40:56,838:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:40:56,867:INFO:Starting cross validation
2020-10-30 11:40:56,867:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:41:15,442:INFO:Calculating mean and std
2020-10-30 11:41:15,450:INFO:Creating metrics dataframe
2020-10-30 11:41:15,467:INFO:Uploading results into container
2020-10-30 11:41:15,467:INFO:Uploading model into container now
2020-10-30 11:41:15,468:INFO:create_model_container: 15
2020-10-30 11:41:15,468:INFO:master_model_container: 15
2020-10-30 11:41:15,468:INFO:display_container: 1
2020-10-30 11:41:15,468:INFO:<catboost.core.CatBoostClassifier object at 0x7fc05fa3b100>
2020-10-30 11:41:15,469:INFO:create_model() succesfully completed......................................
2020-10-30 11:41:15,880:INFO:SubProcess create_model() end ==================================
2020-10-30 11:41:15,880:INFO:Creating metrics dataframe
2020-10-30 11:41:16,018:INFO:Initializing create_model()
2020-10-30 11:41:16,019:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:41:16,019:INFO:Checking exceptions
2020-10-30 11:41:16,023:INFO:Importing libraries
2020-10-30 11:41:16,023:INFO:Copying training dataset
2020-10-30 11:41:16,024:INFO:Defining folds
2020-10-30 11:41:16,025:INFO:Declaring metric variables
2020-10-30 11:41:16,025:INFO:Importing untrained model
2020-10-30 11:41:16,025:INFO:Declaring custom model
2020-10-30 11:41:16,026:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:41:16,027:INFO:Cross validation set to False
2020-10-30 11:41:16,027:INFO:Fitting Model
2020-10-30 11:41:16,217:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-10-30 11:41:16,217:INFO:create_models() succesfully completed......................................
2020-10-30 11:41:16,521:INFO:Initializing create_model()
2020-10-30 11:41:16,522:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:41:16,522:INFO:Checking exceptions
2020-10-30 11:41:16,522:INFO:Importing libraries
2020-10-30 11:41:16,522:INFO:Copying training dataset
2020-10-30 11:41:16,523:INFO:Defining folds
2020-10-30 11:41:16,523:INFO:Declaring metric variables
2020-10-30 11:41:16,523:INFO:Importing untrained model
2020-10-30 11:41:16,523:INFO:Declaring custom model
2020-10-30 11:41:16,524:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:41:16,524:INFO:Cross validation set to False
2020-10-30 11:41:16,524:INFO:Fitting Model
2020-10-30 11:41:16,896:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-10-30 11:41:16,897:INFO:create_models() succesfully completed......................................
2020-10-30 11:41:17,161:INFO:Initializing create_model()
2020-10-30 11:41:17,162:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:41:17,162:INFO:Checking exceptions
2020-10-30 11:41:17,162:INFO:Importing libraries
2020-10-30 11:41:17,162:INFO:Copying training dataset
2020-10-30 11:41:17,162:INFO:Defining folds
2020-10-30 11:41:17,162:INFO:Declaring metric variables
2020-10-30 11:41:17,162:INFO:Importing untrained model
2020-10-30 11:41:17,162:INFO:Declaring custom model
2020-10-30 11:41:17,164:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:41:17,164:INFO:Cross validation set to False
2020-10-30 11:41:17,165:INFO:Fitting Model
2020-10-30 11:41:17,263:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:41:17,264:INFO:create_models() succesfully completed......................................
2020-10-30 11:41:17,450:INFO:Initializing create_model()
2020-10-30 11:41:17,450:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fc05fa3b100>, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:41:17,451:INFO:Checking exceptions
2020-10-30 11:41:17,451:INFO:Importing libraries
2020-10-30 11:41:17,451:INFO:Copying training dataset
2020-10-30 11:41:17,452:INFO:Defining folds
2020-10-30 11:41:17,452:INFO:Declaring metric variables
2020-10-30 11:41:17,452:INFO:Importing untrained model
2020-10-30 11:41:17,452:INFO:Declaring custom model
2020-10-30 11:41:17,452:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:41:17,453:INFO:Cross validation set to False
2020-10-30 11:41:17,453:INFO:Fitting Model
2020-10-30 11:41:20,159:INFO:<catboost.core.CatBoostClassifier object at 0x7fc05fb7aa30>
2020-10-30 11:41:20,160:INFO:create_models() succesfully completed......................................
2020-10-30 11:41:20,283:INFO:Initializing create_model()
2020-10-30 11:41:20,283:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:41:20,283:INFO:Checking exceptions
2020-10-30 11:41:20,283:INFO:Importing libraries
2020-10-30 11:41:20,284:INFO:Copying training dataset
2020-10-30 11:41:20,284:INFO:Defining folds
2020-10-30 11:41:20,285:INFO:Declaring metric variables
2020-10-30 11:41:20,285:INFO:Importing untrained model
2020-10-30 11:41:20,285:INFO:Declaring custom model
2020-10-30 11:41:20,287:INFO:Gradient Boosting Classifier Imported succesfully
2020-10-30 11:41:20,287:INFO:Cross validation set to False
2020-10-30 11:41:20,287:INFO:Fitting Model
2020-10-30 11:41:20,509:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-30 11:41:20,510:INFO:create_models() succesfully completed......................................
2020-10-30 11:41:20,829:INFO:create_model_container: 15
2020-10-30 11:41:20,830:INFO:master_model_container: 15
2020-10-30 11:41:20,830:INFO:display_container: 1
2020-10-30 11:41:20,864:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fc05fb7aa30>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)]
2020-10-30 11:41:20,864:INFO:compare_models() succesfully completed......................................
2020-10-30 11:47:22,127:INFO:Initializing tune_model()
2020-10-30 11:47:22,130:INFO:tune_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:47:22,130:INFO:Checking exceptions
2020-10-30 11:47:23,087:INFO:Preparing display monitor
2020-10-30 11:47:23,150:INFO:Copying training dataset
2020-10-30 11:47:23,153:INFO:Checking base model
2020-10-30 11:47:23,165:INFO:Base model : Extreme Gradient Boosting
2020-10-30 11:47:23,175:INFO:Declaring metric variables
2020-10-30 11:47:23,186:INFO:Defining Hyperparameters
2020-10-30 11:47:23,666:INFO:Tuning with n_jobs=-1
2020-10-30 11:47:23,669:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:48:08,640:INFO:best_params: {'actual_estimator__learning_rate': 0.47889391701936085, 'actual_estimator__n_estimators': 136, 'actual_estimator__subsample': 0.9953855689970712, 'actual_estimator__max_depth': 3, 'actual_estimator__colsample_bytree': 0.7494160699261587, 'actual_estimator__min_child_weight': 4, 'actual_estimator__reg_alpha': 0.0883671130992619, 'actual_estimator__reg_lambda': 1.5358311806517544e-06, 'actual_estimator__scale_pos_weight': 13.097867660543319}
2020-10-30 11:48:08,640:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:48:08,647:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:48:08,649:INFO:Random search completed
2020-10-30 11:48:08,650:INFO:SubProcess create_model() called ==================================
2020-10-30 11:48:08,652:INFO:Initializing create_model()
2020-10-30 11:48:08,653:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc061ac80a0>, kwargs={'learning_rate': 0.47889391701936085, 'n_estimators': 136, 'subsample': 0.9953855689970712, 'max_depth': 3, 'colsample_bytree': 0.7494160699261587, 'min_child_weight': 4, 'reg_alpha': 0.0883671130992619, 'reg_lambda': 1.5358311806517544e-06, 'scale_pos_weight': 13.097867660543319})
2020-10-30 11:48:08,653:INFO:Checking exceptions
2020-10-30 11:48:08,654:INFO:Importing libraries
2020-10-30 11:48:08,654:INFO:Copying training dataset
2020-10-30 11:48:08,656:INFO:Defining folds
2020-10-30 11:48:08,656:INFO:Declaring metric variables
2020-10-30 11:48:08,689:INFO:Importing untrained model
2020-10-30 11:48:08,689:INFO:Declaring custom model
2020-10-30 11:48:08,712:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:48:08,744:INFO:Starting cross validation
2020-10-30 11:48:08,745:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:48:14,980:INFO:Calculating mean and std
2020-10-30 11:48:14,997:INFO:Creating metrics dataframe
2020-10-30 11:48:15,056:INFO:Finalizing model
2020-10-30 11:48:15,149:INFO:Uploading results into container
2020-10-30 11:48:15,150:INFO:Uploading model into container now
2020-10-30 11:48:15,151:INFO:create_model_container: 16
2020-10-30 11:48:15,151:INFO:master_model_container: 16
2020-10-30 11:48:15,151:INFO:display_container: 2
2020-10-30 11:48:15,155:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.7494160699261587, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.47889391701936085, max_delta_step=0, max_depth=3,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=136, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0883671130992619, reg_lambda=1.5358311806517544e-06,
              scale_pos_weight=13.097867660543319, subsample=0.9953855689970712,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-10-30 11:48:15,155:INFO:create_model() succesfully completed......................................
2020-10-30 11:48:15,741:INFO:SubProcess create_model() end ==================================
2020-10-30 11:48:15,788:INFO:create_model_container: 16
2020-10-30 11:48:15,788:INFO:master_model_container: 16
2020-10-30 11:48:15,788:INFO:display_container: 2
2020-10-30 11:48:15,793:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.7494160699261587, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.47889391701936085, max_delta_step=0, max_depth=3,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=136, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0883671130992619, reg_lambda=1.5358311806517544e-06,
              scale_pos_weight=13.097867660543319, subsample=0.9953855689970712,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-10-30 11:48:15,794:INFO:tune_model() succesfully completed......................................
2020-10-30 11:48:16,095:INFO:Initializing tune_model()
2020-10-30 11:48:16,096:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:48:16,096:INFO:Checking exceptions
2020-10-30 11:48:16,097:INFO:Preparing display monitor
2020-10-30 11:48:16,128:INFO:Copying training dataset
2020-10-30 11:48:16,129:INFO:Checking base model
2020-10-30 11:48:16,130:INFO:Base model : Random Forest Classifier
2020-10-30 11:48:16,139:INFO:Declaring metric variables
2020-10-30 11:48:16,173:INFO:Defining Hyperparameters
2020-10-30 11:48:16,352:INFO:Tuning with n_jobs=-1
2020-10-30 11:48:16,354:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:51:33,158:INFO:best_params: {'actual_estimator__n_estimators': 256, 'actual_estimator__max_depth': 11, 'actual_estimator__min_impurity_decrease': 9.690908269849155e-06, 'actual_estimator__max_features': 0.47879757779339027, 'actual_estimator__min_samples_split': 3, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__bootstrap': False, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced_subsample'}
2020-10-30 11:51:33,163:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:51:33,164:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:51:33,164:INFO:Random search completed
2020-10-30 11:51:33,164:INFO:SubProcess create_model() called ==================================
2020-10-30 11:51:33,167:INFO:Initializing create_model()
2020-10-30 11:51:33,167:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc044695940>, kwargs={'n_estimators': 256, 'max_depth': 11, 'min_impurity_decrease': 9.690908269849155e-06, 'max_features': 0.47879757779339027, 'min_samples_split': 3, 'min_samples_leaf': 4, 'bootstrap': False, 'criterion': 'entropy', 'class_weight': 'balanced_subsample'})
2020-10-30 11:51:33,167:INFO:Checking exceptions
2020-10-30 11:51:33,169:INFO:Importing libraries
2020-10-30 11:51:33,169:INFO:Copying training dataset
2020-10-30 11:51:33,171:INFO:Defining folds
2020-10-30 11:51:33,171:INFO:Declaring metric variables
2020-10-30 11:51:33,192:INFO:Importing untrained model
2020-10-30 11:51:33,193:INFO:Declaring custom model
2020-10-30 11:51:33,202:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:51:33,217:INFO:Starting cross validation
2020-10-30 11:51:33,218:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:51:38,291:INFO:Calculating mean and std
2020-10-30 11:51:38,298:INFO:Creating metrics dataframe
2020-10-30 11:51:38,332:INFO:Finalizing model
2020-10-30 11:51:38,837:INFO:Uploading results into container
2020-10-30 11:51:38,837:INFO:Uploading model into container now
2020-10-30 11:51:38,837:INFO:create_model_container: 17
2020-10-30 11:51:38,837:INFO:master_model_container: 17
2020-10-30 11:51:38,837:INFO:display_container: 3
2020-10-30 11:51:38,838:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.47879757779339027,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=9.690908269849155e-06,
                       min_impurity_split=None, min_samples_leaf=4,
                       min_samples_split=3, min_weight_fraction_leaf=0.0,
                       n_estimators=256, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-10-30 11:51:38,838:INFO:create_model() succesfully completed......................................
2020-10-30 11:51:39,249:INFO:SubProcess create_model() end ==================================
2020-10-30 11:51:39,275:INFO:create_model_container: 17
2020-10-30 11:51:39,276:INFO:master_model_container: 17
2020-10-30 11:51:39,276:INFO:display_container: 3
2020-10-30 11:51:39,276:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.47879757779339027,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=9.690908269849155e-06,
                       min_impurity_split=None, min_samples_leaf=4,
                       min_samples_split=3, min_weight_fraction_leaf=0.0,
                       n_estimators=256, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-10-30 11:51:39,277:INFO:tune_model() succesfully completed......................................
2020-10-30 11:51:39,368:INFO:Initializing tune_model()
2020-10-30 11:51:39,368:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:51:39,368:INFO:Checking exceptions
2020-10-30 11:51:39,370:INFO:Preparing display monitor
2020-10-30 11:51:39,388:INFO:Copying training dataset
2020-10-30 11:51:39,389:INFO:Checking base model
2020-10-30 11:51:39,390:INFO:Base model : Light Gradient Boosting Machine
2020-10-30 11:51:39,397:INFO:Declaring metric variables
2020-10-30 11:51:39,405:INFO:Defining Hyperparameters
2020-10-30 11:51:39,504:INFO:Tuning with n_jobs=-1
2020-10-30 11:51:39,507:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:52:01,513:INFO:best_params: {'actual_estimator__num_leaves': 95, 'actual_estimator__learning_rate': 0.0035480791943212496, 'actual_estimator__n_estimators': 24, 'actual_estimator__min_split_gain': 0.13169036589200145, 'actual_estimator__reg_alpha': 4.636102684324233e-06, 'actual_estimator__reg_lambda': 4.12327365672731e-09, 'actual_estimator__min_data_in_leaf': 3688, 'actual_estimator__feature_fraction': 0.8436335283710661, 'actual_estimator__bagging_fraction': 0.5787165975935351, 'actual_estimator__bagging_freq': 7, 'actual_estimator__min_child_samples': 59}
2020-10-30 11:52:01,514:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:52:01,515:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:52:01,518:INFO:Random search completed
2020-10-30 11:52:01,518:INFO:SubProcess create_model() called ==================================
2020-10-30 11:52:01,520:INFO:Initializing create_model()
2020-10-30 11:52:01,520:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc0451b7ee0>, kwargs={'num_leaves': 95, 'learning_rate': 0.0035480791943212496, 'n_estimators': 24, 'min_split_gain': 0.13169036589200145, 'reg_alpha': 4.636102684324233e-06, 'reg_lambda': 4.12327365672731e-09, 'min_data_in_leaf': 3688, 'feature_fraction': 0.8436335283710661, 'bagging_fraction': 0.5787165975935351, 'bagging_freq': 7, 'min_child_samples': 59})
2020-10-30 11:52:01,521:INFO:Checking exceptions
2020-10-30 11:52:01,521:INFO:Importing libraries
2020-10-30 11:52:01,521:INFO:Copying training dataset
2020-10-30 11:52:01,523:INFO:Defining folds
2020-10-30 11:52:01,523:INFO:Declaring metric variables
2020-10-30 11:52:01,539:INFO:Importing untrained model
2020-10-30 11:52:01,540:INFO:Declaring custom model
2020-10-30 11:52:01,554:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:52:01,575:INFO:Starting cross validation
2020-10-30 11:52:01,576:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:52:04,679:INFO:Calculating mean and std
2020-10-30 11:52:04,681:INFO:Creating metrics dataframe
2020-10-30 11:52:04,703:INFO:Finalizing model
2020-10-30 11:52:04,721:INFO:Uploading results into container
2020-10-30 11:52:04,721:INFO:Uploading model into container now
2020-10-30 11:52:04,721:INFO:create_model_container: 18
2020-10-30 11:52:04,721:INFO:master_model_container: 18
2020-10-30 11:52:04,721:INFO:display_container: 4
2020-10-30 11:52:04,722:INFO:LGBMClassifier(bagging_fraction=0.5787165975935351, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8436335283710661, importance_type='split',
               learning_rate=0.0035480791943212496, max_depth=-1,
               min_child_samples=59, min_child_weight=0.001,
               min_data_in_leaf=3688, min_split_gain=0.13169036589200145,
               n_estimators=24, n_jobs=-1, num_leaves=95, objective=None,
               random_state=786, reg_alpha=4.636102684324233e-06,
               reg_lambda=4.12327365672731e-09, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:52:04,722:INFO:create_model() succesfully completed......................................
2020-10-30 11:52:05,112:INFO:SubProcess create_model() end ==================================
2020-10-30 11:52:05,147:INFO:create_model_container: 18
2020-10-30 11:52:05,147:INFO:master_model_container: 18
2020-10-30 11:52:05,147:INFO:display_container: 4
2020-10-30 11:52:05,148:INFO:LGBMClassifier(bagging_fraction=0.5787165975935351, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8436335283710661, importance_type='split',
               learning_rate=0.0035480791943212496, max_depth=-1,
               min_child_samples=59, min_child_weight=0.001,
               min_data_in_leaf=3688, min_split_gain=0.13169036589200145,
               n_estimators=24, n_jobs=-1, num_leaves=95, objective=None,
               random_state=786, reg_alpha=4.636102684324233e-06,
               reg_lambda=4.12327365672731e-09, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:52:05,148:INFO:tune_model() succesfully completed......................................
2020-10-30 11:52:05,268:INFO:Initializing tune_model()
2020-10-30 11:52:05,268:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fc05fb7aa30>, fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:52:05,268:INFO:Checking exceptions
2020-10-30 11:52:05,270:INFO:Preparing display monitor
2020-10-30 11:52:05,293:INFO:Copying training dataset
2020-10-30 11:52:05,296:INFO:Checking base model
2020-10-30 11:52:05,299:INFO:Base model : CatBoost Classifier
2020-10-30 11:52:05,309:INFO:Declaring metric variables
2020-10-30 11:52:05,319:INFO:Defining Hyperparameters
2020-10-30 11:52:05,462:INFO:Tuning with n_jobs=-1
2020-10-30 11:52:05,464:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:57:00,939:INFO:best_params: {'actual_estimator__depth': 5, 'actual_estimator__n_estimators': 284, 'actual_estimator__random_strength': 0.017671867649931273, 'actual_estimator__l2_leaf_reg': 1}
2020-10-30 11:57:00,941:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:57:00,942:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:57:00,945:INFO:Random search completed
2020-10-30 11:57:00,945:INFO:SubProcess create_model() called ==================================
2020-10-30 11:57:00,949:INFO:Initializing create_model()
2020-10-30 11:57:00,949:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fc044b5bc40>, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc061a91ee0>, kwargs={'depth': 5, 'n_estimators': 284, 'random_strength': 0.017671867649931273, 'l2_leaf_reg': 1})
2020-10-30 11:57:00,949:INFO:Checking exceptions
2020-10-30 11:57:00,950:INFO:Importing libraries
2020-10-30 11:57:00,950:INFO:Copying training dataset
2020-10-30 11:57:00,954:INFO:Defining folds
2020-10-30 11:57:00,954:INFO:Declaring metric variables
2020-10-30 11:57:00,981:INFO:Importing untrained model
2020-10-30 11:57:00,981:INFO:Declaring custom model
2020-10-30 11:57:00,993:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:57:01,019:INFO:Starting cross validation
2020-10-30 11:57:01,021:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:57:08,874:INFO:Calculating mean and std
2020-10-30 11:57:08,894:INFO:Creating metrics dataframe
2020-10-30 11:57:08,969:INFO:Finalizing model
2020-10-30 11:57:11,604:INFO:Uploading results into container
2020-10-30 11:57:11,604:INFO:Uploading model into container now
2020-10-30 11:57:11,604:INFO:create_model_container: 19
2020-10-30 11:57:11,604:INFO:master_model_container: 19
2020-10-30 11:57:11,604:INFO:display_container: 5
2020-10-30 11:57:11,604:INFO:<catboost.core.CatBoostClassifier object at 0x7fc044b5e070>
2020-10-30 11:57:11,605:INFO:create_model() succesfully completed......................................
2020-10-30 11:57:12,339:INFO:SubProcess create_model() end ==================================
2020-10-30 11:57:12,384:INFO:create_model_container: 19
2020-10-30 11:57:12,384:INFO:master_model_container: 19
2020-10-30 11:57:12,385:INFO:display_container: 5
2020-10-30 11:57:12,385:INFO:<catboost.core.CatBoostClassifier object at 0x7fc044b5e070>
2020-10-30 11:57:12,385:INFO:tune_model() succesfully completed......................................
2020-10-30 11:57:35,456:INFO:Initializing blend_models()
2020-10-30 11:57:35,458:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.7494160699261587, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.47889391701936085, max_delta_step=0, max_depth=3,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=136, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0883671130992619, reg_lambda=1.5358311806517544e-06,
              scale_pos_weight=13.097867660543319, subsample=0.9953855689970712,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.47879757779339027,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=9.690908269849155e-06,
                       min_impurity_split=None, min_samples_leaf=4,
                       min_samples_split=3, min_weight_fraction_leaf=0.0,
                       n_estimators=256, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), LGBMClassifier(bagging_fraction=0.5787165975935351, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8436335283710661, importance_type='split',
               learning_rate=0.0035480791943212496, max_depth=-1,
               min_child_samples=59, min_child_weight=0.001,
               min_data_in_leaf=3688, min_split_gain=0.13169036589200145,
               n_estimators=24, n_jobs=-1, num_leaves=95, objective=None,
               random_state=786, reg_alpha=4.636102684324233e-06,
               reg_lambda=4.12327365672731e-09, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-10-30 11:57:35,458:INFO:Checking exceptions
2020-10-30 11:57:35,469:INFO:Preparing display monitor
2020-10-30 11:57:35,507:INFO:Importing libraries
2020-10-30 11:57:35,509:INFO:Copying training dataset
2020-10-30 11:57:35,520:INFO:Getting model names
2020-10-30 11:57:35,534:INFO:SubProcess create_model() called ==================================
2020-10-30 11:57:35,548:INFO:Initializing create_model()
2020-10-30 11:57:35,548:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05fa05fd0>, kwargs={})
2020-10-30 11:57:35,548:INFO:Checking exceptions
2020-10-30 11:57:35,548:INFO:Importing libraries
2020-10-30 11:57:35,549:INFO:Copying training dataset
2020-10-30 11:57:35,550:INFO:Defining folds
2020-10-30 11:57:35,550:INFO:Declaring metric variables
2020-10-30 11:57:35,561:INFO:Importing untrained model
2020-10-30 11:57:35,561:INFO:Declaring custom model
2020-10-30 11:57:35,576:INFO:Voting Classifier Imported succesfully
2020-10-30 11:57:35,614:INFO:Starting cross validation
2020-10-30 11:57:35,623:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:57:43,127:INFO:Calculating mean and std
2020-10-30 11:57:43,137:INFO:Creating metrics dataframe
2020-10-30 11:57:43,177:INFO:Finalizing model
2020-10-30 11:57:44,751:INFO:Uploading results into container
2020-10-30 11:57:44,751:INFO:Uploading model into container now
2020-10-30 11:57:44,751:INFO:create_model_container: 20
2020-10-30 11:57:44,751:INFO:master_model_container: 20
2020-10-30 11:57:44,751:INFO:display_container: 6
2020-10-30 11:57:44,763:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1])
2020-10-30 11:57:44,763:INFO:create_model() succesfully completed......................................
2020-10-30 11:57:45,171:INFO:SubProcess create_model() end ==================================
2020-10-30 11:57:45,201:INFO:create_model_container: 20
2020-10-30 11:57:45,201:INFO:master_model_container: 20
2020-10-30 11:57:45,201:INFO:display_container: 6
2020-10-30 11:57:45,212:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1])
2020-10-30 11:57:45,213:INFO:blend_models() succesfully completed......................................
2020-10-30 11:57:51,138:INFO:Initializing optimize_threshold()
2020-10-30 11:57:51,139:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=15, false_positive=0, false_negative=-50)
2020-10-30 11:57:51,139:INFO:Importing libraries
2020-10-30 11:57:51,139:INFO:Checking exceptions
2020-10-30 11:57:51,210:INFO:Defining loss function
2020-10-30 11:57:51,210:INFO:Iteration starts at 0
2020-10-30 11:57:51,915:INFO:Figure ready for render
2020-10-30 11:57:52,081:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 11:58:34,270:INFO:Initializing predict_model()
2020-10-30 11:58:34,271:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=None, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:34,271:INFO:Checking exceptions
2020-10-30 11:58:34,271:INFO:Preloading libraries
2020-10-30 11:58:34,273:INFO:Preparing display monitor
2020-10-30 11:58:54,488:INFO:Initializing predict_model()
2020-10-30 11:58:54,490:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:54,490:INFO:Checking exceptions
2020-10-30 11:58:54,490:INFO:Preloading libraries
2020-10-30 11:58:54,490:INFO:Preparing display monitor
2020-10-30 11:58:55,132:INFO:Initializing predict_model()
2020-10-30 11:58:55,132:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:55,132:INFO:Checking exceptions
2020-10-30 11:58:55,132:INFO:Preloading libraries
2020-10-30 11:58:55,132:INFO:Preparing display monitor
2020-10-30 11:58:55,371:INFO:Initializing predict_model()
2020-10-30 11:58:55,371:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:55,371:INFO:Checking exceptions
2020-10-30 11:58:55,372:INFO:Preloading libraries
2020-10-30 11:58:55,372:INFO:Preparing display monitor
2020-10-30 11:58:55,619:INFO:Initializing predict_model()
2020-10-30 11:58:55,620:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:55,620:INFO:Checking exceptions
2020-10-30 11:58:55,620:INFO:Preloading libraries
2020-10-30 11:58:55,620:INFO:Preparing display monitor
2020-10-30 11:58:55,976:INFO:Initializing predict_model()
2020-10-30 11:58:55,977:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:55,977:INFO:Checking exceptions
2020-10-30 11:58:55,977:INFO:Preloading libraries
2020-10-30 11:58:55,977:INFO:Preparing display monitor
2020-10-30 11:58:56,227:INFO:Initializing predict_model()
2020-10-30 11:58:56,227:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:56,227:INFO:Checking exceptions
2020-10-30 11:58:56,227:INFO:Preloading libraries
2020-10-30 11:58:56,227:INFO:Preparing display monitor
2020-10-30 11:58:56,436:INFO:Initializing predict_model()
2020-10-30 11:58:56,436:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:56,436:INFO:Checking exceptions
2020-10-30 11:58:56,436:INFO:Preloading libraries
2020-10-30 11:58:56,436:INFO:Preparing display monitor
2020-10-30 12:00:07,079:INFO:Initializing predict_model()
2020-10-30 12:00:07,081:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:07,081:INFO:Checking exceptions
2020-10-30 12:00:07,081:INFO:Preloading libraries
2020-10-30 12:00:07,085:INFO:Preparing display monitor
2020-10-30 12:00:07,908:INFO:Initializing predict_model()
2020-10-30 12:00:07,908:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:07,908:INFO:Checking exceptions
2020-10-30 12:00:07,908:INFO:Preloading libraries
2020-10-30 12:00:07,908:INFO:Preparing display monitor
2020-10-30 12:00:08,174:INFO:Initializing predict_model()
2020-10-30 12:00:08,174:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:08,174:INFO:Checking exceptions
2020-10-30 12:00:08,174:INFO:Preloading libraries
2020-10-30 12:00:08,174:INFO:Preparing display monitor
2020-10-30 12:00:08,419:INFO:Initializing predict_model()
2020-10-30 12:00:08,419:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:08,419:INFO:Checking exceptions
2020-10-30 12:00:08,419:INFO:Preloading libraries
2020-10-30 12:00:08,420:INFO:Preparing display monitor
2020-10-30 12:00:08,685:INFO:Initializing predict_model()
2020-10-30 12:00:08,685:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:08,685:INFO:Checking exceptions
2020-10-30 12:00:08,685:INFO:Preloading libraries
2020-10-30 12:00:08,686:INFO:Preparing display monitor
2020-10-30 12:00:09,014:INFO:Initializing predict_model()
2020-10-30 12:00:09,015:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:09,015:INFO:Checking exceptions
2020-10-30 12:00:09,015:INFO:Preloading libraries
2020-10-30 12:00:09,015:INFO:Preparing display monitor
2020-10-30 12:00:09,319:INFO:Initializing predict_model()
2020-10-30 12:00:09,319:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:09,319:INFO:Checking exceptions
2020-10-30 12:00:09,319:INFO:Preloading libraries
2020-10-30 12:00:09,319:INFO:Preparing display monitor
2020-10-30 12:00:09,604:INFO:Initializing predict_model()
2020-10-30 12:00:09,604:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:09,604:INFO:Checking exceptions
2020-10-30 12:00:09,605:INFO:Preloading libraries
2020-10-30 12:00:09,605:INFO:Preparing display monitor
2020-10-30 12:00:09,911:INFO:Initializing predict_model()
2020-10-30 12:00:09,911:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:09,911:INFO:Checking exceptions
2020-10-30 12:00:09,911:INFO:Preloading libraries
2020-10-30 12:00:09,912:INFO:Preparing display monitor
2020-10-30 12:00:10,197:INFO:Initializing predict_model()
2020-10-30 12:00:10,197:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:10,197:INFO:Checking exceptions
2020-10-30 12:00:10,198:INFO:Preloading libraries
2020-10-30 12:00:10,198:INFO:Preparing display monitor
2020-10-30 12:00:10,455:INFO:Initializing predict_model()
2020-10-30 12:00:10,455:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.57, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:10,455:INFO:Checking exceptions
2020-10-30 12:00:10,455:INFO:Preloading libraries
2020-10-30 12:00:10,455:INFO:Preparing display monitor
2020-10-30 12:00:34,698:INFO:Initializing optimize_threshold()
2020-10-30 12:00:34,700:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=0, false_negative=0)
2020-10-30 12:00:34,700:INFO:Importing libraries
2020-10-30 12:00:34,701:INFO:Checking exceptions
2020-10-30 12:00:34,829:INFO:Defining loss function
2020-10-30 12:00:34,829:INFO:Iteration starts at 0
2020-10-30 12:00:35,008:INFO:Figure ready for render
2020-10-30 12:00:35,024:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:00:39,762:INFO:Initializing predict_model()
2020-10-30 12:00:39,763:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:39,763:INFO:Checking exceptions
2020-10-30 12:00:39,763:INFO:Preloading libraries
2020-10-30 12:00:39,764:INFO:Preparing display monitor
2020-10-30 12:00:40,307:INFO:Initializing predict_model()
2020-10-30 12:00:40,307:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:40,307:INFO:Checking exceptions
2020-10-30 12:00:40,308:INFO:Preloading libraries
2020-10-30 12:00:40,308:INFO:Preparing display monitor
2020-10-30 12:00:40,589:INFO:Initializing predict_model()
2020-10-30 12:00:40,589:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:40,589:INFO:Checking exceptions
2020-10-30 12:00:40,589:INFO:Preloading libraries
2020-10-30 12:00:40,590:INFO:Preparing display monitor
2020-10-30 12:00:40,915:INFO:Initializing predict_model()
2020-10-30 12:00:40,916:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:40,916:INFO:Checking exceptions
2020-10-30 12:00:40,916:INFO:Preloading libraries
2020-10-30 12:00:40,916:INFO:Preparing display monitor
2020-10-30 12:00:41,203:INFO:Initializing predict_model()
2020-10-30 12:00:41,203:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:41,204:INFO:Checking exceptions
2020-10-30 12:00:41,204:INFO:Preloading libraries
2020-10-30 12:00:41,204:INFO:Preparing display monitor
2020-10-30 12:00:41,518:INFO:Initializing predict_model()
2020-10-30 12:00:41,519:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:41,519:INFO:Checking exceptions
2020-10-30 12:00:41,519:INFO:Preloading libraries
2020-10-30 12:00:41,519:INFO:Preparing display monitor
2020-10-30 12:00:41,819:INFO:Initializing predict_model()
2020-10-30 12:00:41,819:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:41,820:INFO:Checking exceptions
2020-10-30 12:00:41,820:INFO:Preloading libraries
2020-10-30 12:00:41,820:INFO:Preparing display monitor
2020-10-30 12:00:42,136:INFO:Initializing predict_model()
2020-10-30 12:00:42,136:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:42,136:INFO:Checking exceptions
2020-10-30 12:00:42,136:INFO:Preloading libraries
2020-10-30 12:00:42,137:INFO:Preparing display monitor
2020-10-30 12:00:42,457:INFO:Initializing predict_model()
2020-10-30 12:00:42,457:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:42,457:INFO:Checking exceptions
2020-10-30 12:00:42,457:INFO:Preloading libraries
2020-10-30 12:00:42,457:INFO:Preparing display monitor
2020-10-30 12:00:42,758:INFO:Initializing predict_model()
2020-10-30 12:00:42,758:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:42,758:INFO:Checking exceptions
2020-10-30 12:00:42,758:INFO:Preloading libraries
2020-10-30 12:00:42,759:INFO:Preparing display monitor
2020-10-30 12:00:43,078:INFO:Initializing predict_model()
2020-10-30 12:00:43,079:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.57, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:43,079:INFO:Checking exceptions
2020-10-30 12:00:43,079:INFO:Preloading libraries
2020-10-30 12:00:43,079:INFO:Preparing display monitor
2020-10-30 12:00:47,117:INFO:Initializing optimize_threshold()
2020-10-30 12:00:47,118:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=15, false_positive=0, false_negative=-50)
2020-10-30 12:00:47,118:INFO:Importing libraries
2020-10-30 12:00:47,118:INFO:Checking exceptions
2020-10-30 12:00:47,163:INFO:Defining loss function
2020-10-30 12:00:47,163:INFO:Iteration starts at 0
2020-10-30 12:00:47,202:INFO:Figure ready for render
2020-10-30 12:00:47,207:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:03:03,852:INFO:Initializing optimize_threshold()
2020-10-30 12:03:03,855:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=100, true_negative=100, false_positive=0, false_negative=100)
2020-10-30 12:03:03,856:INFO:Importing libraries
2020-10-30 12:03:03,858:INFO:Checking exceptions
2020-10-30 12:03:03,984:INFO:Defining loss function
2020-10-30 12:03:03,984:INFO:Iteration starts at 0
2020-10-30 12:03:04,078:INFO:Figure ready for render
2020-10-30 12:03:04,088:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:03:15,767:INFO:Initializing optimize_threshold()
2020-10-30 12:03:15,768:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=100, true_negative=100, false_positive=-100, false_negative=100)
2020-10-30 12:03:15,768:INFO:Importing libraries
2020-10-30 12:03:15,769:INFO:Checking exceptions
2020-10-30 12:03:15,878:INFO:Defining loss function
2020-10-30 12:03:15,878:INFO:Iteration starts at 0
2020-10-30 12:03:15,942:INFO:Figure ready for render
2020-10-30 12:03:15,952:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:03:38,417:INFO:Initializing predict_model()
2020-10-30 12:03:38,418:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:38,418:INFO:Checking exceptions
2020-10-30 12:03:38,418:INFO:Preloading libraries
2020-10-30 12:03:38,419:INFO:Preparing display monitor
2020-10-30 12:03:39,420:INFO:Initializing predict_model()
2020-10-30 12:03:39,420:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:39,421:INFO:Checking exceptions
2020-10-30 12:03:39,421:INFO:Preloading libraries
2020-10-30 12:03:39,421:INFO:Preparing display monitor
2020-10-30 12:03:39,696:INFO:Initializing predict_model()
2020-10-30 12:03:39,696:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:39,696:INFO:Checking exceptions
2020-10-30 12:03:39,696:INFO:Preloading libraries
2020-10-30 12:03:39,696:INFO:Preparing display monitor
2020-10-30 12:03:39,945:INFO:Initializing predict_model()
2020-10-30 12:03:39,945:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:39,945:INFO:Checking exceptions
2020-10-30 12:03:39,945:INFO:Preloading libraries
2020-10-30 12:03:39,946:INFO:Preparing display monitor
2020-10-30 12:03:40,192:INFO:Initializing predict_model()
2020-10-30 12:03:40,192:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:40,192:INFO:Checking exceptions
2020-10-30 12:03:40,192:INFO:Preloading libraries
2020-10-30 12:03:40,192:INFO:Preparing display monitor
2020-10-30 12:03:40,479:INFO:Initializing predict_model()
2020-10-30 12:03:40,479:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:40,480:INFO:Checking exceptions
2020-10-30 12:03:40,480:INFO:Preloading libraries
2020-10-30 12:03:40,480:INFO:Preparing display monitor
2020-10-30 12:03:40,739:INFO:Initializing predict_model()
2020-10-30 12:03:40,739:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:40,740:INFO:Checking exceptions
2020-10-30 12:03:40,740:INFO:Preloading libraries
2020-10-30 12:03:40,740:INFO:Preparing display monitor
2020-10-30 12:03:41,037:INFO:Initializing predict_model()
2020-10-30 12:03:41,038:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:41,038:INFO:Checking exceptions
2020-10-30 12:03:41,038:INFO:Preloading libraries
2020-10-30 12:03:41,038:INFO:Preparing display monitor
2020-10-30 12:03:41,330:INFO:Initializing predict_model()
2020-10-30 12:03:41,331:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:41,331:INFO:Checking exceptions
2020-10-30 12:03:41,331:INFO:Preloading libraries
2020-10-30 12:03:41,332:INFO:Preparing display monitor
2020-10-30 12:03:41,627:INFO:Initializing predict_model()
2020-10-30 12:03:41,627:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:41,627:INFO:Checking exceptions
2020-10-30 12:03:41,628:INFO:Preloading libraries
2020-10-30 12:03:41,628:INFO:Preparing display monitor
2020-10-30 12:03:41,884:INFO:Initializing predict_model()
2020-10-30 12:03:41,884:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:41,884:INFO:Checking exceptions
2020-10-30 12:03:41,884:INFO:Preloading libraries
2020-10-30 12:03:41,884:INFO:Preparing display monitor
2020-10-30 12:03:49,475:INFO:Initializing predict_model()
2020-10-30 12:03:49,475:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:49,475:INFO:Checking exceptions
2020-10-30 12:03:49,476:INFO:Preloading libraries
2020-10-30 12:03:49,476:INFO:Preparing display monitor
2020-10-30 12:03:50,160:INFO:Initializing predict_model()
2020-10-30 12:03:50,160:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:50,160:INFO:Checking exceptions
2020-10-30 12:03:50,160:INFO:Preloading libraries
2020-10-30 12:03:50,160:INFO:Preparing display monitor
2020-10-30 12:03:50,441:INFO:Initializing predict_model()
2020-10-30 12:03:50,441:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:50,441:INFO:Checking exceptions
2020-10-30 12:03:50,441:INFO:Preloading libraries
2020-10-30 12:03:50,442:INFO:Preparing display monitor
2020-10-30 12:03:50,721:INFO:Initializing predict_model()
2020-10-30 12:03:50,721:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:50,721:INFO:Checking exceptions
2020-10-30 12:03:50,721:INFO:Preloading libraries
2020-10-30 12:03:50,721:INFO:Preparing display monitor
2020-10-30 12:03:51,048:INFO:Initializing predict_model()
2020-10-30 12:03:51,048:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:51,048:INFO:Checking exceptions
2020-10-30 12:03:51,048:INFO:Preloading libraries
2020-10-30 12:03:51,048:INFO:Preparing display monitor
2020-10-30 12:03:51,280:INFO:Initializing predict_model()
2020-10-30 12:03:51,280:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:51,281:INFO:Checking exceptions
2020-10-30 12:03:51,281:INFO:Preloading libraries
2020-10-30 12:03:51,281:INFO:Preparing display monitor
2020-10-30 12:03:51,521:INFO:Initializing predict_model()
2020-10-30 12:03:51,521:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:51,521:INFO:Checking exceptions
2020-10-30 12:03:51,521:INFO:Preloading libraries
2020-10-30 12:03:51,522:INFO:Preparing display monitor
2020-10-30 12:03:51,798:INFO:Initializing predict_model()
2020-10-30 12:03:51,798:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:51,798:INFO:Checking exceptions
2020-10-30 12:03:51,798:INFO:Preloading libraries
2020-10-30 12:03:51,798:INFO:Preparing display monitor
2020-10-30 12:03:52,047:INFO:Initializing predict_model()
2020-10-30 12:03:52,047:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:52,047:INFO:Checking exceptions
2020-10-30 12:03:52,047:INFO:Preloading libraries
2020-10-30 12:03:52,048:INFO:Preparing display monitor
2020-10-30 12:03:52,303:INFO:Initializing predict_model()
2020-10-30 12:03:52,304:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:52,304:INFO:Checking exceptions
2020-10-30 12:03:52,304:INFO:Preloading libraries
2020-10-30 12:03:52,304:INFO:Preparing display monitor
2020-10-30 12:03:52,629:INFO:Initializing predict_model()
2020-10-30 12:03:52,629:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.75, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:52,629:INFO:Checking exceptions
2020-10-30 12:03:52,629:INFO:Preloading libraries
2020-10-30 12:03:52,630:INFO:Preparing display monitor
2020-10-30 12:03:58,997:INFO:Initializing predict_model()
2020-10-30 12:03:58,997:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:58,998:INFO:Checking exceptions
2020-10-30 12:03:58,998:INFO:Preloading libraries
2020-10-30 12:03:58,998:INFO:Preparing display monitor
2020-10-30 12:03:59,837:INFO:Initializing predict_model()
2020-10-30 12:03:59,837:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:59,837:INFO:Checking exceptions
2020-10-30 12:03:59,837:INFO:Preloading libraries
2020-10-30 12:03:59,837:INFO:Preparing display monitor
2020-10-30 12:04:00,102:INFO:Initializing predict_model()
2020-10-30 12:04:00,102:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:00,102:INFO:Checking exceptions
2020-10-30 12:04:00,102:INFO:Preloading libraries
2020-10-30 12:04:00,102:INFO:Preparing display monitor
2020-10-30 12:04:00,370:INFO:Initializing predict_model()
2020-10-30 12:04:00,371:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:00,371:INFO:Checking exceptions
2020-10-30 12:04:00,371:INFO:Preloading libraries
2020-10-30 12:04:00,371:INFO:Preparing display monitor
2020-10-30 12:04:00,693:INFO:Initializing predict_model()
2020-10-30 12:04:00,694:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:00,694:INFO:Checking exceptions
2020-10-30 12:04:00,694:INFO:Preloading libraries
2020-10-30 12:04:00,694:INFO:Preparing display monitor
2020-10-30 12:04:01,003:INFO:Initializing predict_model()
2020-10-30 12:04:01,004:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:01,004:INFO:Checking exceptions
2020-10-30 12:04:01,004:INFO:Preloading libraries
2020-10-30 12:04:01,004:INFO:Preparing display monitor
2020-10-30 12:04:01,335:INFO:Initializing predict_model()
2020-10-30 12:04:01,335:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:01,335:INFO:Checking exceptions
2020-10-30 12:04:01,335:INFO:Preloading libraries
2020-10-30 12:04:01,335:INFO:Preparing display monitor
2020-10-30 12:04:01,611:INFO:Initializing predict_model()
2020-10-30 12:04:01,611:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:01,611:INFO:Checking exceptions
2020-10-30 12:04:01,611:INFO:Preloading libraries
2020-10-30 12:04:01,611:INFO:Preparing display monitor
2020-10-30 12:04:01,925:INFO:Initializing predict_model()
2020-10-30 12:04:01,925:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:01,925:INFO:Checking exceptions
2020-10-30 12:04:01,926:INFO:Preloading libraries
2020-10-30 12:04:01,926:INFO:Preparing display monitor
2020-10-30 12:04:02,237:INFO:Initializing predict_model()
2020-10-30 12:04:02,237:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:02,237:INFO:Checking exceptions
2020-10-30 12:04:02,237:INFO:Preloading libraries
2020-10-30 12:04:02,237:INFO:Preparing display monitor
2020-10-30 12:04:02,515:INFO:Initializing predict_model()
2020-10-30 12:04:02,515:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:02,515:INFO:Checking exceptions
2020-10-30 12:04:02,515:INFO:Preloading libraries
2020-10-30 12:04:02,515:INFO:Preparing display monitor
2020-10-30 12:05:14,773:INFO:Initializing plot_model()
2020-10-30 12:05:14,777:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:14,777:INFO:Checking exceptions
2020-10-30 12:05:14,790:INFO:Initializing plot_model()
2020-10-30 12:05:14,790:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:14,790:INFO:Checking exceptions
2020-10-30 12:05:14,795:INFO:Preloading libraries
2020-10-30 12:05:14,797:INFO:Copying training dataset
2020-10-30 12:05:14,798:INFO:Copying test dataset
2020-10-30 12:05:14,798:INFO:Plot type: error
2020-10-30 12:05:15,066:INFO:Initializing plot_model()
2020-10-30 12:05:15,066:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,066:INFO:Checking exceptions
2020-10-30 12:05:15,076:INFO:Initializing plot_model()
2020-10-30 12:05:15,077:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,077:INFO:Checking exceptions
2020-10-30 12:05:15,088:INFO:Initializing plot_model()
2020-10-30 12:05:15,088:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,089:INFO:Checking exceptions
2020-10-30 12:05:15,091:INFO:Preloading libraries
2020-10-30 12:05:15,092:INFO:Copying training dataset
2020-10-30 12:05:15,092:INFO:Copying test dataset
2020-10-30 12:05:15,092:INFO:Plot type: threshold
2020-10-30 12:05:15,099:INFO:Initializing plot_model()
2020-10-30 12:05:15,100:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,100:INFO:Checking exceptions
2020-10-30 12:05:15,101:INFO:Preloading libraries
2020-10-30 12:05:15,102:INFO:Copying training dataset
2020-10-30 12:05:15,102:INFO:Copying test dataset
2020-10-30 12:05:15,102:INFO:Plot type: pr
2020-10-30 12:05:15,111:INFO:Initializing plot_model()
2020-10-30 12:05:15,111:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,111:INFO:Checking exceptions
2020-10-30 12:05:15,113:INFO:Preloading libraries
2020-10-30 12:05:15,113:INFO:Copying training dataset
2020-10-30 12:05:15,113:INFO:Copying test dataset
2020-10-30 12:05:15,114:INFO:Plot type: confusion_matrix
2020-10-30 12:05:15,120:INFO:Initializing plot_model()
2020-10-30 12:05:15,120:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,121:INFO:Checking exceptions
2020-10-30 12:05:15,122:INFO:Preloading libraries
2020-10-30 12:05:15,122:INFO:Copying training dataset
2020-10-30 12:05:15,123:INFO:Copying test dataset
2020-10-30 12:05:15,123:INFO:Plot type: class_report
2020-10-30 12:05:15,130:INFO:Initializing plot_model()
2020-10-30 12:05:15,130:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,130:INFO:Checking exceptions
2020-10-30 12:05:15,132:INFO:Preloading libraries
2020-10-30 12:05:15,132:INFO:Copying training dataset
2020-10-30 12:05:15,132:INFO:Copying test dataset
2020-10-30 12:05:15,133:INFO:Plot type: boundary
2020-10-30 12:05:15,182:INFO:Fitting StandardScaler()
2020-10-30 12:05:15,190:INFO:Initializing plot_model()
2020-10-30 12:05:15,191:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,193:INFO:Checking exceptions
2020-10-30 12:05:15,199:INFO:Initializing plot_model()
2020-10-30 12:05:15,199:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,199:INFO:Checking exceptions
2020-10-30 12:05:15,200:INFO:Preloading libraries
2020-10-30 12:05:15,200:INFO:Copying training dataset
2020-10-30 12:05:15,200:INFO:Copying test dataset
2020-10-30 12:05:15,201:INFO:Plot type: learning
2020-10-30 12:05:15,209:INFO:Initializing plot_model()
2020-10-30 12:05:15,209:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,209:INFO:Checking exceptions
2020-10-30 12:05:15,210:INFO:Preloading libraries
2020-10-30 12:05:15,210:INFO:Copying training dataset
2020-10-30 12:05:15,210:INFO:Copying test dataset
2020-10-30 12:05:15,211:INFO:Plot type: manifold
2020-10-30 12:05:15,271:INFO:Fitting & Transforming Model
2020-10-30 12:05:15,282:INFO:Initializing plot_model()
2020-10-30 12:05:15,282:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,282:INFO:Checking exceptions
2020-10-30 12:05:15,290:INFO:Initializing plot_model()
2020-10-30 12:05:15,290:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,290:INFO:Checking exceptions
2020-10-30 12:05:15,291:INFO:Preloading libraries
2020-10-30 12:05:15,291:INFO:Copying training dataset
2020-10-30 12:05:15,292:INFO:Copying test dataset
2020-10-30 12:05:15,294:INFO:Plot type: vc
2020-10-30 12:05:15,295:INFO:Determining param_name
2020-10-30 12:05:15,303:INFO:Initializing plot_model()
2020-10-30 12:05:15,303:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,304:INFO:Checking exceptions
2020-10-30 12:05:15,305:INFO:Preloading libraries
2020-10-30 12:05:15,306:INFO:Copying training dataset
2020-10-30 12:05:15,306:INFO:Copying test dataset
2020-10-30 12:05:15,306:INFO:Plot type: dimension
2020-10-30 12:05:15,308:INFO:Fitting StandardScaler()
2020-10-30 12:05:15,317:INFO:Initializing plot_model()
2020-10-30 12:05:15,318:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,318:INFO:Checking exceptions
2020-10-30 12:05:15,329:INFO:Initializing plot_model()
2020-10-30 12:05:15,329:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,329:INFO:Checking exceptions
2020-10-30 12:05:15,337:INFO:Initializing plot_model()
2020-10-30 12:05:15,338:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,338:INFO:Checking exceptions
2020-10-30 12:05:15,339:INFO:Preloading libraries
2020-10-30 12:05:15,340:INFO:Copying training dataset
2020-10-30 12:05:15,340:INFO:Copying test dataset
2020-10-30 12:05:15,341:INFO:Plot type: parameter
2020-10-30 12:05:15,348:INFO:Initializing plot_model()
2020-10-30 12:05:15,348:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,349:INFO:Checking exceptions
2020-10-30 12:05:15,350:INFO:Preloading libraries
2020-10-30 12:05:15,350:INFO:Copying training dataset
2020-10-30 12:05:15,350:INFO:Copying test dataset
2020-10-30 12:05:15,351:INFO:Plot type: lift
2020-10-30 12:05:15,352:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:05:15,399:INFO:fit_if_not_fitted: Pipeline(memory=None,
         steps=[('empty_step', 'passthrough'),
                ('actual_estimator',
                          Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100...
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns])],
         verbose=False) is not fitted, fitting
2020-10-30 12:05:15,409:INFO:Initializing plot_model()
2020-10-30 12:05:15,409:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,409:INFO:Checking exceptions
2020-10-30 12:05:15,411:INFO:Preloading libraries
2020-10-30 12:05:15,411:INFO:Copying training dataset
2020-10-30 12:05:15,411:INFO:Copying test dataset
2020-10-30 12:05:15,412:INFO:Plot type: gain
2020-10-30 12:05:15,413:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:05:15,464:INFO:fit_if_not_fitted: Pipeline(memory=None,
         steps=[('empty_step', 'passthrough'),
                ('actual_estimator',
                          Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100...
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns])],
         verbose=False) is not fitted, fitting
2020-10-30 12:05:15,471:INFO:Initializing plot_model()
2020-10-30 12:05:15,471:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,471:INFO:Checking exceptions
2020-10-30 12:05:58,165:INFO:Initializing optimize_threshold()
2020-10-30 12:05:58,166:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-100, false_negative=100)
2020-10-30 12:05:58,166:INFO:Importing libraries
2020-10-30 12:05:58,166:INFO:Checking exceptions
2020-10-30 12:05:58,266:INFO:Defining loss function
2020-10-30 12:05:58,266:INFO:Iteration starts at 0
2020-10-30 12:05:58,448:INFO:Figure ready for render
2020-10-30 12:05:58,458:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:11,144:INFO:Initializing optimize_threshold()
2020-10-30 12:06:11,144:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-100, false_negative=1000)
2020-10-30 12:06:11,145:INFO:Importing libraries
2020-10-30 12:06:11,145:INFO:Checking exceptions
2020-10-30 12:06:11,246:INFO:Defining loss function
2020-10-30 12:06:11,246:INFO:Iteration starts at 0
2020-10-30 12:06:11,326:INFO:Figure ready for render
2020-10-30 12:06:11,335:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:15,535:INFO:Initializing optimize_threshold()
2020-10-30 12:06:15,535:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-100, false_negative=10000)
2020-10-30 12:06:15,535:INFO:Importing libraries
2020-10-30 12:06:15,535:INFO:Checking exceptions
2020-10-30 12:06:15,587:INFO:Defining loss function
2020-10-30 12:06:15,587:INFO:Iteration starts at 0
2020-10-30 12:06:15,625:INFO:Figure ready for render
2020-10-30 12:06:15,630:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:19,584:INFO:Initializing optimize_threshold()
2020-10-30 12:06:19,584:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-1000000, false_negative=10000)
2020-10-30 12:06:19,585:INFO:Importing libraries
2020-10-30 12:06:19,585:INFO:Checking exceptions
2020-10-30 12:06:19,643:INFO:Defining loss function
2020-10-30 12:06:19,643:INFO:Iteration starts at 0
2020-10-30 12:06:19,683:INFO:Figure ready for render
2020-10-30 12:06:19,687:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:32,950:INFO:Initializing optimize_threshold()
2020-10-30 12:06:32,951:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-1, false_negative=0)
2020-10-30 12:06:32,952:INFO:Importing libraries
2020-10-30 12:06:32,952:INFO:Checking exceptions
2020-10-30 12:06:33,048:INFO:Defining loss function
2020-10-30 12:06:33,048:INFO:Iteration starts at 0
2020-10-30 12:06:33,122:INFO:Figure ready for render
2020-10-30 12:06:33,129:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:41,111:INFO:Initializing optimize_threshold()
2020-10-30 12:06:41,111:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-1, false_negative=100)
2020-10-30 12:06:41,112:INFO:Importing libraries
2020-10-30 12:06:41,112:INFO:Checking exceptions
2020-10-30 12:06:41,198:INFO:Defining loss function
2020-10-30 12:06:41,198:INFO:Iteration starts at 0
2020-10-30 12:06:41,260:INFO:Figure ready for render
2020-10-30 12:06:41,266:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:44,032:INFO:Initializing optimize_threshold()
2020-10-30 12:06:44,032:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-100, false_negative=100)
2020-10-30 12:06:44,032:INFO:Importing libraries
2020-10-30 12:06:44,032:INFO:Checking exceptions
2020-10-30 12:06:44,075:INFO:Defining loss function
2020-10-30 12:06:44,075:INFO:Iteration starts at 0
2020-10-30 12:06:44,111:INFO:Figure ready for render
2020-10-30 12:06:44,116:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:50,872:INFO:Initializing plot_model()
2020-10-30 12:06:50,872:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:06:50,873:INFO:Checking exceptions
2020-10-30 12:06:50,885:INFO:Initializing plot_model()
2020-10-30 12:06:50,885:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:06:50,885:INFO:Checking exceptions
2020-10-30 12:06:50,890:INFO:Preloading libraries
2020-10-30 12:06:51,074:INFO:Copying training dataset
2020-10-30 12:06:51,074:INFO:Copying test dataset
2020-10-30 12:06:51,075:INFO:Plot type: error
2020-10-30 12:06:51,107:INFO:Fitting Model
2020-10-30 12:06:51,112:INFO:Scoring test/hold-out set
2020-10-30 12:06:51,225:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-30 12:06:51,412:INFO:Visual Rendered Successfully
2020-10-30 12:06:52,083:INFO:plot_model() succesfully completed......................................
2020-10-30 12:06:52,091:INFO:Initializing plot_model()
2020-10-30 12:06:52,091:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:06:52,091:INFO:Checking exceptions
2020-10-30 12:06:52,101:INFO:Initializing plot_model()
2020-10-30 12:06:52,101:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:06:52,101:INFO:Checking exceptions
2020-10-30 12:06:52,103:INFO:Preloading libraries
2020-10-30 12:06:52,146:INFO:Copying training dataset
2020-10-30 12:06:52,146:INFO:Copying test dataset
2020-10-30 12:06:52,147:INFO:Plot type: auc
2020-10-30 12:06:52,161:INFO:Fitting Model
2020-10-30 12:06:52,162:INFO:Scoring test/hold-out set
2020-10-30 12:06:52,269:INFO:Saving 'AUC.png' in current active directory
2020-10-30 12:06:52,439:INFO:Visual Rendered Successfully
2020-10-30 12:06:52,600:INFO:plot_model() succesfully completed......................................
2020-10-30 12:06:52,610:INFO:Initializing plot_model()
2020-10-30 12:06:52,610:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:06:52,611:INFO:Checking exceptions
2020-10-30 12:06:52,612:INFO:Preloading libraries
2020-10-30 12:06:52,657:INFO:Copying training dataset
2020-10-30 12:06:52,658:INFO:Copying test dataset
2020-10-30 12:06:52,658:INFO:Plot type: threshold
2020-10-30 12:06:52,672:INFO:Fitting Model
2020-10-30 12:07:39,262:INFO:Scoring test/hold-out set
2020-10-30 12:07:39,319:INFO:Saving 'Threshold.png' in current active directory
2020-10-30 12:07:39,844:INFO:Visual Rendered Successfully
2020-10-30 12:07:40,465:INFO:plot_model() succesfully completed......................................
2020-10-30 12:07:40,483:INFO:Initializing plot_model()
2020-10-30 12:07:40,484:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:40,484:INFO:Checking exceptions
2020-10-30 12:07:40,486:INFO:Preloading libraries
2020-10-30 12:07:40,522:INFO:Copying training dataset
2020-10-30 12:07:40,524:INFO:Copying test dataset
2020-10-30 12:07:40,525:INFO:Plot type: pr
2020-10-30 12:07:40,541:INFO:Fitting Model
2020-10-30 12:07:40,543:INFO:Scoring test/hold-out set
2020-10-30 12:07:40,647:INFO:Saving 'Precision Recall.png' in current active directory
2020-10-30 12:07:40,829:INFO:Visual Rendered Successfully
2020-10-30 12:07:41,011:INFO:plot_model() succesfully completed......................................
2020-10-30 12:07:41,025:INFO:Initializing plot_model()
2020-10-30 12:07:41,025:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:41,025:INFO:Checking exceptions
2020-10-30 12:07:41,027:INFO:Preloading libraries
2020-10-30 12:07:41,053:INFO:Copying training dataset
2020-10-30 12:07:41,053:INFO:Copying test dataset
2020-10-30 12:07:41,054:INFO:Plot type: confusion_matrix
2020-10-30 12:07:41,063:INFO:Fitting Model
2020-10-30 12:07:41,064:INFO:Scoring test/hold-out set
2020-10-30 12:07:41,160:INFO:Saving 'Confusion Matrix.png' in current active directory
2020-10-30 12:07:41,299:INFO:Visual Rendered Successfully
2020-10-30 12:07:41,462:INFO:plot_model() succesfully completed......................................
2020-10-30 12:07:41,472:INFO:Initializing plot_model()
2020-10-30 12:07:41,472:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:41,472:INFO:Checking exceptions
2020-10-30 12:07:41,473:INFO:Preloading libraries
2020-10-30 12:07:41,497:INFO:Copying training dataset
2020-10-30 12:07:41,498:INFO:Copying test dataset
2020-10-30 12:07:41,498:INFO:Plot type: class_report
2020-10-30 12:07:41,512:INFO:Fitting Model
2020-10-30 12:07:41,513:INFO:Scoring test/hold-out set
2020-10-30 12:07:41,750:INFO:Saving 'Class Report.png' in current active directory
2020-10-30 12:07:41,953:INFO:Visual Rendered Successfully
2020-10-30 12:07:42,177:INFO:plot_model() succesfully completed......................................
2020-10-30 12:07:42,186:INFO:Initializing plot_model()
2020-10-30 12:07:42,186:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:42,186:INFO:Checking exceptions
2020-10-30 12:07:42,188:INFO:Preloading libraries
2020-10-30 12:07:42,216:INFO:Copying training dataset
2020-10-30 12:07:42,217:INFO:Copying test dataset
2020-10-30 12:07:42,218:INFO:Plot type: boundary
2020-10-30 12:07:42,222:INFO:Fitting StandardScaler()
2020-10-30 12:07:42,232:INFO:Initializing plot_model()
2020-10-30 12:07:42,232:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:42,232:INFO:Checking exceptions
2020-10-30 12:07:42,243:INFO:Initializing plot_model()
2020-10-30 12:07:42,243:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:42,243:INFO:Checking exceptions
2020-10-30 12:07:42,245:INFO:Preloading libraries
2020-10-30 12:07:42,276:INFO:Copying training dataset
2020-10-30 12:07:42,277:INFO:Copying test dataset
2020-10-30 12:07:42,277:INFO:Plot type: learning
2020-10-30 12:07:42,293:INFO:Fitting Model
2020-10-30 12:08:32,932:INFO:Saving 'Learning Curve.png' in current active directory
2020-10-30 12:08:33,157:INFO:Visual Rendered Successfully
2020-10-30 12:08:33,677:INFO:plot_model() succesfully completed......................................
2020-10-30 12:08:33,695:INFO:Initializing plot_model()
2020-10-30 12:08:33,695:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:33,695:INFO:Checking exceptions
2020-10-30 12:08:33,697:INFO:Preloading libraries
2020-10-30 12:08:33,756:INFO:Copying training dataset
2020-10-30 12:08:33,757:INFO:Copying test dataset
2020-10-30 12:08:33,758:INFO:Plot type: manifold
2020-10-30 12:08:33,780:INFO:Fitting & Transforming Model
2020-10-30 12:08:33,792:INFO:Initializing plot_model()
2020-10-30 12:08:33,793:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:33,793:INFO:Checking exceptions
2020-10-30 12:08:33,794:INFO:Preloading libraries
2020-10-30 12:08:33,829:INFO:Copying training dataset
2020-10-30 12:08:33,830:INFO:Copying test dataset
2020-10-30 12:08:33,830:INFO:Plot type: calibration
2020-10-30 12:08:33,846:INFO:Scoring test/hold-out set
2020-10-30 12:08:34,012:INFO:Saving 'Calibration Curve.png' in current active directory
2020-10-30 12:08:34,187:INFO:Visual Rendered Successfully
2020-10-30 12:08:34,372:INFO:plot_model() succesfully completed......................................
2020-10-30 12:08:34,381:INFO:Initializing plot_model()
2020-10-30 12:08:34,381:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,381:INFO:Checking exceptions
2020-10-30 12:08:34,383:INFO:Preloading libraries
2020-10-30 12:08:34,414:INFO:Copying training dataset
2020-10-30 12:08:34,415:INFO:Copying test dataset
2020-10-30 12:08:34,416:INFO:Plot type: vc
2020-10-30 12:08:34,417:INFO:Determining param_name
2020-10-30 12:08:34,441:INFO:Initializing plot_model()
2020-10-30 12:08:34,441:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,442:INFO:Checking exceptions
2020-10-30 12:08:34,444:INFO:Preloading libraries
2020-10-30 12:08:34,477:INFO:Copying training dataset
2020-10-30 12:08:34,478:INFO:Copying test dataset
2020-10-30 12:08:34,480:INFO:Plot type: dimension
2020-10-30 12:08:34,482:INFO:Fitting StandardScaler()
2020-10-30 12:08:34,492:INFO:Initializing plot_model()
2020-10-30 12:08:34,492:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,493:INFO:Checking exceptions
2020-10-30 12:08:34,503:INFO:Initializing plot_model()
2020-10-30 12:08:34,504:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,504:INFO:Checking exceptions
2020-10-30 12:08:34,515:INFO:Initializing plot_model()
2020-10-30 12:08:34,515:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,515:INFO:Checking exceptions
2020-10-30 12:08:34,517:INFO:Preloading libraries
2020-10-30 12:08:34,548:INFO:Copying training dataset
2020-10-30 12:08:34,549:INFO:Copying test dataset
2020-10-30 12:08:34,550:INFO:Plot type: parameter
2020-10-30 12:08:34,555:INFO:Visual Rendered Successfully
2020-10-30 12:08:34,763:INFO:plot_model() succesfully completed......................................
2020-10-30 12:08:34,777:INFO:Initializing plot_model()
2020-10-30 12:08:34,777:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,777:INFO:Checking exceptions
2020-10-30 12:08:34,779:INFO:Preloading libraries
2020-10-30 12:08:34,824:INFO:Copying training dataset
2020-10-30 12:08:34,825:INFO:Copying test dataset
2020-10-30 12:08:34,826:INFO:Plot type: lift
2020-10-30 12:08:34,827:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:08:35,039:INFO:Saving 'Lift Chart.png' in current active directory
2020-10-30 12:08:35,305:INFO:Visual Rendered Successfully
2020-10-30 12:08:35,529:INFO:plot_model() succesfully completed......................................
2020-10-30 12:08:35,538:INFO:Initializing plot_model()
2020-10-30 12:08:35,538:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:35,538:INFO:Checking exceptions
2020-10-30 12:08:35,540:INFO:Preloading libraries
2020-10-30 12:08:35,579:INFO:Copying training dataset
2020-10-30 12:08:35,580:INFO:Copying test dataset
2020-10-30 12:08:35,580:INFO:Plot type: gain
2020-10-30 12:08:35,582:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:08:35,899:INFO:Saving 'Gain Chart.png' in current active directory
2020-10-30 12:08:36,290:INFO:Visual Rendered Successfully
2020-10-30 12:08:36,498:INFO:plot_model() succesfully completed......................................
2020-10-30 12:08:36,509:INFO:Initializing plot_model()
2020-10-30 12:08:36,509:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:36,510:INFO:Checking exceptions
2020-10-30 12:08:51,195:INFO:Initializing optimize_threshold()
2020-10-30 12:08:51,195:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=0, false_negative=0)
2020-10-30 12:08:51,195:INFO:Importing libraries
2020-10-30 12:08:51,196:INFO:Checking exceptions
2020-10-30 12:08:51,312:INFO:Defining loss function
2020-10-30 12:08:51,312:INFO:Iteration starts at 0
2020-10-30 12:08:51,407:INFO:Figure ready for render
2020-10-30 12:08:51,413:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:10:32,860:INFO:Initializing optimize_threshold()
2020-10-30 12:10:32,864:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-1, false_negative=1)
2020-10-30 12:10:32,864:INFO:Importing libraries
2020-10-30 12:10:32,864:INFO:Checking exceptions
2020-10-30 12:10:32,995:INFO:Defining loss function
2020-10-30 12:10:32,995:INFO:Iteration starts at 0
2020-10-30 12:10:33,097:INFO:Figure ready for render
2020-10-30 12:10:33,111:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:11:33,319:INFO:Initializing optimize_threshold()
2020-10-30 12:11:33,325:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-50, false_negative=15)
2020-10-30 12:11:33,329:INFO:Importing libraries
2020-10-30 12:11:33,333:INFO:Checking exceptions
2020-10-30 12:11:33,525:INFO:Defining loss function
2020-10-30 12:11:33,525:INFO:Iteration starts at 0
2020-10-30 12:11:33,663:INFO:Figure ready for render
2020-10-30 12:11:33,681:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:11:52,787:INFO:Initializing blend_models()
2020-10-30 12:11:52,788:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.7494160699261587, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.47889391701936085, max_delta_step=0, max_depth=3,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=136, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0883671130992619, reg_lambda=1.5358311806517544e-06,
              scale_pos_weight=13.097867660543319, subsample=0.9953855689970712,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.47879757779339027,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=9.690908269849155e-06,
                       min_impurity_split=None, min_samples_leaf=4,
                       min_samples_split=3, min_weight_fraction_leaf=0.0,
                       n_estimators=256, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), LGBMClassifier(bagging_fraction=0.5787165975935351, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8436335283710661, importance_type='split',
               learning_rate=0.0035480791943212496, max_depth=-1,
               min_child_samples=59, min_child_weight=0.001,
               min_data_in_leaf=3688, min_split_gain=0.13169036589200145,
               n_estimators=24, n_jobs=-1, num_leaves=95, objective=None,
               random_state=786, reg_alpha=4.636102684324233e-06,
               reg_lambda=4.12327365672731e-09, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-10-30 12:11:52,788:INFO:Checking exceptions
2020-10-30 12:11:52,806:INFO:Preparing display monitor
2020-10-30 12:11:52,901:INFO:Importing libraries
2020-10-30 12:11:52,901:INFO:Copying training dataset
2020-10-30 12:11:52,910:INFO:Getting model names
2020-10-30 12:11:52,930:INFO:SubProcess create_model() called ==================================
2020-10-30 12:11:52,953:INFO:Initializing create_model()
2020-10-30 12:11:52,953:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc03528dac0>, kwargs={})
2020-10-30 12:11:52,953:INFO:Checking exceptions
2020-10-30 12:11:52,954:INFO:Importing libraries
2020-10-30 12:11:52,954:INFO:Copying training dataset
2020-10-30 12:11:52,954:INFO:Defining folds
2020-10-30 12:11:52,955:INFO:Declaring metric variables
2020-10-30 12:11:52,963:INFO:Importing untrained model
2020-10-30 12:11:52,963:INFO:Declaring custom model
2020-10-30 12:11:52,976:INFO:Voting Classifier Imported succesfully
2020-10-30 12:11:52,989:INFO:Starting cross validation
2020-10-30 12:11:52,993:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 12:11:57,345:INFO:Calculating mean and std
2020-10-30 12:11:57,356:INFO:Creating metrics dataframe
2020-10-30 12:11:57,407:INFO:Finalizing model
2020-10-30 12:11:58,527:INFO:Uploading results into container
2020-10-30 12:11:58,528:INFO:Uploading model into container now
2020-10-30 12:11:58,528:INFO:create_model_container: 21
2020-10-30 12:11:58,528:INFO:master_model_container: 21
2020-10-30 12:11:58,528:INFO:display_container: 70
2020-10-30 12:11:58,538:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1])
2020-10-30 12:11:58,539:INFO:create_model() succesfully completed......................................
2020-10-30 12:11:59,613:INFO:SubProcess create_model() end ==================================
2020-10-30 12:11:59,652:INFO:create_model_container: 21
2020-10-30 12:11:59,653:INFO:master_model_container: 21
2020-10-30 12:11:59,653:INFO:display_container: 70
2020-10-30 12:11:59,661:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1])
2020-10-30 12:11:59,661:INFO:blend_models() succesfully completed......................................
2020-10-30 12:11:59,922:INFO:Initializing optimize_threshold()
2020-10-30 12:11:59,922:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-50, false_negative=15)
2020-10-30 12:11:59,922:INFO:Importing libraries
2020-10-30 12:11:59,929:INFO:Checking exceptions
2020-10-30 12:11:59,993:INFO:Defining loss function
2020-10-30 12:11:59,993:INFO:Iteration starts at 0
2020-10-30 12:12:00,060:INFO:Figure ready for render
2020-10-30 12:12:00,066:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:12:15,632:INFO:Initializing optimize_threshold()
2020-10-30 12:12:15,633:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=-50, false_positive=0, false_negative=15)
2020-10-30 12:12:15,633:INFO:Importing libraries
2020-10-30 12:12:15,633:INFO:Checking exceptions
2020-10-30 12:12:15,703:INFO:Defining loss function
2020-10-30 12:12:15,703:INFO:Iteration starts at 0
2020-10-30 12:12:15,761:INFO:Figure ready for render
2020-10-30 12:12:15,766:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:12:26,585:INFO:Initializing optimize_threshold()
2020-10-30 12:12:26,590:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=15, false_positive=0, false_negative=-50)
2020-10-30 12:12:26,591:INFO:Importing libraries
2020-10-30 12:12:26,591:INFO:Checking exceptions
2020-10-30 12:12:26,658:INFO:Defining loss function
2020-10-30 12:12:26,659:INFO:Iteration starts at 0
2020-10-30 12:12:26,715:INFO:Figure ready for render
2020-10-30 12:12:26,721:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:37:39,248:INFO:Initializing optimize_threshold()
2020-10-30 12:37:39,252:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=50, false_positive=0, false_negative=-50)
2020-10-30 12:37:39,254:INFO:Importing libraries
2020-10-30 12:37:39,256:INFO:Checking exceptions
2020-10-30 12:37:39,537:INFO:Defining loss function
2020-10-30 12:37:39,537:INFO:Iteration starts at 0
2020-10-30 12:37:39,734:INFO:Figure ready for render
2020-10-30 12:37:39,838:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:39:12,910:INFO:Initializing plot_model()
2020-10-30 12:39:12,912:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:12,912:INFO:Checking exceptions
2020-10-30 12:39:12,933:INFO:Initializing plot_model()
2020-10-30 12:39:12,933:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:12,934:INFO:Checking exceptions
2020-10-30 12:39:12,960:INFO:Preloading libraries
2020-10-30 12:39:13,126:INFO:Copying training dataset
2020-10-30 12:39:13,130:INFO:Copying test dataset
2020-10-30 12:39:13,131:INFO:Plot type: error
2020-10-30 12:39:13,206:INFO:Fitting Model
2020-10-30 12:39:13,215:INFO:Scoring test/hold-out set
2020-10-30 12:39:13,349:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-30 12:39:13,562:INFO:Visual Rendered Successfully
2020-10-30 12:39:14,325:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:14,333:INFO:Initializing plot_model()
2020-10-30 12:39:14,333:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:14,334:INFO:Checking exceptions
2020-10-30 12:39:14,341:INFO:Initializing plot_model()
2020-10-30 12:39:14,341:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:14,342:INFO:Checking exceptions
2020-10-30 12:39:14,344:INFO:Preloading libraries
2020-10-30 12:39:14,372:INFO:Copying training dataset
2020-10-30 12:39:14,372:INFO:Copying test dataset
2020-10-30 12:39:14,373:INFO:Plot type: auc
2020-10-30 12:39:14,388:INFO:Fitting Model
2020-10-30 12:39:14,389:INFO:Scoring test/hold-out set
2020-10-30 12:39:14,519:INFO:Saving 'AUC.png' in current active directory
2020-10-30 12:39:14,696:INFO:Visual Rendered Successfully
2020-10-30 12:39:14,870:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:14,883:INFO:Initializing plot_model()
2020-10-30 12:39:14,883:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:14,883:INFO:Checking exceptions
2020-10-30 12:39:14,884:INFO:Preloading libraries
2020-10-30 12:39:14,914:INFO:Copying training dataset
2020-10-30 12:39:14,915:INFO:Copying test dataset
2020-10-30 12:39:14,915:INFO:Plot type: threshold
2020-10-30 12:39:14,927:INFO:Fitting Model
2020-10-30 12:39:18,229:INFO:Initializing plot_model()
2020-10-30 12:39:18,230:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:18,231:INFO:Checking exceptions
2020-10-30 12:39:18,234:INFO:Preloading libraries
2020-10-30 12:39:18,272:INFO:Copying training dataset
2020-10-30 12:39:18,273:INFO:Copying test dataset
2020-10-30 12:39:18,273:INFO:Plot type: pr
2020-10-30 12:39:18,277:INFO:Fitting Model
2020-10-30 12:39:18,279:INFO:Scoring test/hold-out set
2020-10-30 12:39:18,392:INFO:Saving 'Precision Recall.png' in current active directory
2020-10-30 12:39:18,800:INFO:Visual Rendered Successfully
2020-10-30 12:39:18,986:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:18,996:INFO:Initializing plot_model()
2020-10-30 12:39:18,997:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:18,997:INFO:Checking exceptions
2020-10-30 12:39:18,999:INFO:Preloading libraries
2020-10-30 12:39:19,029:INFO:Copying training dataset
2020-10-30 12:39:19,031:INFO:Copying test dataset
2020-10-30 12:39:19,031:INFO:Plot type: confusion_matrix
2020-10-30 12:39:19,045:INFO:Fitting Model
2020-10-30 12:39:19,048:INFO:Scoring test/hold-out set
2020-10-30 12:39:19,158:INFO:Saving 'Confusion Matrix.png' in current active directory
2020-10-30 12:39:19,297:INFO:Visual Rendered Successfully
2020-10-30 12:39:19,490:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:19,503:INFO:Initializing plot_model()
2020-10-30 12:39:19,503:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:19,503:INFO:Checking exceptions
2020-10-30 12:39:19,505:INFO:Preloading libraries
2020-10-30 12:39:19,535:INFO:Copying training dataset
2020-10-30 12:39:19,535:INFO:Copying test dataset
2020-10-30 12:39:19,536:INFO:Plot type: class_report
2020-10-30 12:39:19,553:INFO:Fitting Model
2020-10-30 12:39:19,554:INFO:Scoring test/hold-out set
2020-10-30 12:39:19,751:INFO:Saving 'Class Report.png' in current active directory
2020-10-30 12:39:20,027:INFO:Visual Rendered Successfully
2020-10-30 12:39:20,196:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:20,205:INFO:Initializing plot_model()
2020-10-30 12:39:20,205:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:20,205:INFO:Checking exceptions
2020-10-30 12:39:20,207:INFO:Preloading libraries
2020-10-30 12:39:20,248:INFO:Copying training dataset
2020-10-30 12:39:20,248:INFO:Copying test dataset
2020-10-30 12:39:20,249:INFO:Plot type: boundary
2020-10-30 12:39:20,253:INFO:Fitting StandardScaler()
2020-10-30 12:39:20,267:INFO:Initializing plot_model()
2020-10-30 12:39:20,267:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:20,267:INFO:Checking exceptions
2020-10-30 12:39:20,285:INFO:Initializing plot_model()
2020-10-30 12:39:20,285:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:20,285:INFO:Checking exceptions
2020-10-30 12:39:20,289:INFO:Preloading libraries
2020-10-30 12:39:20,334:INFO:Copying training dataset
2020-10-30 12:39:20,335:INFO:Copying test dataset
2020-10-30 12:39:20,336:INFO:Plot type: learning
2020-10-30 12:39:20,356:INFO:Fitting Model
2020-10-30 12:39:20,702:INFO:Initializing plot_model()
2020-10-30 12:39:20,702:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:20,703:INFO:Checking exceptions
2020-10-30 12:39:20,706:INFO:Preloading libraries
2020-10-30 12:39:20,781:INFO:Copying training dataset
2020-10-30 12:39:20,782:INFO:Copying test dataset
2020-10-30 12:39:20,783:INFO:Plot type: manifold
2020-10-30 12:39:20,790:INFO:Fitting & Transforming Model
2020-10-30 12:39:20,805:INFO:Initializing plot_model()
2020-10-30 12:39:20,805:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:20,805:INFO:Checking exceptions
2020-10-30 12:39:20,806:INFO:Preloading libraries
2020-10-30 12:39:20,844:INFO:Copying training dataset
2020-10-30 12:39:20,845:INFO:Copying test dataset
2020-10-30 12:39:20,846:INFO:Plot type: calibration
2020-10-30 12:39:20,867:INFO:Scoring test/hold-out set
2020-10-30 12:39:21,055:INFO:Saving 'Calibration Curve.png' in current active directory
2020-10-30 12:39:21,265:INFO:Visual Rendered Successfully
2020-10-30 12:39:22,188:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:22,200:INFO:Initializing plot_model()
2020-10-30 12:39:22,200:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,200:INFO:Checking exceptions
2020-10-30 12:39:22,202:INFO:Preloading libraries
2020-10-30 12:39:22,235:INFO:Copying training dataset
2020-10-30 12:39:22,236:INFO:Copying test dataset
2020-10-30 12:39:22,237:INFO:Plot type: vc
2020-10-30 12:39:22,238:INFO:Determining param_name
2020-10-30 12:39:22,249:INFO:Initializing plot_model()
2020-10-30 12:39:22,249:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,249:INFO:Checking exceptions
2020-10-30 12:39:22,250:INFO:Preloading libraries
2020-10-30 12:39:22,290:INFO:Copying training dataset
2020-10-30 12:39:22,290:INFO:Copying test dataset
2020-10-30 12:39:22,291:INFO:Plot type: dimension
2020-10-30 12:39:22,293:INFO:Fitting StandardScaler()
2020-10-30 12:39:22,303:INFO:Initializing plot_model()
2020-10-30 12:39:22,322:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,322:INFO:Checking exceptions
2020-10-30 12:39:22,333:INFO:Initializing plot_model()
2020-10-30 12:39:22,333:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,333:INFO:Checking exceptions
2020-10-30 12:39:22,342:INFO:Initializing plot_model()
2020-10-30 12:39:22,342:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,342:INFO:Checking exceptions
2020-10-30 12:39:22,344:INFO:Preloading libraries
2020-10-30 12:39:22,371:INFO:Copying training dataset
2020-10-30 12:39:22,371:INFO:Copying test dataset
2020-10-30 12:39:22,372:INFO:Plot type: parameter
2020-10-30 12:39:22,376:INFO:Visual Rendered Successfully
2020-10-30 12:39:22,571:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:22,603:INFO:Initializing plot_model()
2020-10-30 12:39:22,603:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,603:INFO:Checking exceptions
2020-10-30 12:39:22,605:INFO:Preloading libraries
2020-10-30 12:39:22,632:INFO:Copying training dataset
2020-10-30 12:39:22,633:INFO:Copying test dataset
2020-10-30 12:39:22,633:INFO:Plot type: lift
2020-10-30 12:39:22,634:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:39:22,803:INFO:Saving 'Lift Chart.png' in current active directory
2020-10-30 12:39:23,129:INFO:Visual Rendered Successfully
2020-10-30 12:39:23,318:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:23,327:INFO:Initializing plot_model()
2020-10-30 12:39:23,327:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:23,327:INFO:Checking exceptions
2020-10-30 12:39:23,329:INFO:Preloading libraries
2020-10-30 12:39:23,352:INFO:Copying training dataset
2020-10-30 12:39:23,353:INFO:Copying test dataset
2020-10-30 12:39:23,353:INFO:Plot type: gain
2020-10-30 12:39:23,354:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:39:23,501:INFO:Saving 'Gain Chart.png' in current active directory
2020-10-30 12:39:23,788:INFO:Visual Rendered Successfully
2020-10-30 12:39:23,978:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:23,986:INFO:Initializing plot_model()
2020-10-30 12:39:23,987:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:23,987:INFO:Checking exceptions
2020-10-30 12:40:02,102:INFO:Initializing predict_model()
2020-10-30 12:40:02,103:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:02,104:INFO:Checking exceptions
2020-10-30 12:40:02,105:INFO:Preloading libraries
2020-10-30 12:40:02,108:INFO:Preparing display monitor
2020-10-30 12:40:02,823:INFO:Initializing predict_model()
2020-10-30 12:40:02,824:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:02,824:INFO:Checking exceptions
2020-10-30 12:40:02,824:INFO:Preloading libraries
2020-10-30 12:40:02,824:INFO:Preparing display monitor
2020-10-30 12:40:03,283:INFO:Initializing predict_model()
2020-10-30 12:40:03,283:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:03,284:INFO:Checking exceptions
2020-10-30 12:40:03,284:INFO:Preloading libraries
2020-10-30 12:40:03,284:INFO:Preparing display monitor
2020-10-30 12:40:03,663:INFO:Initializing predict_model()
2020-10-30 12:40:03,663:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:03,664:INFO:Checking exceptions
2020-10-30 12:40:03,664:INFO:Preloading libraries
2020-10-30 12:40:03,664:INFO:Preparing display monitor
2020-10-30 12:40:04,083:INFO:Initializing predict_model()
2020-10-30 12:40:04,083:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:04,083:INFO:Checking exceptions
2020-10-30 12:40:04,083:INFO:Preloading libraries
2020-10-30 12:40:04,083:INFO:Preparing display monitor
2020-10-30 12:40:04,381:INFO:Initializing predict_model()
2020-10-30 12:40:04,381:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:04,382:INFO:Checking exceptions
2020-10-30 12:40:04,382:INFO:Preloading libraries
2020-10-30 12:40:04,382:INFO:Preparing display monitor
2020-10-30 12:40:04,661:INFO:Initializing predict_model()
2020-10-30 12:40:04,662:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:04,662:INFO:Checking exceptions
2020-10-30 12:40:04,662:INFO:Preloading libraries
2020-10-30 12:40:04,662:INFO:Preparing display monitor
2020-10-30 12:40:04,931:INFO:Initializing predict_model()
2020-10-30 12:40:04,932:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:04,932:INFO:Checking exceptions
2020-10-30 12:40:04,932:INFO:Preloading libraries
2020-10-30 12:40:04,932:INFO:Preparing display monitor
2020-10-30 12:40:05,245:INFO:Initializing predict_model()
2020-10-30 12:40:05,245:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:05,245:INFO:Checking exceptions
2020-10-30 12:40:05,245:INFO:Preloading libraries
2020-10-30 12:40:05,245:INFO:Preparing display monitor
2020-10-30 12:40:05,523:INFO:Initializing predict_model()
2020-10-30 12:40:05,523:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:05,523:INFO:Checking exceptions
2020-10-30 12:40:05,523:INFO:Preloading libraries
2020-10-30 12:40:05,523:INFO:Preparing display monitor
2020-10-30 12:40:05,808:INFO:Initializing predict_model()
2020-10-30 12:40:05,809:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:05,809:INFO:Checking exceptions
2020-10-30 12:40:05,809:INFO:Preloading libraries
2020-10-30 12:40:05,809:INFO:Preparing display monitor
2020-10-30 12:40:24,685:INFO:Initializing plot_model()
2020-10-30 12:40:24,687:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,687:INFO:Checking exceptions
2020-10-30 12:40:24,698:INFO:Initializing plot_model()
2020-10-30 12:40:24,698:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,699:INFO:Checking exceptions
2020-10-30 12:40:24,703:INFO:Preloading libraries
2020-10-30 12:40:24,705:INFO:Copying training dataset
2020-10-30 12:40:24,706:INFO:Copying test dataset
2020-10-30 12:40:24,706:INFO:Plot type: error
2020-10-30 12:40:24,720:INFO:Initializing plot_model()
2020-10-30 12:40:24,720:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,720:INFO:Checking exceptions
2020-10-30 12:40:24,728:INFO:Initializing plot_model()
2020-10-30 12:40:24,729:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,729:INFO:Checking exceptions
2020-10-30 12:40:24,738:INFO:Initializing plot_model()
2020-10-30 12:40:24,738:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,739:INFO:Checking exceptions
2020-10-30 12:40:24,740:INFO:Preloading libraries
2020-10-30 12:40:24,740:INFO:Copying training dataset
2020-10-30 12:40:24,741:INFO:Copying test dataset
2020-10-30 12:40:24,741:INFO:Plot type: threshold
2020-10-30 12:40:24,751:INFO:Initializing plot_model()
2020-10-30 12:40:24,751:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,751:INFO:Checking exceptions
2020-10-30 12:40:24,753:INFO:Preloading libraries
2020-10-30 12:40:24,754:INFO:Copying training dataset
2020-10-30 12:40:24,754:INFO:Copying test dataset
2020-10-30 12:40:24,755:INFO:Plot type: pr
2020-10-30 12:40:24,763:INFO:Initializing plot_model()
2020-10-30 12:40:24,764:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,764:INFO:Checking exceptions
2020-10-30 12:40:24,765:INFO:Preloading libraries
2020-10-30 12:40:24,766:INFO:Copying training dataset
2020-10-30 12:40:24,766:INFO:Copying test dataset
2020-10-30 12:40:24,767:INFO:Plot type: confusion_matrix
2020-10-30 12:40:24,774:INFO:Initializing plot_model()
2020-10-30 12:40:24,775:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,775:INFO:Checking exceptions
2020-10-30 12:40:24,776:INFO:Preloading libraries
2020-10-30 12:40:24,776:INFO:Copying training dataset
2020-10-30 12:40:24,777:INFO:Copying test dataset
2020-10-30 12:40:24,777:INFO:Plot type: class_report
2020-10-30 12:40:24,787:INFO:Initializing plot_model()
2020-10-30 12:40:24,787:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,788:INFO:Checking exceptions
2020-10-30 12:40:24,789:INFO:Preloading libraries
2020-10-30 12:40:24,790:INFO:Copying training dataset
2020-10-30 12:40:24,790:INFO:Copying test dataset
2020-10-30 12:40:24,790:INFO:Plot type: boundary
2020-10-30 12:40:24,797:INFO:Fitting StandardScaler()
2020-10-30 12:40:24,807:INFO:Initializing plot_model()
2020-10-30 12:40:24,808:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,808:INFO:Checking exceptions
2020-10-30 12:40:24,817:INFO:Initializing plot_model()
2020-10-30 12:40:24,817:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,818:INFO:Checking exceptions
2020-10-30 12:40:24,819:INFO:Preloading libraries
2020-10-30 12:40:24,819:INFO:Copying training dataset
2020-10-30 12:40:24,819:INFO:Copying test dataset
2020-10-30 12:40:24,820:INFO:Plot type: learning
2020-10-30 12:40:24,827:INFO:Initializing plot_model()
2020-10-30 12:40:24,828:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,828:INFO:Checking exceptions
2020-10-30 12:40:24,829:INFO:Preloading libraries
2020-10-30 12:40:24,829:INFO:Copying training dataset
2020-10-30 12:40:24,829:INFO:Copying test dataset
2020-10-30 12:40:24,830:INFO:Plot type: manifold
2020-10-30 12:40:24,855:INFO:Fitting & Transforming Model
2020-10-30 12:40:24,863:INFO:Initializing plot_model()
2020-10-30 12:40:24,863:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,863:INFO:Checking exceptions
2020-10-30 12:40:24,871:INFO:Initializing plot_model()
2020-10-30 12:40:24,871:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,872:INFO:Checking exceptions
2020-10-30 12:40:24,873:INFO:Preloading libraries
2020-10-30 12:40:24,873:INFO:Copying training dataset
2020-10-30 12:40:24,873:INFO:Copying test dataset
2020-10-30 12:40:24,873:INFO:Plot type: vc
2020-10-30 12:40:24,874:INFO:Determining param_name
2020-10-30 12:40:24,881:INFO:Initializing plot_model()
2020-10-30 12:40:24,881:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,881:INFO:Checking exceptions
2020-10-30 12:40:24,882:INFO:Preloading libraries
2020-10-30 12:40:24,882:INFO:Copying training dataset
2020-10-30 12:40:24,882:INFO:Copying test dataset
2020-10-30 12:40:24,882:INFO:Plot type: dimension
2020-10-30 12:40:24,883:INFO:Fitting StandardScaler()
2020-10-30 12:40:24,889:INFO:Initializing plot_model()
2020-10-30 12:40:24,890:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,890:INFO:Checking exceptions
2020-10-30 12:40:24,896:INFO:Initializing plot_model()
2020-10-30 12:40:24,896:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,896:INFO:Checking exceptions
2020-10-30 12:40:24,902:INFO:Initializing plot_model()
2020-10-30 12:40:24,903:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,903:INFO:Checking exceptions
2020-10-30 12:40:24,904:INFO:Preloading libraries
2020-10-30 12:40:24,904:INFO:Copying training dataset
2020-10-30 12:40:24,905:INFO:Copying test dataset
2020-10-30 12:40:24,905:INFO:Plot type: parameter
2020-10-30 12:40:24,913:INFO:Initializing plot_model()
2020-10-30 12:40:24,913:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,914:INFO:Checking exceptions
2020-10-30 12:40:24,915:INFO:Preloading libraries
2020-10-30 12:40:24,915:INFO:Copying training dataset
2020-10-30 12:40:24,916:INFO:Copying test dataset
2020-10-30 12:40:24,917:INFO:Plot type: lift
2020-10-30 12:40:24,918:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:40:24,968:INFO:fit_if_not_fitted: Pipeline(memory=None,
         steps=[('empty_step', 'passthrough'),
                ('actual_estimator',
                          Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100...
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns])],
         verbose=False) is not fitted, fitting
2020-10-30 12:40:24,979:INFO:Initializing plot_model()
2020-10-30 12:40:24,979:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,980:INFO:Checking exceptions
2020-10-30 12:40:24,982:INFO:Preloading libraries
2020-10-30 12:40:24,982:INFO:Copying training dataset
2020-10-30 12:40:24,982:INFO:Copying test dataset
2020-10-30 12:40:24,982:INFO:Plot type: gain
2020-10-30 12:40:24,983:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:40:25,038:INFO:fit_if_not_fitted: Pipeline(memory=None,
         steps=[('empty_step', 'passthrough'),
                ('actual_estimator',
                          Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100...
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns])],
         verbose=False) is not fitted, fitting
2020-10-30 12:40:25,046:INFO:Initializing plot_model()
2020-10-30 12:40:25,046:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:25,046:INFO:Checking exceptions
2020-10-30 15:08:06,818:INFO:Initializing optimize_threshold()
2020-10-30 15:08:06,827:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=0, false_negative=-50)
2020-10-30 15:08:06,829:INFO:Importing libraries
2020-10-30 15:08:06,833:INFO:Checking exceptions
2020-10-30 15:08:07,539:INFO:Defining loss function
2020-10-30 15:08:07,539:INFO:Iteration starts at 0
2020-10-30 15:08:08,251:INFO:Figure ready for render
2020-10-30 15:08:08,282:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 15:09:32,559:INFO:Initializing optimize_threshold()
2020-10-30 15:09:32,561:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-50, false_negative=50)
2020-10-30 15:09:32,562:INFO:Importing libraries
2020-10-30 15:09:32,562:INFO:Checking exceptions
2020-10-30 15:09:32,666:INFO:Defining loss function
2020-10-30 15:09:32,666:INFO:Iteration starts at 0
2020-10-30 15:09:32,741:INFO:Figure ready for render
2020-10-30 15:09:32,755:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 15:09:50,142:INFO:Initializing optimize_threshold()
2020-10-30 15:09:50,155:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-50, false_negative=0)
2020-10-30 15:09:50,155:INFO:Importing libraries
2020-10-30 15:09:50,155:INFO:Checking exceptions
2020-10-30 15:09:50,228:INFO:Defining loss function
2020-10-30 15:09:50,228:INFO:Iteration starts at 0
2020-10-30 15:09:50,299:INFO:Figure ready for render
2020-10-30 15:09:50,313:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 15:10:11,864:INFO:Initializing predict_model()
2020-10-30 15:10:11,865:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:11,865:INFO:Checking exceptions
2020-10-30 15:10:11,865:INFO:Preloading libraries
2020-10-30 15:10:11,868:INFO:Preparing display monitor
2020-10-30 15:10:13,796:INFO:Initializing predict_model()
2020-10-30 15:10:13,796:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:13,796:INFO:Checking exceptions
2020-10-30 15:10:13,796:INFO:Preloading libraries
2020-10-30 15:10:13,796:INFO:Preparing display monitor
2020-10-30 15:10:14,094:INFO:Initializing predict_model()
2020-10-30 15:10:14,094:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:14,094:INFO:Checking exceptions
2020-10-30 15:10:14,095:INFO:Preloading libraries
2020-10-30 15:10:14,095:INFO:Preparing display monitor
2020-10-30 15:10:14,340:INFO:Initializing predict_model()
2020-10-30 15:10:14,341:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:14,341:INFO:Checking exceptions
2020-10-30 15:10:14,341:INFO:Preloading libraries
2020-10-30 15:10:14,341:INFO:Preparing display monitor
2020-10-30 15:10:14,578:INFO:Initializing predict_model()
2020-10-30 15:10:14,578:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:14,579:INFO:Checking exceptions
2020-10-30 15:10:14,579:INFO:Preloading libraries
2020-10-30 15:10:14,579:INFO:Preparing display monitor
2020-10-30 15:10:14,838:INFO:Initializing predict_model()
2020-10-30 15:10:14,838:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:14,838:INFO:Checking exceptions
2020-10-30 15:10:14,838:INFO:Preloading libraries
2020-10-30 15:10:14,839:INFO:Preparing display monitor
2020-10-30 15:10:15,083:INFO:Initializing predict_model()
2020-10-30 15:10:15,083:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:15,083:INFO:Checking exceptions
2020-10-30 15:10:15,083:INFO:Preloading libraries
2020-10-30 15:10:15,083:INFO:Preparing display monitor
2020-10-30 15:10:15,321:INFO:Initializing predict_model()
2020-10-30 15:10:15,321:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:15,321:INFO:Checking exceptions
2020-10-30 15:10:15,321:INFO:Preloading libraries
2020-10-30 15:10:15,321:INFO:Preparing display monitor
2020-10-30 15:10:15,582:INFO:Initializing predict_model()
2020-10-30 15:10:15,582:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:15,582:INFO:Checking exceptions
2020-10-30 15:10:15,582:INFO:Preloading libraries
2020-10-30 15:10:15,583:INFO:Preparing display monitor
2020-10-30 15:10:15,837:INFO:Initializing predict_model()
2020-10-30 15:10:15,837:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:15,837:INFO:Checking exceptions
2020-10-30 15:10:15,837:INFO:Preloading libraries
2020-10-30 15:10:15,837:INFO:Preparing display monitor
2020-10-30 15:10:16,091:INFO:Initializing predict_model()
2020-10-30 15:10:16,092:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.73, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:16,092:INFO:Checking exceptions
2020-10-30 15:10:16,092:INFO:Preloading libraries
2020-10-30 15:10:16,092:INFO:Preparing display monitor
2020-10-30 15:10:24,344:INFO:Initializing predict_model()
2020-10-30 15:10:24,346:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:24,346:INFO:Checking exceptions
2020-10-30 15:10:24,346:INFO:Preloading libraries
2020-10-30 15:10:24,347:INFO:Preparing display monitor
2020-10-30 15:10:24,995:INFO:Initializing predict_model()
2020-10-30 15:10:24,995:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:24,995:INFO:Checking exceptions
2020-10-30 15:10:24,995:INFO:Preloading libraries
2020-10-30 15:10:24,995:INFO:Preparing display monitor
2020-10-30 15:10:25,268:INFO:Initializing predict_model()
2020-10-30 15:10:25,268:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:25,268:INFO:Checking exceptions
2020-10-30 15:10:25,268:INFO:Preloading libraries
2020-10-30 15:10:25,268:INFO:Preparing display monitor
2020-10-30 15:10:25,551:INFO:Initializing predict_model()
2020-10-30 15:10:25,551:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:25,552:INFO:Checking exceptions
2020-10-30 15:10:25,552:INFO:Preloading libraries
2020-10-30 15:10:25,552:INFO:Preparing display monitor
2020-10-30 15:10:25,802:INFO:Initializing predict_model()
2020-10-30 15:10:25,803:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:25,803:INFO:Checking exceptions
2020-10-30 15:10:25,803:INFO:Preloading libraries
2020-10-30 15:10:25,803:INFO:Preparing display monitor
2020-10-30 15:10:26,047:INFO:Initializing predict_model()
2020-10-30 15:10:26,047:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:26,047:INFO:Checking exceptions
2020-10-30 15:10:26,047:INFO:Preloading libraries
2020-10-30 15:10:26,047:INFO:Preparing display monitor
2020-10-30 15:10:26,317:INFO:Initializing predict_model()
2020-10-30 15:10:26,317:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:26,317:INFO:Checking exceptions
2020-10-30 15:10:26,317:INFO:Preloading libraries
2020-10-30 15:10:26,317:INFO:Preparing display monitor
2020-10-30 15:10:26,568:INFO:Initializing predict_model()
2020-10-30 15:10:26,568:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:26,568:INFO:Checking exceptions
2020-10-30 15:10:26,568:INFO:Preloading libraries
2020-10-30 15:10:26,568:INFO:Preparing display monitor
2020-10-30 15:10:26,818:INFO:Initializing predict_model()
2020-10-30 15:10:26,818:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:26,818:INFO:Checking exceptions
2020-10-30 15:10:26,818:INFO:Preloading libraries
2020-10-30 15:10:26,818:INFO:Preparing display monitor
2020-10-30 15:10:27,144:INFO:Initializing predict_model()
2020-10-30 15:10:27,144:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:27,144:INFO:Checking exceptions
2020-10-30 15:10:27,145:INFO:Preloading libraries
2020-10-30 15:10:27,145:INFO:Preparing display monitor
2020-10-30 15:10:27,421:INFO:Initializing predict_model()
2020-10-30 15:10:27,421:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:27,421:INFO:Checking exceptions
2020-10-30 15:10:27,421:INFO:Preloading libraries
2020-10-30 15:10:27,421:INFO:Preparing display monitor
2020-10-30 15:17:30,849:INFO:Initializing finalize_model()
2020-10-30 15:17:30,851:INFO:finalize_model(estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], fit_kwargs=None, groups=None, model_only=True, display=None)
2020-10-30 15:17:30,858:INFO:Finalizing          Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns]
2020-10-30 15:17:30,866:INFO:Initializing create_model()
2020-10-30 15:17:30,866:INFO:create_model(estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 15:17:30,866:INFO:Checking exceptions
2020-10-30 15:32:44,517:INFO:Initializing blend_models()
2020-10-30 15:32:44,521:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.7494160699261587, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.47889391701936085, max_delta_step=0, max_depth=3,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=136, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0883671130992619, reg_lambda=1.5358311806517544e-06,
              scale_pos_weight=13.097867660543319, subsample=0.9953855689970712,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.47879757779339027,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=9.690908269849155e-06,
                       min_impurity_split=None, min_samples_leaf=4,
                       min_samples_split=3, min_weight_fraction_leaf=0.0,
                       n_estimators=256, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), LGBMClassifier(bagging_fraction=0.5787165975935351, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8436335283710661, importance_type='split',
               learning_rate=0.0035480791943212496, max_depth=-1,
               min_child_samples=59, min_child_weight=0.001,
               min_data_in_leaf=3688, min_split_gain=0.13169036589200145,
               n_estimators=24, n_jobs=-1, num_leaves=95, objective=None,
               random_state=786, reg_alpha=4.636102684324233e-06,
               reg_lambda=4.12327365672731e-09, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-10-30 15:32:44,521:INFO:Checking exceptions
2020-10-30 15:32:44,574:INFO:Preparing display monitor
2020-10-30 15:32:44,685:INFO:Importing libraries
2020-10-30 15:32:44,689:INFO:Copying training dataset
2020-10-30 15:32:44,712:INFO:Getting model names
2020-10-30 15:32:44,738:INFO:SubProcess create_model() called ==================================
2020-10-30 15:32:44,773:INFO:Initializing create_model()
2020-10-30 15:32:44,773:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05e70c0a0>, kwargs={})
2020-10-30 15:32:44,774:INFO:Checking exceptions
2020-10-30 15:32:44,775:INFO:Importing libraries
2020-10-30 15:32:44,775:INFO:Copying training dataset
2020-10-30 15:32:44,777:INFO:Defining folds
2020-10-30 15:32:44,778:INFO:Declaring metric variables
2020-10-30 15:32:44,785:INFO:Importing untrained model
2020-10-30 15:32:44,786:INFO:Declaring custom model
2020-10-30 15:32:44,828:INFO:Voting Classifier Imported succesfully
2020-10-30 15:32:44,857:INFO:Starting cross validation
2020-10-30 15:32:44,867:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
