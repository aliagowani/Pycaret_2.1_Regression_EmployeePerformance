2020-10-30 11:19:57,272:INFO:PyCaret Supervised Module
2020-10-30 11:19:57,272:INFO:ML Usecase: classification
2020-10-30 11:19:57,273:INFO:version 2.2
2020-10-30 11:19:57,273:INFO:Initializing setup()
2020-10-30 11:19:57,273:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-30 11:19:57,273:INFO:Checking environment
2020-10-30 11:19:57,273:INFO:python_version: 3.8.3
2020-10-30 11:19:57,273:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-30 11:19:57,273:INFO:machine: x86_64
2020-10-30 11:19:57,291:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-30 11:19:57,292:INFO:Memory: svmem(total=8589934592, available=2120802304, percent=75.3, used=4236324864, free=19116032, active=2104971264, inactive=2048434176, wired=2131353600)
2020-10-30 11:19:57,292:INFO:Physical Core: 4
2020-10-30 11:19:57,292:INFO:Logical Core: 8
2020-10-30 11:19:57,292:INFO:Checking libraries
2020-10-30 11:19:57,292:INFO:pd==1.0.5
2020-10-30 11:19:57,292:INFO:numpy==1.18.5
2020-10-30 11:19:57,292:INFO:sklearn==0.23.2
2020-10-30 11:19:57,863:INFO:xgboost==1.2.0
2020-10-30 11:19:57,864:INFO:lightgbm==2.3.1
2020-10-30 11:19:57,920:INFO:catboost==0.24.1
2020-10-30 11:19:58,709:INFO:mlflow==1.11.0
2020-10-30 11:19:58,709:INFO:Checking Exceptions
2020-10-30 11:19:58,710:INFO:Declaring global variables
2020-10-30 11:19:58,710:INFO:USI: 59a2
2020-10-30 11:19:58,710:INFO:pycaret_globals: {'iterative_imputation_iters_param', 'gpu_param', '_ml_usecase', 'create_model_container', 'fix_imbalance_method_param', 'y_test', '_all_models', 'html_param', '_gpu_n_jobs_param', 'fold_groups_param', 'experiment__', 'y', '_all_metrics', '_internal_pipeline', 'n_jobs_param', 'transform_target_method_param', 'exp_name_log', 'fold_shuffle_param', 'prep_pipe', 'data_before_preprocess', '_all_models_internal', 'transform_target_param', 'imputation_regressor', 'master_model_container', 'log_plots_param', 'logging_param', 'USI', 'stratify_param', 'imputation_classifier', 'X_train', 'display_container', 'fold_param', 'target_param', 'X_test', 'y_train', 'X', 'seed', 'fold_generator', 'fix_imbalance_param', 'pycaret_globals'}
2020-10-30 11:19:58,710:INFO:Preparing display monitor
2020-10-30 11:19:58,710:INFO:Preparing display monitor
2020-10-30 11:19:58,729:INFO:Importing libraries
2020-10-30 11:19:58,729:INFO:Copying data for preprocessing
2020-10-30 11:19:58,739:INFO:Declaring preprocessing parameters
2020-10-30 11:19:58,741:INFO:Setting up iterative imputation
2020-10-30 11:19:59,112:INFO:Creating preprocessing pipeline
2020-10-30 11:19:59,131:INFO:Preprocessing pipeline created successfully
2020-10-30 11:19:59,131:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-30 11:19:59,132:INFO:Creating global containers
2020-10-30 11:19:59,133:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-30 11:19:59,266:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:20:00,314:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:20:00,592:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:20:00,883:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:20:00,943:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:20:01,186:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:20:01,323:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:20:01,374:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:20:01,506:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:20:01,533:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:20:01,570:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:20:01,718:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:20:01,772:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:20:01,822:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:20:01,883:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:20:01,924:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:20:01,972:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:20:02,013:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:20:02,089:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:20:02,123:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:20:02,161:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:20:02,194:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:20:02,271:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:20:02,320:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:20:02,368:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:20:02,413:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:20:02,490:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:20:02,524:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:20:02,585:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:20:02,648:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:20:02,740:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:20:02,778:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:20:02,836:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:20:02,938:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:20:02,974:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:20:03,017:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:20:03,046:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:20:03,078:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:20:03,161:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:20:03,188:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:20:03,275:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:20:03,390:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:20:03,444:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:20:03,590:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:20:03,640:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:20:03,774:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:20:03,978:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:20:04,196:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:20:04,285:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:20:04,462:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:20:07,370:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:20:07,378:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:20:07,385:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:20:07,396:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:20:07,405:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:20:07,414:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:20:07,421:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:20:07,429:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:20:07,437:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:20:07,449:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:20:07,458:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:20:07,466:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:20:07,473:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:20:07,482:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:20:07,490:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:20:07,499:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:20:07,506:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:20:07,513:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:20:07,521:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:20:07,528:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:20:07,536:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:20:07,544:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:20:07,552:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:20:07,559:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:20:07,565:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:20:07,573:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:20:07,580:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:20:07,590:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:20:07,599:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:20:07,608:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:20:07,615:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:20:07,623:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:20:07,631:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:20:07,640:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:20:07,648:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:20:07,657:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:20:07,665:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:20:07,673:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:20:07,681:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:20:07,689:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:20:07,697:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:20:07,706:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:20:07,714:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:20:07,721:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:20:07,728:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:20:07,735:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:20:07,743:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:20:07,751:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:20:07,757:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:20:07,765:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:20:07,839:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:20:07,847:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:20:07,855:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:20:07,863:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:20:07,871:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:20:07,879:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:20:07,895:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:20:07,906:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:20:07,916:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:20:07,923:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:20:07,931:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:20:07,939:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:20:07,947:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:20:07,954:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:20:07,962:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:20:07,970:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:20:07,977:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:20:07,986:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:20:07,997:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:20:08,006:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:20:08,015:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:20:08,023:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:20:08,031:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:20:08,039:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:20:08,051:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:20:08,058:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:20:08,065:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:20:08,072:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:20:08,079:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:20:08,087:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:20:08,097:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:20:08,104:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:20:08,111:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:20:08,118:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:20:08,125:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:20:08,132:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:20:08,139:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:20:08,147:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:20:08,155:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:20:08,161:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:20:08,168:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:20:08,175:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:20:08,182:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:20:08,190:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:20:08,200:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:20:08,207:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:20:08,215:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:20:08,222:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:20:08,229:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:20:08,237:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:20:08,519:INFO:Creating grid variables
2020-10-30 11:20:08,560:INFO:create_model_container: 0
2020-10-30 11:20:08,560:INFO:master_model_container: 0
2020-10-30 11:20:08,560:INFO:display_container: 0
2020-10-30 11:20:08,573:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-30 11:20:08,573:INFO:setup() succesfully completed......................................
2020-10-30 11:20:20,120:INFO:Initializing get_config()
2020-10-30 11:20:20,120:INFO:get_config(variable=X_train)
2020-10-30 11:20:20,124:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Friday_multiply_Sunday  Sunday_multiply_Friday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-10-30 11:20:20,124:INFO:get_config() succesfully completed......................................
2020-10-30 11:20:25,292:INFO:Initializing compare_models()
2020-10-30 11:20:25,292:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-30 11:20:25,292:INFO:Checking exceptions
2020-10-30 11:20:25,294:INFO:Preparing display monitor
2020-10-30 11:20:25,294:INFO:Preparing display monitor
2020-10-30 11:20:25,320:INFO:Initializing Logistic Regression
2020-10-30 11:20:25,320:INFO:Total runtime is 2.3523966471354168e-06 minutes
2020-10-30 11:20:25,329:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:25,330:INFO:Initializing create_model()
2020-10-30 11:20:25,330:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:25,330:INFO:Checking exceptions
2020-10-30 11:20:25,330:INFO:Importing libraries
2020-10-30 11:20:25,331:INFO:Copying training dataset
2020-10-30 11:20:25,332:INFO:Defining folds
2020-10-30 11:20:25,332:INFO:Declaring metric variables
2020-10-30 11:20:25,339:INFO:Importing untrained model
2020-10-30 11:20:25,345:INFO:Logistic Regression Imported succesfully
2020-10-30 11:20:25,358:INFO:Starting cross validation
2020-10-30 11:20:25,358:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:30,518:INFO:Calculating mean and std
2020-10-30 11:20:30,526:INFO:Creating metrics dataframe
2020-10-30 11:20:30,541:INFO:Uploading results into container
2020-10-30 11:20:30,541:INFO:Uploading model into container now
2020-10-30 11:20:30,542:INFO:create_model_container: 1
2020-10-30 11:20:30,542:INFO:master_model_container: 1
2020-10-30 11:20:30,543:INFO:display_container: 1
2020-10-30 11:20:30,545:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-10-30 11:20:30,545:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:30,701:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:30,701:INFO:Creating metrics dataframe
2020-10-30 11:20:30,714:INFO:Initializing K Neighbors Classifier
2020-10-30 11:20:30,714:INFO:Total runtime is 0.08989296754201252 minutes
2020-10-30 11:20:30,724:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:30,724:INFO:Initializing create_model()
2020-10-30 11:20:30,724:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:30,725:INFO:Checking exceptions
2020-10-30 11:20:30,725:INFO:Importing libraries
2020-10-30 11:20:30,725:INFO:Copying training dataset
2020-10-30 11:20:30,726:INFO:Defining folds
2020-10-30 11:20:30,726:INFO:Declaring metric variables
2020-10-30 11:20:30,733:INFO:Importing untrained model
2020-10-30 11:20:30,741:INFO:K Neighbors Classifier Imported succesfully
2020-10-30 11:20:30,768:INFO:Starting cross validation
2020-10-30 11:20:30,769:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:31,103:INFO:Calculating mean and std
2020-10-30 11:20:31,104:INFO:Creating metrics dataframe
2020-10-30 11:20:31,112:INFO:Uploading results into container
2020-10-30 11:20:31,112:INFO:Uploading model into container now
2020-10-30 11:20:31,112:INFO:create_model_container: 2
2020-10-30 11:20:31,112:INFO:master_model_container: 2
2020-10-30 11:20:31,112:INFO:display_container: 1
2020-10-30 11:20:31,113:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-10-30 11:20:31,113:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:31,279:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:31,279:INFO:Creating metrics dataframe
2020-10-30 11:20:31,326:INFO:Initializing Naive Bayes
2020-10-30 11:20:31,326:INFO:Total runtime is 0.10009668270746866 minutes
2020-10-30 11:20:31,336:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:31,336:INFO:Initializing create_model()
2020-10-30 11:20:31,336:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:31,337:INFO:Checking exceptions
2020-10-30 11:20:31,337:INFO:Importing libraries
2020-10-30 11:20:31,337:INFO:Copying training dataset
2020-10-30 11:20:31,338:INFO:Defining folds
2020-10-30 11:20:31,339:INFO:Declaring metric variables
2020-10-30 11:20:31,356:INFO:Importing untrained model
2020-10-30 11:20:31,364:INFO:Naive Bayes Imported succesfully
2020-10-30 11:20:31,384:INFO:Starting cross validation
2020-10-30 11:20:31,384:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:31,455:INFO:Calculating mean and std
2020-10-30 11:20:31,457:INFO:Creating metrics dataframe
2020-10-30 11:20:31,466:INFO:Uploading results into container
2020-10-30 11:20:31,466:INFO:Uploading model into container now
2020-10-30 11:20:31,466:INFO:create_model_container: 3
2020-10-30 11:20:31,467:INFO:master_model_container: 3
2020-10-30 11:20:31,467:INFO:display_container: 1
2020-10-30 11:20:31,467:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-10-30 11:20:31,467:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:31,607:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:31,607:INFO:Creating metrics dataframe
2020-10-30 11:20:31,768:INFO:Initializing Decision Tree Classifier
2020-10-30 11:20:31,769:INFO:Total runtime is 0.10748578707377116 minutes
2020-10-30 11:20:31,784:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:31,784:INFO:Initializing create_model()
2020-10-30 11:20:31,785:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:31,785:INFO:Checking exceptions
2020-10-30 11:20:31,785:INFO:Importing libraries
2020-10-30 11:20:31,785:INFO:Copying training dataset
2020-10-30 11:20:31,789:INFO:Defining folds
2020-10-30 11:20:31,789:INFO:Declaring metric variables
2020-10-30 11:20:31,812:INFO:Importing untrained model
2020-10-30 11:20:31,825:INFO:Decision Tree Classifier Imported succesfully
2020-10-30 11:20:31,845:INFO:Starting cross validation
2020-10-30 11:20:31,845:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:31,931:INFO:Calculating mean and std
2020-10-30 11:20:31,933:INFO:Creating metrics dataframe
2020-10-30 11:20:31,946:INFO:Uploading results into container
2020-10-30 11:20:31,946:INFO:Uploading model into container now
2020-10-30 11:20:31,947:INFO:create_model_container: 4
2020-10-30 11:20:31,947:INFO:master_model_container: 4
2020-10-30 11:20:31,947:INFO:display_container: 1
2020-10-30 11:20:31,947:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-10-30 11:20:31,947:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:32,112:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:32,112:INFO:Creating metrics dataframe
2020-10-30 11:20:32,156:INFO:Initializing SVM - Linear Kernel
2020-10-30 11:20:32,156:INFO:Total runtime is 0.11392846504847208 minutes
2020-10-30 11:20:32,167:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:32,167:INFO:Initializing create_model()
2020-10-30 11:20:32,167:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:32,168:INFO:Checking exceptions
2020-10-30 11:20:32,168:INFO:Importing libraries
2020-10-30 11:20:32,168:INFO:Copying training dataset
2020-10-30 11:20:32,169:INFO:Defining folds
2020-10-30 11:20:32,170:INFO:Declaring metric variables
2020-10-30 11:20:32,177:INFO:Importing untrained model
2020-10-30 11:20:32,185:INFO:SVM - Linear Kernel Imported succesfully
2020-10-30 11:20:32,203:INFO:Starting cross validation
2020-10-30 11:20:32,203:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:32,260:INFO:Calculating mean and std
2020-10-30 11:20:32,262:INFO:Creating metrics dataframe
2020-10-30 11:20:32,269:INFO:Uploading results into container
2020-10-30 11:20:32,269:INFO:Uploading model into container now
2020-10-30 11:20:32,269:INFO:create_model_container: 5
2020-10-30 11:20:32,269:INFO:master_model_container: 5
2020-10-30 11:20:32,269:INFO:display_container: 1
2020-10-30 11:20:32,270:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-30 11:20:32,270:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:32,377:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:32,377:INFO:Creating metrics dataframe
2020-10-30 11:20:32,414:INFO:Initializing Ridge Classifier
2020-10-30 11:20:32,414:INFO:Total runtime is 0.11823096672693888 minutes
2020-10-30 11:20:32,425:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:32,425:INFO:Initializing create_model()
2020-10-30 11:20:32,425:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:32,426:INFO:Checking exceptions
2020-10-30 11:20:32,426:INFO:Importing libraries
2020-10-30 11:20:32,426:INFO:Copying training dataset
2020-10-30 11:20:32,428:INFO:Defining folds
2020-10-30 11:20:32,429:INFO:Declaring metric variables
2020-10-30 11:20:32,440:INFO:Importing untrained model
2020-10-30 11:20:32,449:INFO:Ridge Classifier Imported succesfully
2020-10-30 11:20:32,468:INFO:Starting cross validation
2020-10-30 11:20:32,469:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:32,581:INFO:Calculating mean and std
2020-10-30 11:20:32,582:INFO:Creating metrics dataframe
2020-10-30 11:20:32,589:INFO:Uploading results into container
2020-10-30 11:20:32,589:INFO:Uploading model into container now
2020-10-30 11:20:32,589:INFO:create_model_container: 6
2020-10-30 11:20:32,589:INFO:master_model_container: 6
2020-10-30 11:20:32,589:INFO:display_container: 1
2020-10-30 11:20:32,590:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-10-30 11:20:32,590:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:32,692:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:32,693:INFO:Creating metrics dataframe
2020-10-30 11:20:32,744:INFO:Initializing Random Forest Classifier
2020-10-30 11:20:32,744:INFO:Total runtime is 0.1237297495206197 minutes
2020-10-30 11:20:32,758:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:32,759:INFO:Initializing create_model()
2020-10-30 11:20:32,759:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:32,759:INFO:Checking exceptions
2020-10-30 11:20:32,759:INFO:Importing libraries
2020-10-30 11:20:32,759:INFO:Copying training dataset
2020-10-30 11:20:32,761:INFO:Defining folds
2020-10-30 11:20:32,761:INFO:Declaring metric variables
2020-10-30 11:20:32,780:INFO:Importing untrained model
2020-10-30 11:20:32,792:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:20:32,813:INFO:Starting cross validation
2020-10-30 11:20:32,814:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:33,862:INFO:Calculating mean and std
2020-10-30 11:20:33,863:INFO:Creating metrics dataframe
2020-10-30 11:20:33,867:INFO:Uploading results into container
2020-10-30 11:20:33,867:INFO:Uploading model into container now
2020-10-30 11:20:33,867:INFO:create_model_container: 7
2020-10-30 11:20:33,867:INFO:master_model_container: 7
2020-10-30 11:20:33,868:INFO:display_container: 1
2020-10-30 11:20:33,868:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-10-30 11:20:33,868:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:33,946:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:33,946:INFO:Creating metrics dataframe
2020-10-30 11:20:33,998:INFO:Initializing Quadratic Discriminant Analysis
2020-10-30 11:20:33,999:INFO:Total runtime is 0.14464136759440102 minutes
2020-10-30 11:20:34,027:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:34,028:INFO:Initializing create_model()
2020-10-30 11:20:34,028:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:34,029:INFO:Checking exceptions
2020-10-30 11:20:34,029:INFO:Importing libraries
2020-10-30 11:20:34,029:INFO:Copying training dataset
2020-10-30 11:20:34,031:INFO:Defining folds
2020-10-30 11:20:34,031:INFO:Declaring metric variables
2020-10-30 11:20:34,041:INFO:Importing untrained model
2020-10-30 11:20:34,051:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-10-30 11:20:34,073:INFO:Starting cross validation
2020-10-30 11:20:34,074:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:34,195:INFO:Calculating mean and std
2020-10-30 11:20:34,196:INFO:Creating metrics dataframe
2020-10-30 11:20:34,203:INFO:Uploading results into container
2020-10-30 11:20:34,204:INFO:Uploading model into container now
2020-10-30 11:20:34,204:INFO:create_model_container: 8
2020-10-30 11:20:34,204:INFO:master_model_container: 8
2020-10-30 11:20:34,204:INFO:display_container: 1
2020-10-30 11:20:34,205:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-10-30 11:20:34,205:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:34,296:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:34,296:INFO:Creating metrics dataframe
2020-10-30 11:20:34,369:INFO:Initializing Ada Boost Classifier
2020-10-30 11:20:34,370:INFO:Total runtime is 0.15082451502482094 minutes
2020-10-30 11:20:34,379:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:34,380:INFO:Initializing create_model()
2020-10-30 11:20:34,380:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:34,380:INFO:Checking exceptions
2020-10-30 11:20:34,381:INFO:Importing libraries
2020-10-30 11:20:34,381:INFO:Copying training dataset
2020-10-30 11:20:34,383:INFO:Defining folds
2020-10-30 11:20:34,383:INFO:Declaring metric variables
2020-10-30 11:20:34,393:INFO:Importing untrained model
2020-10-30 11:20:34,405:INFO:Ada Boost Classifier Imported succesfully
2020-10-30 11:20:34,420:INFO:Starting cross validation
2020-10-30 11:20:34,421:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:34,870:INFO:Calculating mean and std
2020-10-30 11:20:34,871:INFO:Creating metrics dataframe
2020-10-30 11:20:34,875:INFO:Uploading results into container
2020-10-30 11:20:34,876:INFO:Uploading model into container now
2020-10-30 11:20:34,876:INFO:create_model_container: 9
2020-10-30 11:20:34,876:INFO:master_model_container: 9
2020-10-30 11:20:34,876:INFO:display_container: 1
2020-10-30 11:20:34,876:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-10-30 11:20:34,876:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:34,948:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:34,949:INFO:Creating metrics dataframe
2020-10-30 11:20:34,984:INFO:Initializing Gradient Boosting Classifier
2020-10-30 11:20:34,984:INFO:Total runtime is 0.16106283664703366 minutes
2020-10-30 11:20:34,992:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:34,993:INFO:Initializing create_model()
2020-10-30 11:20:34,993:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:34,993:INFO:Checking exceptions
2020-10-30 11:20:34,993:INFO:Importing libraries
2020-10-30 11:20:34,993:INFO:Copying training dataset
2020-10-30 11:20:34,995:INFO:Defining folds
2020-10-30 11:20:34,995:INFO:Declaring metric variables
2020-10-30 11:20:35,003:INFO:Importing untrained model
2020-10-30 11:20:35,010:INFO:Gradient Boosting Classifier Imported succesfully
2020-10-30 11:20:35,026:INFO:Starting cross validation
2020-10-30 11:20:35,027:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:35,480:INFO:Calculating mean and std
2020-10-30 11:20:35,481:INFO:Creating metrics dataframe
2020-10-30 11:20:35,485:INFO:Uploading results into container
2020-10-30 11:20:35,485:INFO:Uploading model into container now
2020-10-30 11:20:35,486:INFO:create_model_container: 10
2020-10-30 11:20:35,486:INFO:master_model_container: 10
2020-10-30 11:20:35,486:INFO:display_container: 1
2020-10-30 11:20:35,487:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-30 11:20:35,487:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:35,570:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:35,570:INFO:Creating metrics dataframe
2020-10-30 11:20:35,611:INFO:Initializing Linear Discriminant Analysis
2020-10-30 11:20:35,611:INFO:Total runtime is 0.17151924769083657 minutes
2020-10-30 11:20:35,622:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:35,622:INFO:Initializing create_model()
2020-10-30 11:20:35,622:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:35,622:INFO:Checking exceptions
2020-10-30 11:20:35,623:INFO:Importing libraries
2020-10-30 11:20:35,623:INFO:Copying training dataset
2020-10-30 11:20:35,624:INFO:Defining folds
2020-10-30 11:20:35,624:INFO:Declaring metric variables
2020-10-30 11:20:35,631:INFO:Importing untrained model
2020-10-30 11:20:35,641:INFO:Linear Discriminant Analysis Imported succesfully
2020-10-30 11:20:35,661:INFO:Starting cross validation
2020-10-30 11:20:35,661:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:35,733:INFO:Calculating mean and std
2020-10-30 11:20:35,734:INFO:Creating metrics dataframe
2020-10-30 11:20:35,742:INFO:Uploading results into container
2020-10-30 11:20:35,742:INFO:Uploading model into container now
2020-10-30 11:20:35,743:INFO:create_model_container: 11
2020-10-30 11:20:35,743:INFO:master_model_container: 11
2020-10-30 11:20:35,743:INFO:display_container: 1
2020-10-30 11:20:35,743:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-10-30 11:20:35,744:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:35,833:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:35,833:INFO:Creating metrics dataframe
2020-10-30 11:20:35,879:INFO:Initializing Extra Trees Classifier
2020-10-30 11:20:35,879:INFO:Total runtime is 0.17598431507746376 minutes
2020-10-30 11:20:35,890:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:35,891:INFO:Initializing create_model()
2020-10-30 11:20:35,891:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:35,891:INFO:Checking exceptions
2020-10-30 11:20:35,892:INFO:Importing libraries
2020-10-30 11:20:35,892:INFO:Copying training dataset
2020-10-30 11:20:35,894:INFO:Defining folds
2020-10-30 11:20:35,894:INFO:Declaring metric variables
2020-10-30 11:20:35,901:INFO:Importing untrained model
2020-10-30 11:20:35,909:INFO:Extra Trees Classifier Imported succesfully
2020-10-30 11:20:35,924:INFO:Starting cross validation
2020-10-30 11:20:35,925:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:36,865:INFO:Calculating mean and std
2020-10-30 11:20:36,866:INFO:Creating metrics dataframe
2020-10-30 11:20:36,870:INFO:Uploading results into container
2020-10-30 11:20:36,870:INFO:Uploading model into container now
2020-10-30 11:20:36,871:INFO:create_model_container: 12
2020-10-30 11:20:36,871:INFO:master_model_container: 12
2020-10-30 11:20:36,871:INFO:display_container: 1
2020-10-30 11:20:36,871:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-10-30 11:20:36,871:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:36,941:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:36,941:INFO:Creating metrics dataframe
2020-10-30 11:20:36,985:INFO:Initializing Extreme Gradient Boosting
2020-10-30 11:20:36,985:INFO:Total runtime is 0.19442211786905922 minutes
2020-10-30 11:20:36,993:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:36,993:INFO:Initializing create_model()
2020-10-30 11:20:36,993:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:36,993:INFO:Checking exceptions
2020-10-30 11:20:36,994:INFO:Importing libraries
2020-10-30 11:20:36,994:INFO:Copying training dataset
2020-10-30 11:20:36,995:INFO:Defining folds
2020-10-30 11:20:36,995:INFO:Declaring metric variables
2020-10-30 11:20:37,005:INFO:Importing untrained model
2020-10-30 11:20:37,014:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:20:37,031:INFO:Starting cross validation
2020-10-30 11:20:37,032:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:39,061:INFO:Calculating mean and std
2020-10-30 11:20:39,062:INFO:Creating metrics dataframe
2020-10-30 11:20:39,067:INFO:Uploading results into container
2020-10-30 11:20:39,067:INFO:Uploading model into container now
2020-10-30 11:20:39,067:INFO:create_model_container: 13
2020-10-30 11:20:39,067:INFO:master_model_container: 13
2020-10-30 11:20:39,067:INFO:display_container: 1
2020-10-30 11:20:39,068:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-10-30 11:20:39,068:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:39,138:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:39,138:INFO:Creating metrics dataframe
2020-10-30 11:20:39,185:INFO:Initializing Light Gradient Boosting Machine
2020-10-30 11:20:39,185:INFO:Total runtime is 0.23108708461125688 minutes
2020-10-30 11:20:39,195:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:39,195:INFO:Initializing create_model()
2020-10-30 11:20:39,195:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:39,195:INFO:Checking exceptions
2020-10-30 11:20:39,195:INFO:Importing libraries
2020-10-30 11:20:39,196:INFO:Copying training dataset
2020-10-30 11:20:39,197:INFO:Defining folds
2020-10-30 11:20:39,197:INFO:Declaring metric variables
2020-10-30 11:20:39,204:INFO:Importing untrained model
2020-10-30 11:20:39,211:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:20:39,227:INFO:Starting cross validation
2020-10-30 11:20:39,227:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:39,463:INFO:Calculating mean and std
2020-10-30 11:20:39,465:INFO:Creating metrics dataframe
2020-10-30 11:20:39,472:INFO:Uploading results into container
2020-10-30 11:20:39,472:INFO:Uploading model into container now
2020-10-30 11:20:39,472:INFO:create_model_container: 14
2020-10-30 11:20:39,472:INFO:master_model_container: 14
2020-10-30 11:20:39,473:INFO:display_container: 1
2020-10-30 11:20:39,473:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:20:39,473:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:39,584:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:39,584:INFO:Creating metrics dataframe
2020-10-30 11:20:39,656:INFO:Initializing CatBoost Classifier
2020-10-30 11:20:39,656:INFO:Total runtime is 0.2389291683832804 minutes
2020-10-30 11:20:39,665:INFO:SubProcess create_model() called ==================================
2020-10-30 11:20:39,666:INFO:Initializing create_model()
2020-10-30 11:20:39,666:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34a0eb280>, kwargs={})
2020-10-30 11:20:39,666:INFO:Checking exceptions
2020-10-30 11:20:39,666:INFO:Importing libraries
2020-10-30 11:20:39,666:INFO:Copying training dataset
2020-10-30 11:20:39,667:INFO:Defining folds
2020-10-30 11:20:39,667:INFO:Declaring metric variables
2020-10-30 11:20:39,681:INFO:Importing untrained model
2020-10-30 11:20:39,690:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:20:39,713:INFO:Starting cross validation
2020-10-30 11:20:39,717:INFO:Cross validating with n_jobs=-1
2020-10-30 11:20:58,539:INFO:Calculating mean and std
2020-10-30 11:20:58,547:INFO:Creating metrics dataframe
2020-10-30 11:20:58,559:INFO:Uploading results into container
2020-10-30 11:20:58,559:INFO:Uploading model into container now
2020-10-30 11:20:58,560:INFO:create_model_container: 15
2020-10-30 11:20:58,560:INFO:master_model_container: 15
2020-10-30 11:20:58,561:INFO:display_container: 1
2020-10-30 11:20:58,561:INFO:<catboost.core.CatBoostClassifier object at 0x7ff34fd41df0>
2020-10-30 11:20:58,561:INFO:create_model() succesfully completed......................................
2020-10-30 11:20:58,689:INFO:SubProcess create_model() end ==================================
2020-10-30 11:20:58,690:INFO:Creating metrics dataframe
2020-10-30 11:20:58,772:INFO:Initializing create_model()
2020-10-30 11:20:58,772:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:20:58,772:INFO:Checking exceptions
2020-10-30 11:20:58,772:INFO:Importing libraries
2020-10-30 11:20:58,772:INFO:Copying training dataset
2020-10-30 11:20:58,773:INFO:Defining folds
2020-10-30 11:20:58,774:INFO:Declaring metric variables
2020-10-30 11:20:58,774:INFO:Importing untrained model
2020-10-30 11:20:58,774:INFO:Declaring custom model
2020-10-30 11:20:58,775:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:20:58,777:INFO:Cross validation set to False
2020-10-30 11:20:58,777:INFO:Fitting Model
2020-10-30 11:20:58,988:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-10-30 11:20:58,988:INFO:create_models() succesfully completed......................................
2020-10-30 11:20:59,133:INFO:Initializing create_model()
2020-10-30 11:20:59,133:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:20:59,133:INFO:Checking exceptions
2020-10-30 11:20:59,133:INFO:Importing libraries
2020-10-30 11:20:59,134:INFO:Copying training dataset
2020-10-30 11:20:59,134:INFO:Defining folds
2020-10-30 11:20:59,134:INFO:Declaring metric variables
2020-10-30 11:20:59,135:INFO:Importing untrained model
2020-10-30 11:20:59,135:INFO:Declaring custom model
2020-10-30 11:20:59,135:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:20:59,136:INFO:Cross validation set to False
2020-10-30 11:20:59,136:INFO:Fitting Model
2020-10-30 11:20:59,468:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-10-30 11:20:59,468:INFO:create_models() succesfully completed......................................
2020-10-30 11:20:59,588:INFO:Initializing create_model()
2020-10-30 11:20:59,588:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:20:59,588:INFO:Checking exceptions
2020-10-30 11:20:59,589:INFO:Importing libraries
2020-10-30 11:20:59,589:INFO:Copying training dataset
2020-10-30 11:20:59,589:INFO:Defining folds
2020-10-30 11:20:59,589:INFO:Declaring metric variables
2020-10-30 11:20:59,589:INFO:Importing untrained model
2020-10-30 11:20:59,590:INFO:Declaring custom model
2020-10-30 11:20:59,590:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:20:59,590:INFO:Cross validation set to False
2020-10-30 11:20:59,591:INFO:Fitting Model
2020-10-30 11:20:59,619:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:20:59,620:INFO:create_models() succesfully completed......................................
2020-10-30 11:20:59,715:INFO:Initializing create_model()
2020-10-30 11:20:59,715:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7ff34fd41df0>, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:20:59,715:INFO:Checking exceptions
2020-10-30 11:20:59,715:INFO:Importing libraries
2020-10-30 11:20:59,716:INFO:Copying training dataset
2020-10-30 11:20:59,716:INFO:Defining folds
2020-10-30 11:20:59,716:INFO:Declaring metric variables
2020-10-30 11:20:59,716:INFO:Importing untrained model
2020-10-30 11:20:59,716:INFO:Declaring custom model
2020-10-30 11:20:59,717:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:20:59,717:INFO:Cross validation set to False
2020-10-30 11:20:59,717:INFO:Fitting Model
2020-10-30 11:21:01,489:INFO:<catboost.core.CatBoostClassifier object at 0x7ff34fd6bca0>
2020-10-30 11:21:01,489:INFO:create_models() succesfully completed......................................
2020-10-30 11:21:01,569:INFO:Initializing create_model()
2020-10-30 11:21:01,570:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:21:01,570:INFO:Checking exceptions
2020-10-30 11:21:01,570:INFO:Importing libraries
2020-10-30 11:21:01,571:INFO:Copying training dataset
2020-10-30 11:21:01,571:INFO:Defining folds
2020-10-30 11:21:01,571:INFO:Declaring metric variables
2020-10-30 11:21:01,571:INFO:Importing untrained model
2020-10-30 11:21:01,572:INFO:Declaring custom model
2020-10-30 11:21:01,572:INFO:Gradient Boosting Classifier Imported succesfully
2020-10-30 11:21:01,572:INFO:Cross validation set to False
2020-10-30 11:21:01,573:INFO:Fitting Model
2020-10-30 11:21:01,684:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-30 11:21:01,684:INFO:create_models() succesfully completed......................................
2020-10-30 11:21:01,868:INFO:create_model_container: 15
2020-10-30 11:21:01,868:INFO:master_model_container: 15
2020-10-30 11:21:01,868:INFO:display_container: 1
2020-10-30 11:21:01,871:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7ff34fd6bca0>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)]
2020-10-30 11:21:01,871:INFO:compare_models() succesfully completed......................................
2020-10-30 11:23:13,155:INFO:Initializing tune_model()
2020-10-30 11:23:13,156:INFO:tune_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:23:13,156:INFO:Checking exceptions
2020-10-30 11:23:13,518:INFO:Preparing display monitor
2020-10-30 11:23:13,541:INFO:Copying training dataset
2020-10-30 11:23:13,542:INFO:Checking base model
2020-10-30 11:23:13,544:INFO:Base model : Extreme Gradient Boosting
2020-10-30 11:23:13,552:INFO:Declaring metric variables
2020-10-30 11:23:13,561:INFO:Defining Hyperparameters
2020-10-30 11:23:13,691:INFO:Tuning with n_jobs=-1
2020-10-30 11:23:13,693:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:24:11,954:INFO:best_params: {'actual_estimator__learning_rate': 0.46807608948065865, 'actual_estimator__n_estimators': 299, 'actual_estimator__subsample': 0.3901812579174967, 'actual_estimator__max_depth': 11, 'actual_estimator__colsample_bytree': 0.6538464942330674, 'actual_estimator__min_child_weight': 1, 'actual_estimator__reg_alpha': 2.064150172203819e-07, 'actual_estimator__reg_lambda': 0.02347753071161128, 'actual_estimator__scale_pos_weight': 34.99206769461724}
2020-10-30 11:24:11,954:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:24:11,958:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:24:11,959:INFO:Random search completed
2020-10-30 11:24:11,959:INFO:SubProcess create_model() called ==================================
2020-10-30 11:24:11,960:INFO:Initializing create_model()
2020-10-30 11:24:11,960:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=StratifiedKFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff35152e8e0>, kwargs={'learning_rate': 0.46807608948065865, 'n_estimators': 299, 'subsample': 0.3901812579174967, 'max_depth': 11, 'colsample_bytree': 0.6538464942330674, 'min_child_weight': 1, 'reg_alpha': 2.064150172203819e-07, 'reg_lambda': 0.02347753071161128, 'scale_pos_weight': 34.99206769461724})
2020-10-30 11:24:11,960:INFO:Checking exceptions
2020-10-30 11:24:11,960:INFO:Importing libraries
2020-10-30 11:24:11,960:INFO:Copying training dataset
2020-10-30 11:24:11,962:INFO:Defining folds
2020-10-30 11:24:11,962:INFO:Declaring metric variables
2020-10-30 11:24:11,970:INFO:Importing untrained model
2020-10-30 11:24:11,970:INFO:Declaring custom model
2020-10-30 11:24:11,979:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:24:11,994:INFO:Starting cross validation
2020-10-30 11:24:11,995:INFO:Cross validating with n_jobs=-1
2020-10-30 11:24:12,646:INFO:Calculating mean and std
2020-10-30 11:24:12,646:INFO:Creating metrics dataframe
2020-10-30 11:24:12,657:INFO:Finalizing model
2020-10-30 11:24:12,841:INFO:Uploading results into container
2020-10-30 11:24:12,841:INFO:Uploading model into container now
2020-10-30 11:24:12,842:INFO:create_model_container: 16
2020-10-30 11:24:12,842:INFO:master_model_container: 16
2020-10-30 11:24:12,842:INFO:display_container: 2
2020-10-30 11:24:12,844:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.6538464942330674, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46807608948065865, max_delta_step=0, max_depth=11,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=299, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=2.064150172203819e-07, reg_lambda=0.02347753071161128,
              scale_pos_weight=34.99206769461724, subsample=0.3901812579174967,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-10-30 11:24:12,844:INFO:create_model() succesfully completed......................................
2020-10-30 11:24:12,990:INFO:SubProcess create_model() end ==================================
2020-10-30 11:24:13,208:INFO:create_model_container: 16
2020-10-30 11:24:13,209:INFO:master_model_container: 16
2020-10-30 11:24:13,209:INFO:display_container: 2
2020-10-30 11:24:13,212:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.6538464942330674, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46807608948065865, max_delta_step=0, max_depth=11,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=299, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=2.064150172203819e-07, reg_lambda=0.02347753071161128,
              scale_pos_weight=34.99206769461724, subsample=0.3901812579174967,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-10-30 11:24:13,212:INFO:tune_model() succesfully completed......................................
2020-10-30 11:24:13,391:INFO:Initializing tune_model()
2020-10-30 11:24:13,391:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:24:13,391:INFO:Checking exceptions
2020-10-30 11:24:13,393:INFO:Preparing display monitor
2020-10-30 11:24:13,416:INFO:Copying training dataset
2020-10-30 11:24:13,418:INFO:Checking base model
2020-10-30 11:24:13,419:INFO:Base model : Random Forest Classifier
2020-10-30 11:24:13,433:INFO:Declaring metric variables
2020-10-30 11:24:13,443:INFO:Defining Hyperparameters
2020-10-30 11:24:13,550:INFO:Tuning with n_jobs=-1
2020-10-30 11:24:13,553:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:26:38,198:INFO:best_params: {'actual_estimator__n_estimators': 28, 'actual_estimator__max_depth': 9, 'actual_estimator__min_impurity_decrease': 6.213419475852968e-07, 'actual_estimator__max_features': 0.48378278087784554, 'actual_estimator__min_samples_split': 4, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__bootstrap': False, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced'}
2020-10-30 11:26:38,199:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:26:38,199:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:26:38,199:INFO:Random search completed
2020-10-30 11:26:38,200:INFO:SubProcess create_model() called ==================================
2020-10-30 11:26:38,200:INFO:Initializing create_model()
2020-10-30 11:26:38,200:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff333aaa130>, kwargs={'n_estimators': 28, 'max_depth': 9, 'min_impurity_decrease': 6.213419475852968e-07, 'max_features': 0.48378278087784554, 'min_samples_split': 4, 'min_samples_leaf': 3, 'bootstrap': False, 'criterion': 'gini', 'class_weight': 'balanced'})
2020-10-30 11:26:38,200:INFO:Checking exceptions
2020-10-30 11:26:38,200:INFO:Importing libraries
2020-10-30 11:26:38,200:INFO:Copying training dataset
2020-10-30 11:26:38,201:INFO:Defining folds
2020-10-30 11:26:38,201:INFO:Declaring metric variables
2020-10-30 11:26:38,208:INFO:Importing untrained model
2020-10-30 11:26:38,209:INFO:Declaring custom model
2020-10-30 11:26:38,217:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:26:38,235:INFO:Starting cross validation
2020-10-30 11:26:38,236:INFO:Cross validating with n_jobs=-1
2020-10-30 11:26:38,587:INFO:Calculating mean and std
2020-10-30 11:26:38,600:INFO:Creating metrics dataframe
2020-10-30 11:26:38,631:INFO:Finalizing model
2020-10-30 11:26:38,723:INFO:Uploading results into container
2020-10-30 11:26:38,724:INFO:Uploading model into container now
2020-10-30 11:26:38,724:INFO:create_model_container: 17
2020-10-30 11:26:38,724:INFO:master_model_container: 17
2020-10-30 11:26:38,725:INFO:display_container: 3
2020-10-30 11:26:38,726:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9,
                       max_features=0.48378278087784554, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=6.213419475852968e-07,
                       min_impurity_split=None, min_samples_leaf=3,
                       min_samples_split=4, min_weight_fraction_leaf=0.0,
                       n_estimators=28, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-10-30 11:26:38,726:INFO:create_model() succesfully completed......................................
2020-10-30 11:26:38,960:INFO:SubProcess create_model() end ==================================
2020-10-30 11:26:39,006:INFO:create_model_container: 17
2020-10-30 11:26:39,007:INFO:master_model_container: 17
2020-10-30 11:26:39,007:INFO:display_container: 3
2020-10-30 11:26:39,007:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9,
                       max_features=0.48378278087784554, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=6.213419475852968e-07,
                       min_impurity_split=None, min_samples_leaf=3,
                       min_samples_split=4, min_weight_fraction_leaf=0.0,
                       n_estimators=28, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-10-30 11:26:39,007:INFO:tune_model() succesfully completed......................................
2020-10-30 11:26:39,295:INFO:Initializing tune_model()
2020-10-30 11:26:39,295:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:26:39,296:INFO:Checking exceptions
2020-10-30 11:26:39,297:INFO:Preparing display monitor
2020-10-30 11:26:39,345:INFO:Copying training dataset
2020-10-30 11:26:39,346:INFO:Checking base model
2020-10-30 11:26:39,348:INFO:Base model : Light Gradient Boosting Machine
2020-10-30 11:26:39,360:INFO:Declaring metric variables
2020-10-30 11:26:39,367:INFO:Defining Hyperparameters
2020-10-30 11:26:39,499:INFO:Tuning with n_jobs=-1
2020-10-30 11:26:39,501:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:27:06,227:INFO:best_params: {'actual_estimator__num_leaves': 130, 'actual_estimator__learning_rate': 0.0009716364365347497, 'actual_estimator__n_estimators': 32, 'actual_estimator__min_split_gain': 0.3375044595780061, 'actual_estimator__reg_alpha': 0.8185838768336485, 'actual_estimator__reg_lambda': 2.3931890238094067e-10, 'actual_estimator__min_data_in_leaf': 5397, 'actual_estimator__feature_fraction': 0.4911171435565572, 'actual_estimator__bagging_fraction': 0.5208894218175022, 'actual_estimator__bagging_freq': 5, 'actual_estimator__min_child_samples': 8}
2020-10-30 11:27:06,227:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:27:06,228:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:27:06,228:INFO:Random search completed
2020-10-30 11:27:06,229:INFO:SubProcess create_model() called ==================================
2020-10-30 11:27:06,230:INFO:Initializing create_model()
2020-10-30 11:27:06,230:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff332ed2f10>, kwargs={'num_leaves': 130, 'learning_rate': 0.0009716364365347497, 'n_estimators': 32, 'min_split_gain': 0.3375044595780061, 'reg_alpha': 0.8185838768336485, 'reg_lambda': 2.3931890238094067e-10, 'min_data_in_leaf': 5397, 'feature_fraction': 0.4911171435565572, 'bagging_fraction': 0.5208894218175022, 'bagging_freq': 5, 'min_child_samples': 8})
2020-10-30 11:27:06,230:INFO:Checking exceptions
2020-10-30 11:27:06,230:INFO:Importing libraries
2020-10-30 11:27:06,230:INFO:Copying training dataset
2020-10-30 11:27:06,231:INFO:Defining folds
2020-10-30 11:27:06,232:INFO:Declaring metric variables
2020-10-30 11:27:06,241:INFO:Importing untrained model
2020-10-30 11:27:06,242:INFO:Declaring custom model
2020-10-30 11:27:06,252:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:27:06,272:INFO:Starting cross validation
2020-10-30 11:27:06,272:INFO:Cross validating with n_jobs=-1
2020-10-30 11:27:09,460:INFO:Calculating mean and std
2020-10-30 11:27:09,461:INFO:Creating metrics dataframe
2020-10-30 11:27:09,473:INFO:Finalizing model
2020-10-30 11:27:09,481:INFO:Uploading results into container
2020-10-30 11:27:09,481:INFO:Uploading model into container now
2020-10-30 11:27:09,481:INFO:create_model_container: 18
2020-10-30 11:27:09,481:INFO:master_model_container: 18
2020-10-30 11:27:09,481:INFO:display_container: 4
2020-10-30 11:27:09,482:INFO:LGBMClassifier(bagging_fraction=0.5208894218175022, bagging_freq=5,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.4911171435565572, importance_type='split',
               learning_rate=0.0009716364365347497, max_depth=-1,
               min_child_samples=8, min_child_weight=0.001,
               min_data_in_leaf=5397, min_split_gain=0.3375044595780061,
               n_estimators=32, n_jobs=-1, num_leaves=130, objective=None,
               random_state=786, reg_alpha=0.8185838768336485,
               reg_lambda=2.3931890238094067e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:27:09,482:INFO:create_model() succesfully completed......................................
2020-10-30 11:27:09,590:INFO:SubProcess create_model() end ==================================
2020-10-30 11:27:09,623:INFO:create_model_container: 18
2020-10-30 11:27:09,623:INFO:master_model_container: 18
2020-10-30 11:27:09,623:INFO:display_container: 4
2020-10-30 11:27:09,624:INFO:LGBMClassifier(bagging_fraction=0.5208894218175022, bagging_freq=5,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.4911171435565572, importance_type='split',
               learning_rate=0.0009716364365347497, max_depth=-1,
               min_child_samples=8, min_child_weight=0.001,
               min_data_in_leaf=5397, min_split_gain=0.3375044595780061,
               n_estimators=32, n_jobs=-1, num_leaves=130, objective=None,
               random_state=786, reg_alpha=0.8185838768336485,
               reg_lambda=2.3931890238094067e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:27:09,624:INFO:tune_model() succesfully completed......................................
2020-10-30 11:27:09,748:INFO:Initializing tune_model()
2020-10-30 11:27:09,749:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x7ff34fd6bca0>, fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:27:09,749:INFO:Checking exceptions
2020-10-30 11:27:09,751:INFO:Preparing display monitor
2020-10-30 11:27:09,788:INFO:Copying training dataset
2020-10-30 11:27:09,791:INFO:Checking base model
2020-10-30 11:27:09,791:INFO:Base model : CatBoost Classifier
2020-10-30 11:27:09,801:INFO:Declaring metric variables
2020-10-30 11:27:09,814:INFO:Defining Hyperparameters
2020-10-30 11:27:09,915:INFO:Tuning with n_jobs=-1
2020-10-30 11:27:09,916:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:32:08,683:INFO:best_params: {'actual_estimator__depth': 6, 'actual_estimator__n_estimators': 196, 'actual_estimator__random_strength': 0.16636242139482713, 'actual_estimator__l2_leaf_reg': 1}
2020-10-30 11:32:08,684:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:32:08,685:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:32:08,687:INFO:Random search completed
2020-10-30 11:32:08,687:INFO:SubProcess create_model() called ==================================
2020-10-30 11:32:08,688:INFO:Initializing create_model()
2020-10-30 11:32:08,688:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7ff33448f7f0>, fold=StratifiedKFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff34fdc01c0>, kwargs={'depth': 6, 'n_estimators': 196, 'random_strength': 0.16636242139482713, 'l2_leaf_reg': 1})
2020-10-30 11:32:08,688:INFO:Checking exceptions
2020-10-30 11:32:08,688:INFO:Importing libraries
2020-10-30 11:32:08,689:INFO:Copying training dataset
2020-10-30 11:32:08,690:INFO:Defining folds
2020-10-30 11:32:08,690:INFO:Declaring metric variables
2020-10-30 11:32:08,704:INFO:Importing untrained model
2020-10-30 11:32:08,705:INFO:Declaring custom model
2020-10-30 11:32:08,714:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:32:08,730:INFO:Starting cross validation
2020-10-30 11:32:08,731:INFO:Cross validating with n_jobs=-1
2020-10-30 11:32:14,830:INFO:Calculating mean and std
2020-10-30 11:32:14,841:INFO:Creating metrics dataframe
2020-10-30 11:32:14,899:INFO:Finalizing model
2020-10-30 11:32:15,374:INFO:Uploading results into container
2020-10-30 11:32:15,375:INFO:Uploading model into container now
2020-10-30 11:32:15,376:INFO:create_model_container: 19
2020-10-30 11:32:15,376:INFO:master_model_container: 19
2020-10-30 11:32:15,376:INFO:display_container: 5
2020-10-30 11:32:15,376:INFO:<catboost.core.CatBoostClassifier object at 0x7ff333a8cd90>
2020-10-30 11:32:15,377:INFO:create_model() succesfully completed......................................
2020-10-30 11:32:15,997:INFO:SubProcess create_model() end ==================================
2020-10-30 11:32:16,022:INFO:create_model_container: 19
2020-10-30 11:32:16,023:INFO:master_model_container: 19
2020-10-30 11:32:16,023:INFO:display_container: 5
2020-10-30 11:32:16,023:INFO:<catboost.core.CatBoostClassifier object at 0x7ff333a8cd90>
2020-10-30 11:32:16,023:INFO:tune_model() succesfully completed......................................
2020-10-30 11:39:19,694:INFO:PyCaret Supervised Module
2020-10-30 11:39:19,696:INFO:ML Usecase: classification
2020-10-30 11:39:19,696:INFO:version 2.2.0
2020-10-30 11:39:19,696:INFO:Initializing setup()
2020-10-30 11:39:19,696:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-30 11:39:19,696:INFO:Checking environment
2020-10-30 11:39:19,696:INFO:python_version: 3.8.3
2020-10-30 11:39:19,696:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-30 11:39:19,696:INFO:machine: x86_64
2020-10-30 11:39:19,716:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-30 11:39:19,717:INFO:Memory: svmem(total=8589934592, available=917512192, percent=89.3, used=3170103296, free=30388224, active=890437632, inactive=860930048, wired=2279665664)
2020-10-30 11:39:19,717:INFO:Physical Core: 4
2020-10-30 11:39:19,717:INFO:Logical Core: 8
2020-10-30 11:39:19,717:INFO:Checking libraries
2020-10-30 11:39:19,717:INFO:pd==1.0.5
2020-10-30 11:39:19,717:INFO:numpy==1.18.5
2020-10-30 11:39:19,718:INFO:sklearn==0.23.2
2020-10-30 11:39:20,359:INFO:xgboost==1.2.0
2020-10-30 11:39:20,360:INFO:lightgbm==2.3.1
2020-10-30 11:39:20,421:INFO:catboost==0.24.1
2020-10-30 11:39:21,346:INFO:mlflow==1.11.0
2020-10-30 11:39:21,346:INFO:Checking Exceptions
2020-10-30 11:39:21,347:INFO:Declaring global variables
2020-10-30 11:39:21,347:INFO:USI: dab8
2020-10-30 11:39:21,347:INFO:pycaret_globals: {'_all_models_internal', '_gpu_n_jobs_param', 'transform_target_method_param', '_available_plots', 'transform_target_param', 'log_plots_param', '_internal_pipeline', 'y_test', 'fix_imbalance_param', 'experiment__', 'html_param', 'seed', 'n_jobs_param', 'prep_pipe', 'gpu_param', 'pycaret_globals', 'data_before_preprocess', 'iterative_imputation_iters_param', 'X_train', 'y', 'X_test', '_all_metrics', 'imputation_regressor', 'X', 'logging_param', '_all_models', 'target_param', 'fold_shuffle_param', 'master_model_container', 'fix_imbalance_method_param', 'fold_param', 'imputation_classifier', 'display_container', 'exp_name_log', 'create_model_container', 'stratify_param', 'fold_groups_param', 'USI', '_ml_usecase', 'fold_generator', 'y_train'}
2020-10-30 11:39:21,347:INFO:Preparing display monitor
2020-10-30 11:39:21,347:INFO:Preparing display monitor
2020-10-30 11:39:21,366:INFO:Importing libraries
2020-10-30 11:39:21,366:INFO:Copying data for preprocessing
2020-10-30 11:39:21,377:INFO:Declaring preprocessing parameters
2020-10-30 11:39:21,379:INFO:Setting up iterative imputation
2020-10-30 11:39:21,666:INFO:Creating preprocessing pipeline
2020-10-30 11:39:21,678:INFO:Preprocessing pipeline created successfully
2020-10-30 11:39:21,678:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-30 11:39:21,679:INFO:Creating global containers
2020-10-30 11:39:21,681:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-30 11:39:21,763:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:39:22,715:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:39:23,357:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:39:23,748:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:39:24,194:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:39:24,459:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:39:24,870:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:39:25,200:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:39:25,574:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:39:25,783:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:39:26,185:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:39:26,683:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:39:27,126:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:39:27,530:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:39:27,920:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:39:28,269:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:39:28,634:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:39:28,835:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:39:29,218:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:39:29,346:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:39:29,505:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:39:30,006:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:39:30,188:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:39:30,653:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:39:31,185:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:39:32,675:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:39:33,056:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:39:33,507:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:39:33,799:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:39:34,131:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:39:34,453:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:39:34,932:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:39:35,439:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:39:36,148:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:39:36,645:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:39:37,152:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:39:37,450:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:39:37,925:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:39:38,349:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:39:38,607:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:39:38,972:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:39:39,474:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:39:39,673:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:39:40,121:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:39:40,412:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:39:40,858:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:39:41,056:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:39:41,306:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:39:41,755:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:39:41,949:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:39:47,029:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:39:47,140:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:39:47,228:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:39:47,325:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:39:47,438:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:39:47,541:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:39:47,645:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:39:47,741:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:39:47,836:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:39:47,935:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:39:48,040:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:39:48,151:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:39:48,251:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:39:48,343:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:39:48,442:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:39:48,538:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:39:48,633:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:39:48,750:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:39:48,856:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:39:48,955:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:39:49,048:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:39:49,141:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:39:49,238:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:39:49,356:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:39:49,468:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:39:49,568:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:39:49,666:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:39:49,759:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:39:49,855:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:39:49,957:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:39:50,080:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:39:50,188:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:39:50,290:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:39:50,387:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:39:50,484:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:39:50,580:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:39:50,691:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:39:50,800:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:39:50,904:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:39:51,001:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:39:51,100:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:39:51,198:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:39:51,303:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:39:51,421:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:39:51,529:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:39:51,630:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:39:51,725:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:39:51,820:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:39:51,914:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:39:52,010:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:39:52,206:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-30 11:39:52,319:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-30 11:39:52,429:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-30 11:39:52,525:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-30 11:39:52,625:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-30 11:39:52,721:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-30 11:39:52,818:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-30 11:39:52,916:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-30 11:39:53,038:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-30 11:39:53,149:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-30 11:39:53,249:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-30 11:39:53,345:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-30 11:39:53,441:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-30 11:39:53,535:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-30 11:39:53,630:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-30 11:39:53,745:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-30 11:39:53,859:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-30 11:39:53,966:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-30 11:39:54,062:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-30 11:39:54,157:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-30 11:39:54,252:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-30 11:39:54,351:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-30 11:39:54,466:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-30 11:39:54,571:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-30 11:39:54,672:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-30 11:39:54,767:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-30 11:39:54,862:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-30 11:39:54,956:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-30 11:39:55,053:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-30 11:39:55,150:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-30 11:39:55,262:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-30 11:39:55,372:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-30 11:39:55,472:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-30 11:39:55,569:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-30 11:39:55,671:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-30 11:39:55,766:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-30 11:39:55,856:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-30 11:39:55,954:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-30 11:39:56,045:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-30 11:39:56,137:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-30 11:39:56,237:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-30 11:39:56,331:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-30 11:39:56,426:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-30 11:39:56,548:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-30 11:39:56,663:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-30 11:39:56,771:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-30 11:39:56,873:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-30 11:39:56,967:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-30 11:39:57,062:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-30 11:39:57,160:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-30 11:39:57,554:INFO:Creating grid variables
2020-10-30 11:39:57,606:INFO:create_model_container: 0
2020-10-30 11:39:57,606:INFO:master_model_container: 0
2020-10-30 11:39:57,606:INFO:display_container: 0
2020-10-30 11:39:57,627:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-30 11:39:57,627:INFO:setup() succesfully completed......................................
2020-10-30 11:40:11,282:INFO:Initializing get_config()
2020-10-30 11:40:11,283:INFO:get_config(variable=X_train)
2020-10-30 11:40:11,289:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Friday_multiply_Sunday  Sunday_multiply_Friday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-10-30 11:40:11,289:INFO:get_config() succesfully completed......................................
2020-10-30 11:40:34,330:INFO:Initializing compare_models()
2020-10-30 11:40:34,332:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-30 11:40:34,332:INFO:Checking exceptions
2020-10-30 11:40:34,354:INFO:Preparing display monitor
2020-10-30 11:40:34,364:INFO:Preparing display monitor
2020-10-30 11:40:34,437:INFO:Initializing Logistic Regression
2020-10-30 11:40:34,437:INFO:Total runtime is 2.7600924173990885e-05 minutes
2020-10-30 11:40:34,447:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:34,457:INFO:Initializing create_model()
2020-10-30 11:40:34,459:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:34,460:INFO:Checking exceptions
2020-10-30 11:40:34,460:INFO:Importing libraries
2020-10-30 11:40:34,460:INFO:Copying training dataset
2020-10-30 11:40:34,462:INFO:Defining folds
2020-10-30 11:40:34,462:INFO:Declaring metric variables
2020-10-30 11:40:34,469:INFO:Importing untrained model
2020-10-30 11:40:34,483:INFO:Logistic Regression Imported succesfully
2020-10-30 11:40:34,505:INFO:Starting cross validation
2020-10-30 11:40:34,511:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:41,558:INFO:Calculating mean and std
2020-10-30 11:40:41,581:INFO:Creating metrics dataframe
2020-10-30 11:40:41,620:INFO:Uploading results into container
2020-10-30 11:40:41,620:INFO:Uploading model into container now
2020-10-30 11:40:41,621:INFO:create_model_container: 1
2020-10-30 11:40:41,622:INFO:master_model_container: 1
2020-10-30 11:40:41,622:INFO:display_container: 1
2020-10-30 11:40:41,628:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-10-30 11:40:41,629:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:42,306:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:42,306:INFO:Creating metrics dataframe
2020-10-30 11:40:42,331:INFO:Initializing K Neighbors Classifier
2020-10-30 11:40:42,332:INFO:Total runtime is 0.13159894943237305 minutes
2020-10-30 11:40:42,351:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:42,352:INFO:Initializing create_model()
2020-10-30 11:40:42,352:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:42,353:INFO:Checking exceptions
2020-10-30 11:40:42,353:INFO:Importing libraries
2020-10-30 11:40:42,353:INFO:Copying training dataset
2020-10-30 11:40:42,354:INFO:Defining folds
2020-10-30 11:40:42,355:INFO:Declaring metric variables
2020-10-30 11:40:42,370:INFO:Importing untrained model
2020-10-30 11:40:42,387:INFO:K Neighbors Classifier Imported succesfully
2020-10-30 11:40:42,416:INFO:Starting cross validation
2020-10-30 11:40:42,417:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:42,636:INFO:Calculating mean and std
2020-10-30 11:40:42,638:INFO:Creating metrics dataframe
2020-10-30 11:40:42,645:INFO:Uploading results into container
2020-10-30 11:40:42,645:INFO:Uploading model into container now
2020-10-30 11:40:42,645:INFO:create_model_container: 2
2020-10-30 11:40:42,645:INFO:master_model_container: 2
2020-10-30 11:40:42,646:INFO:display_container: 1
2020-10-30 11:40:42,646:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-10-30 11:40:42,646:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:42,871:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:42,871:INFO:Creating metrics dataframe
2020-10-30 11:40:42,910:INFO:Initializing Naive Bayes
2020-10-30 11:40:42,910:INFO:Total runtime is 0.1412365476290385 minutes
2020-10-30 11:40:42,926:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:42,926:INFO:Initializing create_model()
2020-10-30 11:40:42,926:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:42,927:INFO:Checking exceptions
2020-10-30 11:40:42,927:INFO:Importing libraries
2020-10-30 11:40:42,927:INFO:Copying training dataset
2020-10-30 11:40:42,928:INFO:Defining folds
2020-10-30 11:40:42,928:INFO:Declaring metric variables
2020-10-30 11:40:42,946:INFO:Importing untrained model
2020-10-30 11:40:42,988:INFO:Naive Bayes Imported succesfully
2020-10-30 11:40:43,065:INFO:Starting cross validation
2020-10-30 11:40:43,065:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:43,155:INFO:Calculating mean and std
2020-10-30 11:40:43,181:INFO:Creating metrics dataframe
2020-10-30 11:40:43,190:INFO:Uploading results into container
2020-10-30 11:40:43,190:INFO:Uploading model into container now
2020-10-30 11:40:43,190:INFO:create_model_container: 3
2020-10-30 11:40:43,190:INFO:master_model_container: 3
2020-10-30 11:40:43,190:INFO:display_container: 1
2020-10-30 11:40:43,191:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-10-30 11:40:43,191:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:43,366:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:43,366:INFO:Creating metrics dataframe
2020-10-30 11:40:43,404:INFO:Initializing Decision Tree Classifier
2020-10-30 11:40:43,404:INFO:Total runtime is 0.14946825106938683 minutes
2020-10-30 11:40:43,419:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:43,420:INFO:Initializing create_model()
2020-10-30 11:40:43,420:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:43,420:INFO:Checking exceptions
2020-10-30 11:40:43,420:INFO:Importing libraries
2020-10-30 11:40:43,420:INFO:Copying training dataset
2020-10-30 11:40:43,422:INFO:Defining folds
2020-10-30 11:40:43,422:INFO:Declaring metric variables
2020-10-30 11:40:43,436:INFO:Importing untrained model
2020-10-30 11:40:43,451:INFO:Decision Tree Classifier Imported succesfully
2020-10-30 11:40:43,479:INFO:Starting cross validation
2020-10-30 11:40:43,479:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:43,548:INFO:Calculating mean and std
2020-10-30 11:40:43,551:INFO:Creating metrics dataframe
2020-10-30 11:40:43,562:INFO:Uploading results into container
2020-10-30 11:40:43,563:INFO:Uploading model into container now
2020-10-30 11:40:43,563:INFO:create_model_container: 4
2020-10-30 11:40:43,564:INFO:master_model_container: 4
2020-10-30 11:40:43,564:INFO:display_container: 1
2020-10-30 11:40:43,564:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-10-30 11:40:43,564:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:43,667:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:43,667:INFO:Creating metrics dataframe
2020-10-30 11:40:43,750:INFO:Initializing SVM - Linear Kernel
2020-10-30 11:40:43,750:INFO:Total runtime is 0.15523996750513716 minutes
2020-10-30 11:40:43,766:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:43,766:INFO:Initializing create_model()
2020-10-30 11:40:43,766:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:43,766:INFO:Checking exceptions
2020-10-30 11:40:43,766:INFO:Importing libraries
2020-10-30 11:40:43,766:INFO:Copying training dataset
2020-10-30 11:40:43,767:INFO:Defining folds
2020-10-30 11:40:43,768:INFO:Declaring metric variables
2020-10-30 11:40:43,777:INFO:Importing untrained model
2020-10-30 11:40:43,787:INFO:SVM - Linear Kernel Imported succesfully
2020-10-30 11:40:43,839:INFO:Starting cross validation
2020-10-30 11:40:43,840:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:43,933:INFO:Calculating mean and std
2020-10-30 11:40:43,934:INFO:Creating metrics dataframe
2020-10-30 11:40:43,939:INFO:Uploading results into container
2020-10-30 11:40:43,940:INFO:Uploading model into container now
2020-10-30 11:40:43,940:INFO:create_model_container: 5
2020-10-30 11:40:43,940:INFO:master_model_container: 5
2020-10-30 11:40:43,940:INFO:display_container: 1
2020-10-30 11:40:43,941:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-30 11:40:43,941:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:44,198:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:44,198:INFO:Creating metrics dataframe
2020-10-30 11:40:44,305:INFO:Initializing Ridge Classifier
2020-10-30 11:40:44,306:INFO:Total runtime is 0.1645003994305929 minutes
2020-10-30 11:40:44,322:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:44,329:INFO:Initializing create_model()
2020-10-30 11:40:44,329:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:44,329:INFO:Checking exceptions
2020-10-30 11:40:44,329:INFO:Importing libraries
2020-10-30 11:40:44,329:INFO:Copying training dataset
2020-10-30 11:40:44,331:INFO:Defining folds
2020-10-30 11:40:44,332:INFO:Declaring metric variables
2020-10-30 11:40:44,348:INFO:Importing untrained model
2020-10-30 11:40:44,367:INFO:Ridge Classifier Imported succesfully
2020-10-30 11:40:44,391:INFO:Starting cross validation
2020-10-30 11:40:44,392:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:44,472:INFO:Calculating mean and std
2020-10-30 11:40:44,477:INFO:Creating metrics dataframe
2020-10-30 11:40:44,483:INFO:Uploading results into container
2020-10-30 11:40:44,483:INFO:Uploading model into container now
2020-10-30 11:40:44,483:INFO:create_model_container: 6
2020-10-30 11:40:44,484:INFO:master_model_container: 6
2020-10-30 11:40:44,484:INFO:display_container: 1
2020-10-30 11:40:44,485:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-10-30 11:40:44,485:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:44,634:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:44,634:INFO:Creating metrics dataframe
2020-10-30 11:40:44,700:INFO:Initializing Random Forest Classifier
2020-10-30 11:40:44,700:INFO:Total runtime is 0.1710660020510356 minutes
2020-10-30 11:40:44,713:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:44,713:INFO:Initializing create_model()
2020-10-30 11:40:44,713:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:44,714:INFO:Checking exceptions
2020-10-30 11:40:44,714:INFO:Importing libraries
2020-10-30 11:40:44,714:INFO:Copying training dataset
2020-10-30 11:40:44,715:INFO:Defining folds
2020-10-30 11:40:44,715:INFO:Declaring metric variables
2020-10-30 11:40:44,730:INFO:Importing untrained model
2020-10-30 11:40:44,762:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:40:44,828:INFO:Starting cross validation
2020-10-30 11:40:44,829:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:46,276:INFO:Calculating mean and std
2020-10-30 11:40:46,277:INFO:Creating metrics dataframe
2020-10-30 11:40:46,284:INFO:Uploading results into container
2020-10-30 11:40:46,285:INFO:Uploading model into container now
2020-10-30 11:40:46,285:INFO:create_model_container: 7
2020-10-30 11:40:46,285:INFO:master_model_container: 7
2020-10-30 11:40:46,285:INFO:display_container: 1
2020-10-30 11:40:46,285:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-10-30 11:40:46,285:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:46,374:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:46,374:INFO:Creating metrics dataframe
2020-10-30 11:40:46,414:INFO:Initializing Quadratic Discriminant Analysis
2020-10-30 11:40:46,414:INFO:Total runtime is 0.19963910182317102 minutes
2020-10-30 11:40:46,424:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:46,424:INFO:Initializing create_model()
2020-10-30 11:40:46,424:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:46,424:INFO:Checking exceptions
2020-10-30 11:40:46,425:INFO:Importing libraries
2020-10-30 11:40:46,425:INFO:Copying training dataset
2020-10-30 11:40:46,426:INFO:Defining folds
2020-10-30 11:40:46,426:INFO:Declaring metric variables
2020-10-30 11:40:46,439:INFO:Importing untrained model
2020-10-30 11:40:46,450:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-10-30 11:40:46,475:INFO:Starting cross validation
2020-10-30 11:40:46,475:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:46,632:INFO:Calculating mean and std
2020-10-30 11:40:46,634:INFO:Creating metrics dataframe
2020-10-30 11:40:46,640:INFO:Uploading results into container
2020-10-30 11:40:46,640:INFO:Uploading model into container now
2020-10-30 11:40:46,640:INFO:create_model_container: 8
2020-10-30 11:40:46,640:INFO:master_model_container: 8
2020-10-30 11:40:46,640:INFO:display_container: 1
2020-10-30 11:40:46,641:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-10-30 11:40:46,641:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:46,753:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:46,753:INFO:Creating metrics dataframe
2020-10-30 11:40:46,803:INFO:Initializing Ada Boost Classifier
2020-10-30 11:40:46,804:INFO:Total runtime is 0.20612994829813644 minutes
2020-10-30 11:40:46,816:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:46,816:INFO:Initializing create_model()
2020-10-30 11:40:46,817:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:46,817:INFO:Checking exceptions
2020-10-30 11:40:46,817:INFO:Importing libraries
2020-10-30 11:40:46,818:INFO:Copying training dataset
2020-10-30 11:40:46,819:INFO:Defining folds
2020-10-30 11:40:46,820:INFO:Declaring metric variables
2020-10-30 11:40:46,832:INFO:Importing untrained model
2020-10-30 11:40:46,843:INFO:Ada Boost Classifier Imported succesfully
2020-10-30 11:40:46,865:INFO:Starting cross validation
2020-10-30 11:40:46,866:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:47,709:INFO:Calculating mean and std
2020-10-30 11:40:47,710:INFO:Creating metrics dataframe
2020-10-30 11:40:47,716:INFO:Uploading results into container
2020-10-30 11:40:47,716:INFO:Uploading model into container now
2020-10-30 11:40:47,716:INFO:create_model_container: 9
2020-10-30 11:40:47,716:INFO:master_model_container: 9
2020-10-30 11:40:47,716:INFO:display_container: 1
2020-10-30 11:40:47,717:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-10-30 11:40:47,717:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:47,828:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:47,828:INFO:Creating metrics dataframe
2020-10-30 11:40:47,873:INFO:Initializing Gradient Boosting Classifier
2020-10-30 11:40:47,873:INFO:Total runtime is 0.223961349328359 minutes
2020-10-30 11:40:47,886:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:47,886:INFO:Initializing create_model()
2020-10-30 11:40:47,887:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:47,887:INFO:Checking exceptions
2020-10-30 11:40:47,887:INFO:Importing libraries
2020-10-30 11:40:47,887:INFO:Copying training dataset
2020-10-30 11:40:47,888:INFO:Defining folds
2020-10-30 11:40:47,888:INFO:Declaring metric variables
2020-10-30 11:40:47,899:INFO:Importing untrained model
2020-10-30 11:40:47,921:INFO:Gradient Boosting Classifier Imported succesfully
2020-10-30 11:40:47,950:INFO:Starting cross validation
2020-10-30 11:40:47,951:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:49,416:INFO:Calculating mean and std
2020-10-30 11:40:49,418:INFO:Creating metrics dataframe
2020-10-30 11:40:49,424:INFO:Uploading results into container
2020-10-30 11:40:49,425:INFO:Uploading model into container now
2020-10-30 11:40:49,425:INFO:create_model_container: 10
2020-10-30 11:40:49,425:INFO:master_model_container: 10
2020-10-30 11:40:49,425:INFO:display_container: 1
2020-10-30 11:40:49,426:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-30 11:40:49,426:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:50,445:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:50,446:INFO:Creating metrics dataframe
2020-10-30 11:40:50,555:INFO:Initializing Linear Discriminant Analysis
2020-10-30 11:40:50,556:INFO:Total runtime is 0.26866438388824465 minutes
2020-10-30 11:40:50,572:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:50,573:INFO:Initializing create_model()
2020-10-30 11:40:50,573:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:50,573:INFO:Checking exceptions
2020-10-30 11:40:50,573:INFO:Importing libraries
2020-10-30 11:40:50,574:INFO:Copying training dataset
2020-10-30 11:40:50,575:INFO:Defining folds
2020-10-30 11:40:50,575:INFO:Declaring metric variables
2020-10-30 11:40:50,592:INFO:Importing untrained model
2020-10-30 11:40:50,600:INFO:Linear Discriminant Analysis Imported succesfully
2020-10-30 11:40:50,633:INFO:Starting cross validation
2020-10-30 11:40:50,633:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:50,826:INFO:Calculating mean and std
2020-10-30 11:40:50,828:INFO:Creating metrics dataframe
2020-10-30 11:40:50,845:INFO:Uploading results into container
2020-10-30 11:40:50,845:INFO:Uploading model into container now
2020-10-30 11:40:50,845:INFO:create_model_container: 11
2020-10-30 11:40:50,845:INFO:master_model_container: 11
2020-10-30 11:40:50,845:INFO:display_container: 1
2020-10-30 11:40:50,846:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-10-30 11:40:50,846:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:51,069:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:51,069:INFO:Creating metrics dataframe
2020-10-30 11:40:51,189:INFO:Initializing Extra Trees Classifier
2020-10-30 11:40:51,190:INFO:Total runtime is 0.27923150062561036 minutes
2020-10-30 11:40:51,213:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:51,217:INFO:Initializing create_model()
2020-10-30 11:40:51,218:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:51,218:INFO:Checking exceptions
2020-10-30 11:40:51,218:INFO:Importing libraries
2020-10-30 11:40:51,218:INFO:Copying training dataset
2020-10-30 11:40:51,222:INFO:Defining folds
2020-10-30 11:40:51,222:INFO:Declaring metric variables
2020-10-30 11:40:51,238:INFO:Importing untrained model
2020-10-30 11:40:51,252:INFO:Extra Trees Classifier Imported succesfully
2020-10-30 11:40:51,287:INFO:Starting cross validation
2020-10-30 11:40:51,289:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:52,440:INFO:Calculating mean and std
2020-10-30 11:40:52,442:INFO:Creating metrics dataframe
2020-10-30 11:40:52,447:INFO:Uploading results into container
2020-10-30 11:40:52,448:INFO:Uploading model into container now
2020-10-30 11:40:52,448:INFO:create_model_container: 12
2020-10-30 11:40:52,448:INFO:master_model_container: 12
2020-10-30 11:40:52,448:INFO:display_container: 1
2020-10-30 11:40:52,449:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-10-30 11:40:52,449:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:52,563:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:52,563:INFO:Creating metrics dataframe
2020-10-30 11:40:52,665:INFO:Initializing Extreme Gradient Boosting
2020-10-30 11:40:52,665:INFO:Total runtime is 0.30382533073425294 minutes
2020-10-30 11:40:52,695:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:52,697:INFO:Initializing create_model()
2020-10-30 11:40:52,697:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:52,698:INFO:Checking exceptions
2020-10-30 11:40:52,698:INFO:Importing libraries
2020-10-30 11:40:52,698:INFO:Copying training dataset
2020-10-30 11:40:52,700:INFO:Defining folds
2020-10-30 11:40:52,701:INFO:Declaring metric variables
2020-10-30 11:40:52,725:INFO:Importing untrained model
2020-10-30 11:40:52,918:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:40:52,946:INFO:Starting cross validation
2020-10-30 11:40:52,947:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:55,850:INFO:Calculating mean and std
2020-10-30 11:40:55,852:INFO:Creating metrics dataframe
2020-10-30 11:40:55,856:INFO:Uploading results into container
2020-10-30 11:40:55,857:INFO:Uploading model into container now
2020-10-30 11:40:55,857:INFO:create_model_container: 13
2020-10-30 11:40:55,857:INFO:master_model_container: 13
2020-10-30 11:40:55,857:INFO:display_container: 1
2020-10-30 11:40:55,858:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-10-30 11:40:55,858:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:55,945:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:55,945:INFO:Creating metrics dataframe
2020-10-30 11:40:56,004:INFO:Initializing Light Gradient Boosting Machine
2020-10-30 11:40:56,005:INFO:Total runtime is 0.35948206583658854 minutes
2020-10-30 11:40:56,013:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:56,014:INFO:Initializing create_model()
2020-10-30 11:40:56,014:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:56,014:INFO:Checking exceptions
2020-10-30 11:40:56,015:INFO:Importing libraries
2020-10-30 11:40:56,015:INFO:Copying training dataset
2020-10-30 11:40:56,016:INFO:Defining folds
2020-10-30 11:40:56,016:INFO:Declaring metric variables
2020-10-30 11:40:56,026:INFO:Importing untrained model
2020-10-30 11:40:56,035:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:40:56,056:INFO:Starting cross validation
2020-10-30 11:40:56,057:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:40:56,431:INFO:Calculating mean and std
2020-10-30 11:40:56,433:INFO:Creating metrics dataframe
2020-10-30 11:40:56,440:INFO:Uploading results into container
2020-10-30 11:40:56,441:INFO:Uploading model into container now
2020-10-30 11:40:56,441:INFO:create_model_container: 14
2020-10-30 11:40:56,441:INFO:master_model_container: 14
2020-10-30 11:40:56,441:INFO:display_container: 1
2020-10-30 11:40:56,442:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:40:56,442:INFO:create_model() succesfully completed......................................
2020-10-30 11:40:56,557:INFO:SubProcess create_model() end ==================================
2020-10-30 11:40:56,558:INFO:Creating metrics dataframe
2020-10-30 11:40:56,656:INFO:Initializing CatBoost Classifier
2020-10-30 11:40:56,656:INFO:Total runtime is 0.3703399658203125 minutes
2020-10-30 11:40:56,678:INFO:SubProcess create_model() called ==================================
2020-10-30 11:40:56,679:INFO:Initializing create_model()
2020-10-30 11:40:56,679:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05f8a23a0>, kwargs={})
2020-10-30 11:40:56,679:INFO:Checking exceptions
2020-10-30 11:40:56,679:INFO:Importing libraries
2020-10-30 11:40:56,679:INFO:Copying training dataset
2020-10-30 11:40:56,681:INFO:Defining folds
2020-10-30 11:40:56,681:INFO:Declaring metric variables
2020-10-30 11:40:56,811:INFO:Importing untrained model
2020-10-30 11:40:56,838:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:40:56,867:INFO:Starting cross validation
2020-10-30 11:40:56,867:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:41:15,442:INFO:Calculating mean and std
2020-10-30 11:41:15,450:INFO:Creating metrics dataframe
2020-10-30 11:41:15,467:INFO:Uploading results into container
2020-10-30 11:41:15,467:INFO:Uploading model into container now
2020-10-30 11:41:15,468:INFO:create_model_container: 15
2020-10-30 11:41:15,468:INFO:master_model_container: 15
2020-10-30 11:41:15,468:INFO:display_container: 1
2020-10-30 11:41:15,468:INFO:<catboost.core.CatBoostClassifier object at 0x7fc05fa3b100>
2020-10-30 11:41:15,469:INFO:create_model() succesfully completed......................................
2020-10-30 11:41:15,880:INFO:SubProcess create_model() end ==================================
2020-10-30 11:41:15,880:INFO:Creating metrics dataframe
2020-10-30 11:41:16,018:INFO:Initializing create_model()
2020-10-30 11:41:16,019:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:41:16,019:INFO:Checking exceptions
2020-10-30 11:41:16,023:INFO:Importing libraries
2020-10-30 11:41:16,023:INFO:Copying training dataset
2020-10-30 11:41:16,024:INFO:Defining folds
2020-10-30 11:41:16,025:INFO:Declaring metric variables
2020-10-30 11:41:16,025:INFO:Importing untrained model
2020-10-30 11:41:16,025:INFO:Declaring custom model
2020-10-30 11:41:16,026:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:41:16,027:INFO:Cross validation set to False
2020-10-30 11:41:16,027:INFO:Fitting Model
2020-10-30 11:41:16,217:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-10-30 11:41:16,217:INFO:create_models() succesfully completed......................................
2020-10-30 11:41:16,521:INFO:Initializing create_model()
2020-10-30 11:41:16,522:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:41:16,522:INFO:Checking exceptions
2020-10-30 11:41:16,522:INFO:Importing libraries
2020-10-30 11:41:16,522:INFO:Copying training dataset
2020-10-30 11:41:16,523:INFO:Defining folds
2020-10-30 11:41:16,523:INFO:Declaring metric variables
2020-10-30 11:41:16,523:INFO:Importing untrained model
2020-10-30 11:41:16,523:INFO:Declaring custom model
2020-10-30 11:41:16,524:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:41:16,524:INFO:Cross validation set to False
2020-10-30 11:41:16,524:INFO:Fitting Model
2020-10-30 11:41:16,896:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-10-30 11:41:16,897:INFO:create_models() succesfully completed......................................
2020-10-30 11:41:17,161:INFO:Initializing create_model()
2020-10-30 11:41:17,162:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:41:17,162:INFO:Checking exceptions
2020-10-30 11:41:17,162:INFO:Importing libraries
2020-10-30 11:41:17,162:INFO:Copying training dataset
2020-10-30 11:41:17,162:INFO:Defining folds
2020-10-30 11:41:17,162:INFO:Declaring metric variables
2020-10-30 11:41:17,162:INFO:Importing untrained model
2020-10-30 11:41:17,162:INFO:Declaring custom model
2020-10-30 11:41:17,164:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:41:17,164:INFO:Cross validation set to False
2020-10-30 11:41:17,165:INFO:Fitting Model
2020-10-30 11:41:17,263:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:41:17,264:INFO:create_models() succesfully completed......................................
2020-10-30 11:41:17,450:INFO:Initializing create_model()
2020-10-30 11:41:17,450:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fc05fa3b100>, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:41:17,451:INFO:Checking exceptions
2020-10-30 11:41:17,451:INFO:Importing libraries
2020-10-30 11:41:17,451:INFO:Copying training dataset
2020-10-30 11:41:17,452:INFO:Defining folds
2020-10-30 11:41:17,452:INFO:Declaring metric variables
2020-10-30 11:41:17,452:INFO:Importing untrained model
2020-10-30 11:41:17,452:INFO:Declaring custom model
2020-10-30 11:41:17,452:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:41:17,453:INFO:Cross validation set to False
2020-10-30 11:41:17,453:INFO:Fitting Model
2020-10-30 11:41:20,159:INFO:<catboost.core.CatBoostClassifier object at 0x7fc05fb7aa30>
2020-10-30 11:41:20,160:INFO:create_models() succesfully completed......................................
2020-10-30 11:41:20,283:INFO:Initializing create_model()
2020-10-30 11:41:20,283:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 11:41:20,283:INFO:Checking exceptions
2020-10-30 11:41:20,283:INFO:Importing libraries
2020-10-30 11:41:20,284:INFO:Copying training dataset
2020-10-30 11:41:20,284:INFO:Defining folds
2020-10-30 11:41:20,285:INFO:Declaring metric variables
2020-10-30 11:41:20,285:INFO:Importing untrained model
2020-10-30 11:41:20,285:INFO:Declaring custom model
2020-10-30 11:41:20,287:INFO:Gradient Boosting Classifier Imported succesfully
2020-10-30 11:41:20,287:INFO:Cross validation set to False
2020-10-30 11:41:20,287:INFO:Fitting Model
2020-10-30 11:41:20,509:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-30 11:41:20,510:INFO:create_models() succesfully completed......................................
2020-10-30 11:41:20,829:INFO:create_model_container: 15
2020-10-30 11:41:20,830:INFO:master_model_container: 15
2020-10-30 11:41:20,830:INFO:display_container: 1
2020-10-30 11:41:20,864:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fc05fb7aa30>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)]
2020-10-30 11:41:20,864:INFO:compare_models() succesfully completed......................................
2020-10-30 11:47:22,127:INFO:Initializing tune_model()
2020-10-30 11:47:22,130:INFO:tune_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:47:22,130:INFO:Checking exceptions
2020-10-30 11:47:23,087:INFO:Preparing display monitor
2020-10-30 11:47:23,150:INFO:Copying training dataset
2020-10-30 11:47:23,153:INFO:Checking base model
2020-10-30 11:47:23,165:INFO:Base model : Extreme Gradient Boosting
2020-10-30 11:47:23,175:INFO:Declaring metric variables
2020-10-30 11:47:23,186:INFO:Defining Hyperparameters
2020-10-30 11:47:23,666:INFO:Tuning with n_jobs=-1
2020-10-30 11:47:23,669:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:48:08,640:INFO:best_params: {'actual_estimator__learning_rate': 0.47889391701936085, 'actual_estimator__n_estimators': 136, 'actual_estimator__subsample': 0.9953855689970712, 'actual_estimator__max_depth': 3, 'actual_estimator__colsample_bytree': 0.7494160699261587, 'actual_estimator__min_child_weight': 4, 'actual_estimator__reg_alpha': 0.0883671130992619, 'actual_estimator__reg_lambda': 1.5358311806517544e-06, 'actual_estimator__scale_pos_weight': 13.097867660543319}
2020-10-30 11:48:08,640:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:48:08,647:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:48:08,649:INFO:Random search completed
2020-10-30 11:48:08,650:INFO:SubProcess create_model() called ==================================
2020-10-30 11:48:08,652:INFO:Initializing create_model()
2020-10-30 11:48:08,653:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc061ac80a0>, kwargs={'learning_rate': 0.47889391701936085, 'n_estimators': 136, 'subsample': 0.9953855689970712, 'max_depth': 3, 'colsample_bytree': 0.7494160699261587, 'min_child_weight': 4, 'reg_alpha': 0.0883671130992619, 'reg_lambda': 1.5358311806517544e-06, 'scale_pos_weight': 13.097867660543319})
2020-10-30 11:48:08,653:INFO:Checking exceptions
2020-10-30 11:48:08,654:INFO:Importing libraries
2020-10-30 11:48:08,654:INFO:Copying training dataset
2020-10-30 11:48:08,656:INFO:Defining folds
2020-10-30 11:48:08,656:INFO:Declaring metric variables
2020-10-30 11:48:08,689:INFO:Importing untrained model
2020-10-30 11:48:08,689:INFO:Declaring custom model
2020-10-30 11:48:08,712:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-30 11:48:08,744:INFO:Starting cross validation
2020-10-30 11:48:08,745:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:48:14,980:INFO:Calculating mean and std
2020-10-30 11:48:14,997:INFO:Creating metrics dataframe
2020-10-30 11:48:15,056:INFO:Finalizing model
2020-10-30 11:48:15,149:INFO:Uploading results into container
2020-10-30 11:48:15,150:INFO:Uploading model into container now
2020-10-30 11:48:15,151:INFO:create_model_container: 16
2020-10-30 11:48:15,151:INFO:master_model_container: 16
2020-10-30 11:48:15,151:INFO:display_container: 2
2020-10-30 11:48:15,155:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.7494160699261587, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.47889391701936085, max_delta_step=0, max_depth=3,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=136, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0883671130992619, reg_lambda=1.5358311806517544e-06,
              scale_pos_weight=13.097867660543319, subsample=0.9953855689970712,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-10-30 11:48:15,155:INFO:create_model() succesfully completed......................................
2020-10-30 11:48:15,741:INFO:SubProcess create_model() end ==================================
2020-10-30 11:48:15,788:INFO:create_model_container: 16
2020-10-30 11:48:15,788:INFO:master_model_container: 16
2020-10-30 11:48:15,788:INFO:display_container: 2
2020-10-30 11:48:15,793:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.7494160699261587, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.47889391701936085, max_delta_step=0, max_depth=3,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=136, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0883671130992619, reg_lambda=1.5358311806517544e-06,
              scale_pos_weight=13.097867660543319, subsample=0.9953855689970712,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-10-30 11:48:15,794:INFO:tune_model() succesfully completed......................................
2020-10-30 11:48:16,095:INFO:Initializing tune_model()
2020-10-30 11:48:16,096:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:48:16,096:INFO:Checking exceptions
2020-10-30 11:48:16,097:INFO:Preparing display monitor
2020-10-30 11:48:16,128:INFO:Copying training dataset
2020-10-30 11:48:16,129:INFO:Checking base model
2020-10-30 11:48:16,130:INFO:Base model : Random Forest Classifier
2020-10-30 11:48:16,139:INFO:Declaring metric variables
2020-10-30 11:48:16,173:INFO:Defining Hyperparameters
2020-10-30 11:48:16,352:INFO:Tuning with n_jobs=-1
2020-10-30 11:48:16,354:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:51:33,158:INFO:best_params: {'actual_estimator__n_estimators': 256, 'actual_estimator__max_depth': 11, 'actual_estimator__min_impurity_decrease': 9.690908269849155e-06, 'actual_estimator__max_features': 0.47879757779339027, 'actual_estimator__min_samples_split': 3, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__bootstrap': False, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced_subsample'}
2020-10-30 11:51:33,163:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:51:33,164:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:51:33,164:INFO:Random search completed
2020-10-30 11:51:33,164:INFO:SubProcess create_model() called ==================================
2020-10-30 11:51:33,167:INFO:Initializing create_model()
2020-10-30 11:51:33,167:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc044695940>, kwargs={'n_estimators': 256, 'max_depth': 11, 'min_impurity_decrease': 9.690908269849155e-06, 'max_features': 0.47879757779339027, 'min_samples_split': 3, 'min_samples_leaf': 4, 'bootstrap': False, 'criterion': 'entropy', 'class_weight': 'balanced_subsample'})
2020-10-30 11:51:33,167:INFO:Checking exceptions
2020-10-30 11:51:33,169:INFO:Importing libraries
2020-10-30 11:51:33,169:INFO:Copying training dataset
2020-10-30 11:51:33,171:INFO:Defining folds
2020-10-30 11:51:33,171:INFO:Declaring metric variables
2020-10-30 11:51:33,192:INFO:Importing untrained model
2020-10-30 11:51:33,193:INFO:Declaring custom model
2020-10-30 11:51:33,202:INFO:Random Forest Classifier Imported succesfully
2020-10-30 11:51:33,217:INFO:Starting cross validation
2020-10-30 11:51:33,218:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:51:38,291:INFO:Calculating mean and std
2020-10-30 11:51:38,298:INFO:Creating metrics dataframe
2020-10-30 11:51:38,332:INFO:Finalizing model
2020-10-30 11:51:38,837:INFO:Uploading results into container
2020-10-30 11:51:38,837:INFO:Uploading model into container now
2020-10-30 11:51:38,837:INFO:create_model_container: 17
2020-10-30 11:51:38,837:INFO:master_model_container: 17
2020-10-30 11:51:38,837:INFO:display_container: 3
2020-10-30 11:51:38,838:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.47879757779339027,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=9.690908269849155e-06,
                       min_impurity_split=None, min_samples_leaf=4,
                       min_samples_split=3, min_weight_fraction_leaf=0.0,
                       n_estimators=256, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-10-30 11:51:38,838:INFO:create_model() succesfully completed......................................
2020-10-30 11:51:39,249:INFO:SubProcess create_model() end ==================================
2020-10-30 11:51:39,275:INFO:create_model_container: 17
2020-10-30 11:51:39,276:INFO:master_model_container: 17
2020-10-30 11:51:39,276:INFO:display_container: 3
2020-10-30 11:51:39,276:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.47879757779339027,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=9.690908269849155e-06,
                       min_impurity_split=None, min_samples_leaf=4,
                       min_samples_split=3, min_weight_fraction_leaf=0.0,
                       n_estimators=256, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-10-30 11:51:39,277:INFO:tune_model() succesfully completed......................................
2020-10-30 11:51:39,368:INFO:Initializing tune_model()
2020-10-30 11:51:39,368:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:51:39,368:INFO:Checking exceptions
2020-10-30 11:51:39,370:INFO:Preparing display monitor
2020-10-30 11:51:39,388:INFO:Copying training dataset
2020-10-30 11:51:39,389:INFO:Checking base model
2020-10-30 11:51:39,390:INFO:Base model : Light Gradient Boosting Machine
2020-10-30 11:51:39,397:INFO:Declaring metric variables
2020-10-30 11:51:39,405:INFO:Defining Hyperparameters
2020-10-30 11:51:39,504:INFO:Tuning with n_jobs=-1
2020-10-30 11:51:39,507:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:52:01,513:INFO:best_params: {'actual_estimator__num_leaves': 95, 'actual_estimator__learning_rate': 0.0035480791943212496, 'actual_estimator__n_estimators': 24, 'actual_estimator__min_split_gain': 0.13169036589200145, 'actual_estimator__reg_alpha': 4.636102684324233e-06, 'actual_estimator__reg_lambda': 4.12327365672731e-09, 'actual_estimator__min_data_in_leaf': 3688, 'actual_estimator__feature_fraction': 0.8436335283710661, 'actual_estimator__bagging_fraction': 0.5787165975935351, 'actual_estimator__bagging_freq': 7, 'actual_estimator__min_child_samples': 59}
2020-10-30 11:52:01,514:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:52:01,515:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:52:01,518:INFO:Random search completed
2020-10-30 11:52:01,518:INFO:SubProcess create_model() called ==================================
2020-10-30 11:52:01,520:INFO:Initializing create_model()
2020-10-30 11:52:01,520:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc0451b7ee0>, kwargs={'num_leaves': 95, 'learning_rate': 0.0035480791943212496, 'n_estimators': 24, 'min_split_gain': 0.13169036589200145, 'reg_alpha': 4.636102684324233e-06, 'reg_lambda': 4.12327365672731e-09, 'min_data_in_leaf': 3688, 'feature_fraction': 0.8436335283710661, 'bagging_fraction': 0.5787165975935351, 'bagging_freq': 7, 'min_child_samples': 59})
2020-10-30 11:52:01,521:INFO:Checking exceptions
2020-10-30 11:52:01,521:INFO:Importing libraries
2020-10-30 11:52:01,521:INFO:Copying training dataset
2020-10-30 11:52:01,523:INFO:Defining folds
2020-10-30 11:52:01,523:INFO:Declaring metric variables
2020-10-30 11:52:01,539:INFO:Importing untrained model
2020-10-30 11:52:01,540:INFO:Declaring custom model
2020-10-30 11:52:01,554:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-30 11:52:01,575:INFO:Starting cross validation
2020-10-30 11:52:01,576:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:52:04,679:INFO:Calculating mean and std
2020-10-30 11:52:04,681:INFO:Creating metrics dataframe
2020-10-30 11:52:04,703:INFO:Finalizing model
2020-10-30 11:52:04,721:INFO:Uploading results into container
2020-10-30 11:52:04,721:INFO:Uploading model into container now
2020-10-30 11:52:04,721:INFO:create_model_container: 18
2020-10-30 11:52:04,721:INFO:master_model_container: 18
2020-10-30 11:52:04,721:INFO:display_container: 4
2020-10-30 11:52:04,722:INFO:LGBMClassifier(bagging_fraction=0.5787165975935351, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8436335283710661, importance_type='split',
               learning_rate=0.0035480791943212496, max_depth=-1,
               min_child_samples=59, min_child_weight=0.001,
               min_data_in_leaf=3688, min_split_gain=0.13169036589200145,
               n_estimators=24, n_jobs=-1, num_leaves=95, objective=None,
               random_state=786, reg_alpha=4.636102684324233e-06,
               reg_lambda=4.12327365672731e-09, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:52:04,722:INFO:create_model() succesfully completed......................................
2020-10-30 11:52:05,112:INFO:SubProcess create_model() end ==================================
2020-10-30 11:52:05,147:INFO:create_model_container: 18
2020-10-30 11:52:05,147:INFO:master_model_container: 18
2020-10-30 11:52:05,147:INFO:display_container: 4
2020-10-30 11:52:05,148:INFO:LGBMClassifier(bagging_fraction=0.5787165975935351, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8436335283710661, importance_type='split',
               learning_rate=0.0035480791943212496, max_depth=-1,
               min_child_samples=59, min_child_weight=0.001,
               min_data_in_leaf=3688, min_split_gain=0.13169036589200145,
               n_estimators=24, n_jobs=-1, num_leaves=95, objective=None,
               random_state=786, reg_alpha=4.636102684324233e-06,
               reg_lambda=4.12327365672731e-09, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-10-30 11:52:05,148:INFO:tune_model() succesfully completed......................................
2020-10-30 11:52:05,268:INFO:Initializing tune_model()
2020-10-30 11:52:05,268:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fc05fb7aa30>, fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-30 11:52:05,268:INFO:Checking exceptions
2020-10-30 11:52:05,270:INFO:Preparing display monitor
2020-10-30 11:52:05,293:INFO:Copying training dataset
2020-10-30 11:52:05,296:INFO:Checking base model
2020-10-30 11:52:05,299:INFO:Base model : CatBoost Classifier
2020-10-30 11:52:05,309:INFO:Declaring metric variables
2020-10-30 11:52:05,319:INFO:Defining Hyperparameters
2020-10-30 11:52:05,462:INFO:Tuning with n_jobs=-1
2020-10-30 11:52:05,464:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-30 11:57:00,939:INFO:best_params: {'actual_estimator__depth': 5, 'actual_estimator__n_estimators': 284, 'actual_estimator__random_strength': 0.017671867649931273, 'actual_estimator__l2_leaf_reg': 1}
2020-10-30 11:57:00,941:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-30 11:57:00,942:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-30 11:57:00,945:INFO:Random search completed
2020-10-30 11:57:00,945:INFO:SubProcess create_model() called ==================================
2020-10-30 11:57:00,949:INFO:Initializing create_model()
2020-10-30 11:57:00,949:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fc044b5bc40>, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc061a91ee0>, kwargs={'depth': 5, 'n_estimators': 284, 'random_strength': 0.017671867649931273, 'l2_leaf_reg': 1})
2020-10-30 11:57:00,949:INFO:Checking exceptions
2020-10-30 11:57:00,950:INFO:Importing libraries
2020-10-30 11:57:00,950:INFO:Copying training dataset
2020-10-30 11:57:00,954:INFO:Defining folds
2020-10-30 11:57:00,954:INFO:Declaring metric variables
2020-10-30 11:57:00,981:INFO:Importing untrained model
2020-10-30 11:57:00,981:INFO:Declaring custom model
2020-10-30 11:57:00,993:INFO:CatBoost Classifier Imported succesfully
2020-10-30 11:57:01,019:INFO:Starting cross validation
2020-10-30 11:57:01,021:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:57:08,874:INFO:Calculating mean and std
2020-10-30 11:57:08,894:INFO:Creating metrics dataframe
2020-10-30 11:57:08,969:INFO:Finalizing model
2020-10-30 11:57:11,604:INFO:Uploading results into container
2020-10-30 11:57:11,604:INFO:Uploading model into container now
2020-10-30 11:57:11,604:INFO:create_model_container: 19
2020-10-30 11:57:11,604:INFO:master_model_container: 19
2020-10-30 11:57:11,604:INFO:display_container: 5
2020-10-30 11:57:11,604:INFO:<catboost.core.CatBoostClassifier object at 0x7fc044b5e070>
2020-10-30 11:57:11,605:INFO:create_model() succesfully completed......................................
2020-10-30 11:57:12,339:INFO:SubProcess create_model() end ==================================
2020-10-30 11:57:12,384:INFO:create_model_container: 19
2020-10-30 11:57:12,384:INFO:master_model_container: 19
2020-10-30 11:57:12,385:INFO:display_container: 5
2020-10-30 11:57:12,385:INFO:<catboost.core.CatBoostClassifier object at 0x7fc044b5e070>
2020-10-30 11:57:12,385:INFO:tune_model() succesfully completed......................................
2020-10-30 11:57:35,456:INFO:Initializing blend_models()
2020-10-30 11:57:35,458:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.7494160699261587, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.47889391701936085, max_delta_step=0, max_depth=3,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=136, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0883671130992619, reg_lambda=1.5358311806517544e-06,
              scale_pos_weight=13.097867660543319, subsample=0.9953855689970712,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.47879757779339027,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=9.690908269849155e-06,
                       min_impurity_split=None, min_samples_leaf=4,
                       min_samples_split=3, min_weight_fraction_leaf=0.0,
                       n_estimators=256, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), LGBMClassifier(bagging_fraction=0.5787165975935351, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8436335283710661, importance_type='split',
               learning_rate=0.0035480791943212496, max_depth=-1,
               min_child_samples=59, min_child_weight=0.001,
               min_data_in_leaf=3688, min_split_gain=0.13169036589200145,
               n_estimators=24, n_jobs=-1, num_leaves=95, objective=None,
               random_state=786, reg_alpha=4.636102684324233e-06,
               reg_lambda=4.12327365672731e-09, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-10-30 11:57:35,458:INFO:Checking exceptions
2020-10-30 11:57:35,469:INFO:Preparing display monitor
2020-10-30 11:57:35,507:INFO:Importing libraries
2020-10-30 11:57:35,509:INFO:Copying training dataset
2020-10-30 11:57:35,520:INFO:Getting model names
2020-10-30 11:57:35,534:INFO:SubProcess create_model() called ==================================
2020-10-30 11:57:35,548:INFO:Initializing create_model()
2020-10-30 11:57:35,548:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05fa05fd0>, kwargs={})
2020-10-30 11:57:35,548:INFO:Checking exceptions
2020-10-30 11:57:35,548:INFO:Importing libraries
2020-10-30 11:57:35,549:INFO:Copying training dataset
2020-10-30 11:57:35,550:INFO:Defining folds
2020-10-30 11:57:35,550:INFO:Declaring metric variables
2020-10-30 11:57:35,561:INFO:Importing untrained model
2020-10-30 11:57:35,561:INFO:Declaring custom model
2020-10-30 11:57:35,576:INFO:Voting Classifier Imported succesfully
2020-10-30 11:57:35,614:INFO:Starting cross validation
2020-10-30 11:57:35,623:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 11:57:43,127:INFO:Calculating mean and std
2020-10-30 11:57:43,137:INFO:Creating metrics dataframe
2020-10-30 11:57:43,177:INFO:Finalizing model
2020-10-30 11:57:44,751:INFO:Uploading results into container
2020-10-30 11:57:44,751:INFO:Uploading model into container now
2020-10-30 11:57:44,751:INFO:create_model_container: 20
2020-10-30 11:57:44,751:INFO:master_model_container: 20
2020-10-30 11:57:44,751:INFO:display_container: 6
2020-10-30 11:57:44,763:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1])
2020-10-30 11:57:44,763:INFO:create_model() succesfully completed......................................
2020-10-30 11:57:45,171:INFO:SubProcess create_model() end ==================================
2020-10-30 11:57:45,201:INFO:create_model_container: 20
2020-10-30 11:57:45,201:INFO:master_model_container: 20
2020-10-30 11:57:45,201:INFO:display_container: 6
2020-10-30 11:57:45,212:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1])
2020-10-30 11:57:45,213:INFO:blend_models() succesfully completed......................................
2020-10-30 11:57:51,138:INFO:Initializing optimize_threshold()
2020-10-30 11:57:51,139:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=15, false_positive=0, false_negative=-50)
2020-10-30 11:57:51,139:INFO:Importing libraries
2020-10-30 11:57:51,139:INFO:Checking exceptions
2020-10-30 11:57:51,210:INFO:Defining loss function
2020-10-30 11:57:51,210:INFO:Iteration starts at 0
2020-10-30 11:57:51,915:INFO:Figure ready for render
2020-10-30 11:57:52,081:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 11:58:34,270:INFO:Initializing predict_model()
2020-10-30 11:58:34,271:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=None, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:34,271:INFO:Checking exceptions
2020-10-30 11:58:34,271:INFO:Preloading libraries
2020-10-30 11:58:34,273:INFO:Preparing display monitor
2020-10-30 11:58:54,488:INFO:Initializing predict_model()
2020-10-30 11:58:54,490:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:54,490:INFO:Checking exceptions
2020-10-30 11:58:54,490:INFO:Preloading libraries
2020-10-30 11:58:54,490:INFO:Preparing display monitor
2020-10-30 11:58:55,132:INFO:Initializing predict_model()
2020-10-30 11:58:55,132:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:55,132:INFO:Checking exceptions
2020-10-30 11:58:55,132:INFO:Preloading libraries
2020-10-30 11:58:55,132:INFO:Preparing display monitor
2020-10-30 11:58:55,371:INFO:Initializing predict_model()
2020-10-30 11:58:55,371:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:55,371:INFO:Checking exceptions
2020-10-30 11:58:55,372:INFO:Preloading libraries
2020-10-30 11:58:55,372:INFO:Preparing display monitor
2020-10-30 11:58:55,619:INFO:Initializing predict_model()
2020-10-30 11:58:55,620:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:55,620:INFO:Checking exceptions
2020-10-30 11:58:55,620:INFO:Preloading libraries
2020-10-30 11:58:55,620:INFO:Preparing display monitor
2020-10-30 11:58:55,976:INFO:Initializing predict_model()
2020-10-30 11:58:55,977:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:55,977:INFO:Checking exceptions
2020-10-30 11:58:55,977:INFO:Preloading libraries
2020-10-30 11:58:55,977:INFO:Preparing display monitor
2020-10-30 11:58:56,227:INFO:Initializing predict_model()
2020-10-30 11:58:56,227:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:56,227:INFO:Checking exceptions
2020-10-30 11:58:56,227:INFO:Preloading libraries
2020-10-30 11:58:56,227:INFO:Preparing display monitor
2020-10-30 11:58:56,436:INFO:Initializing predict_model()
2020-10-30 11:58:56,436:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 11:58:56,436:INFO:Checking exceptions
2020-10-30 11:58:56,436:INFO:Preloading libraries
2020-10-30 11:58:56,436:INFO:Preparing display monitor
2020-10-30 12:00:07,079:INFO:Initializing predict_model()
2020-10-30 12:00:07,081:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:07,081:INFO:Checking exceptions
2020-10-30 12:00:07,081:INFO:Preloading libraries
2020-10-30 12:00:07,085:INFO:Preparing display monitor
2020-10-30 12:00:07,908:INFO:Initializing predict_model()
2020-10-30 12:00:07,908:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:07,908:INFO:Checking exceptions
2020-10-30 12:00:07,908:INFO:Preloading libraries
2020-10-30 12:00:07,908:INFO:Preparing display monitor
2020-10-30 12:00:08,174:INFO:Initializing predict_model()
2020-10-30 12:00:08,174:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:08,174:INFO:Checking exceptions
2020-10-30 12:00:08,174:INFO:Preloading libraries
2020-10-30 12:00:08,174:INFO:Preparing display monitor
2020-10-30 12:00:08,419:INFO:Initializing predict_model()
2020-10-30 12:00:08,419:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:08,419:INFO:Checking exceptions
2020-10-30 12:00:08,419:INFO:Preloading libraries
2020-10-30 12:00:08,420:INFO:Preparing display monitor
2020-10-30 12:00:08,685:INFO:Initializing predict_model()
2020-10-30 12:00:08,685:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:08,685:INFO:Checking exceptions
2020-10-30 12:00:08,685:INFO:Preloading libraries
2020-10-30 12:00:08,686:INFO:Preparing display monitor
2020-10-30 12:00:09,014:INFO:Initializing predict_model()
2020-10-30 12:00:09,015:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:09,015:INFO:Checking exceptions
2020-10-30 12:00:09,015:INFO:Preloading libraries
2020-10-30 12:00:09,015:INFO:Preparing display monitor
2020-10-30 12:00:09,319:INFO:Initializing predict_model()
2020-10-30 12:00:09,319:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:09,319:INFO:Checking exceptions
2020-10-30 12:00:09,319:INFO:Preloading libraries
2020-10-30 12:00:09,319:INFO:Preparing display monitor
2020-10-30 12:00:09,604:INFO:Initializing predict_model()
2020-10-30 12:00:09,604:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:09,604:INFO:Checking exceptions
2020-10-30 12:00:09,605:INFO:Preloading libraries
2020-10-30 12:00:09,605:INFO:Preparing display monitor
2020-10-30 12:00:09,911:INFO:Initializing predict_model()
2020-10-30 12:00:09,911:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:09,911:INFO:Checking exceptions
2020-10-30 12:00:09,911:INFO:Preloading libraries
2020-10-30 12:00:09,912:INFO:Preparing display monitor
2020-10-30 12:00:10,197:INFO:Initializing predict_model()
2020-10-30 12:00:10,197:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:10,197:INFO:Checking exceptions
2020-10-30 12:00:10,198:INFO:Preloading libraries
2020-10-30 12:00:10,198:INFO:Preparing display monitor
2020-10-30 12:00:10,455:INFO:Initializing predict_model()
2020-10-30 12:00:10,455:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.57, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:10,455:INFO:Checking exceptions
2020-10-30 12:00:10,455:INFO:Preloading libraries
2020-10-30 12:00:10,455:INFO:Preparing display monitor
2020-10-30 12:00:34,698:INFO:Initializing optimize_threshold()
2020-10-30 12:00:34,700:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=0, false_negative=0)
2020-10-30 12:00:34,700:INFO:Importing libraries
2020-10-30 12:00:34,701:INFO:Checking exceptions
2020-10-30 12:00:34,829:INFO:Defining loss function
2020-10-30 12:00:34,829:INFO:Iteration starts at 0
2020-10-30 12:00:35,008:INFO:Figure ready for render
2020-10-30 12:00:35,024:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:00:39,762:INFO:Initializing predict_model()
2020-10-30 12:00:39,763:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:39,763:INFO:Checking exceptions
2020-10-30 12:00:39,763:INFO:Preloading libraries
2020-10-30 12:00:39,764:INFO:Preparing display monitor
2020-10-30 12:00:40,307:INFO:Initializing predict_model()
2020-10-30 12:00:40,307:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:40,307:INFO:Checking exceptions
2020-10-30 12:00:40,308:INFO:Preloading libraries
2020-10-30 12:00:40,308:INFO:Preparing display monitor
2020-10-30 12:00:40,589:INFO:Initializing predict_model()
2020-10-30 12:00:40,589:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:40,589:INFO:Checking exceptions
2020-10-30 12:00:40,589:INFO:Preloading libraries
2020-10-30 12:00:40,590:INFO:Preparing display monitor
2020-10-30 12:00:40,915:INFO:Initializing predict_model()
2020-10-30 12:00:40,916:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:40,916:INFO:Checking exceptions
2020-10-30 12:00:40,916:INFO:Preloading libraries
2020-10-30 12:00:40,916:INFO:Preparing display monitor
2020-10-30 12:00:41,203:INFO:Initializing predict_model()
2020-10-30 12:00:41,203:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:41,204:INFO:Checking exceptions
2020-10-30 12:00:41,204:INFO:Preloading libraries
2020-10-30 12:00:41,204:INFO:Preparing display monitor
2020-10-30 12:00:41,518:INFO:Initializing predict_model()
2020-10-30 12:00:41,519:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:41,519:INFO:Checking exceptions
2020-10-30 12:00:41,519:INFO:Preloading libraries
2020-10-30 12:00:41,519:INFO:Preparing display monitor
2020-10-30 12:00:41,819:INFO:Initializing predict_model()
2020-10-30 12:00:41,819:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:41,820:INFO:Checking exceptions
2020-10-30 12:00:41,820:INFO:Preloading libraries
2020-10-30 12:00:41,820:INFO:Preparing display monitor
2020-10-30 12:00:42,136:INFO:Initializing predict_model()
2020-10-30 12:00:42,136:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:42,136:INFO:Checking exceptions
2020-10-30 12:00:42,136:INFO:Preloading libraries
2020-10-30 12:00:42,137:INFO:Preparing display monitor
2020-10-30 12:00:42,457:INFO:Initializing predict_model()
2020-10-30 12:00:42,457:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:42,457:INFO:Checking exceptions
2020-10-30 12:00:42,457:INFO:Preloading libraries
2020-10-30 12:00:42,457:INFO:Preparing display monitor
2020-10-30 12:00:42,758:INFO:Initializing predict_model()
2020-10-30 12:00:42,758:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:42,758:INFO:Checking exceptions
2020-10-30 12:00:42,758:INFO:Preloading libraries
2020-10-30 12:00:42,759:INFO:Preparing display monitor
2020-10-30 12:00:43,078:INFO:Initializing predict_model()
2020-10-30 12:00:43,079:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.57, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:00:43,079:INFO:Checking exceptions
2020-10-30 12:00:43,079:INFO:Preloading libraries
2020-10-30 12:00:43,079:INFO:Preparing display monitor
2020-10-30 12:00:47,117:INFO:Initializing optimize_threshold()
2020-10-30 12:00:47,118:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=15, false_positive=0, false_negative=-50)
2020-10-30 12:00:47,118:INFO:Importing libraries
2020-10-30 12:00:47,118:INFO:Checking exceptions
2020-10-30 12:00:47,163:INFO:Defining loss function
2020-10-30 12:00:47,163:INFO:Iteration starts at 0
2020-10-30 12:00:47,202:INFO:Figure ready for render
2020-10-30 12:00:47,207:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:03:03,852:INFO:Initializing optimize_threshold()
2020-10-30 12:03:03,855:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=100, true_negative=100, false_positive=0, false_negative=100)
2020-10-30 12:03:03,856:INFO:Importing libraries
2020-10-30 12:03:03,858:INFO:Checking exceptions
2020-10-30 12:03:03,984:INFO:Defining loss function
2020-10-30 12:03:03,984:INFO:Iteration starts at 0
2020-10-30 12:03:04,078:INFO:Figure ready for render
2020-10-30 12:03:04,088:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:03:15,767:INFO:Initializing optimize_threshold()
2020-10-30 12:03:15,768:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=100, true_negative=100, false_positive=-100, false_negative=100)
2020-10-30 12:03:15,768:INFO:Importing libraries
2020-10-30 12:03:15,769:INFO:Checking exceptions
2020-10-30 12:03:15,878:INFO:Defining loss function
2020-10-30 12:03:15,878:INFO:Iteration starts at 0
2020-10-30 12:03:15,942:INFO:Figure ready for render
2020-10-30 12:03:15,952:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:03:38,417:INFO:Initializing predict_model()
2020-10-30 12:03:38,418:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:38,418:INFO:Checking exceptions
2020-10-30 12:03:38,418:INFO:Preloading libraries
2020-10-30 12:03:38,419:INFO:Preparing display monitor
2020-10-30 12:03:39,420:INFO:Initializing predict_model()
2020-10-30 12:03:39,420:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:39,421:INFO:Checking exceptions
2020-10-30 12:03:39,421:INFO:Preloading libraries
2020-10-30 12:03:39,421:INFO:Preparing display monitor
2020-10-30 12:03:39,696:INFO:Initializing predict_model()
2020-10-30 12:03:39,696:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:39,696:INFO:Checking exceptions
2020-10-30 12:03:39,696:INFO:Preloading libraries
2020-10-30 12:03:39,696:INFO:Preparing display monitor
2020-10-30 12:03:39,945:INFO:Initializing predict_model()
2020-10-30 12:03:39,945:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:39,945:INFO:Checking exceptions
2020-10-30 12:03:39,945:INFO:Preloading libraries
2020-10-30 12:03:39,946:INFO:Preparing display monitor
2020-10-30 12:03:40,192:INFO:Initializing predict_model()
2020-10-30 12:03:40,192:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:40,192:INFO:Checking exceptions
2020-10-30 12:03:40,192:INFO:Preloading libraries
2020-10-30 12:03:40,192:INFO:Preparing display monitor
2020-10-30 12:03:40,479:INFO:Initializing predict_model()
2020-10-30 12:03:40,479:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:40,480:INFO:Checking exceptions
2020-10-30 12:03:40,480:INFO:Preloading libraries
2020-10-30 12:03:40,480:INFO:Preparing display monitor
2020-10-30 12:03:40,739:INFO:Initializing predict_model()
2020-10-30 12:03:40,739:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:40,740:INFO:Checking exceptions
2020-10-30 12:03:40,740:INFO:Preloading libraries
2020-10-30 12:03:40,740:INFO:Preparing display monitor
2020-10-30 12:03:41,037:INFO:Initializing predict_model()
2020-10-30 12:03:41,038:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:41,038:INFO:Checking exceptions
2020-10-30 12:03:41,038:INFO:Preloading libraries
2020-10-30 12:03:41,038:INFO:Preparing display monitor
2020-10-30 12:03:41,330:INFO:Initializing predict_model()
2020-10-30 12:03:41,331:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:41,331:INFO:Checking exceptions
2020-10-30 12:03:41,331:INFO:Preloading libraries
2020-10-30 12:03:41,332:INFO:Preparing display monitor
2020-10-30 12:03:41,627:INFO:Initializing predict_model()
2020-10-30 12:03:41,627:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:41,627:INFO:Checking exceptions
2020-10-30 12:03:41,628:INFO:Preloading libraries
2020-10-30 12:03:41,628:INFO:Preparing display monitor
2020-10-30 12:03:41,884:INFO:Initializing predict_model()
2020-10-30 12:03:41,884:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:41,884:INFO:Checking exceptions
2020-10-30 12:03:41,884:INFO:Preloading libraries
2020-10-30 12:03:41,884:INFO:Preparing display monitor
2020-10-30 12:03:49,475:INFO:Initializing predict_model()
2020-10-30 12:03:49,475:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:49,475:INFO:Checking exceptions
2020-10-30 12:03:49,476:INFO:Preloading libraries
2020-10-30 12:03:49,476:INFO:Preparing display monitor
2020-10-30 12:03:50,160:INFO:Initializing predict_model()
2020-10-30 12:03:50,160:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:50,160:INFO:Checking exceptions
2020-10-30 12:03:50,160:INFO:Preloading libraries
2020-10-30 12:03:50,160:INFO:Preparing display monitor
2020-10-30 12:03:50,441:INFO:Initializing predict_model()
2020-10-30 12:03:50,441:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:50,441:INFO:Checking exceptions
2020-10-30 12:03:50,441:INFO:Preloading libraries
2020-10-30 12:03:50,442:INFO:Preparing display monitor
2020-10-30 12:03:50,721:INFO:Initializing predict_model()
2020-10-30 12:03:50,721:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:50,721:INFO:Checking exceptions
2020-10-30 12:03:50,721:INFO:Preloading libraries
2020-10-30 12:03:50,721:INFO:Preparing display monitor
2020-10-30 12:03:51,048:INFO:Initializing predict_model()
2020-10-30 12:03:51,048:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:51,048:INFO:Checking exceptions
2020-10-30 12:03:51,048:INFO:Preloading libraries
2020-10-30 12:03:51,048:INFO:Preparing display monitor
2020-10-30 12:03:51,280:INFO:Initializing predict_model()
2020-10-30 12:03:51,280:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:51,281:INFO:Checking exceptions
2020-10-30 12:03:51,281:INFO:Preloading libraries
2020-10-30 12:03:51,281:INFO:Preparing display monitor
2020-10-30 12:03:51,521:INFO:Initializing predict_model()
2020-10-30 12:03:51,521:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:51,521:INFO:Checking exceptions
2020-10-30 12:03:51,521:INFO:Preloading libraries
2020-10-30 12:03:51,522:INFO:Preparing display monitor
2020-10-30 12:03:51,798:INFO:Initializing predict_model()
2020-10-30 12:03:51,798:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:51,798:INFO:Checking exceptions
2020-10-30 12:03:51,798:INFO:Preloading libraries
2020-10-30 12:03:51,798:INFO:Preparing display monitor
2020-10-30 12:03:52,047:INFO:Initializing predict_model()
2020-10-30 12:03:52,047:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:52,047:INFO:Checking exceptions
2020-10-30 12:03:52,047:INFO:Preloading libraries
2020-10-30 12:03:52,048:INFO:Preparing display monitor
2020-10-30 12:03:52,303:INFO:Initializing predict_model()
2020-10-30 12:03:52,304:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:52,304:INFO:Checking exceptions
2020-10-30 12:03:52,304:INFO:Preloading libraries
2020-10-30 12:03:52,304:INFO:Preparing display monitor
2020-10-30 12:03:52,629:INFO:Initializing predict_model()
2020-10-30 12:03:52,629:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.75, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:52,629:INFO:Checking exceptions
2020-10-30 12:03:52,629:INFO:Preloading libraries
2020-10-30 12:03:52,630:INFO:Preparing display monitor
2020-10-30 12:03:58,997:INFO:Initializing predict_model()
2020-10-30 12:03:58,997:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:58,998:INFO:Checking exceptions
2020-10-30 12:03:58,998:INFO:Preloading libraries
2020-10-30 12:03:58,998:INFO:Preparing display monitor
2020-10-30 12:03:59,837:INFO:Initializing predict_model()
2020-10-30 12:03:59,837:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:03:59,837:INFO:Checking exceptions
2020-10-30 12:03:59,837:INFO:Preloading libraries
2020-10-30 12:03:59,837:INFO:Preparing display monitor
2020-10-30 12:04:00,102:INFO:Initializing predict_model()
2020-10-30 12:04:00,102:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:00,102:INFO:Checking exceptions
2020-10-30 12:04:00,102:INFO:Preloading libraries
2020-10-30 12:04:00,102:INFO:Preparing display monitor
2020-10-30 12:04:00,370:INFO:Initializing predict_model()
2020-10-30 12:04:00,371:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:00,371:INFO:Checking exceptions
2020-10-30 12:04:00,371:INFO:Preloading libraries
2020-10-30 12:04:00,371:INFO:Preparing display monitor
2020-10-30 12:04:00,693:INFO:Initializing predict_model()
2020-10-30 12:04:00,694:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:00,694:INFO:Checking exceptions
2020-10-30 12:04:00,694:INFO:Preloading libraries
2020-10-30 12:04:00,694:INFO:Preparing display monitor
2020-10-30 12:04:01,003:INFO:Initializing predict_model()
2020-10-30 12:04:01,004:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:01,004:INFO:Checking exceptions
2020-10-30 12:04:01,004:INFO:Preloading libraries
2020-10-30 12:04:01,004:INFO:Preparing display monitor
2020-10-30 12:04:01,335:INFO:Initializing predict_model()
2020-10-30 12:04:01,335:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:01,335:INFO:Checking exceptions
2020-10-30 12:04:01,335:INFO:Preloading libraries
2020-10-30 12:04:01,335:INFO:Preparing display monitor
2020-10-30 12:04:01,611:INFO:Initializing predict_model()
2020-10-30 12:04:01,611:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:01,611:INFO:Checking exceptions
2020-10-30 12:04:01,611:INFO:Preloading libraries
2020-10-30 12:04:01,611:INFO:Preparing display monitor
2020-10-30 12:04:01,925:INFO:Initializing predict_model()
2020-10-30 12:04:01,925:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:01,925:INFO:Checking exceptions
2020-10-30 12:04:01,926:INFO:Preloading libraries
2020-10-30 12:04:01,926:INFO:Preparing display monitor
2020-10-30 12:04:02,237:INFO:Initializing predict_model()
2020-10-30 12:04:02,237:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:02,237:INFO:Checking exceptions
2020-10-30 12:04:02,237:INFO:Preloading libraries
2020-10-30 12:04:02,237:INFO:Preparing display monitor
2020-10-30 12:04:02,515:INFO:Initializing predict_model()
2020-10-30 12:04:02,515:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:04:02,515:INFO:Checking exceptions
2020-10-30 12:04:02,515:INFO:Preloading libraries
2020-10-30 12:04:02,515:INFO:Preparing display monitor
2020-10-30 12:05:14,773:INFO:Initializing plot_model()
2020-10-30 12:05:14,777:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:14,777:INFO:Checking exceptions
2020-10-30 12:05:14,790:INFO:Initializing plot_model()
2020-10-30 12:05:14,790:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:14,790:INFO:Checking exceptions
2020-10-30 12:05:14,795:INFO:Preloading libraries
2020-10-30 12:05:14,797:INFO:Copying training dataset
2020-10-30 12:05:14,798:INFO:Copying test dataset
2020-10-30 12:05:14,798:INFO:Plot type: error
2020-10-30 12:05:15,066:INFO:Initializing plot_model()
2020-10-30 12:05:15,066:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,066:INFO:Checking exceptions
2020-10-30 12:05:15,076:INFO:Initializing plot_model()
2020-10-30 12:05:15,077:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,077:INFO:Checking exceptions
2020-10-30 12:05:15,088:INFO:Initializing plot_model()
2020-10-30 12:05:15,088:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,089:INFO:Checking exceptions
2020-10-30 12:05:15,091:INFO:Preloading libraries
2020-10-30 12:05:15,092:INFO:Copying training dataset
2020-10-30 12:05:15,092:INFO:Copying test dataset
2020-10-30 12:05:15,092:INFO:Plot type: threshold
2020-10-30 12:05:15,099:INFO:Initializing plot_model()
2020-10-30 12:05:15,100:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,100:INFO:Checking exceptions
2020-10-30 12:05:15,101:INFO:Preloading libraries
2020-10-30 12:05:15,102:INFO:Copying training dataset
2020-10-30 12:05:15,102:INFO:Copying test dataset
2020-10-30 12:05:15,102:INFO:Plot type: pr
2020-10-30 12:05:15,111:INFO:Initializing plot_model()
2020-10-30 12:05:15,111:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,111:INFO:Checking exceptions
2020-10-30 12:05:15,113:INFO:Preloading libraries
2020-10-30 12:05:15,113:INFO:Copying training dataset
2020-10-30 12:05:15,113:INFO:Copying test dataset
2020-10-30 12:05:15,114:INFO:Plot type: confusion_matrix
2020-10-30 12:05:15,120:INFO:Initializing plot_model()
2020-10-30 12:05:15,120:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,121:INFO:Checking exceptions
2020-10-30 12:05:15,122:INFO:Preloading libraries
2020-10-30 12:05:15,122:INFO:Copying training dataset
2020-10-30 12:05:15,123:INFO:Copying test dataset
2020-10-30 12:05:15,123:INFO:Plot type: class_report
2020-10-30 12:05:15,130:INFO:Initializing plot_model()
2020-10-30 12:05:15,130:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,130:INFO:Checking exceptions
2020-10-30 12:05:15,132:INFO:Preloading libraries
2020-10-30 12:05:15,132:INFO:Copying training dataset
2020-10-30 12:05:15,132:INFO:Copying test dataset
2020-10-30 12:05:15,133:INFO:Plot type: boundary
2020-10-30 12:05:15,182:INFO:Fitting StandardScaler()
2020-10-30 12:05:15,190:INFO:Initializing plot_model()
2020-10-30 12:05:15,191:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,193:INFO:Checking exceptions
2020-10-30 12:05:15,199:INFO:Initializing plot_model()
2020-10-30 12:05:15,199:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,199:INFO:Checking exceptions
2020-10-30 12:05:15,200:INFO:Preloading libraries
2020-10-30 12:05:15,200:INFO:Copying training dataset
2020-10-30 12:05:15,200:INFO:Copying test dataset
2020-10-30 12:05:15,201:INFO:Plot type: learning
2020-10-30 12:05:15,209:INFO:Initializing plot_model()
2020-10-30 12:05:15,209:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,209:INFO:Checking exceptions
2020-10-30 12:05:15,210:INFO:Preloading libraries
2020-10-30 12:05:15,210:INFO:Copying training dataset
2020-10-30 12:05:15,210:INFO:Copying test dataset
2020-10-30 12:05:15,211:INFO:Plot type: manifold
2020-10-30 12:05:15,271:INFO:Fitting & Transforming Model
2020-10-30 12:05:15,282:INFO:Initializing plot_model()
2020-10-30 12:05:15,282:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,282:INFO:Checking exceptions
2020-10-30 12:05:15,290:INFO:Initializing plot_model()
2020-10-30 12:05:15,290:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,290:INFO:Checking exceptions
2020-10-30 12:05:15,291:INFO:Preloading libraries
2020-10-30 12:05:15,291:INFO:Copying training dataset
2020-10-30 12:05:15,292:INFO:Copying test dataset
2020-10-30 12:05:15,294:INFO:Plot type: vc
2020-10-30 12:05:15,295:INFO:Determining param_name
2020-10-30 12:05:15,303:INFO:Initializing plot_model()
2020-10-30 12:05:15,303:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,304:INFO:Checking exceptions
2020-10-30 12:05:15,305:INFO:Preloading libraries
2020-10-30 12:05:15,306:INFO:Copying training dataset
2020-10-30 12:05:15,306:INFO:Copying test dataset
2020-10-30 12:05:15,306:INFO:Plot type: dimension
2020-10-30 12:05:15,308:INFO:Fitting StandardScaler()
2020-10-30 12:05:15,317:INFO:Initializing plot_model()
2020-10-30 12:05:15,318:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,318:INFO:Checking exceptions
2020-10-30 12:05:15,329:INFO:Initializing plot_model()
2020-10-30 12:05:15,329:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,329:INFO:Checking exceptions
2020-10-30 12:05:15,337:INFO:Initializing plot_model()
2020-10-30 12:05:15,338:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,338:INFO:Checking exceptions
2020-10-30 12:05:15,339:INFO:Preloading libraries
2020-10-30 12:05:15,340:INFO:Copying training dataset
2020-10-30 12:05:15,340:INFO:Copying test dataset
2020-10-30 12:05:15,341:INFO:Plot type: parameter
2020-10-30 12:05:15,348:INFO:Initializing plot_model()
2020-10-30 12:05:15,348:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,349:INFO:Checking exceptions
2020-10-30 12:05:15,350:INFO:Preloading libraries
2020-10-30 12:05:15,350:INFO:Copying training dataset
2020-10-30 12:05:15,350:INFO:Copying test dataset
2020-10-30 12:05:15,351:INFO:Plot type: lift
2020-10-30 12:05:15,352:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:05:15,399:INFO:fit_if_not_fitted: Pipeline(memory=None,
         steps=[('empty_step', 'passthrough'),
                ('actual_estimator',
                          Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100...
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns])],
         verbose=False) is not fitted, fitting
2020-10-30 12:05:15,409:INFO:Initializing plot_model()
2020-10-30 12:05:15,409:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,409:INFO:Checking exceptions
2020-10-30 12:05:15,411:INFO:Preloading libraries
2020-10-30 12:05:15,411:INFO:Copying training dataset
2020-10-30 12:05:15,411:INFO:Copying test dataset
2020-10-30 12:05:15,412:INFO:Plot type: gain
2020-10-30 12:05:15,413:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:05:15,464:INFO:fit_if_not_fitted: Pipeline(memory=None,
         steps=[('empty_step', 'passthrough'),
                ('actual_estimator',
                          Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100...
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns])],
         verbose=False) is not fitted, fitting
2020-10-30 12:05:15,471:INFO:Initializing plot_model()
2020-10-30 12:05:15,471:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:05:15,471:INFO:Checking exceptions
2020-10-30 12:05:58,165:INFO:Initializing optimize_threshold()
2020-10-30 12:05:58,166:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-100, false_negative=100)
2020-10-30 12:05:58,166:INFO:Importing libraries
2020-10-30 12:05:58,166:INFO:Checking exceptions
2020-10-30 12:05:58,266:INFO:Defining loss function
2020-10-30 12:05:58,266:INFO:Iteration starts at 0
2020-10-30 12:05:58,448:INFO:Figure ready for render
2020-10-30 12:05:58,458:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:11,144:INFO:Initializing optimize_threshold()
2020-10-30 12:06:11,144:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-100, false_negative=1000)
2020-10-30 12:06:11,145:INFO:Importing libraries
2020-10-30 12:06:11,145:INFO:Checking exceptions
2020-10-30 12:06:11,246:INFO:Defining loss function
2020-10-30 12:06:11,246:INFO:Iteration starts at 0
2020-10-30 12:06:11,326:INFO:Figure ready for render
2020-10-30 12:06:11,335:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:15,535:INFO:Initializing optimize_threshold()
2020-10-30 12:06:15,535:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-100, false_negative=10000)
2020-10-30 12:06:15,535:INFO:Importing libraries
2020-10-30 12:06:15,535:INFO:Checking exceptions
2020-10-30 12:06:15,587:INFO:Defining loss function
2020-10-30 12:06:15,587:INFO:Iteration starts at 0
2020-10-30 12:06:15,625:INFO:Figure ready for render
2020-10-30 12:06:15,630:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:19,584:INFO:Initializing optimize_threshold()
2020-10-30 12:06:19,584:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-1000000, false_negative=10000)
2020-10-30 12:06:19,585:INFO:Importing libraries
2020-10-30 12:06:19,585:INFO:Checking exceptions
2020-10-30 12:06:19,643:INFO:Defining loss function
2020-10-30 12:06:19,643:INFO:Iteration starts at 0
2020-10-30 12:06:19,683:INFO:Figure ready for render
2020-10-30 12:06:19,687:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:32,950:INFO:Initializing optimize_threshold()
2020-10-30 12:06:32,951:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-1, false_negative=0)
2020-10-30 12:06:32,952:INFO:Importing libraries
2020-10-30 12:06:32,952:INFO:Checking exceptions
2020-10-30 12:06:33,048:INFO:Defining loss function
2020-10-30 12:06:33,048:INFO:Iteration starts at 0
2020-10-30 12:06:33,122:INFO:Figure ready for render
2020-10-30 12:06:33,129:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:41,111:INFO:Initializing optimize_threshold()
2020-10-30 12:06:41,111:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-1, false_negative=100)
2020-10-30 12:06:41,112:INFO:Importing libraries
2020-10-30 12:06:41,112:INFO:Checking exceptions
2020-10-30 12:06:41,198:INFO:Defining loss function
2020-10-30 12:06:41,198:INFO:Iteration starts at 0
2020-10-30 12:06:41,260:INFO:Figure ready for render
2020-10-30 12:06:41,266:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:44,032:INFO:Initializing optimize_threshold()
2020-10-30 12:06:44,032:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-100, false_negative=100)
2020-10-30 12:06:44,032:INFO:Importing libraries
2020-10-30 12:06:44,032:INFO:Checking exceptions
2020-10-30 12:06:44,075:INFO:Defining loss function
2020-10-30 12:06:44,075:INFO:Iteration starts at 0
2020-10-30 12:06:44,111:INFO:Figure ready for render
2020-10-30 12:06:44,116:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:06:50,872:INFO:Initializing plot_model()
2020-10-30 12:06:50,872:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:06:50,873:INFO:Checking exceptions
2020-10-30 12:06:50,885:INFO:Initializing plot_model()
2020-10-30 12:06:50,885:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:06:50,885:INFO:Checking exceptions
2020-10-30 12:06:50,890:INFO:Preloading libraries
2020-10-30 12:06:51,074:INFO:Copying training dataset
2020-10-30 12:06:51,074:INFO:Copying test dataset
2020-10-30 12:06:51,075:INFO:Plot type: error
2020-10-30 12:06:51,107:INFO:Fitting Model
2020-10-30 12:06:51,112:INFO:Scoring test/hold-out set
2020-10-30 12:06:51,225:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-30 12:06:51,412:INFO:Visual Rendered Successfully
2020-10-30 12:06:52,083:INFO:plot_model() succesfully completed......................................
2020-10-30 12:06:52,091:INFO:Initializing plot_model()
2020-10-30 12:06:52,091:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:06:52,091:INFO:Checking exceptions
2020-10-30 12:06:52,101:INFO:Initializing plot_model()
2020-10-30 12:06:52,101:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:06:52,101:INFO:Checking exceptions
2020-10-30 12:06:52,103:INFO:Preloading libraries
2020-10-30 12:06:52,146:INFO:Copying training dataset
2020-10-30 12:06:52,146:INFO:Copying test dataset
2020-10-30 12:06:52,147:INFO:Plot type: auc
2020-10-30 12:06:52,161:INFO:Fitting Model
2020-10-30 12:06:52,162:INFO:Scoring test/hold-out set
2020-10-30 12:06:52,269:INFO:Saving 'AUC.png' in current active directory
2020-10-30 12:06:52,439:INFO:Visual Rendered Successfully
2020-10-30 12:06:52,600:INFO:plot_model() succesfully completed......................................
2020-10-30 12:06:52,610:INFO:Initializing plot_model()
2020-10-30 12:06:52,610:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:06:52,611:INFO:Checking exceptions
2020-10-30 12:06:52,612:INFO:Preloading libraries
2020-10-30 12:06:52,657:INFO:Copying training dataset
2020-10-30 12:06:52,658:INFO:Copying test dataset
2020-10-30 12:06:52,658:INFO:Plot type: threshold
2020-10-30 12:06:52,672:INFO:Fitting Model
2020-10-30 12:07:39,262:INFO:Scoring test/hold-out set
2020-10-30 12:07:39,319:INFO:Saving 'Threshold.png' in current active directory
2020-10-30 12:07:39,844:INFO:Visual Rendered Successfully
2020-10-30 12:07:40,465:INFO:plot_model() succesfully completed......................................
2020-10-30 12:07:40,483:INFO:Initializing plot_model()
2020-10-30 12:07:40,484:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:40,484:INFO:Checking exceptions
2020-10-30 12:07:40,486:INFO:Preloading libraries
2020-10-30 12:07:40,522:INFO:Copying training dataset
2020-10-30 12:07:40,524:INFO:Copying test dataset
2020-10-30 12:07:40,525:INFO:Plot type: pr
2020-10-30 12:07:40,541:INFO:Fitting Model
2020-10-30 12:07:40,543:INFO:Scoring test/hold-out set
2020-10-30 12:07:40,647:INFO:Saving 'Precision Recall.png' in current active directory
2020-10-30 12:07:40,829:INFO:Visual Rendered Successfully
2020-10-30 12:07:41,011:INFO:plot_model() succesfully completed......................................
2020-10-30 12:07:41,025:INFO:Initializing plot_model()
2020-10-30 12:07:41,025:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:41,025:INFO:Checking exceptions
2020-10-30 12:07:41,027:INFO:Preloading libraries
2020-10-30 12:07:41,053:INFO:Copying training dataset
2020-10-30 12:07:41,053:INFO:Copying test dataset
2020-10-30 12:07:41,054:INFO:Plot type: confusion_matrix
2020-10-30 12:07:41,063:INFO:Fitting Model
2020-10-30 12:07:41,064:INFO:Scoring test/hold-out set
2020-10-30 12:07:41,160:INFO:Saving 'Confusion Matrix.png' in current active directory
2020-10-30 12:07:41,299:INFO:Visual Rendered Successfully
2020-10-30 12:07:41,462:INFO:plot_model() succesfully completed......................................
2020-10-30 12:07:41,472:INFO:Initializing plot_model()
2020-10-30 12:07:41,472:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:41,472:INFO:Checking exceptions
2020-10-30 12:07:41,473:INFO:Preloading libraries
2020-10-30 12:07:41,497:INFO:Copying training dataset
2020-10-30 12:07:41,498:INFO:Copying test dataset
2020-10-30 12:07:41,498:INFO:Plot type: class_report
2020-10-30 12:07:41,512:INFO:Fitting Model
2020-10-30 12:07:41,513:INFO:Scoring test/hold-out set
2020-10-30 12:07:41,750:INFO:Saving 'Class Report.png' in current active directory
2020-10-30 12:07:41,953:INFO:Visual Rendered Successfully
2020-10-30 12:07:42,177:INFO:plot_model() succesfully completed......................................
2020-10-30 12:07:42,186:INFO:Initializing plot_model()
2020-10-30 12:07:42,186:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:42,186:INFO:Checking exceptions
2020-10-30 12:07:42,188:INFO:Preloading libraries
2020-10-30 12:07:42,216:INFO:Copying training dataset
2020-10-30 12:07:42,217:INFO:Copying test dataset
2020-10-30 12:07:42,218:INFO:Plot type: boundary
2020-10-30 12:07:42,222:INFO:Fitting StandardScaler()
2020-10-30 12:07:42,232:INFO:Initializing plot_model()
2020-10-30 12:07:42,232:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:42,232:INFO:Checking exceptions
2020-10-30 12:07:42,243:INFO:Initializing plot_model()
2020-10-30 12:07:42,243:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:07:42,243:INFO:Checking exceptions
2020-10-30 12:07:42,245:INFO:Preloading libraries
2020-10-30 12:07:42,276:INFO:Copying training dataset
2020-10-30 12:07:42,277:INFO:Copying test dataset
2020-10-30 12:07:42,277:INFO:Plot type: learning
2020-10-30 12:07:42,293:INFO:Fitting Model
2020-10-30 12:08:32,932:INFO:Saving 'Learning Curve.png' in current active directory
2020-10-30 12:08:33,157:INFO:Visual Rendered Successfully
2020-10-30 12:08:33,677:INFO:plot_model() succesfully completed......................................
2020-10-30 12:08:33,695:INFO:Initializing plot_model()
2020-10-30 12:08:33,695:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:33,695:INFO:Checking exceptions
2020-10-30 12:08:33,697:INFO:Preloading libraries
2020-10-30 12:08:33,756:INFO:Copying training dataset
2020-10-30 12:08:33,757:INFO:Copying test dataset
2020-10-30 12:08:33,758:INFO:Plot type: manifold
2020-10-30 12:08:33,780:INFO:Fitting & Transforming Model
2020-10-30 12:08:33,792:INFO:Initializing plot_model()
2020-10-30 12:08:33,793:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:33,793:INFO:Checking exceptions
2020-10-30 12:08:33,794:INFO:Preloading libraries
2020-10-30 12:08:33,829:INFO:Copying training dataset
2020-10-30 12:08:33,830:INFO:Copying test dataset
2020-10-30 12:08:33,830:INFO:Plot type: calibration
2020-10-30 12:08:33,846:INFO:Scoring test/hold-out set
2020-10-30 12:08:34,012:INFO:Saving 'Calibration Curve.png' in current active directory
2020-10-30 12:08:34,187:INFO:Visual Rendered Successfully
2020-10-30 12:08:34,372:INFO:plot_model() succesfully completed......................................
2020-10-30 12:08:34,381:INFO:Initializing plot_model()
2020-10-30 12:08:34,381:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,381:INFO:Checking exceptions
2020-10-30 12:08:34,383:INFO:Preloading libraries
2020-10-30 12:08:34,414:INFO:Copying training dataset
2020-10-30 12:08:34,415:INFO:Copying test dataset
2020-10-30 12:08:34,416:INFO:Plot type: vc
2020-10-30 12:08:34,417:INFO:Determining param_name
2020-10-30 12:08:34,441:INFO:Initializing plot_model()
2020-10-30 12:08:34,441:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,442:INFO:Checking exceptions
2020-10-30 12:08:34,444:INFO:Preloading libraries
2020-10-30 12:08:34,477:INFO:Copying training dataset
2020-10-30 12:08:34,478:INFO:Copying test dataset
2020-10-30 12:08:34,480:INFO:Plot type: dimension
2020-10-30 12:08:34,482:INFO:Fitting StandardScaler()
2020-10-30 12:08:34,492:INFO:Initializing plot_model()
2020-10-30 12:08:34,492:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,493:INFO:Checking exceptions
2020-10-30 12:08:34,503:INFO:Initializing plot_model()
2020-10-30 12:08:34,504:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,504:INFO:Checking exceptions
2020-10-30 12:08:34,515:INFO:Initializing plot_model()
2020-10-30 12:08:34,515:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,515:INFO:Checking exceptions
2020-10-30 12:08:34,517:INFO:Preloading libraries
2020-10-30 12:08:34,548:INFO:Copying training dataset
2020-10-30 12:08:34,549:INFO:Copying test dataset
2020-10-30 12:08:34,550:INFO:Plot type: parameter
2020-10-30 12:08:34,555:INFO:Visual Rendered Successfully
2020-10-30 12:08:34,763:INFO:plot_model() succesfully completed......................................
2020-10-30 12:08:34,777:INFO:Initializing plot_model()
2020-10-30 12:08:34,777:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:34,777:INFO:Checking exceptions
2020-10-30 12:08:34,779:INFO:Preloading libraries
2020-10-30 12:08:34,824:INFO:Copying training dataset
2020-10-30 12:08:34,825:INFO:Copying test dataset
2020-10-30 12:08:34,826:INFO:Plot type: lift
2020-10-30 12:08:34,827:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:08:35,039:INFO:Saving 'Lift Chart.png' in current active directory
2020-10-30 12:08:35,305:INFO:Visual Rendered Successfully
2020-10-30 12:08:35,529:INFO:plot_model() succesfully completed......................................
2020-10-30 12:08:35,538:INFO:Initializing plot_model()
2020-10-30 12:08:35,538:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:35,538:INFO:Checking exceptions
2020-10-30 12:08:35,540:INFO:Preloading libraries
2020-10-30 12:08:35,579:INFO:Copying training dataset
2020-10-30 12:08:35,580:INFO:Copying test dataset
2020-10-30 12:08:35,580:INFO:Plot type: gain
2020-10-30 12:08:35,582:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:08:35,899:INFO:Saving 'Gain Chart.png' in current active directory
2020-10-30 12:08:36,290:INFO:Visual Rendered Successfully
2020-10-30 12:08:36,498:INFO:plot_model() succesfully completed......................................
2020-10-30 12:08:36,509:INFO:Initializing plot_model()
2020-10-30 12:08:36,509:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:08:36,510:INFO:Checking exceptions
2020-10-30 12:08:51,195:INFO:Initializing optimize_threshold()
2020-10-30 12:08:51,195:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=0, false_negative=0)
2020-10-30 12:08:51,195:INFO:Importing libraries
2020-10-30 12:08:51,196:INFO:Checking exceptions
2020-10-30 12:08:51,312:INFO:Defining loss function
2020-10-30 12:08:51,312:INFO:Iteration starts at 0
2020-10-30 12:08:51,407:INFO:Figure ready for render
2020-10-30 12:08:51,413:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:10:32,860:INFO:Initializing optimize_threshold()
2020-10-30 12:10:32,864:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-1, false_negative=1)
2020-10-30 12:10:32,864:INFO:Importing libraries
2020-10-30 12:10:32,864:INFO:Checking exceptions
2020-10-30 12:10:32,995:INFO:Defining loss function
2020-10-30 12:10:32,995:INFO:Iteration starts at 0
2020-10-30 12:10:33,097:INFO:Figure ready for render
2020-10-30 12:10:33,111:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:11:33,319:INFO:Initializing optimize_threshold()
2020-10-30 12:11:33,325:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b7d670>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-50, false_negative=15)
2020-10-30 12:11:33,329:INFO:Importing libraries
2020-10-30 12:11:33,333:INFO:Checking exceptions
2020-10-30 12:11:33,525:INFO:Defining loss function
2020-10-30 12:11:33,525:INFO:Iteration starts at 0
2020-10-30 12:11:33,663:INFO:Figure ready for render
2020-10-30 12:11:33,681:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:11:52,787:INFO:Initializing blend_models()
2020-10-30 12:11:52,788:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.7494160699261587, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.47889391701936085, max_delta_step=0, max_depth=3,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=136, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0883671130992619, reg_lambda=1.5358311806517544e-06,
              scale_pos_weight=13.097867660543319, subsample=0.9953855689970712,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.47879757779339027,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=9.690908269849155e-06,
                       min_impurity_split=None, min_samples_leaf=4,
                       min_samples_split=3, min_weight_fraction_leaf=0.0,
                       n_estimators=256, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), LGBMClassifier(bagging_fraction=0.5787165975935351, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8436335283710661, importance_type='split',
               learning_rate=0.0035480791943212496, max_depth=-1,
               min_child_samples=59, min_child_weight=0.001,
               min_data_in_leaf=3688, min_split_gain=0.13169036589200145,
               n_estimators=24, n_jobs=-1, num_leaves=95, objective=None,
               random_state=786, reg_alpha=4.636102684324233e-06,
               reg_lambda=4.12327365672731e-09, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-10-30 12:11:52,788:INFO:Checking exceptions
2020-10-30 12:11:52,806:INFO:Preparing display monitor
2020-10-30 12:11:52,901:INFO:Importing libraries
2020-10-30 12:11:52,901:INFO:Copying training dataset
2020-10-30 12:11:52,910:INFO:Getting model names
2020-10-30 12:11:52,930:INFO:SubProcess create_model() called ==================================
2020-10-30 12:11:52,953:INFO:Initializing create_model()
2020-10-30 12:11:52,953:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc03528dac0>, kwargs={})
2020-10-30 12:11:52,953:INFO:Checking exceptions
2020-10-30 12:11:52,954:INFO:Importing libraries
2020-10-30 12:11:52,954:INFO:Copying training dataset
2020-10-30 12:11:52,954:INFO:Defining folds
2020-10-30 12:11:52,955:INFO:Declaring metric variables
2020-10-30 12:11:52,963:INFO:Importing untrained model
2020-10-30 12:11:52,963:INFO:Declaring custom model
2020-10-30 12:11:52,976:INFO:Voting Classifier Imported succesfully
2020-10-30 12:11:52,989:INFO:Starting cross validation
2020-10-30 12:11:52,993:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-10-30 12:11:57,345:INFO:Calculating mean and std
2020-10-30 12:11:57,356:INFO:Creating metrics dataframe
2020-10-30 12:11:57,407:INFO:Finalizing model
2020-10-30 12:11:58,527:INFO:Uploading results into container
2020-10-30 12:11:58,528:INFO:Uploading model into container now
2020-10-30 12:11:58,528:INFO:create_model_container: 21
2020-10-30 12:11:58,528:INFO:master_model_container: 21
2020-10-30 12:11:58,528:INFO:display_container: 70
2020-10-30 12:11:58,538:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1])
2020-10-30 12:11:58,539:INFO:create_model() succesfully completed......................................
2020-10-30 12:11:59,613:INFO:SubProcess create_model() end ==================================
2020-10-30 12:11:59,652:INFO:create_model_container: 21
2020-10-30 12:11:59,653:INFO:master_model_container: 21
2020-10-30 12:11:59,653:INFO:display_container: 70
2020-10-30 12:11:59,661:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1])
2020-10-30 12:11:59,661:INFO:blend_models() succesfully completed......................................
2020-10-30 12:11:59,922:INFO:Initializing optimize_threshold()
2020-10-30 12:11:59,922:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=0, false_positive=-50, false_negative=15)
2020-10-30 12:11:59,922:INFO:Importing libraries
2020-10-30 12:11:59,929:INFO:Checking exceptions
2020-10-30 12:11:59,993:INFO:Defining loss function
2020-10-30 12:11:59,993:INFO:Iteration starts at 0
2020-10-30 12:12:00,060:INFO:Figure ready for render
2020-10-30 12:12:00,066:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:12:15,632:INFO:Initializing optimize_threshold()
2020-10-30 12:12:15,633:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=-50, false_positive=0, false_negative=15)
2020-10-30 12:12:15,633:INFO:Importing libraries
2020-10-30 12:12:15,633:INFO:Checking exceptions
2020-10-30 12:12:15,703:INFO:Defining loss function
2020-10-30 12:12:15,703:INFO:Iteration starts at 0
2020-10-30 12:12:15,761:INFO:Figure ready for render
2020-10-30 12:12:15,766:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:12:26,585:INFO:Initializing optimize_threshold()
2020-10-30 12:12:26,590:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=15, false_positive=0, false_negative=-50)
2020-10-30 12:12:26,591:INFO:Importing libraries
2020-10-30 12:12:26,591:INFO:Checking exceptions
2020-10-30 12:12:26,658:INFO:Defining loss function
2020-10-30 12:12:26,659:INFO:Iteration starts at 0
2020-10-30 12:12:26,715:INFO:Figure ready for render
2020-10-30 12:12:26,721:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:37:39,248:INFO:Initializing optimize_threshold()
2020-10-30 12:37:39,252:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=0, true_negative=50, false_positive=0, false_negative=-50)
2020-10-30 12:37:39,254:INFO:Importing libraries
2020-10-30 12:37:39,256:INFO:Checking exceptions
2020-10-30 12:37:39,537:INFO:Defining loss function
2020-10-30 12:37:39,537:INFO:Iteration starts at 0
2020-10-30 12:37:39,734:INFO:Figure ready for render
2020-10-30 12:37:39,838:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 12:39:12,910:INFO:Initializing plot_model()
2020-10-30 12:39:12,912:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:12,912:INFO:Checking exceptions
2020-10-30 12:39:12,933:INFO:Initializing plot_model()
2020-10-30 12:39:12,933:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:12,934:INFO:Checking exceptions
2020-10-30 12:39:12,960:INFO:Preloading libraries
2020-10-30 12:39:13,126:INFO:Copying training dataset
2020-10-30 12:39:13,130:INFO:Copying test dataset
2020-10-30 12:39:13,131:INFO:Plot type: error
2020-10-30 12:39:13,206:INFO:Fitting Model
2020-10-30 12:39:13,215:INFO:Scoring test/hold-out set
2020-10-30 12:39:13,349:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-30 12:39:13,562:INFO:Visual Rendered Successfully
2020-10-30 12:39:14,325:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:14,333:INFO:Initializing plot_model()
2020-10-30 12:39:14,333:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:14,334:INFO:Checking exceptions
2020-10-30 12:39:14,341:INFO:Initializing plot_model()
2020-10-30 12:39:14,341:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:14,342:INFO:Checking exceptions
2020-10-30 12:39:14,344:INFO:Preloading libraries
2020-10-30 12:39:14,372:INFO:Copying training dataset
2020-10-30 12:39:14,372:INFO:Copying test dataset
2020-10-30 12:39:14,373:INFO:Plot type: auc
2020-10-30 12:39:14,388:INFO:Fitting Model
2020-10-30 12:39:14,389:INFO:Scoring test/hold-out set
2020-10-30 12:39:14,519:INFO:Saving 'AUC.png' in current active directory
2020-10-30 12:39:14,696:INFO:Visual Rendered Successfully
2020-10-30 12:39:14,870:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:14,883:INFO:Initializing plot_model()
2020-10-30 12:39:14,883:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:14,883:INFO:Checking exceptions
2020-10-30 12:39:14,884:INFO:Preloading libraries
2020-10-30 12:39:14,914:INFO:Copying training dataset
2020-10-30 12:39:14,915:INFO:Copying test dataset
2020-10-30 12:39:14,915:INFO:Plot type: threshold
2020-10-30 12:39:14,927:INFO:Fitting Model
2020-10-30 12:39:18,229:INFO:Initializing plot_model()
2020-10-30 12:39:18,230:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:18,231:INFO:Checking exceptions
2020-10-30 12:39:18,234:INFO:Preloading libraries
2020-10-30 12:39:18,272:INFO:Copying training dataset
2020-10-30 12:39:18,273:INFO:Copying test dataset
2020-10-30 12:39:18,273:INFO:Plot type: pr
2020-10-30 12:39:18,277:INFO:Fitting Model
2020-10-30 12:39:18,279:INFO:Scoring test/hold-out set
2020-10-30 12:39:18,392:INFO:Saving 'Precision Recall.png' in current active directory
2020-10-30 12:39:18,800:INFO:Visual Rendered Successfully
2020-10-30 12:39:18,986:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:18,996:INFO:Initializing plot_model()
2020-10-30 12:39:18,997:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:18,997:INFO:Checking exceptions
2020-10-30 12:39:18,999:INFO:Preloading libraries
2020-10-30 12:39:19,029:INFO:Copying training dataset
2020-10-30 12:39:19,031:INFO:Copying test dataset
2020-10-30 12:39:19,031:INFO:Plot type: confusion_matrix
2020-10-30 12:39:19,045:INFO:Fitting Model
2020-10-30 12:39:19,048:INFO:Scoring test/hold-out set
2020-10-30 12:39:19,158:INFO:Saving 'Confusion Matrix.png' in current active directory
2020-10-30 12:39:19,297:INFO:Visual Rendered Successfully
2020-10-30 12:39:19,490:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:19,503:INFO:Initializing plot_model()
2020-10-30 12:39:19,503:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:19,503:INFO:Checking exceptions
2020-10-30 12:39:19,505:INFO:Preloading libraries
2020-10-30 12:39:19,535:INFO:Copying training dataset
2020-10-30 12:39:19,535:INFO:Copying test dataset
2020-10-30 12:39:19,536:INFO:Plot type: class_report
2020-10-30 12:39:19,553:INFO:Fitting Model
2020-10-30 12:39:19,554:INFO:Scoring test/hold-out set
2020-10-30 12:39:19,751:INFO:Saving 'Class Report.png' in current active directory
2020-10-30 12:39:20,027:INFO:Visual Rendered Successfully
2020-10-30 12:39:20,196:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:20,205:INFO:Initializing plot_model()
2020-10-30 12:39:20,205:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:20,205:INFO:Checking exceptions
2020-10-30 12:39:20,207:INFO:Preloading libraries
2020-10-30 12:39:20,248:INFO:Copying training dataset
2020-10-30 12:39:20,248:INFO:Copying test dataset
2020-10-30 12:39:20,249:INFO:Plot type: boundary
2020-10-30 12:39:20,253:INFO:Fitting StandardScaler()
2020-10-30 12:39:20,267:INFO:Initializing plot_model()
2020-10-30 12:39:20,267:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:20,267:INFO:Checking exceptions
2020-10-30 12:39:20,285:INFO:Initializing plot_model()
2020-10-30 12:39:20,285:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:20,285:INFO:Checking exceptions
2020-10-30 12:39:20,289:INFO:Preloading libraries
2020-10-30 12:39:20,334:INFO:Copying training dataset
2020-10-30 12:39:20,335:INFO:Copying test dataset
2020-10-30 12:39:20,336:INFO:Plot type: learning
2020-10-30 12:39:20,356:INFO:Fitting Model
2020-10-30 12:39:20,702:INFO:Initializing plot_model()
2020-10-30 12:39:20,702:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:20,703:INFO:Checking exceptions
2020-10-30 12:39:20,706:INFO:Preloading libraries
2020-10-30 12:39:20,781:INFO:Copying training dataset
2020-10-30 12:39:20,782:INFO:Copying test dataset
2020-10-30 12:39:20,783:INFO:Plot type: manifold
2020-10-30 12:39:20,790:INFO:Fitting & Transforming Model
2020-10-30 12:39:20,805:INFO:Initializing plot_model()
2020-10-30 12:39:20,805:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:20,805:INFO:Checking exceptions
2020-10-30 12:39:20,806:INFO:Preloading libraries
2020-10-30 12:39:20,844:INFO:Copying training dataset
2020-10-30 12:39:20,845:INFO:Copying test dataset
2020-10-30 12:39:20,846:INFO:Plot type: calibration
2020-10-30 12:39:20,867:INFO:Scoring test/hold-out set
2020-10-30 12:39:21,055:INFO:Saving 'Calibration Curve.png' in current active directory
2020-10-30 12:39:21,265:INFO:Visual Rendered Successfully
2020-10-30 12:39:22,188:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:22,200:INFO:Initializing plot_model()
2020-10-30 12:39:22,200:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,200:INFO:Checking exceptions
2020-10-30 12:39:22,202:INFO:Preloading libraries
2020-10-30 12:39:22,235:INFO:Copying training dataset
2020-10-30 12:39:22,236:INFO:Copying test dataset
2020-10-30 12:39:22,237:INFO:Plot type: vc
2020-10-30 12:39:22,238:INFO:Determining param_name
2020-10-30 12:39:22,249:INFO:Initializing plot_model()
2020-10-30 12:39:22,249:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,249:INFO:Checking exceptions
2020-10-30 12:39:22,250:INFO:Preloading libraries
2020-10-30 12:39:22,290:INFO:Copying training dataset
2020-10-30 12:39:22,290:INFO:Copying test dataset
2020-10-30 12:39:22,291:INFO:Plot type: dimension
2020-10-30 12:39:22,293:INFO:Fitting StandardScaler()
2020-10-30 12:39:22,303:INFO:Initializing plot_model()
2020-10-30 12:39:22,322:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,322:INFO:Checking exceptions
2020-10-30 12:39:22,333:INFO:Initializing plot_model()
2020-10-30 12:39:22,333:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,333:INFO:Checking exceptions
2020-10-30 12:39:22,342:INFO:Initializing plot_model()
2020-10-30 12:39:22,342:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,342:INFO:Checking exceptions
2020-10-30 12:39:22,344:INFO:Preloading libraries
2020-10-30 12:39:22,371:INFO:Copying training dataset
2020-10-30 12:39:22,371:INFO:Copying test dataset
2020-10-30 12:39:22,372:INFO:Plot type: parameter
2020-10-30 12:39:22,376:INFO:Visual Rendered Successfully
2020-10-30 12:39:22,571:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:22,603:INFO:Initializing plot_model()
2020-10-30 12:39:22,603:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:22,603:INFO:Checking exceptions
2020-10-30 12:39:22,605:INFO:Preloading libraries
2020-10-30 12:39:22,632:INFO:Copying training dataset
2020-10-30 12:39:22,633:INFO:Copying test dataset
2020-10-30 12:39:22,633:INFO:Plot type: lift
2020-10-30 12:39:22,634:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:39:22,803:INFO:Saving 'Lift Chart.png' in current active directory
2020-10-30 12:39:23,129:INFO:Visual Rendered Successfully
2020-10-30 12:39:23,318:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:23,327:INFO:Initializing plot_model()
2020-10-30 12:39:23,327:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:23,327:INFO:Checking exceptions
2020-10-30 12:39:23,329:INFO:Preloading libraries
2020-10-30 12:39:23,352:INFO:Copying training dataset
2020-10-30 12:39:23,353:INFO:Copying test dataset
2020-10-30 12:39:23,353:INFO:Plot type: gain
2020-10-30 12:39:23,354:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:39:23,501:INFO:Saving 'Gain Chart.png' in current active directory
2020-10-30 12:39:23,788:INFO:Visual Rendered Successfully
2020-10-30 12:39:23,978:INFO:plot_model() succesfully completed......................................
2020-10-30 12:39:23,986:INFO:Initializing plot_model()
2020-10-30 12:39:23,987:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:39:23,987:INFO:Checking exceptions
2020-10-30 12:40:02,102:INFO:Initializing predict_model()
2020-10-30 12:40:02,103:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:02,104:INFO:Checking exceptions
2020-10-30 12:40:02,105:INFO:Preloading libraries
2020-10-30 12:40:02,108:INFO:Preparing display monitor
2020-10-30 12:40:02,823:INFO:Initializing predict_model()
2020-10-30 12:40:02,824:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:02,824:INFO:Checking exceptions
2020-10-30 12:40:02,824:INFO:Preloading libraries
2020-10-30 12:40:02,824:INFO:Preparing display monitor
2020-10-30 12:40:03,283:INFO:Initializing predict_model()
2020-10-30 12:40:03,283:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:03,284:INFO:Checking exceptions
2020-10-30 12:40:03,284:INFO:Preloading libraries
2020-10-30 12:40:03,284:INFO:Preparing display monitor
2020-10-30 12:40:03,663:INFO:Initializing predict_model()
2020-10-30 12:40:03,663:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:03,664:INFO:Checking exceptions
2020-10-30 12:40:03,664:INFO:Preloading libraries
2020-10-30 12:40:03,664:INFO:Preparing display monitor
2020-10-30 12:40:04,083:INFO:Initializing predict_model()
2020-10-30 12:40:04,083:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:04,083:INFO:Checking exceptions
2020-10-30 12:40:04,083:INFO:Preloading libraries
2020-10-30 12:40:04,083:INFO:Preparing display monitor
2020-10-30 12:40:04,381:INFO:Initializing predict_model()
2020-10-30 12:40:04,381:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:04,382:INFO:Checking exceptions
2020-10-30 12:40:04,382:INFO:Preloading libraries
2020-10-30 12:40:04,382:INFO:Preparing display monitor
2020-10-30 12:40:04,661:INFO:Initializing predict_model()
2020-10-30 12:40:04,662:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:04,662:INFO:Checking exceptions
2020-10-30 12:40:04,662:INFO:Preloading libraries
2020-10-30 12:40:04,662:INFO:Preparing display monitor
2020-10-30 12:40:04,931:INFO:Initializing predict_model()
2020-10-30 12:40:04,932:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:04,932:INFO:Checking exceptions
2020-10-30 12:40:04,932:INFO:Preloading libraries
2020-10-30 12:40:04,932:INFO:Preparing display monitor
2020-10-30 12:40:05,245:INFO:Initializing predict_model()
2020-10-30 12:40:05,245:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:05,245:INFO:Checking exceptions
2020-10-30 12:40:05,245:INFO:Preloading libraries
2020-10-30 12:40:05,245:INFO:Preparing display monitor
2020-10-30 12:40:05,523:INFO:Initializing predict_model()
2020-10-30 12:40:05,523:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:05,523:INFO:Checking exceptions
2020-10-30 12:40:05,523:INFO:Preloading libraries
2020-10-30 12:40:05,523:INFO:Preparing display monitor
2020-10-30 12:40:05,808:INFO:Initializing predict_model()
2020-10-30 12:40:05,809:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 12:40:05,809:INFO:Checking exceptions
2020-10-30 12:40:05,809:INFO:Preloading libraries
2020-10-30 12:40:05,809:INFO:Preparing display monitor
2020-10-30 12:40:24,685:INFO:Initializing plot_model()
2020-10-30 12:40:24,687:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,687:INFO:Checking exceptions
2020-10-30 12:40:24,698:INFO:Initializing plot_model()
2020-10-30 12:40:24,698:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,699:INFO:Checking exceptions
2020-10-30 12:40:24,703:INFO:Preloading libraries
2020-10-30 12:40:24,705:INFO:Copying training dataset
2020-10-30 12:40:24,706:INFO:Copying test dataset
2020-10-30 12:40:24,706:INFO:Plot type: error
2020-10-30 12:40:24,720:INFO:Initializing plot_model()
2020-10-30 12:40:24,720:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,720:INFO:Checking exceptions
2020-10-30 12:40:24,728:INFO:Initializing plot_model()
2020-10-30 12:40:24,729:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,729:INFO:Checking exceptions
2020-10-30 12:40:24,738:INFO:Initializing plot_model()
2020-10-30 12:40:24,738:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,739:INFO:Checking exceptions
2020-10-30 12:40:24,740:INFO:Preloading libraries
2020-10-30 12:40:24,740:INFO:Copying training dataset
2020-10-30 12:40:24,741:INFO:Copying test dataset
2020-10-30 12:40:24,741:INFO:Plot type: threshold
2020-10-30 12:40:24,751:INFO:Initializing plot_model()
2020-10-30 12:40:24,751:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,751:INFO:Checking exceptions
2020-10-30 12:40:24,753:INFO:Preloading libraries
2020-10-30 12:40:24,754:INFO:Copying training dataset
2020-10-30 12:40:24,754:INFO:Copying test dataset
2020-10-30 12:40:24,755:INFO:Plot type: pr
2020-10-30 12:40:24,763:INFO:Initializing plot_model()
2020-10-30 12:40:24,764:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,764:INFO:Checking exceptions
2020-10-30 12:40:24,765:INFO:Preloading libraries
2020-10-30 12:40:24,766:INFO:Copying training dataset
2020-10-30 12:40:24,766:INFO:Copying test dataset
2020-10-30 12:40:24,767:INFO:Plot type: confusion_matrix
2020-10-30 12:40:24,774:INFO:Initializing plot_model()
2020-10-30 12:40:24,775:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,775:INFO:Checking exceptions
2020-10-30 12:40:24,776:INFO:Preloading libraries
2020-10-30 12:40:24,776:INFO:Copying training dataset
2020-10-30 12:40:24,777:INFO:Copying test dataset
2020-10-30 12:40:24,777:INFO:Plot type: class_report
2020-10-30 12:40:24,787:INFO:Initializing plot_model()
2020-10-30 12:40:24,787:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,788:INFO:Checking exceptions
2020-10-30 12:40:24,789:INFO:Preloading libraries
2020-10-30 12:40:24,790:INFO:Copying training dataset
2020-10-30 12:40:24,790:INFO:Copying test dataset
2020-10-30 12:40:24,790:INFO:Plot type: boundary
2020-10-30 12:40:24,797:INFO:Fitting StandardScaler()
2020-10-30 12:40:24,807:INFO:Initializing plot_model()
2020-10-30 12:40:24,808:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,808:INFO:Checking exceptions
2020-10-30 12:40:24,817:INFO:Initializing plot_model()
2020-10-30 12:40:24,817:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,818:INFO:Checking exceptions
2020-10-30 12:40:24,819:INFO:Preloading libraries
2020-10-30 12:40:24,819:INFO:Copying training dataset
2020-10-30 12:40:24,819:INFO:Copying test dataset
2020-10-30 12:40:24,820:INFO:Plot type: learning
2020-10-30 12:40:24,827:INFO:Initializing plot_model()
2020-10-30 12:40:24,828:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,828:INFO:Checking exceptions
2020-10-30 12:40:24,829:INFO:Preloading libraries
2020-10-30 12:40:24,829:INFO:Copying training dataset
2020-10-30 12:40:24,829:INFO:Copying test dataset
2020-10-30 12:40:24,830:INFO:Plot type: manifold
2020-10-30 12:40:24,855:INFO:Fitting & Transforming Model
2020-10-30 12:40:24,863:INFO:Initializing plot_model()
2020-10-30 12:40:24,863:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,863:INFO:Checking exceptions
2020-10-30 12:40:24,871:INFO:Initializing plot_model()
2020-10-30 12:40:24,871:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,872:INFO:Checking exceptions
2020-10-30 12:40:24,873:INFO:Preloading libraries
2020-10-30 12:40:24,873:INFO:Copying training dataset
2020-10-30 12:40:24,873:INFO:Copying test dataset
2020-10-30 12:40:24,873:INFO:Plot type: vc
2020-10-30 12:40:24,874:INFO:Determining param_name
2020-10-30 12:40:24,881:INFO:Initializing plot_model()
2020-10-30 12:40:24,881:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,881:INFO:Checking exceptions
2020-10-30 12:40:24,882:INFO:Preloading libraries
2020-10-30 12:40:24,882:INFO:Copying training dataset
2020-10-30 12:40:24,882:INFO:Copying test dataset
2020-10-30 12:40:24,882:INFO:Plot type: dimension
2020-10-30 12:40:24,883:INFO:Fitting StandardScaler()
2020-10-30 12:40:24,889:INFO:Initializing plot_model()
2020-10-30 12:40:24,890:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,890:INFO:Checking exceptions
2020-10-30 12:40:24,896:INFO:Initializing plot_model()
2020-10-30 12:40:24,896:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,896:INFO:Checking exceptions
2020-10-30 12:40:24,902:INFO:Initializing plot_model()
2020-10-30 12:40:24,903:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,903:INFO:Checking exceptions
2020-10-30 12:40:24,904:INFO:Preloading libraries
2020-10-30 12:40:24,904:INFO:Copying training dataset
2020-10-30 12:40:24,905:INFO:Copying test dataset
2020-10-30 12:40:24,905:INFO:Plot type: parameter
2020-10-30 12:40:24,913:INFO:Initializing plot_model()
2020-10-30 12:40:24,913:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,914:INFO:Checking exceptions
2020-10-30 12:40:24,915:INFO:Preloading libraries
2020-10-30 12:40:24,915:INFO:Copying training dataset
2020-10-30 12:40:24,916:INFO:Copying test dataset
2020-10-30 12:40:24,917:INFO:Plot type: lift
2020-10-30 12:40:24,918:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:40:24,968:INFO:fit_if_not_fitted: Pipeline(memory=None,
         steps=[('empty_step', 'passthrough'),
                ('actual_estimator',
                          Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100...
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns])],
         verbose=False) is not fitted, fitting
2020-10-30 12:40:24,979:INFO:Initializing plot_model()
2020-10-30 12:40:24,979:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:24,980:INFO:Checking exceptions
2020-10-30 12:40:24,982:INFO:Preloading libraries
2020-10-30 12:40:24,982:INFO:Copying training dataset
2020-10-30 12:40:24,982:INFO:Copying test dataset
2020-10-30 12:40:24,982:INFO:Plot type: gain
2020-10-30 12:40:24,983:INFO:Generating predictions / predict_proba on X_test
2020-10-30 12:40:25,038:INFO:fit_if_not_fitted: Pipeline(memory=None,
         steps=[('empty_step', 'passthrough'),
                ('actual_estimator',
                          Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100...
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns])],
         verbose=False) is not fitted, fitting
2020-10-30 12:40:25,046:INFO:Initializing plot_model()
2020-10-30 12:40:25,046:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-10-30 12:40:25,046:INFO:Checking exceptions
2020-10-30 15:08:06,818:INFO:Initializing optimize_threshold()
2020-10-30 15:08:06,827:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=0, false_negative=-50)
2020-10-30 15:08:06,829:INFO:Importing libraries
2020-10-30 15:08:06,833:INFO:Checking exceptions
2020-10-30 15:08:07,539:INFO:Defining loss function
2020-10-30 15:08:07,539:INFO:Iteration starts at 0
2020-10-30 15:08:08,251:INFO:Figure ready for render
2020-10-30 15:08:08,282:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 15:09:32,559:INFO:Initializing optimize_threshold()
2020-10-30 15:09:32,561:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-50, false_negative=50)
2020-10-30 15:09:32,562:INFO:Importing libraries
2020-10-30 15:09:32,562:INFO:Checking exceptions
2020-10-30 15:09:32,666:INFO:Defining loss function
2020-10-30 15:09:32,666:INFO:Iteration starts at 0
2020-10-30 15:09:32,741:INFO:Figure ready for render
2020-10-30 15:09:32,755:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 15:09:50,142:INFO:Initializing optimize_threshold()
2020-10-30 15:09:50,155:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-50, false_negative=0)
2020-10-30 15:09:50,155:INFO:Importing libraries
2020-10-30 15:09:50,155:INFO:Checking exceptions
2020-10-30 15:09:50,228:INFO:Defining loss function
2020-10-30 15:09:50,228:INFO:Iteration starts at 0
2020-10-30 15:09:50,299:INFO:Figure ready for render
2020-10-30 15:09:50,313:INFO:optimize_threshold() succesfully completed......................................
2020-10-30 15:10:11,864:INFO:Initializing predict_model()
2020-10-30 15:10:11,865:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:11,865:INFO:Checking exceptions
2020-10-30 15:10:11,865:INFO:Preloading libraries
2020-10-30 15:10:11,868:INFO:Preparing display monitor
2020-10-30 15:10:13,796:INFO:Initializing predict_model()
2020-10-30 15:10:13,796:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:13,796:INFO:Checking exceptions
2020-10-30 15:10:13,796:INFO:Preloading libraries
2020-10-30 15:10:13,796:INFO:Preparing display monitor
2020-10-30 15:10:14,094:INFO:Initializing predict_model()
2020-10-30 15:10:14,094:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:14,094:INFO:Checking exceptions
2020-10-30 15:10:14,095:INFO:Preloading libraries
2020-10-30 15:10:14,095:INFO:Preparing display monitor
2020-10-30 15:10:14,340:INFO:Initializing predict_model()
2020-10-30 15:10:14,341:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:14,341:INFO:Checking exceptions
2020-10-30 15:10:14,341:INFO:Preloading libraries
2020-10-30 15:10:14,341:INFO:Preparing display monitor
2020-10-30 15:10:14,578:INFO:Initializing predict_model()
2020-10-30 15:10:14,578:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:14,579:INFO:Checking exceptions
2020-10-30 15:10:14,579:INFO:Preloading libraries
2020-10-30 15:10:14,579:INFO:Preparing display monitor
2020-10-30 15:10:14,838:INFO:Initializing predict_model()
2020-10-30 15:10:14,838:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:14,838:INFO:Checking exceptions
2020-10-30 15:10:14,838:INFO:Preloading libraries
2020-10-30 15:10:14,839:INFO:Preparing display monitor
2020-10-30 15:10:15,083:INFO:Initializing predict_model()
2020-10-30 15:10:15,083:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:15,083:INFO:Checking exceptions
2020-10-30 15:10:15,083:INFO:Preloading libraries
2020-10-30 15:10:15,083:INFO:Preparing display monitor
2020-10-30 15:10:15,321:INFO:Initializing predict_model()
2020-10-30 15:10:15,321:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:15,321:INFO:Checking exceptions
2020-10-30 15:10:15,321:INFO:Preloading libraries
2020-10-30 15:10:15,321:INFO:Preparing display monitor
2020-10-30 15:10:15,582:INFO:Initializing predict_model()
2020-10-30 15:10:15,582:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:15,582:INFO:Checking exceptions
2020-10-30 15:10:15,582:INFO:Preloading libraries
2020-10-30 15:10:15,583:INFO:Preparing display monitor
2020-10-30 15:10:15,837:INFO:Initializing predict_model()
2020-10-30 15:10:15,837:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:15,837:INFO:Checking exceptions
2020-10-30 15:10:15,837:INFO:Preloading libraries
2020-10-30 15:10:15,837:INFO:Preparing display monitor
2020-10-30 15:10:16,091:INFO:Initializing predict_model()
2020-10-30 15:10:16,092:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.73, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:16,092:INFO:Checking exceptions
2020-10-30 15:10:16,092:INFO:Preloading libraries
2020-10-30 15:10:16,092:INFO:Preparing display monitor
2020-10-30 15:10:24,344:INFO:Initializing predict_model()
2020-10-30 15:10:24,346:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:24,346:INFO:Checking exceptions
2020-10-30 15:10:24,346:INFO:Preloading libraries
2020-10-30 15:10:24,347:INFO:Preparing display monitor
2020-10-30 15:10:24,995:INFO:Initializing predict_model()
2020-10-30 15:10:24,995:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:24,995:INFO:Checking exceptions
2020-10-30 15:10:24,995:INFO:Preloading libraries
2020-10-30 15:10:24,995:INFO:Preparing display monitor
2020-10-30 15:10:25,268:INFO:Initializing predict_model()
2020-10-30 15:10:25,268:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:25,268:INFO:Checking exceptions
2020-10-30 15:10:25,268:INFO:Preloading libraries
2020-10-30 15:10:25,268:INFO:Preparing display monitor
2020-10-30 15:10:25,551:INFO:Initializing predict_model()
2020-10-30 15:10:25,551:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:25,552:INFO:Checking exceptions
2020-10-30 15:10:25,552:INFO:Preloading libraries
2020-10-30 15:10:25,552:INFO:Preparing display monitor
2020-10-30 15:10:25,802:INFO:Initializing predict_model()
2020-10-30 15:10:25,803:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:25,803:INFO:Checking exceptions
2020-10-30 15:10:25,803:INFO:Preloading libraries
2020-10-30 15:10:25,803:INFO:Preparing display monitor
2020-10-30 15:10:26,047:INFO:Initializing predict_model()
2020-10-30 15:10:26,047:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:26,047:INFO:Checking exceptions
2020-10-30 15:10:26,047:INFO:Preloading libraries
2020-10-30 15:10:26,047:INFO:Preparing display monitor
2020-10-30 15:10:26,317:INFO:Initializing predict_model()
2020-10-30 15:10:26,317:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:26,317:INFO:Checking exceptions
2020-10-30 15:10:26,317:INFO:Preloading libraries
2020-10-30 15:10:26,317:INFO:Preparing display monitor
2020-10-30 15:10:26,568:INFO:Initializing predict_model()
2020-10-30 15:10:26,568:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:26,568:INFO:Checking exceptions
2020-10-30 15:10:26,568:INFO:Preloading libraries
2020-10-30 15:10:26,568:INFO:Preparing display monitor
2020-10-30 15:10:26,818:INFO:Initializing predict_model()
2020-10-30 15:10:26,818:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.51, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:26,818:INFO:Checking exceptions
2020-10-30 15:10:26,818:INFO:Preloading libraries
2020-10-30 15:10:26,818:INFO:Preparing display monitor
2020-10-30 15:10:27,144:INFO:Initializing predict_model()
2020-10-30 15:10:27,144:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.54, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:27,144:INFO:Checking exceptions
2020-10-30 15:10:27,145:INFO:Preloading libraries
2020-10-30 15:10:27,145:INFO:Preparing display monitor
2020-10-30 15:10:27,421:INFO:Initializing predict_model()
2020-10-30 15:10:27,421:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc0362ff400>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-10-30 15:10:27,421:INFO:Checking exceptions
2020-10-30 15:10:27,421:INFO:Preloading libraries
2020-10-30 15:10:27,421:INFO:Preparing display monitor
2020-10-30 15:17:30,849:INFO:Initializing finalize_model()
2020-10-30 15:17:30,851:INFO:finalize_model(estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], fit_kwargs=None, groups=None, model_only=True, display=None)
2020-10-30 15:17:30,858:INFO:Finalizing          Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns]
2020-10-30 15:17:30,866:INFO:Initializing create_model()
2020-10-30 15:17:30,866:INFO:create_model(estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday      Monday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837  100.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000  100.000000   
2     95.238571   96.428574  94.775528  100.000000   95.327909   93.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283   94.387146   
4    100.000000   92.279742  92.215714   96.129997   97.500000  100.000000   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   89.365715   
102   91.468002   91.112000  86.688098   96.666000   91.936459   91.879997   
103   98.214287   88.229401  87.083748   95.237144   87.381248   96.943608   
104   88.888336   92.065488  81.250000   85.185555  100.000000   86.000000   

     Friday_multiply_Sunday  Sunday_multiply_Friday actualvalue_class  Label  \
0               8687.437534             8687.437534                 0      0   
1               9047.571564             9047.571564                 0      0   
2               9183.719570             9183.719570                 1      1   
3               9807.385814             9807.385814                 0      0   
4               9227.974185             9227.974185                 0      0   
..                      ...                     ...               ...    ...   
100             9191.061253             9191.061253                 0      0   
101             7184.071684             7184.071684                 1      1   
102             8333.832583             8333.832583                 0      0   
103             8665.387674             8665.387674                 0      0   
104             8183.548059             8183.548059                 1      0   

      Score  
0    0.6244  
1    0.7557  
2    0.7412  
3    0.4935  
4    0.7467  
..      ...  
100  0.4355  
101  0.8187  
102  0.8131  
103  0.8600  
104  0.4284  

[105 rows x 11 columns], fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-30 15:17:30,866:INFO:Checking exceptions
2020-10-30 15:32:44,517:INFO:Initializing blend_models()
2020-10-30 15:32:44,521:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.7494160699261587, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.47889391701936085, max_delta_step=0, max_depth=3,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=136, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0883671130992619, reg_lambda=1.5358311806517544e-06,
              scale_pos_weight=13.097867660543319, subsample=0.9953855689970712,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.47879757779339027,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=9.690908269849155e-06,
                       min_impurity_split=None, min_samples_leaf=4,
                       min_samples_split=3, min_weight_fraction_leaf=0.0,
                       n_estimators=256, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), LGBMClassifier(bagging_fraction=0.5787165975935351, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8436335283710661, importance_type='split',
               learning_rate=0.0035480791943212496, max_depth=-1,
               min_child_samples=59, min_child_weight=0.001,
               min_data_in_leaf=3688, min_split_gain=0.13169036589200145,
               n_estimators=24, n_jobs=-1, num_leaves=95, objective=None,
               random_state=786, reg_alpha=4.636102684324233e-06,
               reg_lambda=4.12327365672731e-09, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-10-30 15:32:44,521:INFO:Checking exceptions
2020-10-30 15:32:44,574:INFO:Preparing display monitor
2020-10-30 15:32:44,685:INFO:Importing libraries
2020-10-30 15:32:44,689:INFO:Copying training dataset
2020-10-30 15:32:44,712:INFO:Getting model names
2020-10-30 15:32:44,738:INFO:SubProcess create_model() called ==================================
2020-10-30 15:32:44,773:INFO:Initializing create_model()
2020-10-30 15:32:44,773:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.7494160699261587,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.47889391701936085,
                                                   max_delta_step=0,
                                                   max_depth=3,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=4.636102684324233e-06,
                                                    reg_lambda=4.12327365672731e-09,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0)),
                                    ('catboost',
                                     <catboost.core.CatBoostClassifier object at 0x7fc044b5e070>)],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weights=[1, 1, 1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fc05e70c0a0>, kwargs={})
2020-10-30 15:32:44,774:INFO:Checking exceptions
2020-10-30 15:32:44,775:INFO:Importing libraries
2020-10-30 15:32:44,775:INFO:Copying training dataset
2020-10-30 15:32:44,777:INFO:Defining folds
2020-10-30 15:32:44,778:INFO:Declaring metric variables
2020-10-30 15:32:44,785:INFO:Importing untrained model
2020-10-30 15:32:44,786:INFO:Declaring custom model
2020-10-30 15:32:44,828:INFO:Voting Classifier Imported succesfully
2020-10-30 15:32:44,857:INFO:Starting cross validation
2020-10-30 15:32:44,867:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:27:51,381:INFO:PyCaret Supervised Module
2020-11-02 09:27:51,382:INFO:ML Usecase: classification
2020-11-02 09:27:51,382:INFO:version 2.2.0
2020-11-02 09:27:51,382:INFO:Initializing setup()
2020-11-02 09:27:51,382:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-02 09:27:51,382:INFO:Checking environment
2020-11-02 09:27:51,382:INFO:python_version: 3.8.3
2020-11-02 09:27:51,382:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-02 09:27:51,382:INFO:machine: x86_64
2020-11-02 09:27:51,411:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-02 09:27:51,412:INFO:Memory: svmem(total=8589934592, available=1090084864, percent=87.3, used=2961002496, free=138526720, active=952623104, inactive=930328576, wired=2008379392)
2020-11-02 09:27:51,412:INFO:Physical Core: 4
2020-11-02 09:27:51,412:INFO:Logical Core: 8
2020-11-02 09:27:51,412:INFO:Checking libraries
2020-11-02 09:27:51,412:INFO:pd==1.0.5
2020-11-02 09:27:51,412:INFO:numpy==1.18.5
2020-11-02 09:27:51,412:INFO:sklearn==0.23.2
2020-11-02 09:27:52,401:INFO:xgboost==1.2.0
2020-11-02 09:27:52,401:INFO:lightgbm==2.3.1
2020-11-02 09:27:52,478:INFO:catboost==0.24.1
2020-11-02 09:27:53,244:INFO:mlflow==1.11.0
2020-11-02 09:27:53,244:INFO:Checking Exceptions
2020-11-02 09:27:53,245:INFO:Declaring global variables
2020-11-02 09:27:53,245:INFO:USI: 3571
2020-11-02 09:27:53,245:INFO:pycaret_globals: {'X', '_internal_pipeline', 'prep_pipe', 'experiment__', 'transform_target_param', 'y_test', 'imputation_classifier', 'fold_shuffle_param', 'fix_imbalance_method_param', 'log_plots_param', 'fold_groups_param', 'y_train', 'seed', '_all_models_internal', '_available_plots', 'pycaret_globals', 'USI', 'logging_param', 'transform_target_method_param', 'target_param', 'imputation_regressor', 'iterative_imputation_iters_param', 'X_train', 'gpu_param', 'fold_generator', '_gpu_n_jobs_param', '_all_metrics', 'fix_imbalance_param', '_all_models', 'html_param', 'fold_param', 'data_before_preprocess', 'y', 'stratify_param', '_ml_usecase', 'master_model_container', 'display_container', 'create_model_container', 'n_jobs_param', 'exp_name_log', 'X_test'}
2020-11-02 09:27:53,245:INFO:Preparing display monitor
2020-11-02 09:27:53,246:INFO:Preparing display monitor
2020-11-02 09:27:53,258:INFO:Importing libraries
2020-11-02 09:27:53,258:INFO:Copying data for preprocessing
2020-11-02 09:27:53,265:INFO:Declaring preprocessing parameters
2020-11-02 09:27:53,266:INFO:Setting up iterative imputation
2020-11-02 09:27:53,503:INFO:Creating preprocessing pipeline
2020-11-02 09:27:53,513:INFO:Preprocessing pipeline created successfully
2020-11-02 09:27:53,513:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-02 09:27:53,513:INFO:Creating global containers
2020-11-02 09:27:53,515:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-02 09:27:53,590:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-02 09:27:54,152:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-02 09:27:54,606:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-02 09:27:54,869:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-02 09:27:55,104:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-02 09:27:55,557:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-02 09:27:55,755:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-02 09:27:55,908:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-02 09:27:56,079:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-02 09:27:56,327:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-02 09:27:56,511:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-02 09:27:56,751:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-02 09:27:56,956:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-02 09:27:57,329:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-02 09:27:57,576:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-02 09:27:57,757:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-02 09:27:58,096:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-02 09:27:58,370:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-02 09:27:58,567:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-02 09:27:58,763:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-02 09:27:59,075:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-02 09:27:59,317:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-02 09:27:59,781:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-02 09:28:00,013:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-02 09:28:00,275:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-02 09:28:00,747:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-02 09:28:01,151:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-02 09:28:01,985:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-02 09:28:02,481:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-02 09:28:03,091:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-02 09:28:03,246:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-02 09:28:03,436:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-02 09:28:03,775:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-02 09:28:03,945:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-02 09:28:04,128:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-02 09:28:04,349:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-02 09:28:04,626:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-02 09:28:04,788:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-02 09:28:04,942:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-02 09:28:05,147:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-02 09:28:05,389:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-02 09:28:05,577:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-02 09:28:05,772:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-02 09:28:06,361:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-02 09:28:06,772:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-02 09:28:07,043:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-02 09:28:07,211:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-02 09:28:07,411:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-02 09:28:08,005:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-02 09:28:08,471:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-02 09:28:17,668:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-02 09:28:17,835:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-02 09:28:17,955:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-02 09:28:18,140:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-02 09:28:18,274:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-02 09:28:18,425:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-02 09:28:18,656:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-02 09:28:18,898:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-02 09:28:19,134:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-02 09:28:19,283:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-02 09:28:19,422:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-02 09:28:19,552:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-02 09:28:19,697:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-02 09:28:19,827:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-02 09:28:19,940:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-02 09:28:20,047:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-02 09:28:20,161:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-02 09:28:20,264:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-02 09:28:20,364:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-02 09:28:20,472:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-02 09:28:20,580:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-02 09:28:20,693:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-02 09:28:20,806:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-02 09:28:20,925:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-02 09:28:21,047:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-02 09:28:21,159:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-02 09:28:21,266:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-02 09:28:21,373:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-02 09:28:21,488:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-02 09:28:21,597:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-02 09:28:21,706:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-02 09:28:21,815:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-02 09:28:21,979:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-02 09:28:22,096:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-02 09:28:22,206:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-02 09:28:22,312:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-02 09:28:22,421:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-02 09:28:22,534:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-02 09:28:22,649:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-02 09:28:22,780:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-02 09:28:22,901:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-02 09:28:23,008:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-02 09:28:23,113:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-02 09:28:23,219:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-02 09:28:23,327:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-02 09:28:23,431:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-02 09:28:23,589:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-02 09:28:23,705:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-02 09:28:23,812:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-02 09:28:23,917:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-02 09:28:24,078:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-02 09:28:24,184:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-02 09:28:24,300:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-02 09:28:24,427:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-02 09:28:24,541:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-02 09:28:24,645:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-02 09:28:24,747:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-02 09:28:24,851:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-02 09:28:24,956:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-02 09:28:25,063:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-02 09:28:25,198:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-02 09:28:25,316:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-02 09:28:25,423:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-02 09:28:25,533:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-02 09:28:25,641:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-02 09:28:25,749:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-02 09:28:25,866:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-02 09:28:26,000:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-02 09:28:26,124:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-02 09:28:26,238:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-02 09:28:26,343:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-02 09:28:26,455:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-02 09:28:26,563:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-02 09:28:26,699:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-02 09:28:26,822:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-02 09:28:26,941:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-02 09:28:27,048:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-02 09:28:27,155:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-02 09:28:27,261:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-02 09:28:27,367:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-02 09:28:27,472:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-02 09:28:27,595:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-02 09:28:27,724:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-02 09:28:27,840:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-02 09:28:27,945:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-02 09:28:28,049:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-02 09:28:28,156:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-02 09:28:28,266:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-02 09:28:28,372:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-02 09:28:28,491:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-02 09:28:28,624:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-02 09:28:28,748:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-02 09:28:28,860:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-02 09:28:28,966:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-02 09:28:29,073:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-02 09:28:29,182:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-02 09:28:29,293:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-02 09:28:29,413:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-02 09:28:29,567:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-02 09:28:29,723:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-02 09:28:30,223:INFO:Creating grid variables
2020-11-02 09:28:30,317:INFO:create_model_container: 0
2020-11-02 09:28:30,317:INFO:master_model_container: 0
2020-11-02 09:28:30,317:INFO:display_container: 0
2020-11-02 09:28:30,337:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-02 09:28:30,337:INFO:setup() succesfully completed......................................
2020-11-02 09:28:30,464:INFO:gpu_param set to False
2020-11-02 09:28:30,690:INFO:Initializing get_config()
2020-11-02 09:28:30,690:INFO:get_config(variable=X_train)
2020-11-02 09:28:30,698:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Sunday_multiply_Friday  Friday_multiply_Sunday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-11-02 09:28:30,698:INFO:get_config() succesfully completed......................................
2020-11-02 09:28:46,908:INFO:gpu_param set to False
2020-11-02 09:28:54,701:INFO:Initializing get_config()
2020-11-02 09:28:54,701:INFO:get_config(variable=X_train)
2020-11-02 09:28:54,705:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Sunday_multiply_Friday  Friday_multiply_Sunday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-11-02 09:28:54,705:INFO:get_config() succesfully completed......................................
2020-11-02 09:34:11,875:INFO:PyCaret Supervised Module
2020-11-02 09:34:11,876:INFO:ML Usecase: classification
2020-11-02 09:34:11,876:INFO:version 2.2.0
2020-11-02 09:34:11,876:INFO:Initializing setup()
2020-11-02 09:34:11,876:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-02 09:34:11,876:INFO:Checking environment
2020-11-02 09:34:11,877:INFO:python_version: 3.8.3
2020-11-02 09:34:11,877:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-02 09:34:11,877:INFO:machine: x86_64
2020-11-02 09:34:11,894:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-02 09:34:11,894:INFO:Memory: svmem(total=8589934592, available=2841890816, percent=66.9, used=4770525184, free=102649856, active=2741510144, inactive=2278043648, wired=2029015040)
2020-11-02 09:34:11,894:INFO:Physical Core: 4
2020-11-02 09:34:11,894:INFO:Logical Core: 8
2020-11-02 09:34:11,894:INFO:Checking libraries
2020-11-02 09:34:11,894:INFO:pd==1.0.5
2020-11-02 09:34:11,894:INFO:numpy==1.18.5
2020-11-02 09:34:11,894:INFO:sklearn==0.23.2
2020-11-02 09:34:12,365:INFO:xgboost==1.2.0
2020-11-02 09:34:12,365:INFO:lightgbm==2.3.1
2020-11-02 09:34:12,388:INFO:catboost==0.24.1
2020-11-02 09:34:12,998:INFO:mlflow==1.11.0
2020-11-02 09:34:12,999:INFO:Checking Exceptions
2020-11-02 09:34:12,999:INFO:Declaring global variables
2020-11-02 09:34:12,999:INFO:USI: 377c
2020-11-02 09:34:12,999:INFO:pycaret_globals: {'_ml_usecase', 'stratify_param', 'fold_generator', 'fix_imbalance_param', 'X_train', '_all_metrics', 'display_container', 'create_model_container', 'gpu_param', 'master_model_container', 'html_param', '_available_plots', '_internal_pipeline', 'iterative_imputation_iters_param', 'X_test', 'imputation_regressor', 'y', 'seed', 'exp_name_log', 'experiment__', 'fix_imbalance_method_param', '_all_models_internal', 'X', 'imputation_classifier', 'fold_groups_param', 'transform_target_param', 'fold_shuffle_param', 'USI', 'fold_param', '_gpu_n_jobs_param', 'y_test', 'target_param', 'pycaret_globals', 'logging_param', '_all_models', 'n_jobs_param', 'data_before_preprocess', 'y_train', 'transform_target_method_param', 'prep_pipe', 'log_plots_param'}
2020-11-02 09:34:12,999:INFO:Preparing display monitor
2020-11-02 09:34:12,999:INFO:Preparing display monitor
2020-11-02 09:34:13,011:INFO:Importing libraries
2020-11-02 09:34:13,011:INFO:Copying data for preprocessing
2020-11-02 09:34:13,020:INFO:Declaring preprocessing parameters
2020-11-02 09:34:13,021:INFO:Setting up iterative imputation
2020-11-02 09:34:13,248:INFO:Creating preprocessing pipeline
2020-11-02 09:34:13,254:INFO:Preprocessing pipeline created successfully
2020-11-02 09:34:13,254:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-02 09:34:13,254:INFO:Creating global containers
2020-11-02 09:34:13,255:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-02 09:34:13,314:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-02 09:34:13,679:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-02 09:34:13,838:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-02 09:34:14,046:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-02 09:34:14,145:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-02 09:34:14,243:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-02 09:34:14,408:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-02 09:34:14,550:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-02 09:34:14,650:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-02 09:34:14,746:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-02 09:34:14,859:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-02 09:34:14,971:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-02 09:34:15,076:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-02 09:34:15,177:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-02 09:34:15,272:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-02 09:34:15,477:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-02 09:34:15,700:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-02 09:34:15,790:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-02 09:34:15,880:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-02 09:34:15,973:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-02 09:34:16,093:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-02 09:34:16,189:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-02 09:34:16,288:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-02 09:34:16,487:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-02 09:34:16,639:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-02 09:34:16,819:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-02 09:34:16,955:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-02 09:34:17,103:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-02 09:34:17,220:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-02 09:34:17,317:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-02 09:34:17,410:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-02 09:34:17,515:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-02 09:34:17,619:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-02 09:34:17,772:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-02 09:34:17,925:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-02 09:34:18,073:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-02 09:34:18,225:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-02 09:34:18,374:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-02 09:34:18,523:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-02 09:34:18,753:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-02 09:34:18,920:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-02 09:34:19,146:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-02 09:34:19,381:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-02 09:34:19,522:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-02 09:34:19,688:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-02 09:34:19,815:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-02 09:34:19,995:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-02 09:34:20,104:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-02 09:34:20,200:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-02 09:34:20,297:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-02 09:34:22,124:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-02 09:34:22,236:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-02 09:34:22,325:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-02 09:34:22,412:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-02 09:34:22,505:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-02 09:34:22,593:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-02 09:34:22,677:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-02 09:34:22,761:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-02 09:34:22,845:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-02 09:34:22,929:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-02 09:34:23,016:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-02 09:34:23,106:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-02 09:34:23,194:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-02 09:34:23,281:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-02 09:34:23,368:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-02 09:34:23,456:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-02 09:34:23,549:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-02 09:34:23,639:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-02 09:34:23,726:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-02 09:34:23,812:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-02 09:34:23,895:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-02 09:34:23,983:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-02 09:34:24,072:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-02 09:34:24,163:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-02 09:34:24,250:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-02 09:34:24,331:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-02 09:34:24,422:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-02 09:34:24,514:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-02 09:34:24,601:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-02 09:34:24,683:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-02 09:34:24,773:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-02 09:34:24,859:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-02 09:34:24,941:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-02 09:34:25,026:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-02 09:34:25,110:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-02 09:34:25,191:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-02 09:34:25,270:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-02 09:34:25,349:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-02 09:34:25,437:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-02 09:34:25,519:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-02 09:34:25,601:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-02 09:34:25,682:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-02 09:34:25,764:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-02 09:34:25,846:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-02 09:34:25,928:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-02 09:34:26,008:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-02 09:34:26,093:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-02 09:34:26,176:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-02 09:34:26,254:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-02 09:34:26,333:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-02 09:34:26,470:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-02 09:34:26,552:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-02 09:34:26,632:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-02 09:34:26,710:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-02 09:34:26,788:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-02 09:34:26,870:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-02 09:34:26,948:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-02 09:34:27,026:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-02 09:34:27,103:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-02 09:34:27,181:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-02 09:34:27,259:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-02 09:34:27,336:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-02 09:34:27,413:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-02 09:34:27,494:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-02 09:34:27,575:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-02 09:34:27,652:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-02 09:34:27,729:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-02 09:34:27,807:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-02 09:34:27,884:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-02 09:34:27,960:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-02 09:34:28,037:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-02 09:34:28,112:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-02 09:34:28,188:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-02 09:34:28,265:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-02 09:34:28,340:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-02 09:34:28,415:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-02 09:34:28,491:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-02 09:34:28,568:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-02 09:34:28,645:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-02 09:34:28,721:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-02 09:34:28,797:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-02 09:34:28,873:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-02 09:34:28,949:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-02 09:34:29,025:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-02 09:34:29,100:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-02 09:34:29,177:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-02 09:34:29,252:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-02 09:34:29,328:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-02 09:34:29,403:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-02 09:34:29,479:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-02 09:34:29,563:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-02 09:34:29,643:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-02 09:34:29,720:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-02 09:34:29,795:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-02 09:34:29,873:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-02 09:34:29,948:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-02 09:34:30,024:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-02 09:34:30,100:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-02 09:34:30,176:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-02 09:34:30,254:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-02 09:34:30,555:INFO:Creating grid variables
2020-11-02 09:34:30,590:INFO:create_model_container: 0
2020-11-02 09:34:30,590:INFO:master_model_container: 0
2020-11-02 09:34:30,590:INFO:display_container: 0
2020-11-02 09:34:30,603:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-02 09:34:30,603:INFO:setup() succesfully completed......................................
2020-11-02 09:34:30,676:INFO:gpu_param set to False
2020-11-02 09:34:30,868:INFO:Initializing get_config()
2020-11-02 09:34:30,868:INFO:get_config(variable=X_train)
2020-11-02 09:34:30,872:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Sunday_multiply_Friday  Friday_multiply_Sunday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-11-02 09:34:30,872:INFO:get_config() succesfully completed......................................
2020-11-02 09:34:30,885:INFO:Initializing compare_models()
2020-11-02 09:34:30,885:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=6, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-11-02 09:34:30,885:INFO:Checking exceptions
2020-11-02 09:34:30,887:INFO:Preparing display monitor
2020-11-02 09:34:30,887:INFO:Preparing display monitor
2020-11-02 09:34:30,914:INFO:Initializing Logistic Regression
2020-11-02 09:34:30,915:INFO:Total runtime is 3.063678741455078e-06 minutes
2020-11-02 09:34:30,922:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:30,923:INFO:Initializing create_model()
2020-11-02 09:34:30,923:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:30,923:INFO:Checking exceptions
2020-11-02 09:34:30,923:INFO:Importing libraries
2020-11-02 09:34:30,923:INFO:Copying training dataset
2020-11-02 09:34:30,924:INFO:Defining folds
2020-11-02 09:34:30,924:INFO:Declaring metric variables
2020-11-02 09:34:30,933:INFO:Importing untrained model
2020-11-02 09:34:30,942:INFO:Logistic Regression Imported succesfully
2020-11-02 09:34:30,965:INFO:Starting cross validation
2020-11-02 09:34:30,965:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:36,198:INFO:Calculating mean and std
2020-11-02 09:34:36,203:INFO:Creating metrics dataframe
2020-11-02 09:34:36,212:INFO:Uploading results into container
2020-11-02 09:34:36,212:INFO:Uploading model into container now
2020-11-02 09:34:36,212:INFO:create_model_container: 1
2020-11-02 09:34:36,212:INFO:master_model_container: 1
2020-11-02 09:34:36,212:INFO:display_container: 1
2020-11-02 09:34:36,213:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-11-02 09:34:36,213:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:36,405:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:36,405:INFO:Creating metrics dataframe
2020-11-02 09:34:36,424:INFO:Initializing K Neighbors Classifier
2020-11-02 09:34:36,424:INFO:Total runtime is 0.09183406829833984 minutes
2020-11-02 09:34:36,433:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:36,434:INFO:Initializing create_model()
2020-11-02 09:34:36,434:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:36,434:INFO:Checking exceptions
2020-11-02 09:34:36,434:INFO:Importing libraries
2020-11-02 09:34:36,434:INFO:Copying training dataset
2020-11-02 09:34:36,435:INFO:Defining folds
2020-11-02 09:34:36,435:INFO:Declaring metric variables
2020-11-02 09:34:36,444:INFO:Importing untrained model
2020-11-02 09:34:36,451:INFO:K Neighbors Classifier Imported succesfully
2020-11-02 09:34:36,468:INFO:Starting cross validation
2020-11-02 09:34:36,468:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:36,575:INFO:Calculating mean and std
2020-11-02 09:34:36,577:INFO:Creating metrics dataframe
2020-11-02 09:34:36,583:INFO:Uploading results into container
2020-11-02 09:34:36,583:INFO:Uploading model into container now
2020-11-02 09:34:36,583:INFO:create_model_container: 2
2020-11-02 09:34:36,583:INFO:master_model_container: 2
2020-11-02 09:34:36,583:INFO:display_container: 1
2020-11-02 09:34:36,583:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-11-02 09:34:36,584:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:36,681:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:36,681:INFO:Creating metrics dataframe
2020-11-02 09:34:36,715:INFO:Initializing Naive Bayes
2020-11-02 09:34:36,716:INFO:Total runtime is 0.09669231573740641 minutes
2020-11-02 09:34:36,730:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:36,731:INFO:Initializing create_model()
2020-11-02 09:34:36,731:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:36,731:INFO:Checking exceptions
2020-11-02 09:34:36,731:INFO:Importing libraries
2020-11-02 09:34:36,732:INFO:Copying training dataset
2020-11-02 09:34:36,733:INFO:Defining folds
2020-11-02 09:34:36,733:INFO:Declaring metric variables
2020-11-02 09:34:36,744:INFO:Importing untrained model
2020-11-02 09:34:36,755:INFO:Naive Bayes Imported succesfully
2020-11-02 09:34:36,773:INFO:Starting cross validation
2020-11-02 09:34:36,773:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:36,822:INFO:Calculating mean and std
2020-11-02 09:34:36,823:INFO:Creating metrics dataframe
2020-11-02 09:34:36,827:INFO:Uploading results into container
2020-11-02 09:34:36,827:INFO:Uploading model into container now
2020-11-02 09:34:36,827:INFO:create_model_container: 3
2020-11-02 09:34:36,827:INFO:master_model_container: 3
2020-11-02 09:34:36,827:INFO:display_container: 1
2020-11-02 09:34:36,827:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-11-02 09:34:36,827:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:36,917:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:36,918:INFO:Creating metrics dataframe
2020-11-02 09:34:36,942:INFO:Initializing Decision Tree Classifier
2020-11-02 09:34:36,942:INFO:Total runtime is 0.10045775175094605 minutes
2020-11-02 09:34:36,953:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:36,953:INFO:Initializing create_model()
2020-11-02 09:34:36,954:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:36,954:INFO:Checking exceptions
2020-11-02 09:34:36,954:INFO:Importing libraries
2020-11-02 09:34:36,954:INFO:Copying training dataset
2020-11-02 09:34:36,955:INFO:Defining folds
2020-11-02 09:34:36,955:INFO:Declaring metric variables
2020-11-02 09:34:36,969:INFO:Importing untrained model
2020-11-02 09:34:36,978:INFO:Decision Tree Classifier Imported succesfully
2020-11-02 09:34:36,992:INFO:Starting cross validation
2020-11-02 09:34:36,993:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:37,035:INFO:Calculating mean and std
2020-11-02 09:34:37,036:INFO:Creating metrics dataframe
2020-11-02 09:34:37,041:INFO:Uploading results into container
2020-11-02 09:34:37,041:INFO:Uploading model into container now
2020-11-02 09:34:37,041:INFO:create_model_container: 4
2020-11-02 09:34:37,041:INFO:master_model_container: 4
2020-11-02 09:34:37,041:INFO:display_container: 1
2020-11-02 09:34:37,042:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-11-02 09:34:37,042:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:37,139:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:37,139:INFO:Creating metrics dataframe
2020-11-02 09:34:37,163:INFO:Initializing SVM - Linear Kernel
2020-11-02 09:34:37,163:INFO:Total runtime is 0.10415188074111939 minutes
2020-11-02 09:34:37,170:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:37,171:INFO:Initializing create_model()
2020-11-02 09:34:37,171:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:37,171:INFO:Checking exceptions
2020-11-02 09:34:37,171:INFO:Importing libraries
2020-11-02 09:34:37,171:INFO:Copying training dataset
2020-11-02 09:34:37,172:INFO:Defining folds
2020-11-02 09:34:37,172:INFO:Declaring metric variables
2020-11-02 09:34:37,179:INFO:Importing untrained model
2020-11-02 09:34:37,186:INFO:SVM - Linear Kernel Imported succesfully
2020-11-02 09:34:37,200:INFO:Starting cross validation
2020-11-02 09:34:37,201:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:37,246:INFO:Calculating mean and std
2020-11-02 09:34:37,246:INFO:Creating metrics dataframe
2020-11-02 09:34:37,253:INFO:Uploading results into container
2020-11-02 09:34:37,253:INFO:Uploading model into container now
2020-11-02 09:34:37,253:INFO:create_model_container: 5
2020-11-02 09:34:37,254:INFO:master_model_container: 5
2020-11-02 09:34:37,254:INFO:display_container: 1
2020-11-02 09:34:37,254:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-11-02 09:34:37,254:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:37,348:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:37,348:INFO:Creating metrics dataframe
2020-11-02 09:34:37,375:INFO:Initializing Ridge Classifier
2020-11-02 09:34:37,375:INFO:Total runtime is 0.10767378409703574 minutes
2020-11-02 09:34:37,383:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:37,384:INFO:Initializing create_model()
2020-11-02 09:34:37,385:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:37,385:INFO:Checking exceptions
2020-11-02 09:34:37,385:INFO:Importing libraries
2020-11-02 09:34:37,385:INFO:Copying training dataset
2020-11-02 09:34:37,386:INFO:Defining folds
2020-11-02 09:34:37,386:INFO:Declaring metric variables
2020-11-02 09:34:37,394:INFO:Importing untrained model
2020-11-02 09:34:37,402:INFO:Ridge Classifier Imported succesfully
2020-11-02 09:34:37,418:INFO:Starting cross validation
2020-11-02 09:34:37,418:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:37,466:INFO:Calculating mean and std
2020-11-02 09:34:37,467:INFO:Creating metrics dataframe
2020-11-02 09:34:37,470:INFO:Uploading results into container
2020-11-02 09:34:37,470:INFO:Uploading model into container now
2020-11-02 09:34:37,470:INFO:create_model_container: 6
2020-11-02 09:34:37,470:INFO:master_model_container: 6
2020-11-02 09:34:37,470:INFO:display_container: 1
2020-11-02 09:34:37,471:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-11-02 09:34:37,471:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:37,564:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:37,564:INFO:Creating metrics dataframe
2020-11-02 09:34:37,593:INFO:Initializing Random Forest Classifier
2020-11-02 09:34:37,593:INFO:Total runtime is 0.11131480137507122 minutes
2020-11-02 09:34:37,601:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:37,601:INFO:Initializing create_model()
2020-11-02 09:34:37,601:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:37,601:INFO:Checking exceptions
2020-11-02 09:34:37,602:INFO:Importing libraries
2020-11-02 09:34:37,602:INFO:Copying training dataset
2020-11-02 09:34:37,603:INFO:Defining folds
2020-11-02 09:34:37,603:INFO:Declaring metric variables
2020-11-02 09:34:37,611:INFO:Importing untrained model
2020-11-02 09:34:37,618:INFO:Random Forest Classifier Imported succesfully
2020-11-02 09:34:37,633:INFO:Starting cross validation
2020-11-02 09:34:37,633:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:38,450:INFO:Calculating mean and std
2020-11-02 09:34:38,451:INFO:Creating metrics dataframe
2020-11-02 09:34:38,455:INFO:Uploading results into container
2020-11-02 09:34:38,455:INFO:Uploading model into container now
2020-11-02 09:34:38,455:INFO:create_model_container: 7
2020-11-02 09:34:38,456:INFO:master_model_container: 7
2020-11-02 09:34:38,456:INFO:display_container: 1
2020-11-02 09:34:38,456:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-02 09:34:38,456:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:38,534:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:38,534:INFO:Creating metrics dataframe
2020-11-02 09:34:38,565:INFO:Initializing Quadratic Discriminant Analysis
2020-11-02 09:34:38,565:INFO:Total runtime is 0.12750523487726848 minutes
2020-11-02 09:34:38,572:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:38,573:INFO:Initializing create_model()
2020-11-02 09:34:38,573:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:38,573:INFO:Checking exceptions
2020-11-02 09:34:38,573:INFO:Importing libraries
2020-11-02 09:34:38,573:INFO:Copying training dataset
2020-11-02 09:34:38,574:INFO:Defining folds
2020-11-02 09:34:38,574:INFO:Declaring metric variables
2020-11-02 09:34:38,581:INFO:Importing untrained model
2020-11-02 09:34:38,589:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-11-02 09:34:38,603:INFO:Starting cross validation
2020-11-02 09:34:38,604:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:38,655:INFO:Calculating mean and std
2020-11-02 09:34:38,656:INFO:Creating metrics dataframe
2020-11-02 09:34:38,661:INFO:Uploading results into container
2020-11-02 09:34:38,661:INFO:Uploading model into container now
2020-11-02 09:34:38,661:INFO:create_model_container: 8
2020-11-02 09:34:38,661:INFO:master_model_container: 8
2020-11-02 09:34:38,662:INFO:display_container: 1
2020-11-02 09:34:38,662:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-11-02 09:34:38,662:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:38,765:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:38,765:INFO:Creating metrics dataframe
2020-11-02 09:34:38,807:INFO:Initializing Ada Boost Classifier
2020-11-02 09:34:38,807:INFO:Total runtime is 0.13154528538386026 minutes
2020-11-02 09:34:38,816:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:38,817:INFO:Initializing create_model()
2020-11-02 09:34:38,817:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:38,817:INFO:Checking exceptions
2020-11-02 09:34:38,817:INFO:Importing libraries
2020-11-02 09:34:38,817:INFO:Copying training dataset
2020-11-02 09:34:38,818:INFO:Defining folds
2020-11-02 09:34:38,818:INFO:Declaring metric variables
2020-11-02 09:34:38,826:INFO:Importing untrained model
2020-11-02 09:34:38,836:INFO:Ada Boost Classifier Imported succesfully
2020-11-02 09:34:38,852:INFO:Starting cross validation
2020-11-02 09:34:38,852:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:39,304:INFO:Calculating mean and std
2020-11-02 09:34:39,305:INFO:Creating metrics dataframe
2020-11-02 09:34:39,309:INFO:Uploading results into container
2020-11-02 09:34:39,309:INFO:Uploading model into container now
2020-11-02 09:34:39,309:INFO:create_model_container: 9
2020-11-02 09:34:39,309:INFO:master_model_container: 9
2020-11-02 09:34:39,309:INFO:display_container: 1
2020-11-02 09:34:39,310:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-11-02 09:34:39,310:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:39,386:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:39,386:INFO:Creating metrics dataframe
2020-11-02 09:34:39,423:INFO:Initializing Gradient Boosting Classifier
2020-11-02 09:34:39,423:INFO:Total runtime is 0.14180585145950317 minutes
2020-11-02 09:34:39,431:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:39,432:INFO:Initializing create_model()
2020-11-02 09:34:39,432:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:39,432:INFO:Checking exceptions
2020-11-02 09:34:39,432:INFO:Importing libraries
2020-11-02 09:34:39,432:INFO:Copying training dataset
2020-11-02 09:34:39,433:INFO:Defining folds
2020-11-02 09:34:39,433:INFO:Declaring metric variables
2020-11-02 09:34:39,442:INFO:Importing untrained model
2020-11-02 09:34:39,450:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-02 09:34:39,467:INFO:Starting cross validation
2020-11-02 09:34:39,467:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:39,839:INFO:Calculating mean and std
2020-11-02 09:34:39,840:INFO:Creating metrics dataframe
2020-11-02 09:34:39,844:INFO:Uploading results into container
2020-11-02 09:34:39,844:INFO:Uploading model into container now
2020-11-02 09:34:39,845:INFO:create_model_container: 10
2020-11-02 09:34:39,845:INFO:master_model_container: 10
2020-11-02 09:34:39,845:INFO:display_container: 1
2020-11-02 09:34:39,846:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-02 09:34:39,846:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:39,927:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:39,927:INFO:Creating metrics dataframe
2020-11-02 09:34:39,993:INFO:Initializing Linear Discriminant Analysis
2020-11-02 09:34:39,993:INFO:Total runtime is 0.1513090491294861 minutes
2020-11-02 09:34:40,005:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:40,005:INFO:Initializing create_model()
2020-11-02 09:34:40,005:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:40,006:INFO:Checking exceptions
2020-11-02 09:34:40,006:INFO:Importing libraries
2020-11-02 09:34:40,006:INFO:Copying training dataset
2020-11-02 09:34:40,008:INFO:Defining folds
2020-11-02 09:34:40,008:INFO:Declaring metric variables
2020-11-02 09:34:40,018:INFO:Importing untrained model
2020-11-02 09:34:40,034:INFO:Linear Discriminant Analysis Imported succesfully
2020-11-02 09:34:40,055:INFO:Starting cross validation
2020-11-02 09:34:40,055:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:40,113:INFO:Calculating mean and std
2020-11-02 09:34:40,114:INFO:Creating metrics dataframe
2020-11-02 09:34:40,124:INFO:Uploading results into container
2020-11-02 09:34:40,125:INFO:Uploading model into container now
2020-11-02 09:34:40,125:INFO:create_model_container: 11
2020-11-02 09:34:40,125:INFO:master_model_container: 11
2020-11-02 09:34:40,125:INFO:display_container: 1
2020-11-02 09:34:40,126:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-11-02 09:34:40,126:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:40,206:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:40,206:INFO:Creating metrics dataframe
2020-11-02 09:34:40,251:INFO:Initializing Extra Trees Classifier
2020-11-02 09:34:40,251:INFO:Total runtime is 0.15560736656188964 minutes
2020-11-02 09:34:40,267:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:40,268:INFO:Initializing create_model()
2020-11-02 09:34:40,268:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:40,268:INFO:Checking exceptions
2020-11-02 09:34:40,268:INFO:Importing libraries
2020-11-02 09:34:40,269:INFO:Copying training dataset
2020-11-02 09:34:40,270:INFO:Defining folds
2020-11-02 09:34:40,271:INFO:Declaring metric variables
2020-11-02 09:34:40,283:INFO:Importing untrained model
2020-11-02 09:34:40,295:INFO:Extra Trees Classifier Imported succesfully
2020-11-02 09:34:40,321:INFO:Starting cross validation
2020-11-02 09:34:40,322:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:41,238:INFO:Calculating mean and std
2020-11-02 09:34:41,239:INFO:Creating metrics dataframe
2020-11-02 09:34:41,243:INFO:Uploading results into container
2020-11-02 09:34:41,243:INFO:Uploading model into container now
2020-11-02 09:34:41,244:INFO:create_model_container: 12
2020-11-02 09:34:41,244:INFO:master_model_container: 12
2020-11-02 09:34:41,244:INFO:display_container: 1
2020-11-02 09:34:41,244:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-02 09:34:41,244:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:41,320:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:41,320:INFO:Creating metrics dataframe
2020-11-02 09:34:41,370:INFO:Initializing Extreme Gradient Boosting
2020-11-02 09:34:41,370:INFO:Total runtime is 0.17426560322443643 minutes
2020-11-02 09:34:41,378:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:41,379:INFO:Initializing create_model()
2020-11-02 09:34:41,379:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:41,379:INFO:Checking exceptions
2020-11-02 09:34:41,379:INFO:Importing libraries
2020-11-02 09:34:41,379:INFO:Copying training dataset
2020-11-02 09:34:41,380:INFO:Defining folds
2020-11-02 09:34:41,380:INFO:Declaring metric variables
2020-11-02 09:34:41,387:INFO:Importing untrained model
2020-11-02 09:34:41,395:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-02 09:34:41,410:INFO:Starting cross validation
2020-11-02 09:34:41,411:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:43,193:INFO:Calculating mean and std
2020-11-02 09:34:43,195:INFO:Creating metrics dataframe
2020-11-02 09:34:43,199:INFO:Uploading results into container
2020-11-02 09:34:43,199:INFO:Uploading model into container now
2020-11-02 09:34:43,199:INFO:create_model_container: 13
2020-11-02 09:34:43,200:INFO:master_model_container: 13
2020-11-02 09:34:43,200:INFO:display_container: 1
2020-11-02 09:34:43,201:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-11-02 09:34:43,201:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:43,283:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:43,284:INFO:Creating metrics dataframe
2020-11-02 09:34:43,336:INFO:Initializing Light Gradient Boosting Machine
2020-11-02 09:34:43,336:INFO:Total runtime is 0.20702635049819945 minutes
2020-11-02 09:34:43,346:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:43,347:INFO:Initializing create_model()
2020-11-02 09:34:43,347:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:43,347:INFO:Checking exceptions
2020-11-02 09:34:43,347:INFO:Importing libraries
2020-11-02 09:34:43,347:INFO:Copying training dataset
2020-11-02 09:34:43,349:INFO:Defining folds
2020-11-02 09:34:43,349:INFO:Declaring metric variables
2020-11-02 09:34:43,359:INFO:Importing untrained model
2020-11-02 09:34:43,368:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-02 09:34:43,385:INFO:Starting cross validation
2020-11-02 09:34:43,385:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:34:43,627:INFO:Calculating mean and std
2020-11-02 09:34:43,628:INFO:Creating metrics dataframe
2020-11-02 09:34:43,633:INFO:Uploading results into container
2020-11-02 09:34:43,633:INFO:Uploading model into container now
2020-11-02 09:34:43,633:INFO:create_model_container: 14
2020-11-02 09:34:43,633:INFO:master_model_container: 14
2020-11-02 09:34:43,634:INFO:display_container: 1
2020-11-02 09:34:43,634:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-02 09:34:43,634:INFO:create_model() succesfully completed......................................
2020-11-02 09:34:43,715:INFO:SubProcess create_model() end ==================================
2020-11-02 09:34:43,716:INFO:Creating metrics dataframe
2020-11-02 09:34:43,793:INFO:Initializing CatBoost Classifier
2020-11-02 09:34:43,793:INFO:Total runtime is 0.21464730103810628 minutes
2020-11-02 09:34:43,806:INFO:SubProcess create_model() called ==================================
2020-11-02 09:34:43,806:INFO:Initializing create_model()
2020-11-02 09:34:43,807:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf94e41820>, kwargs={})
2020-11-02 09:34:43,807:INFO:Checking exceptions
2020-11-02 09:34:43,807:INFO:Importing libraries
2020-11-02 09:34:43,807:INFO:Copying training dataset
2020-11-02 09:34:43,808:INFO:Defining folds
2020-11-02 09:34:43,808:INFO:Declaring metric variables
2020-11-02 09:34:43,826:INFO:Importing untrained model
2020-11-02 09:34:43,835:INFO:CatBoost Classifier Imported succesfully
2020-11-02 09:34:43,855:INFO:Starting cross validation
2020-11-02 09:34:43,855:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:35:01,292:INFO:Calculating mean and std
2020-11-02 09:35:01,293:INFO:Creating metrics dataframe
2020-11-02 09:35:01,298:INFO:Uploading results into container
2020-11-02 09:35:01,299:INFO:Uploading model into container now
2020-11-02 09:35:01,299:INFO:create_model_container: 15
2020-11-02 09:35:01,299:INFO:master_model_container: 15
2020-11-02 09:35:01,299:INFO:display_container: 1
2020-11-02 09:35:01,299:INFO:<catboost.core.CatBoostClassifier object at 0x7fbf94a7f730>
2020-11-02 09:35:01,299:INFO:create_model() succesfully completed......................................
2020-11-02 09:35:01,375:INFO:SubProcess create_model() end ==================================
2020-11-02 09:35:01,375:INFO:Creating metrics dataframe
2020-11-02 09:35:01,476:INFO:Initializing create_model()
2020-11-02 09:35:01,476:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-02 09:35:01,476:INFO:Checking exceptions
2020-11-02 09:35:01,476:INFO:Importing libraries
2020-11-02 09:35:01,476:INFO:Copying training dataset
2020-11-02 09:35:01,476:INFO:Defining folds
2020-11-02 09:35:01,477:INFO:Declaring metric variables
2020-11-02 09:35:01,477:INFO:Importing untrained model
2020-11-02 09:35:01,477:INFO:Declaring custom model
2020-11-02 09:35:01,477:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-02 09:35:01,478:INFO:Cross validation set to False
2020-11-02 09:35:01,478:INFO:Fitting Model
2020-11-02 09:35:01,678:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-11-02 09:35:01,678:INFO:create_models() succesfully completed......................................
2020-11-02 09:35:01,887:INFO:Initializing create_model()
2020-11-02 09:35:01,887:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-02 09:35:01,891:INFO:Checking exceptions
2020-11-02 09:35:01,891:INFO:Importing libraries
2020-11-02 09:35:01,892:INFO:Copying training dataset
2020-11-02 09:35:01,892:INFO:Defining folds
2020-11-02 09:35:01,892:INFO:Declaring metric variables
2020-11-02 09:35:01,892:INFO:Importing untrained model
2020-11-02 09:35:01,892:INFO:Declaring custom model
2020-11-02 09:35:01,893:INFO:Random Forest Classifier Imported succesfully
2020-11-02 09:35:01,893:INFO:Cross validation set to False
2020-11-02 09:35:01,893:INFO:Fitting Model
2020-11-02 09:35:02,217:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-02 09:35:02,217:INFO:create_models() succesfully completed......................................
2020-11-02 09:35:02,399:INFO:Initializing create_model()
2020-11-02 09:35:02,400:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-02 09:35:02,400:INFO:Checking exceptions
2020-11-02 09:35:02,403:INFO:Importing libraries
2020-11-02 09:35:02,403:INFO:Copying training dataset
2020-11-02 09:35:02,404:INFO:Defining folds
2020-11-02 09:35:02,404:INFO:Declaring metric variables
2020-11-02 09:35:02,404:INFO:Importing untrained model
2020-11-02 09:35:02,404:INFO:Declaring custom model
2020-11-02 09:35:02,404:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-02 09:35:02,405:INFO:Cross validation set to False
2020-11-02 09:35:02,406:INFO:Fitting Model
2020-11-02 09:35:02,462:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-02 09:35:02,462:INFO:create_models() succesfully completed......................................
2020-11-02 09:35:02,661:INFO:Initializing create_model()
2020-11-02 09:35:02,662:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fbf94a7f730>, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-02 09:35:02,662:INFO:Checking exceptions
2020-11-02 09:35:02,662:INFO:Importing libraries
2020-11-02 09:35:02,662:INFO:Copying training dataset
2020-11-02 09:35:02,663:INFO:Defining folds
2020-11-02 09:35:02,663:INFO:Declaring metric variables
2020-11-02 09:35:02,663:INFO:Importing untrained model
2020-11-02 09:35:02,663:INFO:Declaring custom model
2020-11-02 09:35:02,663:INFO:CatBoost Classifier Imported succesfully
2020-11-02 09:35:02,664:INFO:Cross validation set to False
2020-11-02 09:35:02,664:INFO:Fitting Model
2020-11-02 09:35:06,247:INFO:<catboost.core.CatBoostClassifier object at 0x7fbf94bf5c10>
2020-11-02 09:35:06,247:INFO:create_models() succesfully completed......................................
2020-11-02 09:35:06,337:INFO:Initializing create_model()
2020-11-02 09:35:06,337:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-02 09:35:06,337:INFO:Checking exceptions
2020-11-02 09:35:06,338:INFO:Importing libraries
2020-11-02 09:35:06,338:INFO:Copying training dataset
2020-11-02 09:35:06,339:INFO:Defining folds
2020-11-02 09:35:06,339:INFO:Declaring metric variables
2020-11-02 09:35:06,339:INFO:Importing untrained model
2020-11-02 09:35:06,339:INFO:Declaring custom model
2020-11-02 09:35:06,340:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-02 09:35:06,341:INFO:Cross validation set to False
2020-11-02 09:35:06,341:INFO:Fitting Model
2020-11-02 09:35:06,505:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-02 09:35:06,505:INFO:create_models() succesfully completed......................................
2020-11-02 09:35:06,624:INFO:Initializing create_model()
2020-11-02 09:35:06,624:INFO:create_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-02 09:35:06,624:INFO:Checking exceptions
2020-11-02 09:35:06,624:INFO:Importing libraries
2020-11-02 09:35:06,625:INFO:Copying training dataset
2020-11-02 09:35:06,626:INFO:Defining folds
2020-11-02 09:35:06,626:INFO:Declaring metric variables
2020-11-02 09:35:06,626:INFO:Importing untrained model
2020-11-02 09:35:06,626:INFO:Declaring custom model
2020-11-02 09:35:06,627:INFO:Extra Trees Classifier Imported succesfully
2020-11-02 09:35:06,627:INFO:Cross validation set to False
2020-11-02 09:35:06,627:INFO:Fitting Model
2020-11-02 09:35:06,869:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-02 09:35:06,869:INFO:create_models() succesfully completed......................................
2020-11-02 09:35:07,107:INFO:create_model_container: 15
2020-11-02 09:35:07,107:INFO:master_model_container: 15
2020-11-02 09:35:07,108:INFO:display_container: 1
2020-11-02 09:35:07,113:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fbf94bf5c10>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)]
2020-11-02 09:35:07,113:INFO:compare_models() succesfully completed......................................
2020-11-02 09:36:09,034:INFO:Initializing tune_model()
2020-11-02 09:36:09,034:INFO:tune_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-02 09:36:09,034:INFO:Checking exceptions
2020-11-02 09:36:09,672:INFO:Preparing display monitor
2020-11-02 09:36:09,688:INFO:Copying training dataset
2020-11-02 09:36:09,689:INFO:Checking base model
2020-11-02 09:36:09,690:INFO:Base model : Extreme Gradient Boosting
2020-11-02 09:36:09,696:INFO:Declaring metric variables
2020-11-02 09:36:09,703:INFO:Defining Hyperparameters
2020-11-02 09:36:09,805:INFO:Tuning with n_jobs=-1
2020-11-02 09:36:09,807:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-02 09:36:48,593:INFO:best_params: {'actual_estimator__learning_rate': 0.4687003018001285, 'actual_estimator__n_estimators': 89, 'actual_estimator__subsample': 0.7280474044588126, 'actual_estimator__max_depth': 10, 'actual_estimator__colsample_bytree': 0.8046293315715116, 'actual_estimator__min_child_weight': 2, 'actual_estimator__reg_alpha': 2.100878670644882e-08, 'actual_estimator__reg_lambda': 0.20145911396069155, 'actual_estimator__scale_pos_weight': 32.302279760571224}
2020-11-02 09:36:48,593:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-02 09:36:48,596:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-02 09:36:48,597:INFO:Random search completed
2020-11-02 09:36:48,597:INFO:SubProcess create_model() called ==================================
2020-11-02 09:36:48,598:INFO:Initializing create_model()
2020-11-02 09:36:48,598:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf8de12280>, kwargs={'learning_rate': 0.4687003018001285, 'n_estimators': 89, 'subsample': 0.7280474044588126, 'max_depth': 10, 'colsample_bytree': 0.8046293315715116, 'min_child_weight': 2, 'reg_alpha': 2.100878670644882e-08, 'reg_lambda': 0.20145911396069155, 'scale_pos_weight': 32.302279760571224})
2020-11-02 09:36:48,598:INFO:Checking exceptions
2020-11-02 09:36:48,598:INFO:Importing libraries
2020-11-02 09:36:48,598:INFO:Copying training dataset
2020-11-02 09:36:48,599:INFO:Defining folds
2020-11-02 09:36:48,599:INFO:Declaring metric variables
2020-11-02 09:36:48,605:INFO:Importing untrained model
2020-11-02 09:36:48,605:INFO:Declaring custom model
2020-11-02 09:36:48,612:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-02 09:36:48,624:INFO:Starting cross validation
2020-11-02 09:36:48,624:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:36:48,835:INFO:Calculating mean and std
2020-11-02 09:36:48,837:INFO:Creating metrics dataframe
2020-11-02 09:36:48,852:INFO:Finalizing model
2020-11-02 09:36:48,913:INFO:Uploading results into container
2020-11-02 09:36:48,913:INFO:Uploading model into container now
2020-11-02 09:36:48,913:INFO:create_model_container: 16
2020-11-02 09:36:48,913:INFO:master_model_container: 16
2020-11-02 09:36:48,913:INFO:display_container: 2
2020-11-02 09:36:48,915:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8046293315715116, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.4687003018001285, max_delta_step=0, max_depth=10,
              min_child_weight=2, missing=nan, monotone_constraints='()',
              n_estimators=89, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=2.100878670644882e-08, reg_lambda=0.20145911396069155,
              scale_pos_weight=32.302279760571224, subsample=0.7280474044588126,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-02 09:36:48,915:INFO:create_model() succesfully completed......................................
2020-11-02 09:36:49,034:INFO:SubProcess create_model() end ==================================
2020-11-02 09:36:49,067:INFO:create_model_container: 16
2020-11-02 09:36:49,067:INFO:master_model_container: 16
2020-11-02 09:36:49,067:INFO:display_container: 2
2020-11-02 09:36:49,069:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8046293315715116, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.4687003018001285, max_delta_step=0, max_depth=10,
              min_child_weight=2, missing=nan, monotone_constraints='()',
              n_estimators=89, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=2.100878670644882e-08, reg_lambda=0.20145911396069155,
              scale_pos_weight=32.302279760571224, subsample=0.7280474044588126,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-02 09:36:49,069:INFO:tune_model() succesfully completed......................................
2020-11-02 09:36:49,236:INFO:Initializing tune_model()
2020-11-02 09:36:49,236:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-02 09:36:49,236:INFO:Checking exceptions
2020-11-02 09:36:49,238:INFO:Preparing display monitor
2020-11-02 09:36:49,278:INFO:Copying training dataset
2020-11-02 09:36:49,278:INFO:Checking base model
2020-11-02 09:36:49,279:INFO:Base model : Random Forest Classifier
2020-11-02 09:36:49,290:INFO:Declaring metric variables
2020-11-02 09:36:49,299:INFO:Defining Hyperparameters
2020-11-02 09:36:49,425:INFO:Tuning with n_jobs=-1
2020-11-02 09:36:49,426:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-02 09:39:20,390:INFO:best_params: {'actual_estimator__n_estimators': 152, 'actual_estimator__max_depth': 8, 'actual_estimator__min_impurity_decrease': 4.3158648277084624e-08, 'actual_estimator__max_features': 0.8414111022565585, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__bootstrap': True, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced'}
2020-11-02 09:39:20,391:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-02 09:39:20,391:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-02 09:39:20,391:INFO:Random search completed
2020-11-02 09:39:20,391:INFO:SubProcess create_model() called ==================================
2020-11-02 09:39:20,392:INFO:Initializing create_model()
2020-11-02 09:39:20,392:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf79961c10>, kwargs={'n_estimators': 152, 'max_depth': 8, 'min_impurity_decrease': 4.3158648277084624e-08, 'max_features': 0.8414111022565585, 'min_samples_split': 2, 'min_samples_leaf': 3, 'bootstrap': True, 'criterion': 'entropy', 'class_weight': 'balanced'})
2020-11-02 09:39:20,392:INFO:Checking exceptions
2020-11-02 09:39:20,392:INFO:Importing libraries
2020-11-02 09:39:20,392:INFO:Copying training dataset
2020-11-02 09:39:20,393:INFO:Defining folds
2020-11-02 09:39:20,393:INFO:Declaring metric variables
2020-11-02 09:39:20,400:INFO:Importing untrained model
2020-11-02 09:39:20,400:INFO:Declaring custom model
2020-11-02 09:39:20,407:INFO:Random Forest Classifier Imported succesfully
2020-11-02 09:39:20,421:INFO:Starting cross validation
2020-11-02 09:39:20,421:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:39:21,092:INFO:Calculating mean and std
2020-11-02 09:39:21,093:INFO:Creating metrics dataframe
2020-11-02 09:39:21,106:INFO:Finalizing model
2020-11-02 09:39:21,358:INFO:Uploading results into container
2020-11-02 09:39:21,358:INFO:Uploading model into container now
2020-11-02 09:39:21,358:INFO:create_model_container: 17
2020-11-02 09:39:21,358:INFO:master_model_container: 17
2020-11-02 09:39:21,359:INFO:display_container: 3
2020-11-02 09:39:21,359:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=8,
                       max_features=0.8414111022565585, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=4.3158648277084624e-08,
                       min_impurity_split=None, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=152, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-11-02 09:39:21,359:INFO:create_model() succesfully completed......................................
2020-11-02 09:39:21,502:INFO:SubProcess create_model() end ==================================
2020-11-02 09:39:21,528:INFO:create_model_container: 17
2020-11-02 09:39:21,528:INFO:master_model_container: 17
2020-11-02 09:39:21,528:INFO:display_container: 3
2020-11-02 09:39:21,529:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=8,
                       max_features=0.8414111022565585, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=4.3158648277084624e-08,
                       min_impurity_split=None, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=152, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-11-02 09:39:21,529:INFO:tune_model() succesfully completed......................................
2020-11-02 09:39:21,643:INFO:Initializing tune_model()
2020-11-02 09:39:21,643:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-02 09:39:21,643:INFO:Checking exceptions
2020-11-02 09:39:21,644:INFO:Preparing display monitor
2020-11-02 09:39:21,660:INFO:Copying training dataset
2020-11-02 09:39:21,661:INFO:Checking base model
2020-11-02 09:39:21,661:INFO:Base model : Light Gradient Boosting Machine
2020-11-02 09:39:21,668:INFO:Declaring metric variables
2020-11-02 09:39:21,675:INFO:Defining Hyperparameters
2020-11-02 09:39:21,811:INFO:Tuning with n_jobs=-1
2020-11-02 09:39:21,813:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-02 09:39:38,358:INFO:best_params: {'actual_estimator__num_leaves': 52, 'actual_estimator__learning_rate': 2.2026770684296422e-05, 'actual_estimator__n_estimators': 14, 'actual_estimator__min_split_gain': 0.2970601333841828, 'actual_estimator__reg_alpha': 7.281190181985514e-07, 'actual_estimator__reg_lambda': 4.438906604080714e-10, 'actual_estimator__min_data_in_leaf': 9269, 'actual_estimator__feature_fraction': 0.7640193187147652, 'actual_estimator__bagging_fraction': 0.6521676942141355, 'actual_estimator__bagging_freq': 6, 'actual_estimator__min_child_samples': 89}
2020-11-02 09:39:38,358:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-02 09:39:38,359:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-02 09:39:38,359:INFO:Random search completed
2020-11-02 09:39:38,360:INFO:SubProcess create_model() called ==================================
2020-11-02 09:39:38,360:INFO:Initializing create_model()
2020-11-02 09:39:38,361:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf799bfd60>, kwargs={'num_leaves': 52, 'learning_rate': 2.2026770684296422e-05, 'n_estimators': 14, 'min_split_gain': 0.2970601333841828, 'reg_alpha': 7.281190181985514e-07, 'reg_lambda': 4.438906604080714e-10, 'min_data_in_leaf': 9269, 'feature_fraction': 0.7640193187147652, 'bagging_fraction': 0.6521676942141355, 'bagging_freq': 6, 'min_child_samples': 89})
2020-11-02 09:39:38,361:INFO:Checking exceptions
2020-11-02 09:39:38,361:INFO:Importing libraries
2020-11-02 09:39:38,361:INFO:Copying training dataset
2020-11-02 09:39:38,362:INFO:Defining folds
2020-11-02 09:39:38,362:INFO:Declaring metric variables
2020-11-02 09:39:38,371:INFO:Importing untrained model
2020-11-02 09:39:38,372:INFO:Declaring custom model
2020-11-02 09:39:38,381:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-02 09:39:38,399:INFO:Starting cross validation
2020-11-02 09:39:38,400:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:39:38,466:INFO:Calculating mean and std
2020-11-02 09:39:38,467:INFO:Creating metrics dataframe
2020-11-02 09:39:38,481:INFO:Finalizing model
2020-11-02 09:39:38,488:INFO:Uploading results into container
2020-11-02 09:39:38,488:INFO:Uploading model into container now
2020-11-02 09:39:38,488:INFO:create_model_container: 18
2020-11-02 09:39:38,488:INFO:master_model_container: 18
2020-11-02 09:39:38,488:INFO:display_container: 4
2020-11-02 09:39:38,489:INFO:LGBMClassifier(bagging_fraction=0.6521676942141355, bagging_freq=6,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.7640193187147652, importance_type='split',
               learning_rate=2.2026770684296422e-05, max_depth=-1,
               min_child_samples=89, min_child_weight=0.001,
               min_data_in_leaf=9269, min_split_gain=0.2970601333841828,
               n_estimators=14, n_jobs=-1, num_leaves=52, objective=None,
               random_state=786, reg_alpha=7.281190181985514e-07,
               reg_lambda=4.438906604080714e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-11-02 09:39:38,489:INFO:create_model() succesfully completed......................................
2020-11-02 09:39:38,696:INFO:SubProcess create_model() end ==================================
2020-11-02 09:39:38,733:INFO:create_model_container: 18
2020-11-02 09:39:38,733:INFO:master_model_container: 18
2020-11-02 09:39:38,737:INFO:display_container: 4
2020-11-02 09:39:38,738:INFO:LGBMClassifier(bagging_fraction=0.6521676942141355, bagging_freq=6,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.7640193187147652, importance_type='split',
               learning_rate=2.2026770684296422e-05, max_depth=-1,
               min_child_samples=89, min_child_weight=0.001,
               min_data_in_leaf=9269, min_split_gain=0.2970601333841828,
               n_estimators=14, n_jobs=-1, num_leaves=52, objective=None,
               random_state=786, reg_alpha=7.281190181985514e-07,
               reg_lambda=4.438906604080714e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-11-02 09:39:38,738:INFO:tune_model() succesfully completed......................................
2020-11-02 09:39:38,866:INFO:Initializing tune_model()
2020-11-02 09:39:38,866:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fbf94bf5c10>, fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-02 09:39:38,866:INFO:Checking exceptions
2020-11-02 09:39:38,867:INFO:Preparing display monitor
2020-11-02 09:39:38,888:INFO:Copying training dataset
2020-11-02 09:39:38,890:INFO:Checking base model
2020-11-02 09:39:38,891:INFO:Base model : CatBoost Classifier
2020-11-02 09:39:38,902:INFO:Declaring metric variables
2020-11-02 09:39:38,913:INFO:Defining Hyperparameters
2020-11-02 09:39:39,053:INFO:Tuning with n_jobs=-1
2020-11-02 09:39:39,055:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-02 09:43:42,428:INFO:best_params: {'actual_estimator__depth': 10, 'actual_estimator__n_estimators': 293, 'actual_estimator__random_strength': 0.45372083014917086, 'actual_estimator__l2_leaf_reg': 1}
2020-11-02 09:43:42,429:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-02 09:43:42,430:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-02 09:43:42,432:INFO:Random search completed
2020-11-02 09:43:42,432:INFO:SubProcess create_model() called ==================================
2020-11-02 09:43:42,432:INFO:Initializing create_model()
2020-11-02 09:43:42,433:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fbf799db6a0>, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf799db940>, kwargs={'depth': 10, 'n_estimators': 293, 'random_strength': 0.45372083014917086, 'l2_leaf_reg': 1})
2020-11-02 09:43:42,433:INFO:Checking exceptions
2020-11-02 09:43:42,433:INFO:Importing libraries
2020-11-02 09:43:42,433:INFO:Copying training dataset
2020-11-02 09:43:42,434:INFO:Defining folds
2020-11-02 09:43:42,434:INFO:Declaring metric variables
2020-11-02 09:43:42,446:INFO:Importing untrained model
2020-11-02 09:43:42,446:INFO:Declaring custom model
2020-11-02 09:43:42,454:INFO:CatBoost Classifier Imported succesfully
2020-11-02 09:43:42,468:INFO:Starting cross validation
2020-11-02 09:43:42,469:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:43:56,325:INFO:Calculating mean and std
2020-11-02 09:43:56,331:INFO:Creating metrics dataframe
2020-11-02 09:43:56,351:INFO:Finalizing model
2020-11-02 09:44:01,396:INFO:Uploading results into container
2020-11-02 09:44:01,396:INFO:Uploading model into container now
2020-11-02 09:44:01,396:INFO:create_model_container: 19
2020-11-02 09:44:01,396:INFO:master_model_container: 19
2020-11-02 09:44:01,396:INFO:display_container: 5
2020-11-02 09:44:01,396:INFO:<catboost.core.CatBoostClassifier object at 0x7fbf799e6910>
2020-11-02 09:44:01,396:INFO:create_model() succesfully completed......................................
2020-11-02 09:44:01,806:INFO:SubProcess create_model() end ==================================
2020-11-02 09:44:01,832:INFO:create_model_container: 19
2020-11-02 09:44:01,832:INFO:master_model_container: 19
2020-11-02 09:44:01,832:INFO:display_container: 5
2020-11-02 09:44:01,832:INFO:<catboost.core.CatBoostClassifier object at 0x7fbf799e6910>
2020-11-02 09:44:01,833:INFO:tune_model() succesfully completed......................................
2020-11-02 09:44:02,041:INFO:Initializing tune_model()
2020-11-02 09:44:02,041:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-02 09:44:02,041:INFO:Checking exceptions
2020-11-02 09:44:02,043:INFO:Preparing display monitor
2020-11-02 09:44:02,064:INFO:Copying training dataset
2020-11-02 09:44:02,064:INFO:Checking base model
2020-11-02 09:44:02,065:INFO:Base model : Gradient Boosting Classifier
2020-11-02 09:44:02,077:INFO:Declaring metric variables
2020-11-02 09:44:02,085:INFO:Defining Hyperparameters
2020-11-02 09:44:02,255:INFO:Tuning with n_jobs=-1
2020-11-02 09:44:02,258:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-02 09:46:09,324:INFO:best_params: {'actual_estimator__n_estimators': 275, 'actual_estimator__learning_rate': 0.29156013959452626, 'actual_estimator__subsample': 0.9765159896979481, 'actual_estimator__min_samples_split': 4, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__max_depth': 7, 'actual_estimator__min_impurity_decrease': 0.0013762718253129763, 'actual_estimator__max_features': 0.9472109179087913}
2020-11-02 09:46:09,325:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-02 09:46:09,329:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-02 09:46:09,330:INFO:Random search completed
2020-11-02 09:46:09,330:INFO:SubProcess create_model() called ==================================
2020-11-02 09:46:09,331:INFO:Initializing create_model()
2020-11-02 09:46:09,332:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf79961c10>, kwargs={'n_estimators': 275, 'learning_rate': 0.29156013959452626, 'subsample': 0.9765159896979481, 'min_samples_split': 4, 'min_samples_leaf': 3, 'max_depth': 7, 'min_impurity_decrease': 0.0013762718253129763, 'max_features': 0.9472109179087913})
2020-11-02 09:46:09,332:INFO:Checking exceptions
2020-11-02 09:46:09,332:INFO:Importing libraries
2020-11-02 09:46:09,332:INFO:Copying training dataset
2020-11-02 09:46:09,333:INFO:Defining folds
2020-11-02 09:46:09,333:INFO:Declaring metric variables
2020-11-02 09:46:09,347:INFO:Importing untrained model
2020-11-02 09:46:09,347:INFO:Declaring custom model
2020-11-02 09:46:09,356:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-02 09:46:09,371:INFO:Starting cross validation
2020-11-02 09:46:09,371:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:46:10,011:INFO:Calculating mean and std
2020-11-02 09:46:10,015:INFO:Creating metrics dataframe
2020-11-02 09:46:10,035:INFO:Finalizing model
2020-11-02 09:46:10,318:INFO:Uploading results into container
2020-11-02 09:46:10,319:INFO:Uploading model into container now
2020-11-02 09:46:10,319:INFO:create_model_container: 20
2020-11-02 09:46:10,319:INFO:master_model_container: 20
2020-11-02 09:46:10,319:INFO:display_container: 6
2020-11-02 09:46:10,320:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.29156013959452626, loss='deviance',
                           max_depth=7, max_features=0.9472109179087913,
                           max_leaf_nodes=None,
                           min_impurity_decrease=0.0013762718253129763,
                           min_impurity_split=None, min_samples_leaf=3,
                           min_samples_split=4, min_weight_fraction_leaf=0.0,
                           n_estimators=275, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.9765159896979481, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-02 09:46:10,320:INFO:create_model() succesfully completed......................................
2020-11-02 09:46:10,560:INFO:SubProcess create_model() end ==================================
2020-11-02 09:46:10,587:INFO:create_model_container: 20
2020-11-02 09:46:10,588:INFO:master_model_container: 20
2020-11-02 09:46:10,588:INFO:display_container: 6
2020-11-02 09:46:10,588:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.29156013959452626, loss='deviance',
                           max_depth=7, max_features=0.9472109179087913,
                           max_leaf_nodes=None,
                           min_impurity_decrease=0.0013762718253129763,
                           min_impurity_split=None, min_samples_leaf=3,
                           min_samples_split=4, min_weight_fraction_leaf=0.0,
                           n_estimators=275, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.9765159896979481, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-02 09:46:10,589:INFO:tune_model() succesfully completed......................................
2020-11-02 09:46:10,714:INFO:Initializing tune_model()
2020-11-02 09:46:10,714:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-02 09:46:10,714:INFO:Checking exceptions
2020-11-02 09:46:10,715:INFO:Preparing display monitor
2020-11-02 09:46:10,744:INFO:Copying training dataset
2020-11-02 09:46:10,746:INFO:Checking base model
2020-11-02 09:46:10,747:INFO:Base model : Extra Trees Classifier
2020-11-02 09:46:10,757:INFO:Declaring metric variables
2020-11-02 09:46:10,765:INFO:Defining Hyperparameters
2020-11-02 09:46:10,979:INFO:Tuning with n_jobs=-1
2020-11-02 09:46:10,982:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-02 09:48:54,938:INFO:best_params: {'actual_estimator__n_estimators': 190, 'actual_estimator__max_depth': 9, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__max_features': 0.6626395796834238, 'actual_estimator__min_impurity_decrease': 9.077240271704272e-09, 'actual_estimator__criterion': 'entropy', 'actual_estimator__bootstrap': False, 'actual_estimator__class_weight': 'balanced'}
2020-11-02 09:48:54,938:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-02 09:48:54,939:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-02 09:48:54,939:INFO:Random search completed
2020-11-02 09:48:54,939:INFO:SubProcess create_model() called ==================================
2020-11-02 09:48:54,940:INFO:Initializing create_model()
2020-11-02 09:48:54,940:INFO:create_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf796dcb20>, kwargs={'n_estimators': 190, 'max_depth': 9, 'min_samples_split': 7, 'min_samples_leaf': 2, 'max_features': 0.6626395796834238, 'min_impurity_decrease': 9.077240271704272e-09, 'criterion': 'entropy', 'bootstrap': False, 'class_weight': 'balanced'})
2020-11-02 09:48:54,940:INFO:Checking exceptions
2020-11-02 09:48:54,940:INFO:Importing libraries
2020-11-02 09:48:54,940:INFO:Copying training dataset
2020-11-02 09:48:54,941:INFO:Defining folds
2020-11-02 09:48:54,941:INFO:Declaring metric variables
2020-11-02 09:48:54,948:INFO:Importing untrained model
2020-11-02 09:48:54,949:INFO:Declaring custom model
2020-11-02 09:48:54,955:INFO:Extra Trees Classifier Imported succesfully
2020-11-02 09:48:54,972:INFO:Starting cross validation
2020-11-02 09:48:54,972:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:48:58,722:INFO:Calculating mean and std
2020-11-02 09:48:58,726:INFO:Creating metrics dataframe
2020-11-02 09:48:58,746:INFO:Finalizing model
2020-11-02 09:48:59,175:INFO:Uploading results into container
2020-11-02 09:48:59,176:INFO:Uploading model into container now
2020-11-02 09:48:59,176:INFO:create_model_container: 21
2020-11-02 09:48:59,176:INFO:master_model_container: 21
2020-11-02 09:48:59,176:INFO:display_container: 7
2020-11-02 09:48:59,176:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='entropy', max_depth=9,
                     max_features=0.6626395796834238, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=9.077240271704272e-09,
                     min_impurity_split=None, min_samples_leaf=2,
                     min_samples_split=7, min_weight_fraction_leaf=0.0,
                     n_estimators=190, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False)
2020-11-02 09:48:59,177:INFO:create_model() succesfully completed......................................
2020-11-02 09:48:59,336:INFO:SubProcess create_model() end ==================================
2020-11-02 09:48:59,372:INFO:create_model_container: 21
2020-11-02 09:48:59,372:INFO:master_model_container: 21
2020-11-02 09:48:59,373:INFO:display_container: 7
2020-11-02 09:48:59,373:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='entropy', max_depth=9,
                     max_features=0.6626395796834238, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=9.077240271704272e-09,
                     min_impurity_split=None, min_samples_leaf=2,
                     min_samples_split=7, min_weight_fraction_leaf=0.0,
                     n_estimators=190, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False)
2020-11-02 09:48:59,373:INFO:tune_model() succesfully completed......................................
2020-11-02 09:48:59,562:INFO:Initializing blend_models()
2020-11-02 09:48:59,562:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8046293315715116, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.4687003018001285, max_delta_step=0, max_depth=10,
              min_child_weight=2, missing=nan, monotone_constraints='()',
              n_estimators=89, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=2.100878670644882e-08, reg_lambda=0.20145911396069155,
              scale_pos_weight=32.302279760571224, subsample=0.7280474044588126,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=8,
                       max_features=0.8414111022565585, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=4.3158648277084624e-08,
                       min_impurity_split=None, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=152, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), LGBMClassifier(bagging_fraction=0.6521676942141355, bagging_freq=6,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.7640193187147652, importance_type='split',
               learning_rate=2.2026770684296422e-05, max_depth=-1,
               min_child_samples=89, min_child_weight=0.001,
               min_data_in_leaf=9269, min_split_gain=0.2970601333841828,
               n_estimators=14, n_jobs=-1, num_leaves=52, objective=None,
               random_state=786, reg_alpha=7.281190181985514e-07,
               reg_lambda=4.438906604080714e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fbf799e6910>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.29156013959452626, loss='deviance',
                           max_depth=7, max_features=0.9472109179087913,
                           max_leaf_nodes=None,
                           min_impurity_decrease=0.0013762718253129763,
                           min_impurity_split=None, min_samples_leaf=3,
                           min_samples_split=4, min_weight_fraction_leaf=0.0,
                           n_estimators=275, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.9765159896979481, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='entropy', max_depth=9,
                     max_features=0.6626395796834238, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=9.077240271704272e-09,
                     min_impurity_split=None, min_samples_leaf=2,
                     min_samples_split=7, min_weight_fraction_leaf=0.0,
                     n_estimators=190, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False)], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-02 09:48:59,562:INFO:Checking exceptions
2020-11-02 09:48:59,564:INFO:Preparing display monitor
2020-11-02 09:48:59,585:INFO:Importing libraries
2020-11-02 09:48:59,585:INFO:Copying training dataset
2020-11-02 09:48:59,593:INFO:Getting model names
2020-11-02 09:48:59,602:INFO:SubProcess create_model() called ==================================
2020-11-02 09:48:59,616:INFO:Initializing create_model()
2020-11-02 09:48:59,617:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbf8d320910>, kwargs={})
2020-11-02 09:48:59,617:INFO:Checking exceptions
2020-11-02 09:48:59,617:INFO:Importing libraries
2020-11-02 09:48:59,617:INFO:Copying training dataset
2020-11-02 09:48:59,617:INFO:Defining folds
2020-11-02 09:48:59,618:INFO:Declaring metric variables
2020-11-02 09:48:59,625:INFO:Importing untrained model
2020-11-02 09:48:59,625:INFO:Declaring custom model
2020-11-02 09:48:59,636:INFO:Voting Classifier Imported succesfully
2020-11-02 09:48:59,650:INFO:Starting cross validation
2020-11-02 09:48:59,651:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-02 09:49:16,118:INFO:Calculating mean and std
2020-11-02 09:49:16,118:INFO:Creating metrics dataframe
2020-11-02 09:49:16,131:INFO:Finalizing model
2020-11-02 09:49:20,696:INFO:Uploading results into container
2020-11-02 09:49:20,696:INFO:Uploading model into container now
2020-11-02 09:49:20,696:INFO:create_model_container: 22
2020-11-02 09:49:20,696:INFO:master_model_container: 22
2020-11-02 09:49:20,696:INFO:display_container: 8
2020-11-02 09:49:20,705:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1])
2020-11-02 09:49:20,705:INFO:create_model() succesfully completed......................................
2020-11-02 09:49:20,817:INFO:SubProcess create_model() end ==================================
2020-11-02 09:49:20,843:INFO:create_model_container: 22
2020-11-02 09:49:20,843:INFO:master_model_container: 22
2020-11-02 09:49:20,844:INFO:display_container: 8
2020-11-02 09:49:20,855:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1])
2020-11-02 09:49:20,855:INFO:blend_models() succesfully completed......................................
2020-11-02 09:49:20,989:INFO:Initializing optimize_threshold()
2020-11-02 09:49:20,989:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-50, false_negative=0)
2020-11-02 09:49:20,989:INFO:Importing libraries
2020-11-02 09:49:20,989:INFO:Checking exceptions
2020-11-02 09:49:21,040:INFO:Defining loss function
2020-11-02 09:49:21,040:INFO:Iteration starts at 0
2020-11-02 09:49:21,689:INFO:Figure ready for render
2020-11-02 09:49:21,796:INFO:optimize_threshold() succesfully completed......................................
2020-11-02 09:49:53,659:INFO:Initializing predict_model()
2020-11-02 09:49:53,659:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=None, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:49:53,659:INFO:Checking exceptions
2020-11-02 09:49:53,659:INFO:Preloading libraries
2020-11-02 09:49:53,659:INFO:Preparing display monitor
2020-11-02 09:49:58,550:INFO:Initializing predict_model()
2020-11-02 09:49:58,550:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:49:58,550:INFO:Checking exceptions
2020-11-02 09:49:58,550:INFO:Preloading libraries
2020-11-02 09:49:58,550:INFO:Preparing display monitor
2020-11-02 09:49:58,785:INFO:Initializing predict_model()
2020-11-02 09:49:58,785:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:49:58,786:INFO:Checking exceptions
2020-11-02 09:49:58,786:INFO:Preloading libraries
2020-11-02 09:49:58,786:INFO:Preparing display monitor
2020-11-02 09:49:59,027:INFO:Initializing predict_model()
2020-11-02 09:49:59,028:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:49:59,028:INFO:Checking exceptions
2020-11-02 09:49:59,028:INFO:Preloading libraries
2020-11-02 09:49:59,028:INFO:Preparing display monitor
2020-11-02 09:49:59,282:INFO:Initializing predict_model()
2020-11-02 09:49:59,282:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:49:59,282:INFO:Checking exceptions
2020-11-02 09:49:59,282:INFO:Preloading libraries
2020-11-02 09:49:59,282:INFO:Preparing display monitor
2020-11-02 09:49:59,535:INFO:Initializing predict_model()
2020-11-02 09:49:59,535:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:49:59,535:INFO:Checking exceptions
2020-11-02 09:49:59,535:INFO:Preloading libraries
2020-11-02 09:49:59,535:INFO:Preparing display monitor
2020-11-02 09:49:59,796:INFO:Initializing predict_model()
2020-11-02 09:49:59,796:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:49:59,796:INFO:Checking exceptions
2020-11-02 09:49:59,796:INFO:Preloading libraries
2020-11-02 09:49:59,796:INFO:Preparing display monitor
2020-11-02 09:50:00,056:INFO:Initializing predict_model()
2020-11-02 09:50:00,056:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:50:00,056:INFO:Checking exceptions
2020-11-02 09:50:00,056:INFO:Preloading libraries
2020-11-02 09:50:00,056:INFO:Preparing display monitor
2020-11-02 09:50:00,312:INFO:Initializing predict_model()
2020-11-02 09:50:00,312:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:50:00,312:INFO:Checking exceptions
2020-11-02 09:50:00,313:INFO:Preloading libraries
2020-11-02 09:50:00,313:INFO:Preparing display monitor
2020-11-02 09:50:00,579:INFO:Initializing predict_model()
2020-11-02 09:50:00,579:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:50:00,579:INFO:Checking exceptions
2020-11-02 09:50:00,579:INFO:Preloading libraries
2020-11-02 09:50:00,580:INFO:Preparing display monitor
2020-11-02 09:50:00,812:INFO:Initializing predict_model()
2020-11-02 09:50:00,812:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.71, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:50:00,812:INFO:Checking exceptions
2020-11-02 09:50:00,813:INFO:Preloading libraries
2020-11-02 09:50:00,813:INFO:Preparing display monitor
2020-11-02 09:50:01,046:INFO:Initializing predict_model()
2020-11-02 09:50:01,046:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:50:01,046:INFO:Checking exceptions
2020-11-02 09:50:01,046:INFO:Preloading libraries
2020-11-02 09:50:01,046:INFO:Preparing display monitor
2020-11-02 09:50:11,296:INFO:Initializing plot_model()
2020-11-02 09:50:11,296:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:50:11,296:INFO:Checking exceptions
2020-11-02 09:50:11,304:INFO:Initializing plot_model()
2020-11-02 09:50:11,304:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:50:11,305:INFO:Checking exceptions
2020-11-02 09:50:11,306:INFO:Preloading libraries
2020-11-02 09:50:11,358:INFO:Copying training dataset
2020-11-02 09:50:11,358:INFO:Copying test dataset
2020-11-02 09:50:11,358:INFO:Plot type: error
2020-11-02 09:50:11,458:INFO:Fitting Model
2020-11-02 09:50:11,459:INFO:Scoring test/hold-out set
2020-11-02 09:50:11,553:INFO:Saving 'Prediction Error.png' in current active directory
2020-11-02 09:50:11,721:INFO:Visual Rendered Successfully
2020-11-02 09:50:11,851:INFO:plot_model() succesfully completed......................................
2020-11-02 09:50:11,865:INFO:Initializing plot_model()
2020-11-02 09:50:11,865:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:50:11,865:INFO:Checking exceptions
2020-11-02 09:50:11,877:INFO:Initializing plot_model()
2020-11-02 09:50:11,877:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:50:11,877:INFO:Checking exceptions
2020-11-02 09:50:11,879:INFO:Preloading libraries
2020-11-02 09:50:11,935:INFO:Copying training dataset
2020-11-02 09:50:11,936:INFO:Copying test dataset
2020-11-02 09:50:11,936:INFO:Plot type: auc
2020-11-02 09:50:11,945:INFO:Fitting Model
2020-11-02 09:50:11,946:INFO:Scoring test/hold-out set
2020-11-02 09:50:12,040:INFO:Saving 'AUC.png' in current active directory
2020-11-02 09:50:12,173:INFO:Visual Rendered Successfully
2020-11-02 09:50:12,292:INFO:plot_model() succesfully completed......................................
2020-11-02 09:50:12,305:INFO:Initializing plot_model()
2020-11-02 09:50:12,305:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:50:12,305:INFO:Checking exceptions
2020-11-02 09:50:12,307:INFO:Preloading libraries
2020-11-02 09:50:12,363:INFO:Copying training dataset
2020-11-02 09:50:12,363:INFO:Copying test dataset
2020-11-02 09:50:12,364:INFO:Plot type: threshold
2020-11-02 09:50:12,373:INFO:Fitting Model
2020-11-02 09:53:23,093:INFO:Scoring test/hold-out set
2020-11-02 09:53:23,157:INFO:Saving 'Threshold.png' in current active directory
2020-11-02 09:53:23,587:INFO:Visual Rendered Successfully
2020-11-02 09:53:23,987:INFO:plot_model() succesfully completed......................................
2020-11-02 09:53:24,002:INFO:Initializing plot_model()
2020-11-02 09:53:24,002:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:53:24,002:INFO:Checking exceptions
2020-11-02 09:53:24,003:INFO:Preloading libraries
2020-11-02 09:53:24,061:INFO:Copying training dataset
2020-11-02 09:53:24,061:INFO:Copying test dataset
2020-11-02 09:53:24,062:INFO:Plot type: pr
2020-11-02 09:53:24,072:INFO:Fitting Model
2020-11-02 09:53:24,073:INFO:Scoring test/hold-out set
2020-11-02 09:53:24,173:INFO:Saving 'Precision Recall.png' in current active directory
2020-11-02 09:53:24,304:INFO:Visual Rendered Successfully
2020-11-02 09:53:24,426:INFO:plot_model() succesfully completed......................................
2020-11-02 09:53:24,440:INFO:Initializing plot_model()
2020-11-02 09:53:24,440:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:53:24,440:INFO:Checking exceptions
2020-11-02 09:53:24,442:INFO:Preloading libraries
2020-11-02 09:53:24,493:INFO:Copying training dataset
2020-11-02 09:53:24,494:INFO:Copying test dataset
2020-11-02 09:53:24,494:INFO:Plot type: confusion_matrix
2020-11-02 09:53:24,504:INFO:Fitting Model
2020-11-02 09:53:24,505:INFO:Scoring test/hold-out set
2020-11-02 09:53:24,603:INFO:Saving 'Confusion Matrix.png' in current active directory
2020-11-02 09:53:24,708:INFO:Visual Rendered Successfully
2020-11-02 09:53:24,831:INFO:plot_model() succesfully completed......................................
2020-11-02 09:53:24,846:INFO:Initializing plot_model()
2020-11-02 09:53:24,846:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:53:24,847:INFO:Checking exceptions
2020-11-02 09:53:24,848:INFO:Preloading libraries
2020-11-02 09:53:24,902:INFO:Copying training dataset
2020-11-02 09:53:24,903:INFO:Copying test dataset
2020-11-02 09:53:24,903:INFO:Plot type: class_report
2020-11-02 09:53:24,912:INFO:Fitting Model
2020-11-02 09:53:24,913:INFO:Scoring test/hold-out set
2020-11-02 09:53:25,022:INFO:Saving 'Class Report.png' in current active directory
2020-11-02 09:53:25,156:INFO:Visual Rendered Successfully
2020-11-02 09:53:25,279:INFO:plot_model() succesfully completed......................................
2020-11-02 09:53:25,294:INFO:Initializing plot_model()
2020-11-02 09:53:25,295:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:53:25,295:INFO:Checking exceptions
2020-11-02 09:53:25,296:INFO:Preloading libraries
2020-11-02 09:53:25,353:INFO:Copying training dataset
2020-11-02 09:53:25,353:INFO:Copying test dataset
2020-11-02 09:53:25,353:INFO:Plot type: boundary
2020-11-02 09:53:25,390:INFO:Fitting StandardScaler()
2020-11-02 09:53:25,401:INFO:Initializing plot_model()
2020-11-02 09:53:25,401:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:53:25,401:INFO:Checking exceptions
2020-11-02 09:53:25,411:INFO:Initializing plot_model()
2020-11-02 09:53:25,411:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:53:25,411:INFO:Checking exceptions
2020-11-02 09:53:25,412:INFO:Preloading libraries
2020-11-02 09:53:25,457:INFO:Copying training dataset
2020-11-02 09:53:25,457:INFO:Copying test dataset
2020-11-02 09:53:25,458:INFO:Plot type: learning
2020-11-02 09:53:25,467:INFO:Fitting Model
2020-11-02 09:56:48,935:INFO:Saving 'Learning Curve.png' in current active directory
2020-11-02 09:56:49,102:INFO:Visual Rendered Successfully
2020-11-02 09:56:49,503:INFO:plot_model() succesfully completed......................................
2020-11-02 09:56:49,522:INFO:Initializing plot_model()
2020-11-02 09:56:49,522:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:56:49,522:INFO:Checking exceptions
2020-11-02 09:56:49,524:INFO:Preloading libraries
2020-11-02 09:56:49,602:INFO:Copying training dataset
2020-11-02 09:56:49,603:INFO:Copying test dataset
2020-11-02 09:56:49,603:INFO:Plot type: manifold
2020-11-02 09:56:49,615:INFO:Fitting & Transforming Model
2020-11-02 09:56:49,627:INFO:Initializing plot_model()
2020-11-02 09:56:49,627:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:56:49,627:INFO:Checking exceptions
2020-11-02 09:56:49,628:INFO:Preloading libraries
2020-11-02 09:56:49,679:INFO:Copying training dataset
2020-11-02 09:56:49,679:INFO:Copying test dataset
2020-11-02 09:56:49,679:INFO:Plot type: calibration
2020-11-02 09:56:49,689:INFO:Scoring test/hold-out set
2020-11-02 09:56:49,844:INFO:Saving 'Calibration Curve.png' in current active directory
2020-11-02 09:56:49,978:INFO:Visual Rendered Successfully
2020-11-02 09:56:50,099:INFO:plot_model() succesfully completed......................................
2020-11-02 09:56:50,111:INFO:Initializing plot_model()
2020-11-02 09:56:50,112:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:56:50,112:INFO:Checking exceptions
2020-11-02 09:56:50,113:INFO:Preloading libraries
2020-11-02 09:56:50,166:INFO:Copying training dataset
2020-11-02 09:56:50,167:INFO:Copying test dataset
2020-11-02 09:56:50,167:INFO:Plot type: vc
2020-11-02 09:56:50,168:INFO:Determining param_name
2020-11-02 09:56:50,180:INFO:Initializing plot_model()
2020-11-02 09:56:50,180:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:56:50,180:INFO:Checking exceptions
2020-11-02 09:56:50,181:INFO:Preloading libraries
2020-11-02 09:56:50,230:INFO:Copying training dataset
2020-11-02 09:56:50,230:INFO:Copying test dataset
2020-11-02 09:56:50,230:INFO:Plot type: dimension
2020-11-02 09:56:50,232:INFO:Fitting StandardScaler()
2020-11-02 09:56:50,243:INFO:Initializing plot_model()
2020-11-02 09:56:50,243:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:56:50,243:INFO:Checking exceptions
2020-11-02 09:56:50,253:INFO:Initializing plot_model()
2020-11-02 09:56:50,254:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:56:50,254:INFO:Checking exceptions
2020-11-02 09:56:50,264:INFO:Initializing plot_model()
2020-11-02 09:56:50,264:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:56:50,264:INFO:Checking exceptions
2020-11-02 09:56:50,265:INFO:Preloading libraries
2020-11-02 09:56:50,313:INFO:Copying training dataset
2020-11-02 09:56:50,313:INFO:Copying test dataset
2020-11-02 09:56:50,313:INFO:Plot type: parameter
2020-11-02 09:56:50,317:INFO:Visual Rendered Successfully
2020-11-02 09:56:50,445:INFO:plot_model() succesfully completed......................................
2020-11-02 09:56:50,459:INFO:Initializing plot_model()
2020-11-02 09:56:50,459:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:56:50,459:INFO:Checking exceptions
2020-11-02 09:56:50,460:INFO:Preloading libraries
2020-11-02 09:56:50,516:INFO:Copying training dataset
2020-11-02 09:56:50,517:INFO:Copying test dataset
2020-11-02 09:56:50,517:INFO:Plot type: lift
2020-11-02 09:56:50,518:INFO:Generating predictions / predict_proba on X_test
2020-11-02 09:56:50,677:INFO:Saving 'Lift Chart.png' in current active directory
2020-11-02 09:56:50,857:INFO:Visual Rendered Successfully
2020-11-02 09:56:50,985:INFO:plot_model() succesfully completed......................................
2020-11-02 09:56:50,999:INFO:Initializing plot_model()
2020-11-02 09:56:50,999:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:56:50,999:INFO:Checking exceptions
2020-11-02 09:56:51,000:INFO:Preloading libraries
2020-11-02 09:56:51,053:INFO:Copying training dataset
2020-11-02 09:56:51,053:INFO:Copying test dataset
2020-11-02 09:56:51,053:INFO:Plot type: gain
2020-11-02 09:56:51,054:INFO:Generating predictions / predict_proba on X_test
2020-11-02 09:56:51,203:INFO:Saving 'Gain Chart.png' in current active directory
2020-11-02 09:56:51,386:INFO:Visual Rendered Successfully
2020-11-02 09:56:51,508:INFO:plot_model() succesfully completed......................................
2020-11-02 09:56:51,521:INFO:Initializing plot_model()
2020-11-02 09:56:51,521:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-02 09:56:51,521:INFO:Checking exceptions
2020-11-02 09:56:51,580:INFO:Initializing predict_model()
2020-11-02 09:56:51,580:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 09:56:51,581:INFO:Checking exceptions
2020-11-02 09:56:51,581:INFO:Preloading libraries
2020-11-02 09:56:51,581:INFO:Preparing display monitor
2020-11-02 09:56:51,911:INFO:Initializing optimize_threshold()
2020-11-02 09:56:51,911:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-100, false_negative=0)
2020-11-02 09:56:51,912:INFO:Importing libraries
2020-11-02 09:56:51,912:INFO:Checking exceptions
2020-11-02 09:56:51,968:INFO:Defining loss function
2020-11-02 09:56:51,968:INFO:Iteration starts at 0
2020-11-02 09:56:52,013:INFO:Figure ready for render
2020-11-02 09:56:52,017:INFO:optimize_threshold() succesfully completed......................................
2020-11-02 10:01:04,818:INFO:Initializing optimize_threshold()
2020-11-02 10:01:04,819:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-100, false_negative=0)
2020-11-02 10:01:04,819:INFO:Importing libraries
2020-11-02 10:01:04,820:INFO:Checking exceptions
2020-11-02 10:01:04,893:INFO:Defining loss function
2020-11-02 10:01:04,893:INFO:Iteration starts at 0
2020-11-02 10:01:04,945:INFO:Figure ready for render
2020-11-02 10:01:04,951:INFO:optimize_threshold() succesfully completed......................................
2020-11-02 10:01:51,574:INFO:Initializing optimize_threshold()
2020-11-02 10:01:51,575:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-100, false_negative=0)
2020-11-02 10:01:51,575:INFO:Importing libraries
2020-11-02 10:01:51,575:INFO:Checking exceptions
2020-11-02 10:01:51,632:INFO:Defining loss function
2020-11-02 10:01:51,632:INFO:Iteration starts at 0
2020-11-02 10:01:51,666:INFO:Figure ready for render
2020-11-02 10:01:51,671:INFO:optimize_threshold() succesfully completed......................................
2020-11-02 10:02:29,955:INFO:Initializing optimize_threshold()
2020-11-02 10:02:29,955:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-100, false_negative=0)
2020-11-02 10:02:29,956:INFO:Importing libraries
2020-11-02 10:02:29,956:INFO:Checking exceptions
2020-11-02 10:02:30,009:INFO:Defining loss function
2020-11-02 10:02:30,009:INFO:Iteration starts at 0
2020-11-02 10:02:30,041:INFO:Figure ready for render
2020-11-02 10:02:30,045:INFO:optimize_threshold() succesfully completed......................................
2020-11-02 10:02:30,052:INFO:Initializing predict_model()
2020-11-02 10:02:30,053:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=None, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 10:02:30,053:INFO:Checking exceptions
2020-11-02 10:02:30,053:INFO:Preloading libraries
2020-11-02 10:02:30,053:INFO:Preparing display monitor
2020-11-02 10:03:51,367:INFO:Initializing optimize_threshold()
2020-11-02 10:03:51,367:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-100, false_negative=0)
2020-11-02 10:03:51,367:INFO:Importing libraries
2020-11-02 10:03:51,368:INFO:Checking exceptions
2020-11-02 10:03:51,417:INFO:Defining loss function
2020-11-02 10:03:51,417:INFO:Iteration starts at 0
2020-11-02 10:03:51,451:INFO:Figure ready for render
2020-11-02 10:03:51,455:INFO:optimize_threshold() succesfully completed......................................
2020-11-02 14:50:45,605:INFO:Initializing predict_model()
2020-11-02 14:50:45,614:INFO:predict_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.8046293315715116,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.4687003018001285,
                                                   max_delta_step=0,
                                                   max_depth=10,
                                                   min_child_weight=2,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=9.077240271704272e-09,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=2,
                                                          min_samples_split=7,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=190,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-02 14:50:45,615:INFO:Checking exceptions
2020-11-02 14:50:45,615:INFO:Preloading libraries
2020-11-02 14:50:45,621:INFO:Preparing display monitor
2020-11-04 16:14:24,931:INFO:PyCaret Supervised Module
2020-11-04 16:14:24,933:INFO:ML Usecase: classification
2020-11-04 16:14:24,933:INFO:version 2.2.0
2020-11-04 16:14:24,933:INFO:Initializing setup()
2020-11-04 16:14:24,933:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-04 16:14:24,933:INFO:Checking environment
2020-11-04 16:14:24,933:INFO:python_version: 3.8.3
2020-11-04 16:14:24,933:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-04 16:14:24,934:INFO:machine: x86_64
2020-11-04 16:14:24,972:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-04 16:14:24,974:INFO:Memory: svmem(total=8589934592, available=1039953920, percent=87.9, used=3184300032, free=141389824, active=900263936, inactive=883458048, wired=2284036096)
2020-11-04 16:14:24,974:INFO:Physical Core: 4
2020-11-04 16:14:24,974:INFO:Logical Core: 8
2020-11-04 16:14:24,974:INFO:Checking libraries
2020-11-04 16:14:24,974:INFO:pd==1.0.5
2020-11-04 16:14:24,974:INFO:numpy==1.18.5
2020-11-04 16:14:24,974:INFO:sklearn==0.23.2
2020-11-04 16:14:25,808:INFO:xgboost==1.2.0
2020-11-04 16:14:25,808:INFO:lightgbm==2.3.1
2020-11-04 16:14:25,861:INFO:catboost==0.24.1
2020-11-04 16:14:26,797:INFO:mlflow==1.11.0
2020-11-04 16:14:26,797:INFO:Checking Exceptions
2020-11-04 16:14:26,797:INFO:Declaring global variables
2020-11-04 16:14:26,798:INFO:USI: 54e2
2020-11-04 16:14:26,798:INFO:pycaret_globals: {'iterative_imputation_iters_param', 'transform_target_method_param', '_ml_usecase', 'y_train', '_gpu_n_jobs_param', 'master_model_container', 'prep_pipe', 'data_before_preprocess', 'y_test', 'fix_imbalance_param', '_available_plots', 'logging_param', 'log_plots_param', 'gpu_param', 'fold_generator', '_all_metrics', 'fold_shuffle_param', 'pycaret_globals', '_all_models', 'X_train', '_internal_pipeline', 'target_param', 'X_test', 'transform_target_param', 'USI', 'stratify_param', 'exp_name_log', 'fix_imbalance_method_param', '_all_models_internal', 'fold_param', 'fold_groups_param', 'display_container', 'imputation_regressor', 'seed', 'create_model_container', 'y', 'experiment__', 'n_jobs_param', 'imputation_classifier', 'html_param', 'X'}
2020-11-04 16:14:26,798:INFO:Preparing display monitor
2020-11-04 16:14:26,799:INFO:Preparing display monitor
2020-11-04 16:14:26,818:INFO:Importing libraries
2020-11-04 16:14:26,818:INFO:Copying data for preprocessing
2020-11-04 16:14:26,829:INFO:Declaring preprocessing parameters
2020-11-04 16:14:26,830:INFO:Setting up iterative imputation
2020-11-04 16:14:27,231:INFO:Creating preprocessing pipeline
2020-11-04 16:14:27,261:INFO:Preprocessing pipeline created successfully
2020-11-04 16:14:27,261:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-04 16:14:27,261:INFO:Creating global containers
2020-11-04 16:14:27,263:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-04 16:14:27,378:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-04 16:14:28,485:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-04 16:14:29,318:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-04 16:14:29,448:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-04 16:14:29,782:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-04 16:14:29,948:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-04 16:14:30,143:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-04 16:14:30,429:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-04 16:14:30,892:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-04 16:14:31,013:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-04 16:14:31,128:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-04 16:14:31,587:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-04 16:14:31,716:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-04 16:14:32,011:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-04 16:14:32,152:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-04 16:14:32,413:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-04 16:14:33,199:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-04 16:14:33,357:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-04 16:14:33,609:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-04 16:14:33,788:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-04 16:14:33,940:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-04 16:14:34,089:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-04 16:14:34,411:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-04 16:14:34,542:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-04 16:14:34,676:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-04 16:14:34,800:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-04 16:14:35,088:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-04 16:14:35,242:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-04 16:14:35,381:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-04 16:14:35,575:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-04 16:14:35,707:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-04 16:14:36,044:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-04 16:14:36,187:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-04 16:14:36,330:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-04 16:14:36,457:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-04 16:14:36,678:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-04 16:14:36,809:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-04 16:14:36,923:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-04 16:14:37,055:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-04 16:14:37,181:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-04 16:14:37,403:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-04 16:14:37,530:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-04 16:14:37,663:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-04 16:14:37,920:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-04 16:14:38,118:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-04 16:14:38,247:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-04 16:14:38,371:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-04 16:14:38,547:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-04 16:14:38,782:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-04 16:14:38,920:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-04 16:14:42,053:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-04 16:14:42,194:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-04 16:14:42,289:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-04 16:14:42,377:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-04 16:14:42,473:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-04 16:14:42,564:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-04 16:14:42,659:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-04 16:14:42,771:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-04 16:14:42,873:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-04 16:14:42,961:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-04 16:14:43,046:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-04 16:14:43,137:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-04 16:14:43,242:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-04 16:14:43,353:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-04 16:14:43,450:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-04 16:14:43,549:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-04 16:14:43,650:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-04 16:14:43,745:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-04 16:14:43,830:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-04 16:14:43,922:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-04 16:14:44,018:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-04 16:14:44,133:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-04 16:14:44,252:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-04 16:14:44,348:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-04 16:14:44,435:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-04 16:14:44,524:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-04 16:14:44,696:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-04 16:14:44,835:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-04 16:14:44,948:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-04 16:14:45,050:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-04 16:14:45,165:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-04 16:14:45,289:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-04 16:14:45,453:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-04 16:14:45,577:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-04 16:14:45,680:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-04 16:14:45,779:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-04 16:14:45,942:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-04 16:14:46,109:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-04 16:14:46,221:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-04 16:14:46,323:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-04 16:14:46,411:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-04 16:14:46,499:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-04 16:14:46,595:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-04 16:14:46,693:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-04 16:14:46,786:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-04 16:14:46,876:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-04 16:14:46,965:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-04 16:14:47,064:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-04 16:14:47,156:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-04 16:14:47,255:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-04 16:14:47,412:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-04 16:14:47,508:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-04 16:14:47,597:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-04 16:14:47,685:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-04 16:14:47,773:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-04 16:14:47,878:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-04 16:14:47,992:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-04 16:14:48,090:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-04 16:14:48,183:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-04 16:14:48,274:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-04 16:14:48,368:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-04 16:14:48,466:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-04 16:14:48,562:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-04 16:14:48,662:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-04 16:14:48,760:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-04 16:14:48,850:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-04 16:14:48,943:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-04 16:14:49,031:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-04 16:14:49,116:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-04 16:14:49,201:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-04 16:14:49,308:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-04 16:14:49,404:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-04 16:14:49,492:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-04 16:14:49,578:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-04 16:14:49,663:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-04 16:14:49,749:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-04 16:14:49,840:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-04 16:14:49,936:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-04 16:14:50,033:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-04 16:14:50,119:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-04 16:14:50,208:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-04 16:14:50,298:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-04 16:14:50,388:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-04 16:14:50,481:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-04 16:14:50,583:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-04 16:14:50,708:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-04 16:14:50,808:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-04 16:14:50,894:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-04 16:14:50,982:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-04 16:14:51,080:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-04 16:14:51,189:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-04 16:14:51,289:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-04 16:14:51,379:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-04 16:14:51,462:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-04 16:14:51,548:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-04 16:14:51,631:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-04 16:14:51,715:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-04 16:14:51,810:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-04 16:14:51,905:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-04 16:14:51,992:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-04 16:14:52,308:INFO:Creating grid variables
2020-11-04 16:14:52,406:INFO:create_model_container: 0
2020-11-04 16:14:52,406:INFO:master_model_container: 0
2020-11-04 16:14:52,406:INFO:display_container: 0
2020-11-04 16:14:52,425:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-04 16:14:52,426:INFO:setup() succesfully completed......................................
2020-11-04 16:15:00,081:INFO:gpu_param set to False
2020-11-04 16:15:01,353:INFO:Initializing get_config()
2020-11-04 16:15:01,353:INFO:get_config(variable=X_train)
2020-11-04 16:15:01,358:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Sunday_multiply_Friday  Friday_multiply_Sunday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-11-04 16:15:01,358:INFO:get_config() succesfully completed......................................
2020-11-04 16:15:05,629:INFO:Initializing compare_models()
2020-11-04 16:15:05,630:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=6, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-11-04 16:15:05,630:INFO:Checking exceptions
2020-11-04 16:15:05,636:INFO:Preparing display monitor
2020-11-04 16:15:05,636:INFO:Preparing display monitor
2020-11-04 16:15:05,666:INFO:Initializing Logistic Regression
2020-11-04 16:15:05,666:INFO:Total runtime is 3.699461619059245e-06 minutes
2020-11-04 16:15:05,673:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:05,674:INFO:Initializing create_model()
2020-11-04 16:15:05,674:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:05,674:INFO:Checking exceptions
2020-11-04 16:15:05,674:INFO:Importing libraries
2020-11-04 16:15:05,674:INFO:Copying training dataset
2020-11-04 16:15:05,675:INFO:Defining folds
2020-11-04 16:15:05,675:INFO:Declaring metric variables
2020-11-04 16:15:05,684:INFO:Importing untrained model
2020-11-04 16:15:05,693:INFO:Logistic Regression Imported succesfully
2020-11-04 16:15:05,715:INFO:Starting cross validation
2020-11-04 16:15:05,717:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:12,993:INFO:Calculating mean and std
2020-11-04 16:15:13,004:INFO:Creating metrics dataframe
2020-11-04 16:15:13,023:INFO:Uploading results into container
2020-11-04 16:15:13,023:INFO:Uploading model into container now
2020-11-04 16:15:13,024:INFO:create_model_container: 1
2020-11-04 16:15:13,024:INFO:master_model_container: 1
2020-11-04 16:15:13,024:INFO:display_container: 1
2020-11-04 16:15:13,027:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-11-04 16:15:13,027:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:13,392:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:13,393:INFO:Creating metrics dataframe
2020-11-04 16:15:13,415:INFO:Initializing K Neighbors Classifier
2020-11-04 16:15:13,415:INFO:Total runtime is 0.12915501594543458 minutes
2020-11-04 16:15:13,430:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:13,430:INFO:Initializing create_model()
2020-11-04 16:15:13,430:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:13,430:INFO:Checking exceptions
2020-11-04 16:15:13,430:INFO:Importing libraries
2020-11-04 16:15:13,431:INFO:Copying training dataset
2020-11-04 16:15:13,432:INFO:Defining folds
2020-11-04 16:15:13,432:INFO:Declaring metric variables
2020-11-04 16:15:13,442:INFO:Importing untrained model
2020-11-04 16:15:13,451:INFO:K Neighbors Classifier Imported succesfully
2020-11-04 16:15:13,473:INFO:Starting cross validation
2020-11-04 16:15:13,474:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:13,583:INFO:Calculating mean and std
2020-11-04 16:15:13,585:INFO:Creating metrics dataframe
2020-11-04 16:15:13,590:INFO:Uploading results into container
2020-11-04 16:15:13,590:INFO:Uploading model into container now
2020-11-04 16:15:13,590:INFO:create_model_container: 2
2020-11-04 16:15:13,590:INFO:master_model_container: 2
2020-11-04 16:15:13,591:INFO:display_container: 1
2020-11-04 16:15:13,591:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-11-04 16:15:13,591:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:13,681:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:13,682:INFO:Creating metrics dataframe
2020-11-04 16:15:13,711:INFO:Initializing Naive Bayes
2020-11-04 16:15:13,712:INFO:Total runtime is 0.13410028219223022 minutes
2020-11-04 16:15:13,740:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:13,740:INFO:Initializing create_model()
2020-11-04 16:15:13,741:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:13,741:INFO:Checking exceptions
2020-11-04 16:15:13,741:INFO:Importing libraries
2020-11-04 16:15:13,741:INFO:Copying training dataset
2020-11-04 16:15:13,743:INFO:Defining folds
2020-11-04 16:15:13,743:INFO:Declaring metric variables
2020-11-04 16:15:13,760:INFO:Importing untrained model
2020-11-04 16:15:13,770:INFO:Naive Bayes Imported succesfully
2020-11-04 16:15:13,794:INFO:Starting cross validation
2020-11-04 16:15:13,795:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:13,858:INFO:Calculating mean and std
2020-11-04 16:15:13,859:INFO:Creating metrics dataframe
2020-11-04 16:15:13,863:INFO:Uploading results into container
2020-11-04 16:15:13,863:INFO:Uploading model into container now
2020-11-04 16:15:13,863:INFO:create_model_container: 3
2020-11-04 16:15:13,864:INFO:master_model_container: 3
2020-11-04 16:15:13,864:INFO:display_container: 1
2020-11-04 16:15:13,864:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-11-04 16:15:13,864:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:13,974:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:13,975:INFO:Creating metrics dataframe
2020-11-04 16:15:14,018:INFO:Initializing Decision Tree Classifier
2020-11-04 16:15:14,018:INFO:Total runtime is 0.13920185168584187 minutes
2020-11-04 16:15:14,032:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:14,032:INFO:Initializing create_model()
2020-11-04 16:15:14,032:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:14,032:INFO:Checking exceptions
2020-11-04 16:15:14,032:INFO:Importing libraries
2020-11-04 16:15:14,032:INFO:Copying training dataset
2020-11-04 16:15:14,035:INFO:Defining folds
2020-11-04 16:15:14,037:INFO:Declaring metric variables
2020-11-04 16:15:14,063:INFO:Importing untrained model
2020-11-04 16:15:14,091:INFO:Decision Tree Classifier Imported succesfully
2020-11-04 16:15:14,124:INFO:Starting cross validation
2020-11-04 16:15:14,126:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:14,207:INFO:Calculating mean and std
2020-11-04 16:15:14,208:INFO:Creating metrics dataframe
2020-11-04 16:15:14,212:INFO:Uploading results into container
2020-11-04 16:15:14,212:INFO:Uploading model into container now
2020-11-04 16:15:14,212:INFO:create_model_container: 4
2020-11-04 16:15:14,212:INFO:master_model_container: 4
2020-11-04 16:15:14,212:INFO:display_container: 1
2020-11-04 16:15:14,212:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-11-04 16:15:14,212:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:14,296:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:14,296:INFO:Creating metrics dataframe
2020-11-04 16:15:14,333:INFO:Initializing SVM - Linear Kernel
2020-11-04 16:15:14,334:INFO:Total runtime is 0.14446188211441038 minutes
2020-11-04 16:15:14,353:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:14,354:INFO:Initializing create_model()
2020-11-04 16:15:14,354:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:14,354:INFO:Checking exceptions
2020-11-04 16:15:14,354:INFO:Importing libraries
2020-11-04 16:15:14,354:INFO:Copying training dataset
2020-11-04 16:15:14,356:INFO:Defining folds
2020-11-04 16:15:14,356:INFO:Declaring metric variables
2020-11-04 16:15:14,365:INFO:Importing untrained model
2020-11-04 16:15:14,387:INFO:SVM - Linear Kernel Imported succesfully
2020-11-04 16:15:14,425:INFO:Starting cross validation
2020-11-04 16:15:14,426:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:14,543:INFO:Calculating mean and std
2020-11-04 16:15:14,544:INFO:Creating metrics dataframe
2020-11-04 16:15:14,581:INFO:Uploading results into container
2020-11-04 16:15:14,581:INFO:Uploading model into container now
2020-11-04 16:15:14,582:INFO:create_model_container: 5
2020-11-04 16:15:14,582:INFO:master_model_container: 5
2020-11-04 16:15:14,582:INFO:display_container: 1
2020-11-04 16:15:14,582:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-11-04 16:15:14,582:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:14,782:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:14,782:INFO:Creating metrics dataframe
2020-11-04 16:15:14,816:INFO:Initializing Ridge Classifier
2020-11-04 16:15:14,816:INFO:Total runtime is 0.15250506798426308 minutes
2020-11-04 16:15:14,827:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:14,827:INFO:Initializing create_model()
2020-11-04 16:15:14,827:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:14,827:INFO:Checking exceptions
2020-11-04 16:15:14,828:INFO:Importing libraries
2020-11-04 16:15:14,828:INFO:Copying training dataset
2020-11-04 16:15:14,828:INFO:Defining folds
2020-11-04 16:15:14,829:INFO:Declaring metric variables
2020-11-04 16:15:14,842:INFO:Importing untrained model
2020-11-04 16:15:14,859:INFO:Ridge Classifier Imported succesfully
2020-11-04 16:15:14,888:INFO:Starting cross validation
2020-11-04 16:15:14,889:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:14,956:INFO:Calculating mean and std
2020-11-04 16:15:14,958:INFO:Creating metrics dataframe
2020-11-04 16:15:14,964:INFO:Uploading results into container
2020-11-04 16:15:14,964:INFO:Uploading model into container now
2020-11-04 16:15:14,965:INFO:create_model_container: 6
2020-11-04 16:15:14,965:INFO:master_model_container: 6
2020-11-04 16:15:14,965:INFO:display_container: 1
2020-11-04 16:15:14,965:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-11-04 16:15:14,965:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:15,057:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:15,058:INFO:Creating metrics dataframe
2020-11-04 16:15:15,085:INFO:Initializing Random Forest Classifier
2020-11-04 16:15:15,085:INFO:Total runtime is 0.15698889891306558 minutes
2020-11-04 16:15:15,094:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:15,095:INFO:Initializing create_model()
2020-11-04 16:15:15,095:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:15,095:INFO:Checking exceptions
2020-11-04 16:15:15,095:INFO:Importing libraries
2020-11-04 16:15:15,095:INFO:Copying training dataset
2020-11-04 16:15:15,096:INFO:Defining folds
2020-11-04 16:15:15,096:INFO:Declaring metric variables
2020-11-04 16:15:15,106:INFO:Importing untrained model
2020-11-04 16:15:15,115:INFO:Random Forest Classifier Imported succesfully
2020-11-04 16:15:15,137:INFO:Starting cross validation
2020-11-04 16:15:15,138:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:16,218:INFO:Calculating mean and std
2020-11-04 16:15:16,219:INFO:Creating metrics dataframe
2020-11-04 16:15:16,226:INFO:Uploading results into container
2020-11-04 16:15:16,226:INFO:Uploading model into container now
2020-11-04 16:15:16,227:INFO:create_model_container: 7
2020-11-04 16:15:16,227:INFO:master_model_container: 7
2020-11-04 16:15:16,227:INFO:display_container: 1
2020-11-04 16:15:16,227:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-04 16:15:16,228:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:16,317:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:16,318:INFO:Creating metrics dataframe
2020-11-04 16:15:16,363:INFO:Initializing Quadratic Discriminant Analysis
2020-11-04 16:15:16,363:INFO:Total runtime is 0.17828758160273234 minutes
2020-11-04 16:15:16,373:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:16,373:INFO:Initializing create_model()
2020-11-04 16:15:16,374:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:16,374:INFO:Checking exceptions
2020-11-04 16:15:16,374:INFO:Importing libraries
2020-11-04 16:15:16,374:INFO:Copying training dataset
2020-11-04 16:15:16,375:INFO:Defining folds
2020-11-04 16:15:16,375:INFO:Declaring metric variables
2020-11-04 16:15:16,382:INFO:Importing untrained model
2020-11-04 16:15:16,394:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-11-04 16:15:16,410:INFO:Starting cross validation
2020-11-04 16:15:16,411:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:16,494:INFO:Calculating mean and std
2020-11-04 16:15:16,495:INFO:Creating metrics dataframe
2020-11-04 16:15:16,499:INFO:Uploading results into container
2020-11-04 16:15:16,499:INFO:Uploading model into container now
2020-11-04 16:15:16,500:INFO:create_model_container: 8
2020-11-04 16:15:16,500:INFO:master_model_container: 8
2020-11-04 16:15:16,500:INFO:display_container: 1
2020-11-04 16:15:16,500:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-11-04 16:15:16,500:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:16,579:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:16,579:INFO:Creating metrics dataframe
2020-11-04 16:15:16,622:INFO:Initializing Ada Boost Classifier
2020-11-04 16:15:16,623:INFO:Total runtime is 0.18261033296585083 minutes
2020-11-04 16:15:16,634:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:16,634:INFO:Initializing create_model()
2020-11-04 16:15:16,635:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:16,635:INFO:Checking exceptions
2020-11-04 16:15:16,635:INFO:Importing libraries
2020-11-04 16:15:16,635:INFO:Copying training dataset
2020-11-04 16:15:16,637:INFO:Defining folds
2020-11-04 16:15:16,637:INFO:Declaring metric variables
2020-11-04 16:15:16,649:INFO:Importing untrained model
2020-11-04 16:15:16,660:INFO:Ada Boost Classifier Imported succesfully
2020-11-04 16:15:16,684:INFO:Starting cross validation
2020-11-04 16:15:16,684:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:17,450:INFO:Calculating mean and std
2020-11-04 16:15:17,451:INFO:Creating metrics dataframe
2020-11-04 16:15:17,456:INFO:Uploading results into container
2020-11-04 16:15:17,456:INFO:Uploading model into container now
2020-11-04 16:15:17,456:INFO:create_model_container: 9
2020-11-04 16:15:17,456:INFO:master_model_container: 9
2020-11-04 16:15:17,456:INFO:display_container: 1
2020-11-04 16:15:17,457:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-11-04 16:15:17,457:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:17,555:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:17,556:INFO:Creating metrics dataframe
2020-11-04 16:15:17,618:INFO:Initializing Gradient Boosting Classifier
2020-11-04 16:15:17,618:INFO:Total runtime is 0.19920331637064614 minutes
2020-11-04 16:15:17,628:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:17,628:INFO:Initializing create_model()
2020-11-04 16:15:17,628:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:17,629:INFO:Checking exceptions
2020-11-04 16:15:17,629:INFO:Importing libraries
2020-11-04 16:15:17,629:INFO:Copying training dataset
2020-11-04 16:15:17,630:INFO:Defining folds
2020-11-04 16:15:17,630:INFO:Declaring metric variables
2020-11-04 16:15:17,645:INFO:Importing untrained model
2020-11-04 16:15:17,661:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-04 16:15:17,689:INFO:Starting cross validation
2020-11-04 16:15:17,690:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:18,132:INFO:Calculating mean and std
2020-11-04 16:15:18,133:INFO:Creating metrics dataframe
2020-11-04 16:15:18,139:INFO:Uploading results into container
2020-11-04 16:15:18,139:INFO:Uploading model into container now
2020-11-04 16:15:18,139:INFO:create_model_container: 10
2020-11-04 16:15:18,140:INFO:master_model_container: 10
2020-11-04 16:15:18,140:INFO:display_container: 1
2020-11-04 16:15:18,140:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-04 16:15:18,141:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:18,232:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:18,233:INFO:Creating metrics dataframe
2020-11-04 16:15:18,287:INFO:Initializing Linear Discriminant Analysis
2020-11-04 16:15:18,287:INFO:Total runtime is 0.21035389900207518 minutes
2020-11-04 16:15:18,301:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:18,302:INFO:Initializing create_model()
2020-11-04 16:15:18,302:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:18,302:INFO:Checking exceptions
2020-11-04 16:15:18,303:INFO:Importing libraries
2020-11-04 16:15:18,303:INFO:Copying training dataset
2020-11-04 16:15:18,304:INFO:Defining folds
2020-11-04 16:15:18,305:INFO:Declaring metric variables
2020-11-04 16:15:18,316:INFO:Importing untrained model
2020-11-04 16:15:18,328:INFO:Linear Discriminant Analysis Imported succesfully
2020-11-04 16:15:18,351:INFO:Starting cross validation
2020-11-04 16:15:18,353:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:18,430:INFO:Calculating mean and std
2020-11-04 16:15:18,432:INFO:Creating metrics dataframe
2020-11-04 16:15:18,439:INFO:Uploading results into container
2020-11-04 16:15:18,439:INFO:Uploading model into container now
2020-11-04 16:15:18,439:INFO:create_model_container: 11
2020-11-04 16:15:18,439:INFO:master_model_container: 11
2020-11-04 16:15:18,439:INFO:display_container: 1
2020-11-04 16:15:18,440:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-11-04 16:15:18,440:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:18,552:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:18,553:INFO:Creating metrics dataframe
2020-11-04 16:15:18,616:INFO:Initializing Extra Trees Classifier
2020-11-04 16:15:18,616:INFO:Total runtime is 0.2158310015996297 minutes
2020-11-04 16:15:18,626:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:18,626:INFO:Initializing create_model()
2020-11-04 16:15:18,627:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:18,627:INFO:Checking exceptions
2020-11-04 16:15:18,627:INFO:Importing libraries
2020-11-04 16:15:18,627:INFO:Copying training dataset
2020-11-04 16:15:18,628:INFO:Defining folds
2020-11-04 16:15:18,628:INFO:Declaring metric variables
2020-11-04 16:15:18,641:INFO:Importing untrained model
2020-11-04 16:15:18,651:INFO:Extra Trees Classifier Imported succesfully
2020-11-04 16:15:18,686:INFO:Starting cross validation
2020-11-04 16:15:18,687:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:19,757:INFO:Calculating mean and std
2020-11-04 16:15:19,758:INFO:Creating metrics dataframe
2020-11-04 16:15:19,763:INFO:Uploading results into container
2020-11-04 16:15:19,763:INFO:Uploading model into container now
2020-11-04 16:15:19,763:INFO:create_model_container: 12
2020-11-04 16:15:19,763:INFO:master_model_container: 12
2020-11-04 16:15:19,763:INFO:display_container: 1
2020-11-04 16:15:19,764:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-04 16:15:19,765:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:19,858:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:19,858:INFO:Creating metrics dataframe
2020-11-04 16:15:19,930:INFO:Initializing Extreme Gradient Boosting
2020-11-04 16:15:19,930:INFO:Total runtime is 0.23773599863052366 minutes
2020-11-04 16:15:19,941:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:19,941:INFO:Initializing create_model()
2020-11-04 16:15:19,941:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:19,941:INFO:Checking exceptions
2020-11-04 16:15:19,941:INFO:Importing libraries
2020-11-04 16:15:19,942:INFO:Copying training dataset
2020-11-04 16:15:19,943:INFO:Defining folds
2020-11-04 16:15:19,943:INFO:Declaring metric variables
2020-11-04 16:15:19,955:INFO:Importing untrained model
2020-11-04 16:15:19,966:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-04 16:15:19,997:INFO:Starting cross validation
2020-11-04 16:15:19,998:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:22,263:INFO:Calculating mean and std
2020-11-04 16:15:22,264:INFO:Creating metrics dataframe
2020-11-04 16:15:22,269:INFO:Uploading results into container
2020-11-04 16:15:22,269:INFO:Uploading model into container now
2020-11-04 16:15:22,269:INFO:create_model_container: 13
2020-11-04 16:15:22,269:INFO:master_model_container: 13
2020-11-04 16:15:22,269:INFO:display_container: 1
2020-11-04 16:15:22,270:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-11-04 16:15:22,270:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:22,350:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:22,350:INFO:Creating metrics dataframe
2020-11-04 16:15:22,406:INFO:Initializing Light Gradient Boosting Machine
2020-11-04 16:15:22,407:INFO:Total runtime is 0.27901265223821003 minutes
2020-11-04 16:15:22,419:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:22,420:INFO:Initializing create_model()
2020-11-04 16:15:22,420:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:22,420:INFO:Checking exceptions
2020-11-04 16:15:22,420:INFO:Importing libraries
2020-11-04 16:15:22,421:INFO:Copying training dataset
2020-11-04 16:15:22,422:INFO:Defining folds
2020-11-04 16:15:22,422:INFO:Declaring metric variables
2020-11-04 16:15:22,431:INFO:Importing untrained model
2020-11-04 16:15:22,441:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-04 16:15:22,459:INFO:Starting cross validation
2020-11-04 16:15:22,460:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:22,645:INFO:Calculating mean and std
2020-11-04 16:15:22,646:INFO:Creating metrics dataframe
2020-11-04 16:15:22,653:INFO:Uploading results into container
2020-11-04 16:15:22,653:INFO:Uploading model into container now
2020-11-04 16:15:22,653:INFO:create_model_container: 14
2020-11-04 16:15:22,653:INFO:master_model_container: 14
2020-11-04 16:15:22,654:INFO:display_container: 1
2020-11-04 16:15:22,654:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-04 16:15:22,654:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:22,752:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:22,752:INFO:Creating metrics dataframe
2020-11-04 16:15:22,829:INFO:Initializing CatBoost Classifier
2020-11-04 16:15:22,829:INFO:Total runtime is 0.2860489328702291 minutes
2020-11-04 16:15:22,842:INFO:SubProcess create_model() called ==================================
2020-11-04 16:15:22,843:INFO:Initializing create_model()
2020-11-04 16:15:22,843:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ec08e490>, kwargs={})
2020-11-04 16:15:22,843:INFO:Checking exceptions
2020-11-04 16:15:22,843:INFO:Importing libraries
2020-11-04 16:15:22,843:INFO:Copying training dataset
2020-11-04 16:15:22,845:INFO:Defining folds
2020-11-04 16:15:22,845:INFO:Declaring metric variables
2020-11-04 16:15:22,854:INFO:Importing untrained model
2020-11-04 16:15:22,863:INFO:CatBoost Classifier Imported succesfully
2020-11-04 16:15:22,889:INFO:Starting cross validation
2020-11-04 16:15:22,890:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:15:56,998:INFO:Calculating mean and std
2020-11-04 16:15:57,005:INFO:Creating metrics dataframe
2020-11-04 16:15:57,022:INFO:Uploading results into container
2020-11-04 16:15:57,022:INFO:Uploading model into container now
2020-11-04 16:15:57,022:INFO:create_model_container: 15
2020-11-04 16:15:57,022:INFO:master_model_container: 15
2020-11-04 16:15:57,022:INFO:display_container: 1
2020-11-04 16:15:57,022:INFO:<catboost.core.CatBoostClassifier object at 0x7f85ebe1b4c0>
2020-11-04 16:15:57,023:INFO:create_model() succesfully completed......................................
2020-11-04 16:15:57,532:INFO:SubProcess create_model() end ==================================
2020-11-04 16:15:57,532:INFO:Creating metrics dataframe
2020-11-04 16:15:57,706:INFO:Initializing create_model()
2020-11-04 16:15:57,707:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-04 16:15:57,721:INFO:Checking exceptions
2020-11-04 16:15:57,721:INFO:Importing libraries
2020-11-04 16:15:57,721:INFO:Copying training dataset
2020-11-04 16:15:57,722:INFO:Defining folds
2020-11-04 16:15:57,722:INFO:Declaring metric variables
2020-11-04 16:15:57,722:INFO:Importing untrained model
2020-11-04 16:15:57,723:INFO:Declaring custom model
2020-11-04 16:15:57,727:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-04 16:15:57,727:INFO:Cross validation set to False
2020-11-04 16:15:57,727:INFO:Fitting Model
2020-11-04 16:15:57,973:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-11-04 16:15:57,973:INFO:create_models() succesfully completed......................................
2020-11-04 16:15:58,158:INFO:Initializing create_model()
2020-11-04 16:15:58,158:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-04 16:15:58,159:INFO:Checking exceptions
2020-11-04 16:15:58,160:INFO:Importing libraries
2020-11-04 16:15:58,161:INFO:Copying training dataset
2020-11-04 16:15:58,161:INFO:Defining folds
2020-11-04 16:15:58,162:INFO:Declaring metric variables
2020-11-04 16:15:58,162:INFO:Importing untrained model
2020-11-04 16:15:58,162:INFO:Declaring custom model
2020-11-04 16:15:58,162:INFO:Random Forest Classifier Imported succesfully
2020-11-04 16:15:58,163:INFO:Cross validation set to False
2020-11-04 16:15:58,163:INFO:Fitting Model
2020-11-04 16:15:58,664:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-04 16:15:58,664:INFO:create_models() succesfully completed......................................
2020-11-04 16:15:58,787:INFO:Initializing create_model()
2020-11-04 16:15:58,787:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-04 16:15:58,787:INFO:Checking exceptions
2020-11-04 16:15:58,788:INFO:Importing libraries
2020-11-04 16:15:58,788:INFO:Copying training dataset
2020-11-04 16:15:58,788:INFO:Defining folds
2020-11-04 16:15:58,788:INFO:Declaring metric variables
2020-11-04 16:15:58,788:INFO:Importing untrained model
2020-11-04 16:15:58,788:INFO:Declaring custom model
2020-11-04 16:15:58,789:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-04 16:15:58,789:INFO:Cross validation set to False
2020-11-04 16:15:58,789:INFO:Fitting Model
2020-11-04 16:15:58,840:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-04 16:15:58,840:INFO:create_models() succesfully completed......................................
2020-11-04 16:15:58,989:INFO:Initializing create_model()
2020-11-04 16:15:58,989:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f85ebe1b4c0>, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-04 16:15:58,989:INFO:Checking exceptions
2020-11-04 16:15:58,989:INFO:Importing libraries
2020-11-04 16:15:58,989:INFO:Copying training dataset
2020-11-04 16:15:58,990:INFO:Defining folds
2020-11-04 16:15:58,990:INFO:Declaring metric variables
2020-11-04 16:15:58,990:INFO:Importing untrained model
2020-11-04 16:15:58,990:INFO:Declaring custom model
2020-11-04 16:15:58,991:INFO:CatBoost Classifier Imported succesfully
2020-11-04 16:15:58,991:INFO:Cross validation set to False
2020-11-04 16:15:58,991:INFO:Fitting Model
2020-11-04 16:16:02,108:INFO:<catboost.core.CatBoostClassifier object at 0x7f85ec73d0d0>
2020-11-04 16:16:02,108:INFO:create_models() succesfully completed......................................
2020-11-04 16:16:02,211:INFO:Initializing create_model()
2020-11-04 16:16:02,211:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-04 16:16:02,212:INFO:Checking exceptions
2020-11-04 16:16:02,212:INFO:Importing libraries
2020-11-04 16:16:02,212:INFO:Copying training dataset
2020-11-04 16:16:02,213:INFO:Defining folds
2020-11-04 16:16:02,213:INFO:Declaring metric variables
2020-11-04 16:16:02,213:INFO:Importing untrained model
2020-11-04 16:16:02,213:INFO:Declaring custom model
2020-11-04 16:16:02,215:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-04 16:16:02,216:INFO:Cross validation set to False
2020-11-04 16:16:02,216:INFO:Fitting Model
2020-11-04 16:16:02,356:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-04 16:16:02,356:INFO:create_models() succesfully completed......................................
2020-11-04 16:16:02,527:INFO:Initializing create_model()
2020-11-04 16:16:02,527:INFO:create_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-04 16:16:02,527:INFO:Checking exceptions
2020-11-04 16:16:02,528:INFO:Importing libraries
2020-11-04 16:16:02,528:INFO:Copying training dataset
2020-11-04 16:16:02,528:INFO:Defining folds
2020-11-04 16:16:02,529:INFO:Declaring metric variables
2020-11-04 16:16:02,529:INFO:Importing untrained model
2020-11-04 16:16:02,529:INFO:Declaring custom model
2020-11-04 16:16:02,530:INFO:Extra Trees Classifier Imported succesfully
2020-11-04 16:16:02,530:INFO:Cross validation set to False
2020-11-04 16:16:02,530:INFO:Fitting Model
2020-11-04 16:16:02,812:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-04 16:16:02,812:INFO:create_models() succesfully completed......................................
2020-11-04 16:16:03,062:INFO:create_model_container: 15
2020-11-04 16:16:03,062:INFO:master_model_container: 15
2020-11-04 16:16:03,062:INFO:display_container: 1
2020-11-04 16:16:03,075:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7f85ec73d0d0>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)]
2020-11-04 16:16:03,075:INFO:compare_models() succesfully completed......................................
2020-11-04 16:16:03,152:INFO:Initializing tune_model()
2020-11-04 16:16:03,153:INFO:tune_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-04 16:16:03,153:INFO:Checking exceptions
2020-11-04 16:16:03,854:INFO:Preparing display monitor
2020-11-04 16:16:03,881:INFO:Copying training dataset
2020-11-04 16:16:03,882:INFO:Checking base model
2020-11-04 16:16:03,884:INFO:Base model : Extreme Gradient Boosting
2020-11-04 16:16:03,893:INFO:Declaring metric variables
2020-11-04 16:16:03,905:INFO:Defining Hyperparameters
2020-11-04 16:16:04,016:INFO:Tuning with n_jobs=-1
2020-11-04 16:16:04,018:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-04 16:17:04,907:INFO:best_params: {'actual_estimator__learning_rate': 0.18883522191884167, 'actual_estimator__n_estimators': 300, 'actual_estimator__subsample': 0.8852110218395226, 'actual_estimator__max_depth': 8, 'actual_estimator__colsample_bytree': 0.6818885057697542, 'actual_estimator__min_child_weight': 4, 'actual_estimator__reg_alpha': 0.0026782906876952513, 'actual_estimator__reg_lambda': 9.52770582168972e-09, 'actual_estimator__scale_pos_weight': 41.25191082188449}
2020-11-04 16:17:04,910:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-04 16:17:04,942:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-04 16:17:04,944:INFO:Random search completed
2020-11-04 16:17:04,944:INFO:SubProcess create_model() called ==================================
2020-11-04 16:17:04,947:INFO:Initializing create_model()
2020-11-04 16:17:04,947:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ed2510d0>, kwargs={'learning_rate': 0.18883522191884167, 'n_estimators': 300, 'subsample': 0.8852110218395226, 'max_depth': 8, 'colsample_bytree': 0.6818885057697542, 'min_child_weight': 4, 'reg_alpha': 0.0026782906876952513, 'reg_lambda': 9.52770582168972e-09, 'scale_pos_weight': 41.25191082188449})
2020-11-04 16:17:04,947:INFO:Checking exceptions
2020-11-04 16:17:04,948:INFO:Importing libraries
2020-11-04 16:17:04,948:INFO:Copying training dataset
2020-11-04 16:17:04,950:INFO:Defining folds
2020-11-04 16:17:04,950:INFO:Declaring metric variables
2020-11-04 16:17:04,966:INFO:Importing untrained model
2020-11-04 16:17:04,967:INFO:Declaring custom model
2020-11-04 16:17:04,987:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-04 16:17:05,011:INFO:Starting cross validation
2020-11-04 16:17:05,012:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:17:06,426:INFO:Calculating mean and std
2020-11-04 16:17:06,427:INFO:Creating metrics dataframe
2020-11-04 16:17:06,444:INFO:Finalizing model
2020-11-04 16:17:06,591:INFO:Uploading results into container
2020-11-04 16:17:06,591:INFO:Uploading model into container now
2020-11-04 16:17:06,591:INFO:create_model_container: 16
2020-11-04 16:17:06,592:INFO:master_model_container: 16
2020-11-04 16:17:06,592:INFO:display_container: 2
2020-11-04 16:17:06,595:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.6818885057697542, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.18883522191884167, max_delta_step=0, max_depth=8,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=300, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0026782906876952513, reg_lambda=9.52770582168972e-09,
              scale_pos_weight=41.25191082188449, subsample=0.8852110218395226,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-04 16:17:06,595:INFO:create_model() succesfully completed......................................
2020-11-04 16:17:07,081:INFO:SubProcess create_model() end ==================================
2020-11-04 16:17:07,154:INFO:create_model_container: 16
2020-11-04 16:17:07,155:INFO:master_model_container: 16
2020-11-04 16:17:07,155:INFO:display_container: 2
2020-11-04 16:17:07,158:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.6818885057697542, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.18883522191884167, max_delta_step=0, max_depth=8,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=300, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0026782906876952513, reg_lambda=9.52770582168972e-09,
              scale_pos_weight=41.25191082188449, subsample=0.8852110218395226,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-04 16:17:07,158:INFO:tune_model() succesfully completed......................................
2020-11-04 16:17:07,280:INFO:Initializing tune_model()
2020-11-04 16:17:07,280:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-04 16:17:07,281:INFO:Checking exceptions
2020-11-04 16:17:07,282:INFO:Preparing display monitor
2020-11-04 16:17:07,306:INFO:Copying training dataset
2020-11-04 16:17:07,309:INFO:Checking base model
2020-11-04 16:17:07,310:INFO:Base model : Random Forest Classifier
2020-11-04 16:17:07,321:INFO:Declaring metric variables
2020-11-04 16:17:07,334:INFO:Defining Hyperparameters
2020-11-04 16:17:07,576:INFO:Tuning with n_jobs=-1
2020-11-04 16:17:07,578:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-04 16:20:41,565:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__max_depth': 10, 'actual_estimator__min_impurity_decrease': 1.7587713627544799e-06, 'actual_estimator__max_features': 0.4260011967318785, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__bootstrap': False, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}}
2020-11-04 16:20:41,566:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-04 16:20:41,567:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-04 16:20:41,569:INFO:Random search completed
2020-11-04 16:20:41,569:INFO:SubProcess create_model() called ==================================
2020-11-04 16:20:41,570:INFO:Initializing create_model()
2020-11-04 16:20:41,570:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85d0da2a60>, kwargs={'n_estimators': 240, 'max_depth': 10, 'min_impurity_decrease': 1.7587713627544799e-06, 'max_features': 0.4260011967318785, 'min_samples_split': 5, 'min_samples_leaf': 3, 'bootstrap': False, 'criterion': 'gini', 'class_weight': {}})
2020-11-04 16:20:41,570:INFO:Checking exceptions
2020-11-04 16:20:41,571:INFO:Importing libraries
2020-11-04 16:20:41,571:INFO:Copying training dataset
2020-11-04 16:20:41,572:INFO:Defining folds
2020-11-04 16:20:41,573:INFO:Declaring metric variables
2020-11-04 16:20:41,584:INFO:Importing untrained model
2020-11-04 16:20:41,584:INFO:Declaring custom model
2020-11-04 16:20:41,593:INFO:Random Forest Classifier Imported succesfully
2020-11-04 16:20:41,610:INFO:Starting cross validation
2020-11-04 16:20:41,610:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:20:43,170:INFO:Calculating mean and std
2020-11-04 16:20:43,172:INFO:Creating metrics dataframe
2020-11-04 16:20:43,197:INFO:Finalizing model
2020-11-04 16:20:43,696:INFO:Uploading results into container
2020-11-04 16:20:43,697:INFO:Uploading model into container now
2020-11-04 16:20:43,697:INFO:create_model_container: 17
2020-11-04 16:20:43,697:INFO:master_model_container: 17
2020-11-04 16:20:43,697:INFO:display_container: 3
2020-11-04 16:20:43,698:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=10,
                       max_features=0.4260011967318785, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=1.7587713627544799e-06,
                       min_impurity_split=None, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-11-04 16:20:43,698:INFO:create_model() succesfully completed......................................
2020-11-04 16:20:44,085:INFO:SubProcess create_model() end ==================================
2020-11-04 16:20:44,119:INFO:create_model_container: 17
2020-11-04 16:20:44,119:INFO:master_model_container: 17
2020-11-04 16:20:44,119:INFO:display_container: 3
2020-11-04 16:20:44,120:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=10,
                       max_features=0.4260011967318785, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=1.7587713627544799e-06,
                       min_impurity_split=None, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-11-04 16:20:44,120:INFO:tune_model() succesfully completed......................................
2020-11-04 16:20:44,330:INFO:Initializing tune_model()
2020-11-04 16:20:44,330:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-04 16:20:44,330:INFO:Checking exceptions
2020-11-04 16:20:44,334:INFO:Preparing display monitor
2020-11-04 16:20:44,365:INFO:Copying training dataset
2020-11-04 16:20:44,367:INFO:Checking base model
2020-11-04 16:20:44,368:INFO:Base model : Light Gradient Boosting Machine
2020-11-04 16:20:44,382:INFO:Declaring metric variables
2020-11-04 16:20:44,391:INFO:Defining Hyperparameters
2020-11-04 16:20:44,510:INFO:Tuning with n_jobs=-1
2020-11-04 16:20:44,512:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-04 16:21:14,216:INFO:best_params: {'actual_estimator__num_leaves': 149, 'actual_estimator__learning_rate': 0.13196323045823938, 'actual_estimator__n_estimators': 25, 'actual_estimator__min_split_gain': 0.2549641131153165, 'actual_estimator__reg_alpha': 2.9190702891048984e-07, 'actual_estimator__reg_lambda': 0.8795783376736309, 'actual_estimator__min_data_in_leaf': 3115, 'actual_estimator__feature_fraction': 0.92604548207434, 'actual_estimator__bagging_fraction': 0.7394745844981097, 'actual_estimator__bagging_freq': 7, 'actual_estimator__min_child_samples': 20}
2020-11-04 16:21:14,217:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-04 16:21:14,218:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-04 16:21:14,221:INFO:Random search completed
2020-11-04 16:21:14,221:INFO:SubProcess create_model() called ==================================
2020-11-04 16:21:14,224:INFO:Initializing create_model()
2020-11-04 16:21:14,224:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85d11334c0>, kwargs={'num_leaves': 149, 'learning_rate': 0.13196323045823938, 'n_estimators': 25, 'min_split_gain': 0.2549641131153165, 'reg_alpha': 2.9190702891048984e-07, 'reg_lambda': 0.8795783376736309, 'min_data_in_leaf': 3115, 'feature_fraction': 0.92604548207434, 'bagging_fraction': 0.7394745844981097, 'bagging_freq': 7, 'min_child_samples': 20})
2020-11-04 16:21:14,224:INFO:Checking exceptions
2020-11-04 16:21:14,225:INFO:Importing libraries
2020-11-04 16:21:14,225:INFO:Copying training dataset
2020-11-04 16:21:14,227:INFO:Defining folds
2020-11-04 16:21:14,227:INFO:Declaring metric variables
2020-11-04 16:21:14,248:INFO:Importing untrained model
2020-11-04 16:21:14,248:INFO:Declaring custom model
2020-11-04 16:21:14,261:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-04 16:21:14,282:INFO:Starting cross validation
2020-11-04 16:21:14,283:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:21:14,783:INFO:Calculating mean and std
2020-11-04 16:21:14,787:INFO:Creating metrics dataframe
2020-11-04 16:21:14,836:INFO:Finalizing model
2020-11-04 16:21:14,862:INFO:Uploading results into container
2020-11-04 16:21:14,862:INFO:Uploading model into container now
2020-11-04 16:21:14,862:INFO:create_model_container: 18
2020-11-04 16:21:14,863:INFO:master_model_container: 18
2020-11-04 16:21:14,863:INFO:display_container: 4
2020-11-04 16:21:14,864:INFO:LGBMClassifier(bagging_fraction=0.7394745844981097, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.92604548207434, importance_type='split',
               learning_rate=0.13196323045823938, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001,
               min_data_in_leaf=3115, min_split_gain=0.2549641131153165,
               n_estimators=25, n_jobs=-1, num_leaves=149, objective=None,
               random_state=786, reg_alpha=2.9190702891048984e-07,
               reg_lambda=0.8795783376736309, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-11-04 16:21:14,864:INFO:create_model() succesfully completed......................................
2020-11-04 16:21:15,788:INFO:SubProcess create_model() end ==================================
2020-11-04 16:21:15,835:INFO:create_model_container: 18
2020-11-04 16:21:15,835:INFO:master_model_container: 18
2020-11-04 16:21:15,835:INFO:display_container: 4
2020-11-04 16:21:15,835:INFO:LGBMClassifier(bagging_fraction=0.7394745844981097, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.92604548207434, importance_type='split',
               learning_rate=0.13196323045823938, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001,
               min_data_in_leaf=3115, min_split_gain=0.2549641131153165,
               n_estimators=25, n_jobs=-1, num_leaves=149, objective=None,
               random_state=786, reg_alpha=2.9190702891048984e-07,
               reg_lambda=0.8795783376736309, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-11-04 16:21:15,836:INFO:tune_model() succesfully completed......................................
2020-11-04 16:21:15,970:INFO:Initializing tune_model()
2020-11-04 16:21:15,970:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f85ec73d0d0>, fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-04 16:21:15,970:INFO:Checking exceptions
2020-11-04 16:21:15,972:INFO:Preparing display monitor
2020-11-04 16:21:16,049:INFO:Copying training dataset
2020-11-04 16:21:16,100:INFO:Checking base model
2020-11-04 16:21:16,156:INFO:Base model : CatBoost Classifier
2020-11-04 16:21:16,173:INFO:Declaring metric variables
2020-11-04 16:21:16,202:INFO:Defining Hyperparameters
2020-11-04 16:21:16,483:INFO:Tuning with n_jobs=-1
2020-11-04 16:21:16,488:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-04 16:27:52,459:INFO:best_params: {'actual_estimator__depth': 5, 'actual_estimator__n_estimators': 206, 'actual_estimator__random_strength': 0.3601262775614159, 'actual_estimator__l2_leaf_reg': 10}
2020-11-04 16:27:52,461:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-04 16:27:52,465:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-04 16:27:52,473:INFO:Random search completed
2020-11-04 16:27:52,473:INFO:SubProcess create_model() called ==================================
2020-11-04 16:27:52,475:INFO:Initializing create_model()
2020-11-04 16:27:52,475:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f85d11ae2b0>, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85eeabe250>, kwargs={'depth': 5, 'n_estimators': 206, 'random_strength': 0.3601262775614159, 'l2_leaf_reg': 10})
2020-11-04 16:27:52,475:INFO:Checking exceptions
2020-11-04 16:27:52,475:INFO:Importing libraries
2020-11-04 16:27:52,475:INFO:Copying training dataset
2020-11-04 16:27:52,480:INFO:Defining folds
2020-11-04 16:27:52,481:INFO:Declaring metric variables
2020-11-04 16:27:52,508:INFO:Importing untrained model
2020-11-04 16:27:52,508:INFO:Declaring custom model
2020-11-04 16:27:52,519:INFO:CatBoost Classifier Imported succesfully
2020-11-04 16:27:52,540:INFO:Starting cross validation
2020-11-04 16:27:52,542:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:28:04,226:INFO:Calculating mean and std
2020-11-04 16:28:04,242:INFO:Creating metrics dataframe
2020-11-04 16:28:04,315:INFO:Finalizing model
2020-11-04 16:28:06,007:INFO:Uploading results into container
2020-11-04 16:28:06,007:INFO:Uploading model into container now
2020-11-04 16:28:06,007:INFO:create_model_container: 19
2020-11-04 16:28:06,007:INFO:master_model_container: 19
2020-11-04 16:28:06,008:INFO:display_container: 5
2020-11-04 16:28:06,008:INFO:<catboost.core.CatBoostClassifier object at 0x7f85d1167820>
2020-11-04 16:28:06,008:INFO:create_model() succesfully completed......................................
2020-11-04 16:28:07,068:INFO:SubProcess create_model() end ==================================
2020-11-04 16:28:07,107:INFO:create_model_container: 19
2020-11-04 16:28:07,108:INFO:master_model_container: 19
2020-11-04 16:28:07,108:INFO:display_container: 5
2020-11-04 16:28:07,108:INFO:<catboost.core.CatBoostClassifier object at 0x7f85d1167820>
2020-11-04 16:28:07,108:INFO:tune_model() succesfully completed......................................
2020-11-04 16:28:07,242:INFO:Initializing tune_model()
2020-11-04 16:28:07,242:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-04 16:28:07,242:INFO:Checking exceptions
2020-11-04 16:28:07,244:INFO:Preparing display monitor
2020-11-04 16:28:07,312:INFO:Copying training dataset
2020-11-04 16:28:07,314:INFO:Checking base model
2020-11-04 16:28:07,314:INFO:Base model : Gradient Boosting Classifier
2020-11-04 16:28:07,336:INFO:Declaring metric variables
2020-11-04 16:28:07,349:INFO:Defining Hyperparameters
2020-11-04 16:28:07,486:INFO:Tuning with n_jobs=-1
2020-11-04 16:28:07,497:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-04 16:30:46,824:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__learning_rate': 0.49760260577059956, 'actual_estimator__subsample': 0.6944294364303834, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__max_depth': 2, 'actual_estimator__min_impurity_decrease': 9.786095389093074e-07, 'actual_estimator__max_features': 0.5310621814404348}
2020-11-04 16:30:46,827:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-04 16:30:46,832:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-04 16:30:46,835:INFO:Random search completed
2020-11-04 16:30:46,835:INFO:SubProcess create_model() called ==================================
2020-11-04 16:30:46,844:INFO:Initializing create_model()
2020-11-04 16:30:46,844:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85d11334c0>, kwargs={'n_estimators': 230, 'learning_rate': 0.49760260577059956, 'subsample': 0.6944294364303834, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_depth': 2, 'min_impurity_decrease': 9.786095389093074e-07, 'max_features': 0.5310621814404348})
2020-11-04 16:30:46,844:INFO:Checking exceptions
2020-11-04 16:30:46,846:INFO:Importing libraries
2020-11-04 16:30:46,847:INFO:Copying training dataset
2020-11-04 16:30:46,852:INFO:Defining folds
2020-11-04 16:30:46,853:INFO:Declaring metric variables
2020-11-04 16:30:46,873:INFO:Importing untrained model
2020-11-04 16:30:46,874:INFO:Declaring custom model
2020-11-04 16:30:46,889:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-04 16:30:46,908:INFO:Starting cross validation
2020-11-04 16:30:46,909:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:30:51,942:INFO:Calculating mean and std
2020-11-04 16:30:51,959:INFO:Creating metrics dataframe
2020-11-04 16:30:52,018:INFO:Finalizing model
2020-11-04 16:30:52,283:INFO:Uploading results into container
2020-11-04 16:30:52,283:INFO:Uploading model into container now
2020-11-04 16:30:52,283:INFO:create_model_container: 20
2020-11-04 16:30:52,283:INFO:master_model_container: 20
2020-11-04 16:30:52,283:INFO:display_container: 6
2020-11-04 16:30:52,288:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.49760260577059956, loss='deviance',
                           max_depth=2, max_features=0.5310621814404348,
                           max_leaf_nodes=None,
                           min_impurity_decrease=9.786095389093074e-07,
                           min_impurity_split=None, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=230, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.6944294364303834, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-04 16:30:52,288:INFO:create_model() succesfully completed......................................
2020-11-04 16:30:52,763:INFO:SubProcess create_model() end ==================================
2020-11-04 16:30:52,912:INFO:create_model_container: 20
2020-11-04 16:30:52,913:INFO:master_model_container: 20
2020-11-04 16:30:52,913:INFO:display_container: 6
2020-11-04 16:30:52,913:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.49760260577059956, loss='deviance',
                           max_depth=2, max_features=0.5310621814404348,
                           max_leaf_nodes=None,
                           min_impurity_decrease=9.786095389093074e-07,
                           min_impurity_split=None, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=230, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.6944294364303834, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-04 16:30:52,914:INFO:tune_model() succesfully completed......................................
2020-11-04 16:30:53,013:INFO:Initializing tune_model()
2020-11-04 16:30:53,013:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-04 16:30:53,014:INFO:Checking exceptions
2020-11-04 16:30:53,016:INFO:Preparing display monitor
2020-11-04 16:30:53,045:INFO:Copying training dataset
2020-11-04 16:30:53,046:INFO:Checking base model
2020-11-04 16:30:53,047:INFO:Base model : Extra Trees Classifier
2020-11-04 16:30:53,058:INFO:Declaring metric variables
2020-11-04 16:30:53,073:INFO:Defining Hyperparameters
2020-11-04 16:30:53,201:INFO:Tuning with n_jobs=-1
2020-11-04 16:30:53,204:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-04 16:34:35,464:INFO:best_params: {'actual_estimator__n_estimators': 254, 'actual_estimator__max_depth': 9, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__max_features': 0.567133018359536, 'actual_estimator__min_impurity_decrease': 0.0002654508834315337, 'actual_estimator__criterion': 'gini', 'actual_estimator__bootstrap': False, 'actual_estimator__class_weight': 'balanced'}
2020-11-04 16:34:35,466:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-04 16:34:35,467:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-04 16:34:35,468:INFO:Random search completed
2020-11-04 16:34:35,469:INFO:SubProcess create_model() called ==================================
2020-11-04 16:34:35,471:INFO:Initializing create_model()
2020-11-04 16:34:35,471:INFO:create_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ed332ac0>, kwargs={'n_estimators': 254, 'max_depth': 9, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': 0.567133018359536, 'min_impurity_decrease': 0.0002654508834315337, 'criterion': 'gini', 'bootstrap': False, 'class_weight': 'balanced'})
2020-11-04 16:34:35,471:INFO:Checking exceptions
2020-11-04 16:34:35,472:INFO:Importing libraries
2020-11-04 16:34:35,472:INFO:Copying training dataset
2020-11-04 16:34:35,475:INFO:Defining folds
2020-11-04 16:34:35,475:INFO:Declaring metric variables
2020-11-04 16:34:35,486:INFO:Importing untrained model
2020-11-04 16:34:35,487:INFO:Declaring custom model
2020-11-04 16:34:35,493:INFO:Extra Trees Classifier Imported succesfully
2020-11-04 16:34:35,507:INFO:Starting cross validation
2020-11-04 16:34:35,508:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:34:36,644:INFO:Calculating mean and std
2020-11-04 16:34:36,648:INFO:Creating metrics dataframe
2020-11-04 16:34:36,667:INFO:Finalizing model
2020-11-04 16:34:37,212:INFO:Uploading results into container
2020-11-04 16:34:37,213:INFO:Uploading model into container now
2020-11-04 16:34:37,213:INFO:create_model_container: 21
2020-11-04 16:34:37,213:INFO:master_model_container: 21
2020-11-04 16:34:37,213:INFO:display_container: 7
2020-11-04 16:34:37,214:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=9,
                     max_features=0.567133018359536, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=0.0002654508834315337,
                     min_impurity_split=None, min_samples_leaf=1,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=254, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False)
2020-11-04 16:34:37,214:INFO:create_model() succesfully completed......................................
2020-11-04 16:34:37,323:INFO:SubProcess create_model() end ==================================
2020-11-04 16:34:37,350:INFO:create_model_container: 21
2020-11-04 16:34:37,350:INFO:master_model_container: 21
2020-11-04 16:34:37,350:INFO:display_container: 7
2020-11-04 16:34:37,351:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=9,
                     max_features=0.567133018359536, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=0.0002654508834315337,
                     min_impurity_split=None, min_samples_leaf=1,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=254, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False)
2020-11-04 16:34:37,351:INFO:tune_model() succesfully completed......................................
2020-11-04 16:34:37,521:INFO:Initializing blend_models()
2020-11-04 16:34:37,521:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.6818885057697542, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.18883522191884167, max_delta_step=0, max_depth=8,
              min_child_weight=4, missing=nan, monotone_constraints='()',
              n_estimators=300, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.0026782906876952513, reg_lambda=9.52770582168972e-09,
              scale_pos_weight=41.25191082188449, subsample=0.8852110218395226,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=10,
                       max_features=0.4260011967318785, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=1.7587713627544799e-06,
                       min_impurity_split=None, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), LGBMClassifier(bagging_fraction=0.7394745844981097, bagging_freq=7,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.92604548207434, importance_type='split',
               learning_rate=0.13196323045823938, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001,
               min_data_in_leaf=3115, min_split_gain=0.2549641131153165,
               n_estimators=25, n_jobs=-1, num_leaves=149, objective=None,
               random_state=786, reg_alpha=2.9190702891048984e-07,
               reg_lambda=0.8795783376736309, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7f85d1167820>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.49760260577059956, loss='deviance',
                           max_depth=2, max_features=0.5310621814404348,
                           max_leaf_nodes=None,
                           min_impurity_decrease=9.786095389093074e-07,
                           min_impurity_split=None, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=230, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.6944294364303834, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=9,
                     max_features=0.567133018359536, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=0.0002654508834315337,
                     min_impurity_split=None, min_samples_leaf=1,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=254, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False)], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-04 16:34:37,521:INFO:Checking exceptions
2020-11-04 16:34:37,524:INFO:Preparing display monitor
2020-11-04 16:34:37,540:INFO:Importing libraries
2020-11-04 16:34:37,540:INFO:Copying training dataset
2020-11-04 16:34:37,548:INFO:Getting model names
2020-11-04 16:34:37,556:INFO:SubProcess create_model() called ==================================
2020-11-04 16:34:37,574:INFO:Initializing create_model()
2020-11-04 16:34:37,574:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.6818885057697542,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.18883522191884167,
                                                   max_delta_step=0,
                                                   max_depth=8,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=0.0002654508834315337,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=1,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=254,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f85ed251c10>, kwargs={})
2020-11-04 16:34:37,574:INFO:Checking exceptions
2020-11-04 16:34:37,574:INFO:Importing libraries
2020-11-04 16:34:37,574:INFO:Copying training dataset
2020-11-04 16:34:37,575:INFO:Defining folds
2020-11-04 16:34:37,576:INFO:Declaring metric variables
2020-11-04 16:34:37,582:INFO:Importing untrained model
2020-11-04 16:34:37,583:INFO:Declaring custom model
2020-11-04 16:34:37,596:INFO:Voting Classifier Imported succesfully
2020-11-04 16:34:37,618:INFO:Starting cross validation
2020-11-04 16:34:37,619:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-04 16:34:43,332:INFO:Calculating mean and std
2020-11-04 16:34:43,334:INFO:Creating metrics dataframe
2020-11-04 16:34:43,349:INFO:Finalizing model
2020-11-04 16:34:45,491:INFO:Uploading results into container
2020-11-04 16:34:45,491:INFO:Uploading model into container now
2020-11-04 16:34:45,491:INFO:create_model_container: 22
2020-11-04 16:34:45,491:INFO:master_model_container: 22
2020-11-04 16:34:45,491:INFO:display_container: 8
2020-11-04 16:34:45,501:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.6818885057697542,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.18883522191884167,
                                                   max_delta_step=0,
                                                   max_depth=8,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=0.0002654508834315337,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=1,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=254,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1])
2020-11-04 16:34:45,501:INFO:create_model() succesfully completed......................................
2020-11-04 16:34:45,602:INFO:SubProcess create_model() end ==================================
2020-11-04 16:34:45,628:INFO:create_model_container: 22
2020-11-04 16:34:45,628:INFO:master_model_container: 22
2020-11-04 16:34:45,628:INFO:display_container: 8
2020-11-04 16:34:45,640:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.6818885057697542,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.18883522191884167,
                                                   max_delta_step=0,
                                                   max_depth=8,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=0.0002654508834315337,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=1,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=254,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1])
2020-11-04 16:34:45,640:INFO:blend_models() succesfully completed......................................
2020-11-04 16:34:45,771:INFO:Initializing optimize_threshold()
2020-11-04 16:34:45,771:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.6818885057697542,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.18883522191884167,
                                                   max_delta_step=0,
                                                   max_depth=8,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=0.0002654508834315337,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=1,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=254,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-100, false_negative=0)
2020-11-04 16:34:45,771:INFO:Importing libraries
2020-11-04 16:34:45,771:INFO:Checking exceptions
2020-11-04 16:34:45,858:INFO:Defining loss function
2020-11-04 16:34:45,859:INFO:Iteration starts at 0
2020-11-04 16:34:46,611:INFO:Figure ready for render
2020-11-04 16:34:46,733:INFO:optimize_threshold() succesfully completed......................................
2020-11-04 16:37:08,267:INFO:Initializing optimize_threshold()
2020-11-04 16:37:08,268:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.6818885057697542,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.18883522191884167,
                                                   max_delta_step=0,
                                                   max_depth=8,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=0.0002654508834315337,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=1,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=254,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-100, false_negative=0)
2020-11-04 16:37:08,268:INFO:Importing libraries
2020-11-04 16:37:08,268:INFO:Checking exceptions
2020-11-04 16:37:08,373:INFO:Defining loss function
2020-11-04 16:37:08,373:INFO:Iteration starts at 0
2020-11-04 16:37:08,430:INFO:Figure ready for render
2020-11-04 16:37:08,435:INFO:optimize_threshold() succesfully completed......................................
2020-11-04 16:37:38,678:INFO:Initializing optimize_threshold()
2020-11-04 16:37:38,679:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.6818885057697542,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.18883522191884167,
                                                   max_delta_step=0,
                                                   max_depth=8,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=0.0002654508834315337,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=1,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=254,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-100, false_negative=0)
2020-11-04 16:37:38,679:INFO:Importing libraries
2020-11-04 16:37:38,679:INFO:Checking exceptions
2020-11-04 16:37:38,748:INFO:Defining loss function
2020-11-04 16:37:38,749:INFO:Iteration starts at 0
2020-11-04 16:37:38,783:INFO:Figure ready for render
2020-11-04 16:37:38,788:INFO:optimize_threshold() succesfully completed......................................
2020-11-04 16:38:20,319:INFO:Initializing optimize_threshold()
2020-11-04 16:38:20,320:INFO:optimize_threshold(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.6818885057697542,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.18883522191884167,
                                                   max_delta_step=0,
                                                   max_depth=8,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constraints...
                                                          min_impurity_decrease=0.0002654508834315337,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=1,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=254,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), true_positive=50, true_negative=50, false_positive=-100, false_negative=0)
2020-11-04 16:38:20,320:INFO:Importing libraries
2020-11-04 16:38:20,320:INFO:Checking exceptions
2020-11-04 16:38:20,385:INFO:Defining loss function
2020-11-04 16:38:20,385:INFO:Iteration starts at 0
2020-11-04 16:38:20,417:INFO:Figure ready for render
2020-11-04 16:38:20,421:INFO:optimize_threshold() succesfully completed......................................
2020-11-04 16:40:02,913:INFO:Initializing get_config()
2020-11-04 16:40:02,914:INFO:get_config(variable=<function optimize_threshold at 0x7f85ebb65940>)
2020-11-05 10:46:33,708:INFO:PyCaret Supervised Module
2020-11-05 10:46:33,709:INFO:ML Usecase: classification
2020-11-05 10:46:33,710:INFO:version 2.2.0
2020-11-05 10:46:33,710:INFO:Initializing setup()
2020-11-05 10:46:33,710:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-05 10:46:33,710:INFO:Checking environment
2020-11-05 10:46:33,710:INFO:python_version: 3.8.3
2020-11-05 10:46:33,710:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-05 10:46:33,710:INFO:machine: x86_64
2020-11-05 10:46:33,729:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-05 10:46:33,730:INFO:Memory: svmem(total=8589934592, available=2352422912, percent=72.6, used=4450656256, free=16441344, active=2329231360, inactive=2254589952, wired=2121424896)
2020-11-05 10:46:33,730:INFO:Physical Core: 4
2020-11-05 10:46:33,730:INFO:Logical Core: 8
2020-11-05 10:46:33,730:INFO:Checking libraries
2020-11-05 10:46:33,730:INFO:pd==1.0.5
2020-11-05 10:46:33,730:INFO:numpy==1.18.5
2020-11-05 10:46:33,730:INFO:sklearn==0.23.2
2020-11-05 10:46:34,264:INFO:xgboost==1.2.0
2020-11-05 10:46:34,264:INFO:lightgbm==2.3.1
2020-11-05 10:46:34,290:INFO:catboost==0.24.1
2020-11-05 10:46:34,989:INFO:mlflow==1.11.0
2020-11-05 10:46:34,989:INFO:Checking Exceptions
2020-11-05 10:46:34,989:INFO:Declaring global variables
2020-11-05 10:46:34,989:INFO:USI: e1bc
2020-11-05 10:46:34,989:INFO:pycaret_globals: {'_internal_pipeline', '_available_plots', 'prep_pipe', '_all_models_internal', 'target_param', 'n_jobs_param', 'X_train', '_all_models', 'logging_param', 'exp_name_log', 'fix_imbalance_method_param', 'X', 'pycaret_globals', 'y_train', 'html_param', '_gpu_n_jobs_param', 'log_plots_param', 'seed', 'stratify_param', 'display_container', 'master_model_container', 'X_test', 'y_test', '_all_metrics', 'gpu_param', 'experiment__', 'y', 'imputation_regressor', 'USI', 'fold_shuffle_param', 'create_model_container', 'iterative_imputation_iters_param', 'fold_groups_param', 'fold_param', 'transform_target_param', '_ml_usecase', 'data_before_preprocess', 'transform_target_method_param', 'imputation_classifier', 'fold_generator', 'fix_imbalance_param'}
2020-11-05 10:46:34,989:INFO:Preparing display monitor
2020-11-05 10:46:34,990:INFO:Preparing display monitor
2020-11-05 10:46:35,002:INFO:Importing libraries
2020-11-05 10:46:35,002:INFO:Copying data for preprocessing
2020-11-05 10:46:35,010:INFO:Declaring preprocessing parameters
2020-11-05 10:46:35,011:INFO:Setting up iterative imputation
2020-11-05 10:46:35,280:INFO:Creating preprocessing pipeline
2020-11-05 10:46:35,303:INFO:Preprocessing pipeline created successfully
2020-11-05 10:46:35,304:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-05 10:46:35,304:INFO:Creating global containers
2020-11-05 10:46:35,305:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-05 10:46:35,439:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-05 10:46:35,799:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-05 10:46:36,496:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-05 10:46:36,738:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-05 10:46:36,896:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-05 10:46:37,099:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-05 10:46:37,212:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-05 10:46:37,319:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-05 10:46:37,427:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-05 10:46:37,532:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-05 10:46:37,636:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-05 10:46:37,762:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-05 10:46:37,893:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-05 10:46:38,102:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-05 10:46:38,208:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-05 10:46:38,333:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-05 10:46:38,441:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-05 10:46:38,548:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-05 10:46:38,651:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-05 10:46:38,754:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-05 10:46:38,854:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-05 10:46:38,959:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-05 10:46:39,067:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-05 10:46:39,171:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-05 10:46:39,279:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-05 10:46:39,400:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-05 10:46:39,499:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-05 10:46:39,605:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-05 10:46:39,709:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-05 10:46:39,811:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-05 10:46:39,909:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-05 10:46:40,034:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-05 10:46:40,154:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-05 10:46:40,293:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-05 10:46:40,404:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-05 10:46:40,514:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-05 10:46:40,632:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-05 10:46:40,958:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-05 10:46:41,066:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-05 10:46:41,175:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-05 10:46:41,297:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-05 10:46:41,654:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-05 10:46:42,221:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-05 10:46:42,479:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-05 10:46:42,641:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-05 10:46:42,795:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-05 10:46:42,923:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-05 10:46:43,040:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-05 10:46:43,160:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-05 10:46:43,268:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-05 10:46:45,573:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-05 10:46:45,676:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-05 10:46:45,760:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-05 10:46:45,848:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-05 10:46:45,935:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-05 10:46:46,020:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-05 10:46:46,105:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-05 10:46:46,189:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-05 10:46:46,272:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-05 10:46:46,355:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-05 10:46:46,438:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-05 10:46:46,521:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-05 10:46:46,603:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-05 10:46:46,684:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-05 10:46:46,768:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-05 10:46:46,852:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-05 10:46:46,935:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-05 10:46:47,018:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-05 10:46:47,102:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-05 10:46:47,186:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-05 10:46:47,269:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-05 10:46:47,351:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-05 10:46:47,434:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-05 10:46:47,517:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-05 10:46:47,599:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-05 10:46:47,681:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-05 10:46:47,765:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-05 10:46:47,848:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-05 10:46:47,932:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-05 10:46:48,018:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-05 10:46:48,103:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-05 10:46:48,185:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-05 10:46:48,267:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-05 10:46:48,363:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-05 10:46:48,463:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-05 10:46:48,556:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-05 10:46:48,648:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-05 10:46:48,742:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-05 10:46:48,833:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-05 10:46:48,929:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-05 10:46:49,031:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-05 10:46:49,139:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-05 10:46:49,250:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-05 10:46:49,339:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-05 10:46:49,440:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-05 10:46:49,542:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-05 10:46:49,638:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-05 10:46:49,766:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-05 10:46:49,943:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-05 10:46:50,044:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-05 10:46:50,203:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-05 10:46:50,288:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-05 10:46:50,372:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-05 10:46:50,458:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-05 10:46:50,546:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-05 10:46:50,632:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-05 10:46:50,721:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-05 10:46:50,815:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-05 10:46:50,908:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-05 10:46:51,008:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-05 10:46:51,121:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-05 10:46:51,227:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-05 10:46:51,322:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-05 10:46:51,415:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-05 10:46:51,499:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-05 10:46:51,591:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-05 10:46:51,704:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-05 10:46:51,803:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-05 10:46:51,903:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-05 10:46:52,001:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-05 10:46:52,097:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-05 10:46:52,181:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-05 10:46:52,272:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-05 10:46:52,364:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-05 10:46:52,450:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-05 10:46:52,534:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-05 10:46:52,621:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-05 10:46:52,705:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-05 10:46:52,791:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-05 10:46:52,874:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-05 10:46:52,958:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-05 10:46:53,042:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-05 10:46:53,127:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-05 10:46:53,213:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-05 10:46:53,298:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-05 10:46:53,386:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-05 10:46:53,480:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-05 10:46:53,571:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-05 10:46:53,661:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-05 10:46:53,774:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-05 10:46:53,862:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-05 10:46:53,947:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-05 10:46:54,032:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-05 10:46:54,118:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-05 10:46:54,206:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-05 10:46:54,291:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-05 10:46:54,377:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-05 10:46:54,463:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-05 10:46:54,552:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-05 10:46:54,638:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-05 10:46:54,957:INFO:Creating grid variables
2020-11-05 10:46:54,996:INFO:create_model_container: 0
2020-11-05 10:46:54,996:INFO:master_model_container: 0
2020-11-05 10:46:54,996:INFO:display_container: 0
2020-11-05 10:46:55,012:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-05 10:46:55,012:INFO:setup() succesfully completed......................................
2020-11-05 10:46:55,091:INFO:gpu_param set to False
2020-11-05 10:46:55,343:INFO:Initializing get_config()
2020-11-05 10:46:55,344:INFO:get_config(variable=X_train)
2020-11-05 10:46:55,352:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Sunday_multiply_Friday  Friday_multiply_Sunday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-11-05 10:46:55,353:INFO:get_config() succesfully completed......................................
2020-11-05 10:46:55,368:INFO:Initializing compare_models()
2020-11-05 10:46:55,369:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=6, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-11-05 10:46:55,369:INFO:Checking exceptions
2020-11-05 10:46:55,371:INFO:Preparing display monitor
2020-11-05 10:46:55,371:INFO:Preparing display monitor
2020-11-05 10:46:55,423:INFO:Initializing Logistic Regression
2020-11-05 10:46:55,423:INFO:Total runtime is 9.433428446451824e-06 minutes
2020-11-05 10:46:55,437:INFO:SubProcess create_model() called ==================================
2020-11-05 10:46:55,438:INFO:Initializing create_model()
2020-11-05 10:46:55,439:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:46:55,439:INFO:Checking exceptions
2020-11-05 10:46:55,439:INFO:Importing libraries
2020-11-05 10:46:55,440:INFO:Copying training dataset
2020-11-05 10:46:55,441:INFO:Defining folds
2020-11-05 10:46:55,441:INFO:Declaring metric variables
2020-11-05 10:46:55,453:INFO:Importing untrained model
2020-11-05 10:46:55,460:INFO:Logistic Regression Imported succesfully
2020-11-05 10:46:55,476:INFO:Starting cross validation
2020-11-05 10:46:55,476:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:04,065:INFO:Calculating mean and std
2020-11-05 10:47:04,082:INFO:Creating metrics dataframe
2020-11-05 10:47:04,096:INFO:Uploading results into container
2020-11-05 10:47:04,096:INFO:Uploading model into container now
2020-11-05 10:47:04,097:INFO:create_model_container: 1
2020-11-05 10:47:04,097:INFO:master_model_container: 1
2020-11-05 10:47:04,098:INFO:display_container: 1
2020-11-05 10:47:04,099:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-11-05 10:47:04,100:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:04,346:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:04,346:INFO:Creating metrics dataframe
2020-11-05 10:47:04,380:INFO:Initializing K Neighbors Classifier
2020-11-05 10:47:04,380:INFO:Total runtime is 0.1492846687634786 minutes
2020-11-05 10:47:04,433:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:04,434:INFO:Initializing create_model()
2020-11-05 10:47:04,444:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:04,445:INFO:Checking exceptions
2020-11-05 10:47:04,445:INFO:Importing libraries
2020-11-05 10:47:04,445:INFO:Copying training dataset
2020-11-05 10:47:04,446:INFO:Defining folds
2020-11-05 10:47:04,447:INFO:Declaring metric variables
2020-11-05 10:47:04,456:INFO:Importing untrained model
2020-11-05 10:47:04,465:INFO:K Neighbors Classifier Imported succesfully
2020-11-05 10:47:04,492:INFO:Starting cross validation
2020-11-05 10:47:04,493:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:04,632:INFO:Calculating mean and std
2020-11-05 10:47:04,633:INFO:Creating metrics dataframe
2020-11-05 10:47:04,643:INFO:Uploading results into container
2020-11-05 10:47:04,643:INFO:Uploading model into container now
2020-11-05 10:47:04,643:INFO:create_model_container: 2
2020-11-05 10:47:04,643:INFO:master_model_container: 2
2020-11-05 10:47:04,644:INFO:display_container: 1
2020-11-05 10:47:04,644:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-11-05 10:47:04,645:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:04,755:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:04,756:INFO:Creating metrics dataframe
2020-11-05 10:47:04,781:INFO:Initializing Naive Bayes
2020-11-05 10:47:04,781:INFO:Total runtime is 0.15597796440124512 minutes
2020-11-05 10:47:04,794:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:04,794:INFO:Initializing create_model()
2020-11-05 10:47:04,798:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:04,798:INFO:Checking exceptions
2020-11-05 10:47:04,798:INFO:Importing libraries
2020-11-05 10:47:04,798:INFO:Copying training dataset
2020-11-05 10:47:04,803:INFO:Defining folds
2020-11-05 10:47:04,805:INFO:Declaring metric variables
2020-11-05 10:47:04,841:INFO:Importing untrained model
2020-11-05 10:47:04,862:INFO:Naive Bayes Imported succesfully
2020-11-05 10:47:05,008:INFO:Starting cross validation
2020-11-05 10:47:05,008:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:05,100:INFO:Calculating mean and std
2020-11-05 10:47:05,102:INFO:Creating metrics dataframe
2020-11-05 10:47:05,108:INFO:Uploading results into container
2020-11-05 10:47:05,108:INFO:Uploading model into container now
2020-11-05 10:47:05,108:INFO:create_model_container: 3
2020-11-05 10:47:05,108:INFO:master_model_container: 3
2020-11-05 10:47:05,108:INFO:display_container: 1
2020-11-05 10:47:05,109:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-11-05 10:47:05,109:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:05,216:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:05,216:INFO:Creating metrics dataframe
2020-11-05 10:47:05,281:INFO:Initializing Decision Tree Classifier
2020-11-05 10:47:05,283:INFO:Total runtime is 0.16433614889780682 minutes
2020-11-05 10:47:05,317:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:05,317:INFO:Initializing create_model()
2020-11-05 10:47:05,317:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:05,317:INFO:Checking exceptions
2020-11-05 10:47:05,317:INFO:Importing libraries
2020-11-05 10:47:05,317:INFO:Copying training dataset
2020-11-05 10:47:05,318:INFO:Defining folds
2020-11-05 10:47:05,318:INFO:Declaring metric variables
2020-11-05 10:47:05,336:INFO:Importing untrained model
2020-11-05 10:47:05,356:INFO:Decision Tree Classifier Imported succesfully
2020-11-05 10:47:05,395:INFO:Starting cross validation
2020-11-05 10:47:05,396:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:05,483:INFO:Calculating mean and std
2020-11-05 10:47:05,487:INFO:Creating metrics dataframe
2020-11-05 10:47:05,492:INFO:Uploading results into container
2020-11-05 10:47:05,493:INFO:Uploading model into container now
2020-11-05 10:47:05,493:INFO:create_model_container: 4
2020-11-05 10:47:05,493:INFO:master_model_container: 4
2020-11-05 10:47:05,493:INFO:display_container: 1
2020-11-05 10:47:05,494:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-11-05 10:47:05,494:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:05,600:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:05,600:INFO:Creating metrics dataframe
2020-11-05 10:47:05,630:INFO:Initializing SVM - Linear Kernel
2020-11-05 10:47:05,630:INFO:Total runtime is 0.17012256781260174 minutes
2020-11-05 10:47:05,642:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:05,643:INFO:Initializing create_model()
2020-11-05 10:47:05,643:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:05,643:INFO:Checking exceptions
2020-11-05 10:47:05,643:INFO:Importing libraries
2020-11-05 10:47:05,643:INFO:Copying training dataset
2020-11-05 10:47:05,644:INFO:Defining folds
2020-11-05 10:47:05,644:INFO:Declaring metric variables
2020-11-05 10:47:05,653:INFO:Importing untrained model
2020-11-05 10:47:05,661:INFO:SVM - Linear Kernel Imported succesfully
2020-11-05 10:47:05,748:INFO:Starting cross validation
2020-11-05 10:47:05,748:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:05,808:INFO:Calculating mean and std
2020-11-05 10:47:05,810:INFO:Creating metrics dataframe
2020-11-05 10:47:05,819:INFO:Uploading results into container
2020-11-05 10:47:05,819:INFO:Uploading model into container now
2020-11-05 10:47:05,819:INFO:create_model_container: 5
2020-11-05 10:47:05,819:INFO:master_model_container: 5
2020-11-05 10:47:05,820:INFO:display_container: 1
2020-11-05 10:47:05,820:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-11-05 10:47:05,820:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:06,021:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:06,025:INFO:Creating metrics dataframe
2020-11-05 10:47:06,075:INFO:Initializing Ridge Classifier
2020-11-05 10:47:06,076:INFO:Total runtime is 0.17755769888559977 minutes
2020-11-05 10:47:06,093:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:06,094:INFO:Initializing create_model()
2020-11-05 10:47:06,094:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:06,094:INFO:Checking exceptions
2020-11-05 10:47:06,094:INFO:Importing libraries
2020-11-05 10:47:06,094:INFO:Copying training dataset
2020-11-05 10:47:06,096:INFO:Defining folds
2020-11-05 10:47:06,097:INFO:Declaring metric variables
2020-11-05 10:47:06,110:INFO:Importing untrained model
2020-11-05 10:47:06,127:INFO:Ridge Classifier Imported succesfully
2020-11-05 10:47:06,153:INFO:Starting cross validation
2020-11-05 10:47:06,153:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:06,241:INFO:Calculating mean and std
2020-11-05 10:47:06,242:INFO:Creating metrics dataframe
2020-11-05 10:47:06,254:INFO:Uploading results into container
2020-11-05 10:47:06,254:INFO:Uploading model into container now
2020-11-05 10:47:06,255:INFO:create_model_container: 6
2020-11-05 10:47:06,255:INFO:master_model_container: 6
2020-11-05 10:47:06,255:INFO:display_container: 1
2020-11-05 10:47:06,256:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-11-05 10:47:06,256:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:06,363:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:06,364:INFO:Creating metrics dataframe
2020-11-05 10:47:06,420:INFO:Initializing Random Forest Classifier
2020-11-05 10:47:06,420:INFO:Total runtime is 0.18328856627146403 minutes
2020-11-05 10:47:06,438:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:06,439:INFO:Initializing create_model()
2020-11-05 10:47:06,439:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:06,439:INFO:Checking exceptions
2020-11-05 10:47:06,439:INFO:Importing libraries
2020-11-05 10:47:06,439:INFO:Copying training dataset
2020-11-05 10:47:06,440:INFO:Defining folds
2020-11-05 10:47:06,441:INFO:Declaring metric variables
2020-11-05 10:47:06,454:INFO:Importing untrained model
2020-11-05 10:47:06,465:INFO:Random Forest Classifier Imported succesfully
2020-11-05 10:47:06,515:INFO:Starting cross validation
2020-11-05 10:47:06,517:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:07,797:INFO:Calculating mean and std
2020-11-05 10:47:07,798:INFO:Creating metrics dataframe
2020-11-05 10:47:07,802:INFO:Uploading results into container
2020-11-05 10:47:07,803:INFO:Uploading model into container now
2020-11-05 10:47:07,803:INFO:create_model_container: 7
2020-11-05 10:47:07,803:INFO:master_model_container: 7
2020-11-05 10:47:07,803:INFO:display_container: 1
2020-11-05 10:47:07,803:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-05 10:47:07,803:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:07,898:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:07,899:INFO:Creating metrics dataframe
2020-11-05 10:47:07,943:INFO:Initializing Quadratic Discriminant Analysis
2020-11-05 10:47:07,943:INFO:Total runtime is 0.2086702823638916 minutes
2020-11-05 10:47:07,954:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:07,955:INFO:Initializing create_model()
2020-11-05 10:47:07,955:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:07,955:INFO:Checking exceptions
2020-11-05 10:47:07,955:INFO:Importing libraries
2020-11-05 10:47:07,955:INFO:Copying training dataset
2020-11-05 10:47:07,957:INFO:Defining folds
2020-11-05 10:47:07,957:INFO:Declaring metric variables
2020-11-05 10:47:07,968:INFO:Importing untrained model
2020-11-05 10:47:07,981:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-11-05 10:47:08,003:INFO:Starting cross validation
2020-11-05 10:47:08,004:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:08,084:INFO:Calculating mean and std
2020-11-05 10:47:08,085:INFO:Creating metrics dataframe
2020-11-05 10:47:08,091:INFO:Uploading results into container
2020-11-05 10:47:08,091:INFO:Uploading model into container now
2020-11-05 10:47:08,091:INFO:create_model_container: 8
2020-11-05 10:47:08,091:INFO:master_model_container: 8
2020-11-05 10:47:08,091:INFO:display_container: 1
2020-11-05 10:47:08,092:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-11-05 10:47:08,092:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:08,196:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:08,196:INFO:Creating metrics dataframe
2020-11-05 10:47:08,254:INFO:Initializing Ada Boost Classifier
2020-11-05 10:47:08,255:INFO:Total runtime is 0.21386679808298747 minutes
2020-11-05 10:47:08,275:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:08,276:INFO:Initializing create_model()
2020-11-05 10:47:08,276:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:08,277:INFO:Checking exceptions
2020-11-05 10:47:08,277:INFO:Importing libraries
2020-11-05 10:47:08,277:INFO:Copying training dataset
2020-11-05 10:47:08,279:INFO:Defining folds
2020-11-05 10:47:08,279:INFO:Declaring metric variables
2020-11-05 10:47:08,292:INFO:Importing untrained model
2020-11-05 10:47:08,303:INFO:Ada Boost Classifier Imported succesfully
2020-11-05 10:47:08,358:INFO:Starting cross validation
2020-11-05 10:47:08,359:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:08,947:INFO:Calculating mean and std
2020-11-05 10:47:08,948:INFO:Creating metrics dataframe
2020-11-05 10:47:08,953:INFO:Uploading results into container
2020-11-05 10:47:08,953:INFO:Uploading model into container now
2020-11-05 10:47:08,953:INFO:create_model_container: 9
2020-11-05 10:47:08,953:INFO:master_model_container: 9
2020-11-05 10:47:08,953:INFO:display_container: 1
2020-11-05 10:47:08,954:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-11-05 10:47:08,954:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:09,041:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:09,041:INFO:Creating metrics dataframe
2020-11-05 10:47:09,090:INFO:Initializing Gradient Boosting Classifier
2020-11-05 10:47:09,091:INFO:Total runtime is 0.22779736518859864 minutes
2020-11-05 10:47:09,100:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:09,100:INFO:Initializing create_model()
2020-11-05 10:47:09,101:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:09,101:INFO:Checking exceptions
2020-11-05 10:47:09,101:INFO:Importing libraries
2020-11-05 10:47:09,101:INFO:Copying training dataset
2020-11-05 10:47:09,102:INFO:Defining folds
2020-11-05 10:47:09,102:INFO:Declaring metric variables
2020-11-05 10:47:09,111:INFO:Importing untrained model
2020-11-05 10:47:09,118:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-05 10:47:09,138:INFO:Starting cross validation
2020-11-05 10:47:09,139:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:09,793:INFO:Calculating mean and std
2020-11-05 10:47:09,795:INFO:Creating metrics dataframe
2020-11-05 10:47:09,800:INFO:Uploading results into container
2020-11-05 10:47:09,800:INFO:Uploading model into container now
2020-11-05 10:47:09,800:INFO:create_model_container: 10
2020-11-05 10:47:09,800:INFO:master_model_container: 10
2020-11-05 10:47:09,801:INFO:display_container: 1
2020-11-05 10:47:09,801:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-05 10:47:09,801:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:09,894:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:09,894:INFO:Creating metrics dataframe
2020-11-05 10:47:09,959:INFO:Initializing Linear Discriminant Analysis
2020-11-05 10:47:09,960:INFO:Total runtime is 0.24228198130925496 minutes
2020-11-05 10:47:09,975:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:09,976:INFO:Initializing create_model()
2020-11-05 10:47:09,976:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:09,977:INFO:Checking exceptions
2020-11-05 10:47:09,978:INFO:Importing libraries
2020-11-05 10:47:09,978:INFO:Copying training dataset
2020-11-05 10:47:09,980:INFO:Defining folds
2020-11-05 10:47:09,980:INFO:Declaring metric variables
2020-11-05 10:47:09,998:INFO:Importing untrained model
2020-11-05 10:47:10,010:INFO:Linear Discriminant Analysis Imported succesfully
2020-11-05 10:47:10,039:INFO:Starting cross validation
2020-11-05 10:47:10,040:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:10,230:INFO:Calculating mean and std
2020-11-05 10:47:10,231:INFO:Creating metrics dataframe
2020-11-05 10:47:10,238:INFO:Uploading results into container
2020-11-05 10:47:10,238:INFO:Uploading model into container now
2020-11-05 10:47:10,238:INFO:create_model_container: 11
2020-11-05 10:47:10,238:INFO:master_model_container: 11
2020-11-05 10:47:10,239:INFO:display_container: 1
2020-11-05 10:47:10,239:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-11-05 10:47:10,239:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:10,380:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:10,381:INFO:Creating metrics dataframe
2020-11-05 10:47:10,461:INFO:Initializing Extra Trees Classifier
2020-11-05 10:47:10,461:INFO:Total runtime is 0.2506417989730835 minutes
2020-11-05 10:47:10,471:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:10,472:INFO:Initializing create_model()
2020-11-05 10:47:10,472:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:10,472:INFO:Checking exceptions
2020-11-05 10:47:10,472:INFO:Importing libraries
2020-11-05 10:47:10,472:INFO:Copying training dataset
2020-11-05 10:47:10,473:INFO:Defining folds
2020-11-05 10:47:10,474:INFO:Declaring metric variables
2020-11-05 10:47:10,486:INFO:Importing untrained model
2020-11-05 10:47:10,497:INFO:Extra Trees Classifier Imported succesfully
2020-11-05 10:47:10,523:INFO:Starting cross validation
2020-11-05 10:47:10,525:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:11,785:INFO:Calculating mean and std
2020-11-05 10:47:11,786:INFO:Creating metrics dataframe
2020-11-05 10:47:11,791:INFO:Uploading results into container
2020-11-05 10:47:11,791:INFO:Uploading model into container now
2020-11-05 10:47:11,791:INFO:create_model_container: 12
2020-11-05 10:47:11,791:INFO:master_model_container: 12
2020-11-05 10:47:11,791:INFO:display_container: 1
2020-11-05 10:47:11,792:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-05 10:47:11,792:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:11,891:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:11,891:INFO:Creating metrics dataframe
2020-11-05 10:47:11,952:INFO:Initializing Extreme Gradient Boosting
2020-11-05 10:47:11,952:INFO:Total runtime is 0.27549033164978026 minutes
2020-11-05 10:47:11,961:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:11,962:INFO:Initializing create_model()
2020-11-05 10:47:11,962:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:11,962:INFO:Checking exceptions
2020-11-05 10:47:11,962:INFO:Importing libraries
2020-11-05 10:47:11,962:INFO:Copying training dataset
2020-11-05 10:47:11,964:INFO:Defining folds
2020-11-05 10:47:11,964:INFO:Declaring metric variables
2020-11-05 10:47:11,971:INFO:Importing untrained model
2020-11-05 10:47:11,983:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-05 10:47:12,002:INFO:Starting cross validation
2020-11-05 10:47:12,002:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:14,427:INFO:Calculating mean and std
2020-11-05 10:47:14,428:INFO:Creating metrics dataframe
2020-11-05 10:47:14,436:INFO:Uploading results into container
2020-11-05 10:47:14,436:INFO:Uploading model into container now
2020-11-05 10:47:14,437:INFO:create_model_container: 13
2020-11-05 10:47:14,437:INFO:master_model_container: 13
2020-11-05 10:47:14,437:INFO:display_container: 1
2020-11-05 10:47:14,438:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-11-05 10:47:14,438:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:14,529:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:14,529:INFO:Creating metrics dataframe
2020-11-05 10:47:14,594:INFO:Initializing Light Gradient Boosting Machine
2020-11-05 10:47:14,594:INFO:Total runtime is 0.3195247491200765 minutes
2020-11-05 10:47:14,608:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:14,608:INFO:Initializing create_model()
2020-11-05 10:47:14,608:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:14,609:INFO:Checking exceptions
2020-11-05 10:47:14,609:INFO:Importing libraries
2020-11-05 10:47:14,609:INFO:Copying training dataset
2020-11-05 10:47:14,610:INFO:Defining folds
2020-11-05 10:47:14,610:INFO:Declaring metric variables
2020-11-05 10:47:14,620:INFO:Importing untrained model
2020-11-05 10:47:14,632:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-05 10:47:14,652:INFO:Starting cross validation
2020-11-05 10:47:14,653:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:14,984:INFO:Calculating mean and std
2020-11-05 10:47:14,986:INFO:Creating metrics dataframe
2020-11-05 10:47:14,993:INFO:Uploading results into container
2020-11-05 10:47:14,993:INFO:Uploading model into container now
2020-11-05 10:47:14,993:INFO:create_model_container: 14
2020-11-05 10:47:14,993:INFO:master_model_container: 14
2020-11-05 10:47:14,993:INFO:display_container: 1
2020-11-05 10:47:14,994:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-05 10:47:14,994:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:15,121:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:15,121:INFO:Creating metrics dataframe
2020-11-05 10:47:15,261:INFO:Initializing CatBoost Classifier
2020-11-05 10:47:15,262:INFO:Total runtime is 0.3306475361188253 minutes
2020-11-05 10:47:15,349:INFO:SubProcess create_model() called ==================================
2020-11-05 10:47:15,356:INFO:Initializing create_model()
2020-11-05 10:47:15,358:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb85533a0>, kwargs={})
2020-11-05 10:47:15,358:INFO:Checking exceptions
2020-11-05 10:47:15,359:INFO:Importing libraries
2020-11-05 10:47:15,359:INFO:Copying training dataset
2020-11-05 10:47:15,362:INFO:Defining folds
2020-11-05 10:47:15,363:INFO:Declaring metric variables
2020-11-05 10:47:15,419:INFO:Importing untrained model
2020-11-05 10:47:15,461:INFO:CatBoost Classifier Imported succesfully
2020-11-05 10:47:15,517:INFO:Starting cross validation
2020-11-05 10:47:15,518:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 10:47:38,014:INFO:Calculating mean and std
2020-11-05 10:47:38,020:INFO:Creating metrics dataframe
2020-11-05 10:47:38,030:INFO:Uploading results into container
2020-11-05 10:47:38,031:INFO:Uploading model into container now
2020-11-05 10:47:38,031:INFO:create_model_container: 15
2020-11-05 10:47:38,031:INFO:master_model_container: 15
2020-11-05 10:47:38,032:INFO:display_container: 1
2020-11-05 10:47:38,032:INFO:<catboost.core.CatBoostClassifier object at 0x7fbcb83f9df0>
2020-11-05 10:47:38,032:INFO:create_model() succesfully completed......................................
2020-11-05 10:47:38,273:INFO:SubProcess create_model() end ==================================
2020-11-05 10:47:38,273:INFO:Creating metrics dataframe
2020-11-05 10:47:38,360:INFO:Initializing create_model()
2020-11-05 10:47:38,360:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 10:47:38,361:INFO:Checking exceptions
2020-11-05 10:47:38,361:INFO:Importing libraries
2020-11-05 10:47:38,361:INFO:Copying training dataset
2020-11-05 10:47:38,361:INFO:Defining folds
2020-11-05 10:47:38,361:INFO:Declaring metric variables
2020-11-05 10:47:38,361:INFO:Importing untrained model
2020-11-05 10:47:38,361:INFO:Declaring custom model
2020-11-05 10:47:38,362:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-05 10:47:38,363:INFO:Cross validation set to False
2020-11-05 10:47:38,363:INFO:Fitting Model
2020-11-05 10:47:38,461:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-11-05 10:47:38,461:INFO:create_models() succesfully completed......................................
2020-11-05 10:47:38,613:INFO:Initializing create_model()
2020-11-05 10:47:38,613:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 10:47:38,613:INFO:Checking exceptions
2020-11-05 10:47:38,613:INFO:Importing libraries
2020-11-05 10:47:38,613:INFO:Copying training dataset
2020-11-05 10:47:38,614:INFO:Defining folds
2020-11-05 10:47:38,614:INFO:Declaring metric variables
2020-11-05 10:47:38,614:INFO:Importing untrained model
2020-11-05 10:47:38,614:INFO:Declaring custom model
2020-11-05 10:47:38,615:INFO:Random Forest Classifier Imported succesfully
2020-11-05 10:47:38,615:INFO:Cross validation set to False
2020-11-05 10:47:38,615:INFO:Fitting Model
2020-11-05 10:47:38,845:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-05 10:47:38,846:INFO:create_models() succesfully completed......................................
2020-11-05 10:47:38,987:INFO:Initializing create_model()
2020-11-05 10:47:38,987:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 10:47:38,987:INFO:Checking exceptions
2020-11-05 10:47:38,987:INFO:Importing libraries
2020-11-05 10:47:38,987:INFO:Copying training dataset
2020-11-05 10:47:38,988:INFO:Defining folds
2020-11-05 10:47:38,988:INFO:Declaring metric variables
2020-11-05 10:47:38,988:INFO:Importing untrained model
2020-11-05 10:47:38,988:INFO:Declaring custom model
2020-11-05 10:47:38,988:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-05 10:47:38,989:INFO:Cross validation set to False
2020-11-05 10:47:38,989:INFO:Fitting Model
2020-11-05 10:47:39,028:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-05 10:47:39,028:INFO:create_models() succesfully completed......................................
2020-11-05 10:47:39,143:INFO:Initializing create_model()
2020-11-05 10:47:39,144:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fbcb83f9df0>, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 10:47:39,144:INFO:Checking exceptions
2020-11-05 10:47:39,145:INFO:Importing libraries
2020-11-05 10:47:39,146:INFO:Copying training dataset
2020-11-05 10:47:39,146:INFO:Defining folds
2020-11-05 10:47:39,147:INFO:Declaring metric variables
2020-11-05 10:47:39,147:INFO:Importing untrained model
2020-11-05 10:47:39,147:INFO:Declaring custom model
2020-11-05 10:47:39,148:INFO:CatBoost Classifier Imported succesfully
2020-11-05 10:47:39,148:INFO:Cross validation set to False
2020-11-05 10:47:39,149:INFO:Fitting Model
2020-11-05 10:47:40,786:INFO:<catboost.core.CatBoostClassifier object at 0x7fbcb82adaf0>
2020-11-05 10:47:40,787:INFO:create_models() succesfully completed......................................
2020-11-05 10:47:40,875:INFO:Initializing create_model()
2020-11-05 10:47:40,876:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 10:47:40,876:INFO:Checking exceptions
2020-11-05 10:47:40,876:INFO:Importing libraries
2020-11-05 10:47:40,876:INFO:Copying training dataset
2020-11-05 10:47:40,877:INFO:Defining folds
2020-11-05 10:47:40,877:INFO:Declaring metric variables
2020-11-05 10:47:40,877:INFO:Importing untrained model
2020-11-05 10:47:40,877:INFO:Declaring custom model
2020-11-05 10:47:40,878:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-05 10:47:40,879:INFO:Cross validation set to False
2020-11-05 10:47:40,879:INFO:Fitting Model
2020-11-05 10:47:40,997:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-05 10:47:40,997:INFO:create_models() succesfully completed......................................
2020-11-05 10:47:41,108:INFO:Initializing create_model()
2020-11-05 10:47:41,108:INFO:create_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 10:47:41,108:INFO:Checking exceptions
2020-11-05 10:47:41,108:INFO:Importing libraries
2020-11-05 10:47:41,108:INFO:Copying training dataset
2020-11-05 10:47:41,109:INFO:Defining folds
2020-11-05 10:47:41,109:INFO:Declaring metric variables
2020-11-05 10:47:41,109:INFO:Importing untrained model
2020-11-05 10:47:41,109:INFO:Declaring custom model
2020-11-05 10:47:41,109:INFO:Extra Trees Classifier Imported succesfully
2020-11-05 10:47:41,110:INFO:Cross validation set to False
2020-11-05 10:47:41,110:INFO:Fitting Model
2020-11-05 10:47:41,279:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-05 10:47:41,279:INFO:create_models() succesfully completed......................................
2020-11-05 10:47:41,511:INFO:create_model_container: 15
2020-11-05 10:47:41,511:INFO:master_model_container: 15
2020-11-05 10:47:41,511:INFO:display_container: 1
2020-11-05 10:47:41,516:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fbcb82adaf0>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)]
2020-11-05 10:47:41,516:INFO:compare_models() succesfully completed......................................
2020-11-05 11:44:03,190:INFO:Initializing tune_model()
2020-11-05 11:44:03,191:INFO:tune_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-05 11:44:03,192:INFO:Checking exceptions
2020-11-05 11:44:03,689:INFO:Preparing display monitor
2020-11-05 11:44:03,718:INFO:Copying training dataset
2020-11-05 11:44:03,719:INFO:Checking base model
2020-11-05 11:44:03,722:INFO:Base model : Extreme Gradient Boosting
2020-11-05 11:44:03,730:INFO:Declaring metric variables
2020-11-05 11:44:03,737:INFO:Defining Hyperparameters
2020-11-05 11:44:04,102:INFO:Tuning with n_jobs=-1
2020-11-05 11:44:04,106:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-05 11:44:51,163:INFO:best_params: {'actual_estimator__learning_rate': 0.46581442104487425, 'actual_estimator__n_estimators': 214, 'actual_estimator__subsample': 0.9885113862910677, 'actual_estimator__max_depth': 2, 'actual_estimator__colsample_bytree': 0.78657704667713, 'actual_estimator__min_child_weight': 1, 'actual_estimator__reg_alpha': 0.005819089477522052, 'actual_estimator__reg_lambda': 0.13208003544009964, 'actual_estimator__scale_pos_weight': 25.42102038235062}
2020-11-05 11:44:51,164:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-05 11:44:51,168:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-05 11:44:51,169:INFO:Random search completed
2020-11-05 11:44:51,169:INFO:SubProcess create_model() called ==================================
2020-11-05 11:44:51,170:INFO:Initializing create_model()
2020-11-05 11:44:51,170:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcbac633a0>, kwargs={'learning_rate': 0.46581442104487425, 'n_estimators': 214, 'subsample': 0.9885113862910677, 'max_depth': 2, 'colsample_bytree': 0.78657704667713, 'min_child_weight': 1, 'reg_alpha': 0.005819089477522052, 'reg_lambda': 0.13208003544009964, 'scale_pos_weight': 25.42102038235062})
2020-11-05 11:44:51,170:INFO:Checking exceptions
2020-11-05 11:44:51,170:INFO:Importing libraries
2020-11-05 11:44:51,170:INFO:Copying training dataset
2020-11-05 11:44:51,171:INFO:Defining folds
2020-11-05 11:44:51,171:INFO:Declaring metric variables
2020-11-05 11:44:51,179:INFO:Importing untrained model
2020-11-05 11:44:51,180:INFO:Declaring custom model
2020-11-05 11:44:51,188:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-05 11:44:51,203:INFO:Starting cross validation
2020-11-05 11:44:51,204:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 11:44:56,752:INFO:Calculating mean and std
2020-11-05 11:44:56,768:INFO:Creating metrics dataframe
2020-11-05 11:44:56,846:INFO:Finalizing model
2020-11-05 11:44:56,963:INFO:Uploading results into container
2020-11-05 11:44:56,963:INFO:Uploading model into container now
2020-11-05 11:44:56,963:INFO:create_model_container: 16
2020-11-05 11:44:56,963:INFO:master_model_container: 16
2020-11-05 11:44:56,963:INFO:display_container: 2
2020-11-05 11:44:56,968:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-05 11:44:56,969:INFO:create_model() succesfully completed......................................
2020-11-05 11:44:57,175:INFO:SubProcess create_model() end ==================================
2020-11-05 11:44:57,217:INFO:create_model_container: 16
2020-11-05 11:44:57,218:INFO:master_model_container: 16
2020-11-05 11:44:57,218:INFO:display_container: 2
2020-11-05 11:44:57,221:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-05 11:44:57,221:INFO:tune_model() succesfully completed......................................
2020-11-05 11:44:57,331:INFO:Initializing tune_model()
2020-11-05 11:44:57,331:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-05 11:44:57,331:INFO:Checking exceptions
2020-11-05 11:44:57,333:INFO:Preparing display monitor
2020-11-05 11:44:57,352:INFO:Copying training dataset
2020-11-05 11:44:57,353:INFO:Checking base model
2020-11-05 11:44:57,353:INFO:Base model : Random Forest Classifier
2020-11-05 11:44:57,361:INFO:Declaring metric variables
2020-11-05 11:44:57,368:INFO:Defining Hyperparameters
2020-11-05 11:44:57,455:INFO:Tuning with n_jobs=-1
2020-11-05 11:44:57,457:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-05 11:48:08,080:INFO:best_params: {'actual_estimator__n_estimators': 220, 'actual_estimator__max_depth': 9, 'actual_estimator__min_impurity_decrease': 3.575964127958858e-08, 'actual_estimator__max_features': 0.613577192105375, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__bootstrap': False, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced'}
2020-11-05 11:48:08,081:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-05 11:48:08,081:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-05 11:48:08,081:INFO:Random search completed
2020-11-05 11:48:08,081:INFO:SubProcess create_model() called ==================================
2020-11-05 11:48:08,082:INFO:Initializing create_model()
2020-11-05 11:48:08,082:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb839ff70>, kwargs={'n_estimators': 220, 'max_depth': 9, 'min_impurity_decrease': 3.575964127958858e-08, 'max_features': 0.613577192105375, 'min_samples_split': 10, 'min_samples_leaf': 5, 'bootstrap': False, 'criterion': 'entropy', 'class_weight': 'balanced'})
2020-11-05 11:48:08,082:INFO:Checking exceptions
2020-11-05 11:48:08,082:INFO:Importing libraries
2020-11-05 11:48:08,082:INFO:Copying training dataset
2020-11-05 11:48:08,083:INFO:Defining folds
2020-11-05 11:48:08,083:INFO:Declaring metric variables
2020-11-05 11:48:08,090:INFO:Importing untrained model
2020-11-05 11:48:08,091:INFO:Declaring custom model
2020-11-05 11:48:08,099:INFO:Random Forest Classifier Imported succesfully
2020-11-05 11:48:08,113:INFO:Starting cross validation
2020-11-05 11:48:08,113:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 11:48:12,166:INFO:Calculating mean and std
2020-11-05 11:48:12,167:INFO:Creating metrics dataframe
2020-11-05 11:48:12,185:INFO:Finalizing model
2020-11-05 11:48:12,597:INFO:Uploading results into container
2020-11-05 11:48:12,597:INFO:Uploading model into container now
2020-11-05 11:48:12,597:INFO:create_model_container: 17
2020-11-05 11:48:12,597:INFO:master_model_container: 17
2020-11-05 11:48:12,597:INFO:display_container: 3
2020-11-05 11:48:12,598:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=9,
                       max_features=0.613577192105375, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.575964127958858e-08,
                       min_impurity_split=None, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       n_estimators=220, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-11-05 11:48:12,598:INFO:create_model() succesfully completed......................................
2020-11-05 11:48:12,691:INFO:SubProcess create_model() end ==================================
2020-11-05 11:48:12,721:INFO:create_model_container: 17
2020-11-05 11:48:12,721:INFO:master_model_container: 17
2020-11-05 11:48:12,721:INFO:display_container: 3
2020-11-05 11:48:12,722:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=9,
                       max_features=0.613577192105375, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.575964127958858e-08,
                       min_impurity_split=None, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       n_estimators=220, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-11-05 11:48:12,722:INFO:tune_model() succesfully completed......................................
2020-11-05 11:48:12,834:INFO:Initializing tune_model()
2020-11-05 11:48:12,834:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-05 11:48:12,834:INFO:Checking exceptions
2020-11-05 11:48:12,836:INFO:Preparing display monitor
2020-11-05 11:48:12,870:INFO:Copying training dataset
2020-11-05 11:48:12,873:INFO:Checking base model
2020-11-05 11:48:12,875:INFO:Base model : Light Gradient Boosting Machine
2020-11-05 11:48:12,893:INFO:Declaring metric variables
2020-11-05 11:48:12,905:INFO:Defining Hyperparameters
2020-11-05 11:48:13,094:INFO:Tuning with n_jobs=-1
2020-11-05 11:48:13,096:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-05 11:48:35,838:INFO:best_params: {'actual_estimator__num_leaves': 129, 'actual_estimator__learning_rate': 0.0002709764642652583, 'actual_estimator__n_estimators': 19, 'actual_estimator__min_split_gain': 0.6525324861702502, 'actual_estimator__reg_alpha': 0.11152031260827712, 'actual_estimator__reg_lambda': 4.867361133400105e-07, 'actual_estimator__min_data_in_leaf': 7467, 'actual_estimator__feature_fraction': 0.8958022838235111, 'actual_estimator__bagging_fraction': 0.7722583866569243, 'actual_estimator__bagging_freq': 1, 'actual_estimator__min_child_samples': 41}
2020-11-05 11:48:35,839:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-05 11:48:35,839:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-05 11:48:35,840:INFO:Random search completed
2020-11-05 11:48:35,840:INFO:SubProcess create_model() called ==================================
2020-11-05 11:48:35,841:INFO:Initializing create_model()
2020-11-05 11:48:35,841:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb839ff70>, kwargs={'num_leaves': 129, 'learning_rate': 0.0002709764642652583, 'n_estimators': 19, 'min_split_gain': 0.6525324861702502, 'reg_alpha': 0.11152031260827712, 'reg_lambda': 4.867361133400105e-07, 'min_data_in_leaf': 7467, 'feature_fraction': 0.8958022838235111, 'bagging_fraction': 0.7722583866569243, 'bagging_freq': 1, 'min_child_samples': 41})
2020-11-05 11:48:35,842:INFO:Checking exceptions
2020-11-05 11:48:35,842:INFO:Importing libraries
2020-11-05 11:48:35,842:INFO:Copying training dataset
2020-11-05 11:48:35,843:INFO:Defining folds
2020-11-05 11:48:35,843:INFO:Declaring metric variables
2020-11-05 11:48:35,855:INFO:Importing untrained model
2020-11-05 11:48:35,855:INFO:Declaring custom model
2020-11-05 11:48:35,868:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-05 11:48:35,891:INFO:Starting cross validation
2020-11-05 11:48:35,892:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 11:48:39,455:INFO:Calculating mean and std
2020-11-05 11:48:39,464:INFO:Creating metrics dataframe
2020-11-05 11:48:39,493:INFO:Finalizing model
2020-11-05 11:48:39,508:INFO:Uploading results into container
2020-11-05 11:48:39,508:INFO:Uploading model into container now
2020-11-05 11:48:39,508:INFO:create_model_container: 18
2020-11-05 11:48:39,508:INFO:master_model_container: 18
2020-11-05 11:48:39,509:INFO:display_container: 4
2020-11-05 11:48:39,510:INFO:LGBMClassifier(bagging_fraction=0.7722583866569243, bagging_freq=1,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8958022838235111, importance_type='split',
               learning_rate=0.0002709764642652583, max_depth=-1,
               min_child_samples=41, min_child_weight=0.001,
               min_data_in_leaf=7467, min_split_gain=0.6525324861702502,
               n_estimators=19, n_jobs=-1, num_leaves=129, objective=None,
               random_state=786, reg_alpha=0.11152031260827712,
               reg_lambda=4.867361133400105e-07, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-11-05 11:48:39,510:INFO:create_model() succesfully completed......................................
2020-11-05 11:48:39,693:INFO:SubProcess create_model() end ==================================
2020-11-05 11:48:39,778:INFO:create_model_container: 18
2020-11-05 11:48:39,778:INFO:master_model_container: 18
2020-11-05 11:48:39,778:INFO:display_container: 4
2020-11-05 11:48:39,780:INFO:LGBMClassifier(bagging_fraction=0.7722583866569243, bagging_freq=1,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8958022838235111, importance_type='split',
               learning_rate=0.0002709764642652583, max_depth=-1,
               min_child_samples=41, min_child_weight=0.001,
               min_data_in_leaf=7467, min_split_gain=0.6525324861702502,
               n_estimators=19, n_jobs=-1, num_leaves=129, objective=None,
               random_state=786, reg_alpha=0.11152031260827712,
               reg_lambda=4.867361133400105e-07, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-11-05 11:48:39,780:INFO:tune_model() succesfully completed......................................
2020-11-05 11:48:39,948:INFO:Initializing tune_model()
2020-11-05 11:48:39,948:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fbcb82adaf0>, fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-05 11:48:39,949:INFO:Checking exceptions
2020-11-05 11:48:39,950:INFO:Preparing display monitor
2020-11-05 11:48:39,971:INFO:Copying training dataset
2020-11-05 11:48:39,973:INFO:Checking base model
2020-11-05 11:48:39,976:INFO:Base model : CatBoost Classifier
2020-11-05 11:48:39,985:INFO:Declaring metric variables
2020-11-05 11:48:39,996:INFO:Defining Hyperparameters
2020-11-05 11:48:40,127:INFO:Tuning with n_jobs=-1
2020-11-05 11:48:40,130:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-05 11:54:28,600:INFO:best_params: {'actual_estimator__depth': 9, 'actual_estimator__n_estimators': 225, 'actual_estimator__random_strength': 0.26575415157873666, 'actual_estimator__l2_leaf_reg': 1}
2020-11-05 11:54:28,601:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-05 11:54:28,603:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-05 11:54:28,605:INFO:Random search completed
2020-11-05 11:54:28,605:INFO:SubProcess create_model() called ==================================
2020-11-05 11:54:28,606:INFO:Initializing create_model()
2020-11-05 11:54:28,606:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fbcbb9a5340>, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcbb97f880>, kwargs={'depth': 9, 'n_estimators': 225, 'random_strength': 0.26575415157873666, 'l2_leaf_reg': 1})
2020-11-05 11:54:28,606:INFO:Checking exceptions
2020-11-05 11:54:28,607:INFO:Importing libraries
2020-11-05 11:54:28,607:INFO:Copying training dataset
2020-11-05 11:54:28,609:INFO:Defining folds
2020-11-05 11:54:28,610:INFO:Declaring metric variables
2020-11-05 11:54:28,624:INFO:Importing untrained model
2020-11-05 11:54:28,625:INFO:Declaring custom model
2020-11-05 11:54:28,635:INFO:CatBoost Classifier Imported succesfully
2020-11-05 11:54:28,652:INFO:Starting cross validation
2020-11-05 11:54:28,653:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 11:54:38,254:INFO:Calculating mean and std
2020-11-05 11:54:38,263:INFO:Creating metrics dataframe
2020-11-05 11:54:38,296:INFO:Finalizing model
2020-11-05 11:54:40,504:INFO:Uploading results into container
2020-11-05 11:54:40,504:INFO:Uploading model into container now
2020-11-05 11:54:40,504:INFO:create_model_container: 19
2020-11-05 11:54:40,505:INFO:master_model_container: 19
2020-11-05 11:54:40,505:INFO:display_container: 5
2020-11-05 11:54:40,505:INFO:<catboost.core.CatBoostClassifier object at 0x7fbc9ccd0a60>
2020-11-05 11:54:40,505:INFO:create_model() succesfully completed......................................
2020-11-05 11:54:40,896:INFO:SubProcess create_model() end ==================================
2020-11-05 11:54:40,932:INFO:create_model_container: 19
2020-11-05 11:54:40,933:INFO:master_model_container: 19
2020-11-05 11:54:40,933:INFO:display_container: 5
2020-11-05 11:54:40,933:INFO:<catboost.core.CatBoostClassifier object at 0x7fbc9ccd0a60>
2020-11-05 11:54:40,933:INFO:tune_model() succesfully completed......................................
2020-11-05 11:54:41,071:INFO:Initializing tune_model()
2020-11-05 11:54:41,071:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-05 11:54:41,072:INFO:Checking exceptions
2020-11-05 11:54:41,073:INFO:Preparing display monitor
2020-11-05 11:54:41,111:INFO:Copying training dataset
2020-11-05 11:54:41,115:INFO:Checking base model
2020-11-05 11:54:41,116:INFO:Base model : Gradient Boosting Classifier
2020-11-05 11:54:41,127:INFO:Declaring metric variables
2020-11-05 11:54:41,139:INFO:Defining Hyperparameters
2020-11-05 11:54:41,241:INFO:Tuning with n_jobs=-1
2020-11-05 11:54:41,244:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-05 11:56:59,043:INFO:best_params: {'actual_estimator__n_estimators': 163, 'actual_estimator__learning_rate': 0.3456506832898298, 'actual_estimator__subsample': 0.3393460610853086, 'actual_estimator__min_samples_split': 6, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__max_depth': 8, 'actual_estimator__min_impurity_decrease': 8.313868061053237e-09, 'actual_estimator__max_features': 0.9299781294999129}
2020-11-05 11:56:59,044:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-05 11:56:59,045:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-05 11:56:59,047:INFO:Random search completed
2020-11-05 11:56:59,047:INFO:SubProcess create_model() called ==================================
2020-11-05 11:56:59,048:INFO:Initializing create_model()
2020-11-05 11:56:59,048:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb839ff70>, kwargs={'n_estimators': 163, 'learning_rate': 0.3456506832898298, 'subsample': 0.3393460610853086, 'min_samples_split': 6, 'min_samples_leaf': 5, 'max_depth': 8, 'min_impurity_decrease': 8.313868061053237e-09, 'max_features': 0.9299781294999129})
2020-11-05 11:56:59,048:INFO:Checking exceptions
2020-11-05 11:56:59,048:INFO:Importing libraries
2020-11-05 11:56:59,048:INFO:Copying training dataset
2020-11-05 11:56:59,050:INFO:Defining folds
2020-11-05 11:56:59,050:INFO:Declaring metric variables
2020-11-05 11:56:59,062:INFO:Importing untrained model
2020-11-05 11:56:59,062:INFO:Declaring custom model
2020-11-05 11:56:59,071:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-05 11:56:59,084:INFO:Starting cross validation
2020-11-05 11:56:59,085:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 11:57:01,993:INFO:Calculating mean and std
2020-11-05 11:57:01,994:INFO:Creating metrics dataframe
2020-11-05 11:57:02,008:INFO:Finalizing model
2020-11-05 11:57:02,197:INFO:Uploading results into container
2020-11-05 11:57:02,198:INFO:Uploading model into container now
2020-11-05 11:57:02,198:INFO:create_model_container: 20
2020-11-05 11:57:02,198:INFO:master_model_container: 20
2020-11-05 11:57:02,198:INFO:display_container: 6
2020-11-05 11:57:02,199:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.3456506832898298, loss='deviance',
                           max_depth=8, max_features=0.9299781294999129,
                           max_leaf_nodes=None,
                           min_impurity_decrease=8.313868061053237e-09,
                           min_impurity_split=None, min_samples_leaf=5,
                           min_samples_split=6, min_weight_fraction_leaf=0.0,
                           n_estimators=163, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.3393460610853086, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-05 11:57:02,199:INFO:create_model() succesfully completed......................................
2020-11-05 11:57:02,512:INFO:SubProcess create_model() end ==================================
2020-11-05 11:57:02,541:INFO:create_model_container: 20
2020-11-05 11:57:02,541:INFO:master_model_container: 20
2020-11-05 11:57:02,542:INFO:display_container: 6
2020-11-05 11:57:02,542:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.3456506832898298, loss='deviance',
                           max_depth=8, max_features=0.9299781294999129,
                           max_leaf_nodes=None,
                           min_impurity_decrease=8.313868061053237e-09,
                           min_impurity_split=None, min_samples_leaf=5,
                           min_samples_split=6, min_weight_fraction_leaf=0.0,
                           n_estimators=163, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.3393460610853086, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-05 11:57:02,542:INFO:tune_model() succesfully completed......................................
2020-11-05 11:57:02,728:INFO:Initializing tune_model()
2020-11-05 11:57:02,729:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-05 11:57:02,729:INFO:Checking exceptions
2020-11-05 11:57:02,731:INFO:Preparing display monitor
2020-11-05 11:57:02,761:INFO:Copying training dataset
2020-11-05 11:57:02,763:INFO:Checking base model
2020-11-05 11:57:02,763:INFO:Base model : Extra Trees Classifier
2020-11-05 11:57:02,773:INFO:Declaring metric variables
2020-11-05 11:57:02,784:INFO:Defining Hyperparameters
2020-11-05 11:57:02,892:INFO:Tuning with n_jobs=-1
2020-11-05 11:57:02,894:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-05 12:00:25,154:INFO:best_params: {'actual_estimator__n_estimators': 182, 'actual_estimator__max_depth': 10, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__max_features': 0.8567176629882483, 'actual_estimator__min_impurity_decrease': 4.021226157948392e-08, 'actual_estimator__criterion': 'gini', 'actual_estimator__bootstrap': False, 'actual_estimator__class_weight': 'balanced'}
2020-11-05 12:00:25,156:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-05 12:00:25,161:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4438, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-05 12:00:25,163:INFO:Random search completed
2020-11-05 12:00:25,164:INFO:SubProcess create_model() called ==================================
2020-11-05 12:00:25,166:INFO:Initializing create_model()
2020-11-05 12:00:25,166:INFO:create_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcbb97f880>, kwargs={'n_estimators': 182, 'max_depth': 10, 'min_samples_split': 5, 'min_samples_leaf': 3, 'max_features': 0.8567176629882483, 'min_impurity_decrease': 4.021226157948392e-08, 'criterion': 'gini', 'bootstrap': False, 'class_weight': 'balanced'})
2020-11-05 12:00:25,166:INFO:Checking exceptions
2020-11-05 12:00:25,167:INFO:Importing libraries
2020-11-05 12:00:25,167:INFO:Copying training dataset
2020-11-05 12:00:25,170:INFO:Defining folds
2020-11-05 12:00:25,170:INFO:Declaring metric variables
2020-11-05 12:00:25,198:INFO:Importing untrained model
2020-11-05 12:00:25,198:INFO:Declaring custom model
2020-11-05 12:00:25,212:INFO:Extra Trees Classifier Imported succesfully
2020-11-05 12:00:25,237:INFO:Starting cross validation
2020-11-05 12:00:25,238:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 12:00:27,213:INFO:Calculating mean and std
2020-11-05 12:00:27,219:INFO:Creating metrics dataframe
2020-11-05 12:00:27,254:INFO:Finalizing model
2020-11-05 12:00:27,807:INFO:Uploading results into container
2020-11-05 12:00:27,808:INFO:Uploading model into container now
2020-11-05 12:00:27,808:INFO:create_model_container: 21
2020-11-05 12:00:27,808:INFO:master_model_container: 21
2020-11-05 12:00:27,808:INFO:display_container: 7
2020-11-05 12:00:27,809:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=10,
                     max_features=0.8567176629882483, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=4.021226157948392e-08,
                     min_impurity_split=None, min_samples_leaf=3,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=182, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False)
2020-11-05 12:00:27,809:INFO:create_model() succesfully completed......................................
2020-11-05 12:00:28,384:INFO:SubProcess create_model() end ==================================
2020-11-05 12:00:28,468:INFO:create_model_container: 21
2020-11-05 12:00:28,469:INFO:master_model_container: 21
2020-11-05 12:00:28,469:INFO:display_container: 7
2020-11-05 12:00:28,469:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=10,
                     max_features=0.8567176629882483, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=4.021226157948392e-08,
                     min_impurity_split=None, min_samples_leaf=3,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=182, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False)
2020-11-05 12:00:28,469:INFO:tune_model() succesfully completed......................................
2020-11-05 12:00:55,159:INFO:Initializing blend_models()
2020-11-05 12:00:55,161:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=9,
                       max_features=0.613577192105375, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.575964127958858e-08,
                       min_impurity_split=None, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       n_estimators=220, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), LGBMClassifier(bagging_fraction=0.7722583866569243, bagging_freq=1,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8958022838235111, importance_type='split',
               learning_rate=0.0002709764642652583, max_depth=-1,
               min_child_samples=41, min_child_weight=0.001,
               min_data_in_leaf=7467, min_split_gain=0.6525324861702502,
               n_estimators=19, n_jobs=-1, num_leaves=129, objective=None,
               random_state=786, reg_alpha=0.11152031260827712,
               reg_lambda=4.867361133400105e-07, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7fbc9ccd0a60>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.3456506832898298, loss='deviance',
                           max_depth=8, max_features=0.9299781294999129,
                           max_leaf_nodes=None,
                           min_impurity_decrease=8.313868061053237e-09,
                           min_impurity_split=None, min_samples_leaf=5,
                           min_samples_split=6, min_weight_fraction_leaf=0.0,
                           n_estimators=163, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.3393460610853086, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=10,
                     max_features=0.8567176629882483, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=4.021226157948392e-08,
                     min_impurity_split=None, min_samples_leaf=3,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=182, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False)], fold=5, round=4, choose_better=True, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-05 12:00:55,162:INFO:Checking exceptions
2020-11-05 12:00:55,174:INFO:Preparing display monitor
2020-11-05 12:00:55,233:INFO:Importing libraries
2020-11-05 12:00:55,234:INFO:Copying training dataset
2020-11-05 12:00:55,246:INFO:Getting model names
2020-11-05 12:00:55,259:INFO:SubProcess create_model() called ==================================
2020-11-05 12:00:55,277:INFO:Initializing create_model()
2020-11-05 12:00:55,277:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.78657704667713,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.46581442104487425,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=1,
                                                   missing=nan,
                                                   monotone_constraints='...
                                                          min_impurity_decrease=4.021226157948392e-08,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=3,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=182,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fbcb12eca00>, kwargs={})
2020-11-05 12:00:55,277:INFO:Checking exceptions
2020-11-05 12:00:55,277:INFO:Importing libraries
2020-11-05 12:00:55,277:INFO:Copying training dataset
2020-11-05 12:00:55,278:INFO:Defining folds
2020-11-05 12:00:55,278:INFO:Declaring metric variables
2020-11-05 12:00:55,287:INFO:Importing untrained model
2020-11-05 12:00:55,287:INFO:Declaring custom model
2020-11-05 12:00:55,302:INFO:Voting Classifier Imported succesfully
2020-11-05 12:00:55,318:INFO:Starting cross validation
2020-11-05 12:00:55,319:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 12:01:05,522:INFO:Calculating mean and std
2020-11-05 12:01:05,528:INFO:Creating metrics dataframe
2020-11-05 12:01:05,560:INFO:Finalizing model
2020-11-05 12:01:08,040:INFO:Uploading results into container
2020-11-05 12:01:08,041:INFO:Uploading model into container now
2020-11-05 12:01:08,041:INFO:create_model_container: 22
2020-11-05 12:01:08,041:INFO:master_model_container: 22
2020-11-05 12:01:08,041:INFO:display_container: 8
2020-11-05 12:01:08,058:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.78657704667713,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.46581442104487425,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=1,
                                                   missing=nan,
                                                   monotone_constraints='...
                                                          min_impurity_decrease=4.021226157948392e-08,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=3,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=182,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1])
2020-11-05 12:01:08,058:INFO:create_model() succesfully completed......................................
2020-11-05 12:01:08,440:INFO:SubProcess create_model() end ==================================
2020-11-05 12:01:08,441:INFO:choose_better activated
2020-11-05 12:01:08,464:INFO:Base model TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.78657704667713,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.46581442104487425,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=1,
                                                   missing=nan,
                                                   monotone_constraints='...
                                                          min_impurity_decrease=4.021226157948392e-08,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=3,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=182,
                                                          n_jobs=-1,
                                                          oob_score=False,
                                                          random_state=786,
                                                          verbose=0,
                                                          warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weight_2=1,
                        weight_3=1, weight_4=1, weight_5=1,
                        weights=[1, 1, 1, 1, 1, 1]) result for Accuracy is 0.7779
2020-11-05 12:01:08,464:INFO:SubProcess create_model() called ==================================
2020-11-05 12:01:08,467:INFO:Initializing create_model()
2020-11-05 12:01:08,467:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 12:01:08,467:INFO:Checking exceptions
2020-11-05 12:01:08,467:INFO:Importing libraries
2020-11-05 12:01:08,467:INFO:Copying training dataset
2020-11-05 12:01:08,468:INFO:Defining folds
2020-11-05 12:01:08,468:INFO:Declaring metric variables
2020-11-05 12:01:08,468:INFO:Importing untrained model
2020-11-05 12:01:08,468:INFO:Declaring custom model
2020-11-05 12:01:08,469:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-05 12:01:08,469:INFO:Starting cross validation
2020-11-05 12:01:08,470:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 12:01:10,092:INFO:Calculating mean and std
2020-11-05 12:01:10,093:INFO:Creating metrics dataframe
2020-11-05 12:01:10,096:INFO:Finalizing model
2020-11-05 12:01:10,160:INFO:Uploading results into container
2020-11-05 12:01:10,160:INFO:Uploading model into container now
2020-11-05 12:01:10,160:INFO:create_model_container: 23
2020-11-05 12:01:10,160:INFO:master_model_container: 23
2020-11-05 12:01:10,160:INFO:display_container: 9
2020-11-05 12:01:10,162:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-05 12:01:10,162:INFO:create_model() succesfully completed......................................
2020-11-05 12:01:10,249:INFO:SubProcess create_model() end ==================================
2020-11-05 12:01:10,251:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0) result for Accuracy is 0.7857
2020-11-05 12:01:10,251:INFO:SubProcess create_model() called ==================================
2020-11-05 12:01:10,252:INFO:Initializing create_model()
2020-11-05 12:01:10,252:INFO:create_model(estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=9,
                       max_features=0.613577192105375, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.575964127958858e-08,
                       min_impurity_split=None, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       n_estimators=220, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 12:01:10,252:INFO:Checking exceptions
2020-11-05 12:01:10,252:INFO:Importing libraries
2020-11-05 12:01:10,252:INFO:Copying training dataset
2020-11-05 12:01:10,253:INFO:Defining folds
2020-11-05 12:01:10,253:INFO:Declaring metric variables
2020-11-05 12:01:10,253:INFO:Importing untrained model
2020-11-05 12:01:10,253:INFO:Declaring custom model
2020-11-05 12:01:10,253:INFO:Random Forest Classifier Imported succesfully
2020-11-05 12:01:10,254:INFO:Starting cross validation
2020-11-05 12:01:10,254:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 12:01:11,590:INFO:Calculating mean and std
2020-11-05 12:01:11,591:INFO:Creating metrics dataframe
2020-11-05 12:01:11,594:INFO:Finalizing model
2020-11-05 12:01:11,900:INFO:Uploading results into container
2020-11-05 12:01:11,900:INFO:Uploading model into container now
2020-11-05 12:01:11,900:INFO:create_model_container: 24
2020-11-05 12:01:11,900:INFO:master_model_container: 24
2020-11-05 12:01:11,900:INFO:display_container: 9
2020-11-05 12:01:11,900:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=9,
                       max_features=0.613577192105375, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.575964127958858e-08,
                       min_impurity_split=None, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       n_estimators=220, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-11-05 12:01:11,900:INFO:create_model() succesfully completed......................................
2020-11-05 12:01:11,989:INFO:SubProcess create_model() end ==================================
2020-11-05 12:01:11,990:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=9,
                       max_features=0.613577192105375, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.575964127958858e-08,
                       min_impurity_split=None, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       n_estimators=220, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False) result for Accuracy is 0.7554
2020-11-05 12:01:11,990:INFO:SubProcess create_model() called ==================================
2020-11-05 12:01:11,990:INFO:Initializing create_model()
2020-11-05 12:01:11,991:INFO:create_model(estimator=LGBMClassifier(bagging_fraction=0.7722583866569243, bagging_freq=1,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8958022838235111, importance_type='split',
               learning_rate=0.0002709764642652583, max_depth=-1,
               min_child_samples=41, min_child_weight=0.001,
               min_data_in_leaf=7467, min_split_gain=0.6525324861702502,
               n_estimators=19, n_jobs=-1, num_leaves=129, objective=None,
               random_state=786, reg_alpha=0.11152031260827712,
               reg_lambda=4.867361133400105e-07, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 12:01:11,991:INFO:Checking exceptions
2020-11-05 12:01:11,991:INFO:Importing libraries
2020-11-05 12:01:11,991:INFO:Copying training dataset
2020-11-05 12:01:11,991:INFO:Defining folds
2020-11-05 12:01:11,991:INFO:Declaring metric variables
2020-11-05 12:01:11,991:INFO:Importing untrained model
2020-11-05 12:01:11,991:INFO:Declaring custom model
2020-11-05 12:01:11,992:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-05 12:01:11,992:INFO:Starting cross validation
2020-11-05 12:01:11,992:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 12:01:12,289:INFO:Calculating mean and std
2020-11-05 12:01:12,289:INFO:Creating metrics dataframe
2020-11-05 12:01:12,292:INFO:Finalizing model
2020-11-05 12:01:12,300:INFO:Uploading results into container
2020-11-05 12:01:12,301:INFO:Uploading model into container now
2020-11-05 12:01:12,301:INFO:create_model_container: 25
2020-11-05 12:01:12,301:INFO:master_model_container: 25
2020-11-05 12:01:12,301:INFO:display_container: 9
2020-11-05 12:01:12,301:INFO:LGBMClassifier(bagging_fraction=0.7722583866569243, bagging_freq=1,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8958022838235111, importance_type='split',
               learning_rate=0.0002709764642652583, max_depth=-1,
               min_child_samples=41, min_child_weight=0.001,
               min_data_in_leaf=7467, min_split_gain=0.6525324861702502,
               n_estimators=19, n_jobs=-1, num_leaves=129, objective=None,
               random_state=786, reg_alpha=0.11152031260827712,
               reg_lambda=4.867361133400105e-07, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-11-05 12:01:12,301:INFO:create_model() succesfully completed......................................
2020-11-05 12:01:12,423:INFO:SubProcess create_model() end ==================================
2020-11-05 12:01:12,424:INFO:LGBMClassifier(bagging_fraction=0.7722583866569243, bagging_freq=1,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.8958022838235111, importance_type='split',
               learning_rate=0.0002709764642652583, max_depth=-1,
               min_child_samples=41, min_child_weight=0.001,
               min_data_in_leaf=7467, min_split_gain=0.6525324861702502,
               n_estimators=19, n_jobs=-1, num_leaves=129, objective=None,
               random_state=786, reg_alpha=0.11152031260827712,
               reg_lambda=4.867361133400105e-07, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.4737
2020-11-05 12:01:12,425:INFO:SubProcess create_model() called ==================================
2020-11-05 12:01:12,425:INFO:Initializing create_model()
2020-11-05 12:01:12,425:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7fbc9ccd0a60>, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 12:01:12,425:INFO:Checking exceptions
2020-11-05 12:01:12,425:INFO:Importing libraries
2020-11-05 12:01:12,425:INFO:Copying training dataset
2020-11-05 12:01:12,426:INFO:Defining folds
2020-11-05 12:01:12,426:INFO:Declaring metric variables
2020-11-05 12:01:12,426:INFO:Importing untrained model
2020-11-05 12:01:12,426:INFO:Declaring custom model
2020-11-05 12:01:12,426:INFO:CatBoost Classifier Imported succesfully
2020-11-05 12:01:12,426:INFO:Starting cross validation
2020-11-05 12:01:12,427:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 12:01:15,526:INFO:Calculating mean and std
2020-11-05 12:01:15,527:INFO:Creating metrics dataframe
2020-11-05 12:01:15,530:INFO:Finalizing model
2020-11-05 12:01:16,559:INFO:Uploading results into container
2020-11-05 12:01:16,559:INFO:Uploading model into container now
2020-11-05 12:01:16,560:INFO:create_model_container: 26
2020-11-05 12:01:16,560:INFO:master_model_container: 26
2020-11-05 12:01:16,560:INFO:display_container: 9
2020-11-05 12:01:16,560:INFO:<catboost.core.CatBoostClassifier object at 0x7fbcb6d20460>
2020-11-05 12:01:16,560:INFO:create_model() succesfully completed......................................
2020-11-05 12:01:16,667:INFO:SubProcess create_model() end ==================================
2020-11-05 12:01:16,668:INFO:<catboost.core.CatBoostClassifier object at 0x7fbc9ccd0a60> result for Accuracy is 0.767
2020-11-05 12:01:16,668:INFO:SubProcess create_model() called ==================================
2020-11-05 12:01:16,670:INFO:Initializing create_model()
2020-11-05 12:01:16,670:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.3456506832898298, loss='deviance',
                           max_depth=8, max_features=0.9299781294999129,
                           max_leaf_nodes=None,
                           min_impurity_decrease=8.313868061053237e-09,
                           min_impurity_split=None, min_samples_leaf=5,
                           min_samples_split=6, min_weight_fraction_leaf=0.0,
                           n_estimators=163, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.3393460610853086, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 12:01:16,670:INFO:Checking exceptions
2020-11-05 12:01:16,670:INFO:Importing libraries
2020-11-05 12:01:16,670:INFO:Copying training dataset
2020-11-05 12:01:16,671:INFO:Defining folds
2020-11-05 12:01:16,671:INFO:Declaring metric variables
2020-11-05 12:01:16,671:INFO:Importing untrained model
2020-11-05 12:01:16,671:INFO:Declaring custom model
2020-11-05 12:01:16,672:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-05 12:01:16,672:INFO:Starting cross validation
2020-11-05 12:01:16,673:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 12:01:16,928:INFO:Calculating mean and std
2020-11-05 12:01:16,929:INFO:Creating metrics dataframe
2020-11-05 12:01:16,932:INFO:Finalizing model
2020-11-05 12:01:17,098:INFO:Uploading results into container
2020-11-05 12:01:17,098:INFO:Uploading model into container now
2020-11-05 12:01:17,098:INFO:create_model_container: 27
2020-11-05 12:01:17,098:INFO:master_model_container: 27
2020-11-05 12:01:17,098:INFO:display_container: 9
2020-11-05 12:01:17,098:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.3456506832898298, loss='deviance',
                           max_depth=8, max_features=0.9299781294999129,
                           max_leaf_nodes=None,
                           min_impurity_decrease=8.313868061053237e-09,
                           min_impurity_split=None, min_samples_leaf=5,
                           min_samples_split=6, min_weight_fraction_leaf=0.0,
                           n_estimators=163, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.3393460610853086, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-05 12:01:17,098:INFO:create_model() succesfully completed......................................
2020-11-05 12:01:17,189:INFO:SubProcess create_model() end ==================================
2020-11-05 12:01:17,190:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.3456506832898298, loss='deviance',
                           max_depth=8, max_features=0.9299781294999129,
                           max_leaf_nodes=None,
                           min_impurity_decrease=8.313868061053237e-09,
                           min_impurity_split=None, min_samples_leaf=5,
                           min_samples_split=6, min_weight_fraction_leaf=0.0,
                           n_estimators=163, n_iter_no_change=None,
                           presort='deprecated', random_state=786,
                           subsample=0.3393460610853086, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.759
2020-11-05 12:01:17,191:INFO:SubProcess create_model() called ==================================
2020-11-05 12:01:17,191:INFO:Initializing create_model()
2020-11-05 12:01:17,191:INFO:create_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=10,
                     max_features=0.8567176629882483, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=4.021226157948392e-08,
                     min_impurity_split=None, min_samples_leaf=3,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=182, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 12:01:17,191:INFO:Checking exceptions
2020-11-05 12:01:17,191:INFO:Importing libraries
2020-11-05 12:01:17,191:INFO:Copying training dataset
2020-11-05 12:01:17,192:INFO:Defining folds
2020-11-05 12:01:17,192:INFO:Declaring metric variables
2020-11-05 12:01:17,192:INFO:Importing untrained model
2020-11-05 12:01:17,192:INFO:Declaring custom model
2020-11-05 12:01:17,193:INFO:Extra Trees Classifier Imported succesfully
2020-11-05 12:01:17,193:INFO:Starting cross validation
2020-11-05 12:01:17,193:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 12:01:17,740:INFO:Calculating mean and std
2020-11-05 12:01:17,741:INFO:Creating metrics dataframe
2020-11-05 12:01:17,744:INFO:Finalizing model
2020-11-05 12:01:18,016:INFO:Uploading results into container
2020-11-05 12:01:18,016:INFO:Uploading model into container now
2020-11-05 12:01:18,016:INFO:create_model_container: 28
2020-11-05 12:01:18,016:INFO:master_model_container: 28
2020-11-05 12:01:18,016:INFO:display_container: 9
2020-11-05 12:01:18,016:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=10,
                     max_features=0.8567176629882483, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=4.021226157948392e-08,
                     min_impurity_split=None, min_samples_leaf=3,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=182, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False)
2020-11-05 12:01:18,016:INFO:create_model() succesfully completed......................................
2020-11-05 12:01:18,118:INFO:SubProcess create_model() end ==================================
2020-11-05 12:01:18,119:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=10,
                     max_features=0.8567176629882483, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=4.021226157948392e-08,
                     min_impurity_split=None, min_samples_leaf=3,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=182, n_jobs=-1, oob_score=False,
                     random_state=786, verbose=0, warm_start=False) result for Accuracy is 0.748
2020-11-05 12:01:18,121:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0) is best model
2020-11-05 12:01:18,121:INFO:choose_better completed
2020-11-05 12:01:18,144:INFO:create_model_container: 28
2020-11-05 12:01:18,145:INFO:master_model_container: 28
2020-11-05 12:01:18,145:INFO:display_container: 8
2020-11-05 12:01:18,147:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-05 12:01:18,148:INFO:blend_models() succesfully completed......................................
2020-11-05 12:01:35,840:INFO:Initializing optimize_threshold()
2020-11-05 12:01:35,842:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=50, true_negative=50, false_positive=-100, false_negative=0)
2020-11-05 12:01:35,843:INFO:Importing libraries
2020-11-05 12:01:35,844:INFO:Checking exceptions
2020-11-05 12:01:35,890:INFO:Defining loss function
2020-11-05 12:01:35,890:INFO:Iteration starts at 0
2020-11-05 12:01:37,096:INFO:Figure ready for render
2020-11-05 12:01:37,415:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:01:55,756:INFO:Initializing optimize_threshold()
2020-11-05 12:01:55,759:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=50, true_negative=50, false_positive=-100, false_negative=50)
2020-11-05 12:01:55,760:INFO:Importing libraries
2020-11-05 12:01:55,760:INFO:Checking exceptions
2020-11-05 12:01:55,847:INFO:Defining loss function
2020-11-05 12:01:55,847:INFO:Iteration starts at 0
2020-11-05 12:01:56,003:INFO:Figure ready for render
2020-11-05 12:01:56,010:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:04:29,971:INFO:Initializing optimize_threshold()
2020-11-05 12:04:29,973:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=50, true_negative=50, false_positive=-100, false_negative=50)
2020-11-05 12:04:29,974:INFO:Importing libraries
2020-11-05 12:04:29,978:INFO:Checking exceptions
2020-11-05 12:04:30,054:INFO:Defining loss function
2020-11-05 12:04:30,054:INFO:Iteration starts at 0
2020-11-05 12:04:30,153:INFO:Figure ready for render
2020-11-05 12:04:30,162:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:04:55,698:INFO:Initializing optimize_threshold()
2020-11-05 12:04:55,700:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=50, true_negative=50, false_positive=-100, false_negative=500)
2020-11-05 12:04:55,700:INFO:Importing libraries
2020-11-05 12:04:55,700:INFO:Checking exceptions
2020-11-05 12:04:55,717:INFO:Defining loss function
2020-11-05 12:04:55,718:INFO:Iteration starts at 0
2020-11-05 12:04:55,796:INFO:Figure ready for render
2020-11-05 12:04:55,804:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:05:17,258:INFO:Initializing optimize_threshold()
2020-11-05 12:05:17,260:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=50, true_negative=0, false_positive=-100, false_negative=500)
2020-11-05 12:05:17,260:INFO:Importing libraries
2020-11-05 12:05:17,261:INFO:Checking exceptions
2020-11-05 12:05:17,279:INFO:Defining loss function
2020-11-05 12:05:17,279:INFO:Iteration starts at 0
2020-11-05 12:05:17,384:INFO:Figure ready for render
2020-11-05 12:05:17,390:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:05:43,857:INFO:Initializing predict_model()
2020-11-05 12:05:43,858:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.99, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:05:43,859:INFO:Checking exceptions
2020-11-05 12:05:43,859:INFO:Preloading libraries
2020-11-05 12:05:43,865:INFO:Preparing display monitor
2020-11-05 12:07:36,446:INFO:Initializing plot_model()
2020-11-05 12:07:36,450:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:07:36,451:INFO:Checking exceptions
2020-11-05 12:07:36,460:INFO:Initializing plot_model()
2020-11-05 12:07:36,460:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:07:36,460:INFO:Checking exceptions
2020-11-05 12:07:36,510:INFO:Preloading libraries
2020-11-05 12:07:36,521:INFO:Copying training dataset
2020-11-05 12:07:36,526:INFO:Copying test dataset
2020-11-05 12:07:36,527:INFO:Plot type: error
2020-11-05 12:07:36,980:INFO:Fitting Model
2020-11-05 12:07:36,983:INFO:Scoring test/hold-out set
2020-11-05 12:07:37,005:INFO:Saving 'Prediction Error.png' in current active directory
2020-11-05 12:07:37,254:INFO:Visual Rendered Successfully
2020-11-05 12:07:37,704:INFO:plot_model() succesfully completed......................................
2020-11-05 12:07:37,707:INFO:Initializing plot_model()
2020-11-05 12:07:37,707:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:07:37,708:INFO:Checking exceptions
2020-11-05 12:07:37,710:INFO:Initializing plot_model()
2020-11-05 12:07:37,711:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:07:37,711:INFO:Checking exceptions
2020-11-05 12:07:37,722:INFO:Preloading libraries
2020-11-05 12:07:37,726:INFO:Copying training dataset
2020-11-05 12:07:37,727:INFO:Copying test dataset
2020-11-05 12:07:37,727:INFO:Plot type: auc
2020-11-05 12:07:37,739:INFO:Fitting Model
2020-11-05 12:07:37,739:INFO:Scoring test/hold-out set
2020-11-05 12:07:37,749:INFO:Saving 'AUC.png' in current active directory
2020-11-05 12:07:37,908:INFO:Visual Rendered Successfully
2020-11-05 12:07:38,037:INFO:plot_model() succesfully completed......................................
2020-11-05 12:07:38,043:INFO:Initializing plot_model()
2020-11-05 12:07:38,043:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:07:38,044:INFO:Checking exceptions
2020-11-05 12:07:38,063:INFO:Preloading libraries
2020-11-05 12:07:38,069:INFO:Copying training dataset
2020-11-05 12:07:38,069:INFO:Copying test dataset
2020-11-05 12:07:38,069:INFO:Plot type: threshold
2020-11-05 12:07:38,084:INFO:Fitting Model
2020-11-05 12:07:46,662:INFO:Scoring test/hold-out set
2020-11-05 12:07:46,669:INFO:Saving 'Threshold.png' in current active directory
2020-11-05 12:07:47,449:INFO:Visual Rendered Successfully
2020-11-05 12:07:48,086:INFO:plot_model() succesfully completed......................................
2020-11-05 12:07:48,094:INFO:Initializing plot_model()
2020-11-05 12:07:48,094:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:07:48,094:INFO:Checking exceptions
2020-11-05 12:07:48,129:INFO:Preloading libraries
2020-11-05 12:07:48,134:INFO:Copying training dataset
2020-11-05 12:07:48,135:INFO:Copying test dataset
2020-11-05 12:07:48,135:INFO:Plot type: pr
2020-11-05 12:07:48,162:INFO:Fitting Model
2020-11-05 12:07:48,163:INFO:Scoring test/hold-out set
2020-11-05 12:07:48,172:INFO:Saving 'Precision Recall.png' in current active directory
2020-11-05 12:07:48,398:INFO:Visual Rendered Successfully
2020-11-05 12:07:48,557:INFO:plot_model() succesfully completed......................................
2020-11-05 12:07:48,561:INFO:Initializing plot_model()
2020-11-05 12:07:48,561:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:07:48,561:INFO:Checking exceptions
2020-11-05 12:07:48,583:INFO:Preloading libraries
2020-11-05 12:07:48,586:INFO:Copying training dataset
2020-11-05 12:07:48,587:INFO:Copying test dataset
2020-11-05 12:07:48,587:INFO:Plot type: confusion_matrix
2020-11-05 12:07:48,615:INFO:Fitting Model
2020-11-05 12:07:48,616:INFO:Scoring test/hold-out set
2020-11-05 12:07:48,628:INFO:Saving 'Confusion Matrix.png' in current active directory
2020-11-05 12:07:49,017:INFO:Visual Rendered Successfully
2020-11-05 12:07:49,322:INFO:plot_model() succesfully completed......................................
2020-11-05 12:07:49,329:INFO:Initializing plot_model()
2020-11-05 12:07:49,330:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:07:49,330:INFO:Checking exceptions
2020-11-05 12:07:49,354:INFO:Preloading libraries
2020-11-05 12:07:49,359:INFO:Copying training dataset
2020-11-05 12:07:49,360:INFO:Copying test dataset
2020-11-05 12:07:49,361:INFO:Plot type: class_report
2020-11-05 12:07:49,391:INFO:Fitting Model
2020-11-05 12:07:49,392:INFO:Scoring test/hold-out set
2020-11-05 12:07:49,442:INFO:Saving 'Class Report.png' in current active directory
2020-11-05 12:07:49,965:INFO:Visual Rendered Successfully
2020-11-05 12:07:50,149:INFO:plot_model() succesfully completed......................................
2020-11-05 12:07:50,153:INFO:Initializing plot_model()
2020-11-05 12:07:50,153:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:07:50,153:INFO:Checking exceptions
2020-11-05 12:07:50,177:INFO:Preloading libraries
2020-11-05 12:07:50,179:INFO:Copying training dataset
2020-11-05 12:07:50,180:INFO:Copying test dataset
2020-11-05 12:07:50,180:INFO:Plot type: boundary
2020-11-05 12:07:50,276:INFO:Fitting StandardScaler()
2020-11-05 12:07:50,285:INFO:Initializing plot_model()
2020-11-05 12:07:50,285:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:07:50,286:INFO:Checking exceptions
2020-11-05 12:07:50,329:INFO:Preloading libraries
2020-11-05 12:07:50,333:INFO:Copying training dataset
2020-11-05 12:07:50,333:INFO:Copying test dataset
2020-11-05 12:07:50,334:INFO:Plot type: rfe
2020-11-05 12:07:50,365:INFO:Fitting Model
2020-11-05 12:08:04,676:INFO:Initializing plot_model()
2020-11-05 12:08:04,681:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:04,681:INFO:Checking exceptions
2020-11-05 12:08:04,712:INFO:Preloading libraries
2020-11-05 12:08:04,713:INFO:Copying training dataset
2020-11-05 12:08:04,715:INFO:Copying test dataset
2020-11-05 12:08:04,716:INFO:Plot type: learning
2020-11-05 12:08:04,724:INFO:Fitting Model
2020-11-05 12:08:07,737:INFO:Initializing plot_model()
2020-11-05 12:08:07,737:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:07,737:INFO:Checking exceptions
2020-11-05 12:08:07,752:INFO:Preloading libraries
2020-11-05 12:08:07,755:INFO:Copying training dataset
2020-11-05 12:08:07,756:INFO:Copying test dataset
2020-11-05 12:08:07,756:INFO:Plot type: manifold
2020-11-05 12:08:07,765:INFO:Fitting & Transforming Model
2020-11-05 12:08:07,770:INFO:Initializing plot_model()
2020-11-05 12:08:07,770:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:07,770:INFO:Checking exceptions
2020-11-05 12:08:07,784:INFO:Preloading libraries
2020-11-05 12:08:07,786:INFO:Copying training dataset
2020-11-05 12:08:07,788:INFO:Copying test dataset
2020-11-05 12:08:07,788:INFO:Plot type: calibration
2020-11-05 12:08:07,815:INFO:Scoring test/hold-out set
2020-11-05 12:08:07,910:INFO:Saving 'Calibration Curve.png' in current active directory
2020-11-05 12:08:08,142:INFO:Visual Rendered Successfully
2020-11-05 12:08:08,597:INFO:plot_model() succesfully completed......................................
2020-11-05 12:08:08,600:INFO:Initializing plot_model()
2020-11-05 12:08:08,600:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:08,600:INFO:Checking exceptions
2020-11-05 12:08:08,617:INFO:Preloading libraries
2020-11-05 12:08:08,619:INFO:Copying training dataset
2020-11-05 12:08:08,620:INFO:Copying test dataset
2020-11-05 12:08:08,621:INFO:Plot type: vc
2020-11-05 12:08:08,623:INFO:Determining param_name
2020-11-05 12:08:08,625:INFO:param_name: actual_estimator__max_depth
2020-11-05 12:08:08,642:INFO:Fitting Model
2020-11-05 12:08:08,996:INFO:Initializing plot_model()
2020-11-05 12:08:08,997:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:08,997:INFO:Checking exceptions
2020-11-05 12:08:09,017:INFO:Preloading libraries
2020-11-05 12:08:09,024:INFO:Copying training dataset
2020-11-05 12:08:09,026:INFO:Copying test dataset
2020-11-05 12:08:09,026:INFO:Plot type: dimension
2020-11-05 12:08:09,033:INFO:Fitting StandardScaler()
2020-11-05 12:08:09,039:INFO:Initializing plot_model()
2020-11-05 12:08:09,039:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:09,039:INFO:Checking exceptions
2020-11-05 12:08:09,060:INFO:Preloading libraries
2020-11-05 12:08:09,062:INFO:Copying training dataset
2020-11-05 12:08:09,063:INFO:Copying test dataset
2020-11-05 12:08:09,074:INFO:Plot type: feature
2020-11-05 12:08:09,078:WARNING:No coef_ found. Trying feature_importances_
2020-11-05 12:08:09,140:INFO:Saving 'Feature Importance.png' in current active directory
2020-11-05 12:08:09,432:INFO:Visual Rendered Successfully
2020-11-05 12:08:09,688:INFO:plot_model() succesfully completed......................................
2020-11-05 12:08:09,692:INFO:Initializing plot_model()
2020-11-05 12:08:09,692:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:09,692:INFO:Checking exceptions
2020-11-05 12:08:09,708:INFO:Preloading libraries
2020-11-05 12:08:09,711:INFO:Copying training dataset
2020-11-05 12:08:09,711:INFO:Copying test dataset
2020-11-05 12:08:09,712:INFO:Plot type: feature_all
2020-11-05 12:08:09,715:WARNING:No coef_ found. Trying feature_importances_
2020-11-05 12:08:09,738:INFO:Initializing plot_model()
2020-11-05 12:08:09,738:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:09,738:INFO:Checking exceptions
2020-11-05 12:08:09,755:INFO:Preloading libraries
2020-11-05 12:08:09,757:INFO:Copying training dataset
2020-11-05 12:08:09,758:INFO:Copying test dataset
2020-11-05 12:08:09,760:INFO:Plot type: parameter
2020-11-05 12:08:09,767:INFO:Visual Rendered Successfully
2020-11-05 12:08:09,961:INFO:plot_model() succesfully completed......................................
2020-11-05 12:08:09,967:INFO:Initializing plot_model()
2020-11-05 12:08:09,967:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:09,967:INFO:Checking exceptions
2020-11-05 12:08:10,147:INFO:Preloading libraries
2020-11-05 12:08:10,149:INFO:Copying training dataset
2020-11-05 12:08:10,150:INFO:Copying test dataset
2020-11-05 12:08:10,150:INFO:Plot type: lift
2020-11-05 12:08:10,165:INFO:Generating predictions / predict_proba on X_test
2020-11-05 12:08:10,357:INFO:Saving 'Lift Chart.png' in current active directory
2020-11-05 12:08:10,687:INFO:Visual Rendered Successfully
2020-11-05 12:08:10,935:INFO:plot_model() succesfully completed......................................
2020-11-05 12:08:10,939:INFO:Initializing plot_model()
2020-11-05 12:08:10,940:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:10,940:INFO:Checking exceptions
2020-11-05 12:08:10,966:INFO:Preloading libraries
2020-11-05 12:08:10,976:INFO:Copying training dataset
2020-11-05 12:08:10,977:INFO:Copying test dataset
2020-11-05 12:08:10,977:INFO:Plot type: gain
2020-11-05 12:08:10,979:INFO:Generating predictions / predict_proba on X_test
2020-11-05 12:08:11,041:INFO:Saving 'Gain Chart.png' in current active directory
2020-11-05 12:08:11,428:INFO:Visual Rendered Successfully
2020-11-05 12:08:11,585:INFO:plot_model() succesfully completed......................................
2020-11-05 12:08:11,592:INFO:Initializing plot_model()
2020-11-05 12:08:11,592:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:08:11,593:INFO:Checking exceptions
2020-11-05 12:08:52,023:INFO:Initializing predict_model()
2020-11-05 12:08:52,027:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:08:52,027:INFO:Checking exceptions
2020-11-05 12:08:52,027:INFO:Preloading libraries
2020-11-05 12:08:52,029:INFO:Preparing display monitor
2020-11-05 12:08:56,927:INFO:Initializing predict_model()
2020-11-05 12:08:56,927:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.7, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:08:56,927:INFO:Checking exceptions
2020-11-05 12:08:56,927:INFO:Preloading libraries
2020-11-05 12:08:56,927:INFO:Preparing display monitor
2020-11-05 12:09:00,271:INFO:Initializing predict_model()
2020-11-05 12:09:00,276:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.75, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:00,276:INFO:Checking exceptions
2020-11-05 12:09:00,276:INFO:Preloading libraries
2020-11-05 12:09:00,277:INFO:Preparing display monitor
2020-11-05 12:09:16,954:INFO:Initializing predict_model()
2020-11-05 12:09:16,956:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:16,957:INFO:Checking exceptions
2020-11-05 12:09:16,957:INFO:Preloading libraries
2020-11-05 12:09:16,960:INFO:Preparing display monitor
2020-11-05 12:09:17,491:INFO:Initializing predict_model()
2020-11-05 12:09:17,492:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:17,492:INFO:Checking exceptions
2020-11-05 12:09:17,492:INFO:Preloading libraries
2020-11-05 12:09:17,492:INFO:Preparing display monitor
2020-11-05 12:09:17,675:INFO:Initializing predict_model()
2020-11-05 12:09:17,676:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:17,676:INFO:Checking exceptions
2020-11-05 12:09:17,676:INFO:Preloading libraries
2020-11-05 12:09:17,676:INFO:Preparing display monitor
2020-11-05 12:09:17,849:INFO:Initializing predict_model()
2020-11-05 12:09:17,849:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:17,850:INFO:Checking exceptions
2020-11-05 12:09:17,850:INFO:Preloading libraries
2020-11-05 12:09:17,850:INFO:Preparing display monitor
2020-11-05 12:09:18,027:INFO:Initializing predict_model()
2020-11-05 12:09:18,027:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:18,027:INFO:Checking exceptions
2020-11-05 12:09:18,027:INFO:Preloading libraries
2020-11-05 12:09:18,028:INFO:Preparing display monitor
2020-11-05 12:09:18,189:INFO:Initializing predict_model()
2020-11-05 12:09:18,189:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:18,190:INFO:Checking exceptions
2020-11-05 12:09:18,190:INFO:Preloading libraries
2020-11-05 12:09:18,190:INFO:Preparing display monitor
2020-11-05 12:09:18,344:INFO:Initializing predict_model()
2020-11-05 12:09:18,344:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:18,344:INFO:Checking exceptions
2020-11-05 12:09:18,344:INFO:Preloading libraries
2020-11-05 12:09:18,345:INFO:Preparing display monitor
2020-11-05 12:09:18,502:INFO:Initializing predict_model()
2020-11-05 12:09:18,502:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:18,502:INFO:Checking exceptions
2020-11-05 12:09:18,502:INFO:Preloading libraries
2020-11-05 12:09:18,502:INFO:Preparing display monitor
2020-11-05 12:09:18,655:INFO:Initializing predict_model()
2020-11-05 12:09:18,655:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:18,655:INFO:Checking exceptions
2020-11-05 12:09:18,655:INFO:Preloading libraries
2020-11-05 12:09:18,655:INFO:Preparing display monitor
2020-11-05 12:09:18,843:INFO:Initializing predict_model()
2020-11-05 12:09:18,843:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.71, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:18,843:INFO:Checking exceptions
2020-11-05 12:09:18,843:INFO:Preloading libraries
2020-11-05 12:09:18,843:INFO:Preparing display monitor
2020-11-05 12:09:19,064:INFO:Initializing predict_model()
2020-11-05 12:09:19,065:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:19,065:INFO:Checking exceptions
2020-11-05 12:09:19,065:INFO:Preloading libraries
2020-11-05 12:09:19,065:INFO:Preparing display monitor
2020-11-05 12:09:56,006:INFO:Initializing predict_model()
2020-11-05 12:09:56,007:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:56,007:INFO:Checking exceptions
2020-11-05 12:09:56,007:INFO:Preloading libraries
2020-11-05 12:09:56,007:INFO:Preparing display monitor
2020-11-05 12:09:56,175:INFO:Initializing predict_model()
2020-11-05 12:09:56,176:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:56,176:INFO:Checking exceptions
2020-11-05 12:09:56,176:INFO:Preloading libraries
2020-11-05 12:09:56,176:INFO:Preparing display monitor
2020-11-05 12:09:56,352:INFO:Initializing predict_model()
2020-11-05 12:09:56,352:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:56,352:INFO:Checking exceptions
2020-11-05 12:09:56,352:INFO:Preloading libraries
2020-11-05 12:09:56,352:INFO:Preparing display monitor
2020-11-05 12:09:56,519:INFO:Initializing predict_model()
2020-11-05 12:09:56,519:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:56,519:INFO:Checking exceptions
2020-11-05 12:09:56,519:INFO:Preloading libraries
2020-11-05 12:09:56,519:INFO:Preparing display monitor
2020-11-05 12:09:56,720:INFO:Initializing predict_model()
2020-11-05 12:09:56,720:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:56,721:INFO:Checking exceptions
2020-11-05 12:09:56,721:INFO:Preloading libraries
2020-11-05 12:09:56,721:INFO:Preparing display monitor
2020-11-05 12:09:56,871:INFO:Initializing predict_model()
2020-11-05 12:09:56,871:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:56,871:INFO:Checking exceptions
2020-11-05 12:09:56,871:INFO:Preloading libraries
2020-11-05 12:09:56,871:INFO:Preparing display monitor
2020-11-05 12:09:57,035:INFO:Initializing predict_model()
2020-11-05 12:09:57,035:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:57,036:INFO:Checking exceptions
2020-11-05 12:09:57,036:INFO:Preloading libraries
2020-11-05 12:09:57,036:INFO:Preparing display monitor
2020-11-05 12:09:57,211:INFO:Initializing predict_model()
2020-11-05 12:09:57,211:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:57,211:INFO:Checking exceptions
2020-11-05 12:09:57,211:INFO:Preloading libraries
2020-11-05 12:09:57,211:INFO:Preparing display monitor
2020-11-05 12:09:57,381:INFO:Initializing predict_model()
2020-11-05 12:09:57,381:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:57,381:INFO:Checking exceptions
2020-11-05 12:09:57,382:INFO:Preloading libraries
2020-11-05 12:09:57,382:INFO:Preparing display monitor
2020-11-05 12:09:57,560:INFO:Initializing predict_model()
2020-11-05 12:09:57,560:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.71, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:57,560:INFO:Checking exceptions
2020-11-05 12:09:57,560:INFO:Preloading libraries
2020-11-05 12:09:57,560:INFO:Preparing display monitor
2020-11-05 12:09:57,736:INFO:Initializing predict_model()
2020-11-05 12:09:57,736:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.99, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:09:57,736:INFO:Checking exceptions
2020-11-05 12:09:57,736:INFO:Preloading libraries
2020-11-05 12:09:57,736:INFO:Preparing display monitor
2020-11-05 12:10:06,019:INFO:Initializing predict_model()
2020-11-05 12:10:06,020:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:06,021:INFO:Checking exceptions
2020-11-05 12:10:06,021:INFO:Preloading libraries
2020-11-05 12:10:06,021:INFO:Preparing display monitor
2020-11-05 12:10:06,162:INFO:Initializing predict_model()
2020-11-05 12:10:06,162:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:06,162:INFO:Checking exceptions
2020-11-05 12:10:06,162:INFO:Preloading libraries
2020-11-05 12:10:06,162:INFO:Preparing display monitor
2020-11-05 12:10:06,321:INFO:Initializing predict_model()
2020-11-05 12:10:06,322:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:06,322:INFO:Checking exceptions
2020-11-05 12:10:06,322:INFO:Preloading libraries
2020-11-05 12:10:06,322:INFO:Preparing display monitor
2020-11-05 12:10:06,467:INFO:Initializing predict_model()
2020-11-05 12:10:06,467:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:06,467:INFO:Checking exceptions
2020-11-05 12:10:06,467:INFO:Preloading libraries
2020-11-05 12:10:06,467:INFO:Preparing display monitor
2020-11-05 12:10:06,609:INFO:Initializing predict_model()
2020-11-05 12:10:06,609:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:06,610:INFO:Checking exceptions
2020-11-05 12:10:06,610:INFO:Preloading libraries
2020-11-05 12:10:06,610:INFO:Preparing display monitor
2020-11-05 12:10:06,761:INFO:Initializing predict_model()
2020-11-05 12:10:06,762:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:06,762:INFO:Checking exceptions
2020-11-05 12:10:06,762:INFO:Preloading libraries
2020-11-05 12:10:06,762:INFO:Preparing display monitor
2020-11-05 12:10:06,940:INFO:Initializing predict_model()
2020-11-05 12:10:06,941:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:06,941:INFO:Checking exceptions
2020-11-05 12:10:06,941:INFO:Preloading libraries
2020-11-05 12:10:06,941:INFO:Preparing display monitor
2020-11-05 12:10:07,106:INFO:Initializing predict_model()
2020-11-05 12:10:07,107:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:07,107:INFO:Checking exceptions
2020-11-05 12:10:07,107:INFO:Preloading libraries
2020-11-05 12:10:07,107:INFO:Preparing display monitor
2020-11-05 12:10:07,277:INFO:Initializing predict_model()
2020-11-05 12:10:07,277:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:07,277:INFO:Checking exceptions
2020-11-05 12:10:07,277:INFO:Preloading libraries
2020-11-05 12:10:07,277:INFO:Preparing display monitor
2020-11-05 12:10:07,444:INFO:Initializing predict_model()
2020-11-05 12:10:07,444:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.71, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:07,444:INFO:Checking exceptions
2020-11-05 12:10:07,444:INFO:Preloading libraries
2020-11-05 12:10:07,444:INFO:Preparing display monitor
2020-11-05 12:10:07,612:INFO:Initializing predict_model()
2020-11-05 12:10:07,612:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:10:07,613:INFO:Checking exceptions
2020-11-05 12:10:07,613:INFO:Preloading libraries
2020-11-05 12:10:07,613:INFO:Preparing display monitor
2020-11-05 12:10:53,756:INFO:Initializing plot_model()
2020-11-05 12:10:53,767:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-11-05 12:10:53,767:INFO:Checking exceptions
2020-11-05 12:11:08,614:INFO:Initializing plot_model()
2020-11-05 12:11:08,616:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-11-05 12:11:08,616:INFO:Checking exceptions
2020-11-05 12:13:07,039:INFO:Initializing optimize_threshold()
2020-11-05 12:13:07,041:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=50, true_negative=0, false_positive=500, false_negative=-100)
2020-11-05 12:13:07,043:INFO:Importing libraries
2020-11-05 12:13:07,047:INFO:Checking exceptions
2020-11-05 12:13:07,146:INFO:Defining loss function
2020-11-05 12:13:07,147:INFO:Iteration starts at 0
2020-11-05 12:13:07,375:INFO:Figure ready for render
2020-11-05 12:13:07,390:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:13:31,660:INFO:Initializing predict_model()
2020-11-05 12:13:31,661:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:13:31,661:INFO:Checking exceptions
2020-11-05 12:13:31,661:INFO:Preloading libraries
2020-11-05 12:13:31,665:INFO:Preparing display monitor
2020-11-05 12:13:35,782:INFO:Initializing predict_model()
2020-11-05 12:13:35,782:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.1, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:13:35,782:INFO:Checking exceptions
2020-11-05 12:13:35,782:INFO:Preloading libraries
2020-11-05 12:13:35,782:INFO:Preparing display monitor
2020-11-05 12:13:41,262:INFO:Initializing predict_model()
2020-11-05 12:13:41,263:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:13:41,263:INFO:Checking exceptions
2020-11-05 12:13:41,263:INFO:Preloading libraries
2020-11-05 12:13:41,264:INFO:Preparing display monitor
2020-11-05 12:17:46,282:INFO:Initializing optimize_threshold()
2020-11-05 12:17:46,293:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-500, false_negative=100)
2020-11-05 12:17:46,293:INFO:Importing libraries
2020-11-05 12:17:46,294:INFO:Checking exceptions
2020-11-05 12:17:46,390:INFO:Defining loss function
2020-11-05 12:17:46,390:INFO:Iteration starts at 0
2020-11-05 12:17:46,662:INFO:Figure ready for render
2020-11-05 12:17:46,674:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:17:52,355:INFO:Initializing optimize_threshold()
2020-11-05 12:17:52,358:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-10, false_negative=100)
2020-11-05 12:17:52,358:INFO:Importing libraries
2020-11-05 12:17:52,362:INFO:Checking exceptions
2020-11-05 12:17:52,388:INFO:Defining loss function
2020-11-05 12:17:52,389:INFO:Iteration starts at 0
2020-11-05 12:17:52,443:INFO:Figure ready for render
2020-11-05 12:17:52,455:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:17:55,782:INFO:Initializing optimize_threshold()
2020-11-05 12:17:55,783:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-10, false_negative=10)
2020-11-05 12:17:55,783:INFO:Importing libraries
2020-11-05 12:17:55,783:INFO:Checking exceptions
2020-11-05 12:17:55,804:INFO:Defining loss function
2020-11-05 12:17:55,804:INFO:Iteration starts at 0
2020-11-05 12:17:55,870:INFO:Figure ready for render
2020-11-05 12:17:55,877:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:17:59,784:INFO:Initializing optimize_threshold()
2020-11-05 12:17:59,784:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=10, false_positive=-10, false_negative=10)
2020-11-05 12:17:59,785:INFO:Importing libraries
2020-11-05 12:17:59,785:INFO:Checking exceptions
2020-11-05 12:17:59,789:INFO:Defining loss function
2020-11-05 12:17:59,789:INFO:Iteration starts at 0
2020-11-05 12:17:59,849:INFO:Figure ready for render
2020-11-05 12:17:59,854:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:18:02,426:INFO:Initializing optimize_threshold()
2020-11-05 12:18:02,430:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=10, true_negative=10, false_positive=-10, false_negative=10)
2020-11-05 12:18:02,430:INFO:Importing libraries
2020-11-05 12:18:02,433:INFO:Checking exceptions
2020-11-05 12:18:02,468:INFO:Defining loss function
2020-11-05 12:18:02,468:INFO:Iteration starts at 0
2020-11-05 12:18:02,576:INFO:Figure ready for render
2020-11-05 12:18:02,582:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:18:05,977:INFO:Initializing optimize_threshold()
2020-11-05 12:18:05,978:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=10, false_positive=-10, false_negative=10)
2020-11-05 12:18:05,978:INFO:Importing libraries
2020-11-05 12:18:05,978:INFO:Checking exceptions
2020-11-05 12:18:05,983:INFO:Defining loss function
2020-11-05 12:18:05,983:INFO:Iteration starts at 0
2020-11-05 12:18:06,039:INFO:Figure ready for render
2020-11-05 12:18:06,048:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:18:09,868:INFO:Initializing optimize_threshold()
2020-11-05 12:18:09,868:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-10, false_negative=10)
2020-11-05 12:18:09,868:INFO:Importing libraries
2020-11-05 12:18:09,868:INFO:Checking exceptions
2020-11-05 12:18:09,874:INFO:Defining loss function
2020-11-05 12:18:09,874:INFO:Iteration starts at 0
2020-11-05 12:18:09,934:INFO:Figure ready for render
2020-11-05 12:18:09,941:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:18:19,648:INFO:Initializing optimize_threshold()
2020-11-05 12:18:19,650:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=0, true_negative=0, false_positive=0, false_negative=0)
2020-11-05 12:18:19,650:INFO:Importing libraries
2020-11-05 12:18:19,650:INFO:Checking exceptions
2020-11-05 12:18:19,668:INFO:Defining loss function
2020-11-05 12:18:19,668:INFO:Iteration starts at 0
2020-11-05 12:18:19,762:INFO:Figure ready for render
2020-11-05 12:18:19,770:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:18:23,210:INFO:Initializing optimize_threshold()
2020-11-05 12:18:23,210:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-10, false_negative=10)
2020-11-05 12:18:23,210:INFO:Importing libraries
2020-11-05 12:18:23,210:INFO:Checking exceptions
2020-11-05 12:18:23,216:INFO:Defining loss function
2020-11-05 12:18:23,216:INFO:Iteration starts at 0
2020-11-05 12:18:23,275:INFO:Figure ready for render
2020-11-05 12:18:23,279:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:19:07,750:INFO:Initializing optimize_threshold()
2020-11-05 12:19:07,769:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-10, false_negative=100)
2020-11-05 12:19:07,769:INFO:Importing libraries
2020-11-05 12:19:07,780:INFO:Checking exceptions
2020-11-05 12:19:07,816:INFO:Defining loss function
2020-11-05 12:19:07,816:INFO:Iteration starts at 0
2020-11-05 12:19:07,967:INFO:Figure ready for render
2020-11-05 12:19:07,973:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:19:11,591:INFO:Initializing optimize_threshold()
2020-11-05 12:19:11,591:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-1000, false_negative=100)
2020-11-05 12:19:11,591:INFO:Importing libraries
2020-11-05 12:19:11,592:INFO:Checking exceptions
2020-11-05 12:19:11,596:INFO:Defining loss function
2020-11-05 12:19:11,596:INFO:Iteration starts at 0
2020-11-05 12:19:11,664:INFO:Figure ready for render
2020-11-05 12:19:11,672:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:19:14,022:INFO:Initializing optimize_threshold()
2020-11-05 12:19:14,022:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-100, false_negative=100)
2020-11-05 12:19:14,022:INFO:Importing libraries
2020-11-05 12:19:14,023:INFO:Checking exceptions
2020-11-05 12:19:14,028:INFO:Defining loss function
2020-11-05 12:19:14,028:INFO:Iteration starts at 0
2020-11-05 12:19:14,078:INFO:Figure ready for render
2020-11-05 12:19:14,084:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:19:52,611:INFO:Initializing optimize_threshold()
2020-11-05 12:19:52,615:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=-100, false_positive=-100, false_negative=100)
2020-11-05 12:19:52,615:INFO:Importing libraries
2020-11-05 12:19:52,616:INFO:Checking exceptions
2020-11-05 12:19:52,657:INFO:Defining loss function
2020-11-05 12:19:52,657:INFO:Iteration starts at 0
2020-11-05 12:19:52,753:INFO:Figure ready for render
2020-11-05 12:19:52,760:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:19:57,099:INFO:Initializing optimize_threshold()
2020-11-05 12:19:57,099:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-100, false_negative=100)
2020-11-05 12:19:57,099:INFO:Importing libraries
2020-11-05 12:19:57,099:INFO:Checking exceptions
2020-11-05 12:19:57,104:INFO:Defining loss function
2020-11-05 12:19:57,104:INFO:Iteration starts at 0
2020-11-05 12:19:57,148:INFO:Figure ready for render
2020-11-05 12:19:57,154:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 12:20:27,669:INFO:Initializing plot_model()
2020-11-05 12:20:27,671:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:20:27,671:INFO:Checking exceptions
2020-11-05 12:20:27,712:INFO:Preloading libraries
2020-11-05 12:20:27,735:INFO:Copying training dataset
2020-11-05 12:20:27,738:INFO:Copying test dataset
2020-11-05 12:20:27,739:INFO:Plot type: auc
2020-11-05 12:20:27,830:INFO:Fitting Model
2020-11-05 12:20:27,834:INFO:Scoring test/hold-out set
2020-11-05 12:20:27,867:INFO:Saving 'AUC.png' in current active directory
2020-11-05 12:20:28,093:INFO:Visual Rendered Successfully
2020-11-05 12:20:29,010:INFO:plot_model() succesfully completed......................................
2020-11-05 12:20:35,712:INFO:Initializing plot_model()
2020-11-05 12:20:35,712:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:20:35,712:INFO:Checking exceptions
2020-11-05 12:20:35,725:INFO:Preparing display monitor
2020-11-05 12:20:35,734:INFO:Preloading libraries
2020-11-05 12:20:35,738:INFO:Copying training dataset
2020-11-05 12:20:35,738:INFO:Copying test dataset
2020-11-05 12:20:35,738:INFO:Plot type: auc
2020-11-05 12:20:35,754:INFO:Fitting Model
2020-11-05 12:20:35,755:INFO:Scoring test/hold-out set
2020-11-05 12:20:35,767:INFO:Saving 'AUC.png' in current active directory
2020-11-05 12:20:35,945:INFO:Visual Rendered Successfully
2020-11-05 12:20:36,176:INFO:plot_model() succesfully completed......................................
2020-11-05 12:20:50,247:INFO:Initializing plot_model()
2020-11-05 12:20:50,248:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:20:50,248:INFO:Checking exceptions
2020-11-05 12:20:50,275:INFO:Preparing display monitor
2020-11-05 12:20:50,287:INFO:Preloading libraries
2020-11-05 12:20:50,294:INFO:Copying training dataset
2020-11-05 12:20:50,296:INFO:Copying test dataset
2020-11-05 12:20:50,297:INFO:Plot type: auc
2020-11-05 12:20:50,327:INFO:Fitting Model
2020-11-05 12:20:50,330:INFO:Scoring test/hold-out set
2020-11-05 12:20:50,346:INFO:Saving 'AUC.png' in current active directory
2020-11-05 12:20:50,607:INFO:Visual Rendered Successfully
2020-11-05 12:20:51,363:INFO:plot_model() succesfully completed......................................
2020-11-05 12:21:27,289:INFO:Initializing plot_model()
2020-11-05 12:21:27,291:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-11-05 12:21:27,291:INFO:Checking exceptions
2020-11-05 12:21:27,325:INFO:Preloading libraries
2020-11-05 12:21:27,332:INFO:Copying training dataset
2020-11-05 12:21:27,334:INFO:Copying test dataset
2020-11-05 12:21:27,334:INFO:Plot type: error
2020-11-05 12:21:27,367:INFO:Fitting Model
2020-11-05 12:21:27,370:INFO:Scoring test/hold-out set
2020-11-05 12:21:27,391:INFO:Saving 'Prediction Error.png' in current active directory
2020-11-05 12:21:27,524:INFO:Visual Rendered Successfully
2020-11-05 12:21:28,280:INFO:plot_model() succesfully completed......................................
2020-11-05 12:22:36,512:INFO:Initializing plot_model()
2020-11-05 12:22:36,515:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-11-05 12:22:36,515:INFO:Checking exceptions
2020-11-05 12:22:36,550:INFO:Preloading libraries
2020-11-05 12:22:36,558:INFO:Copying training dataset
2020-11-05 12:22:36,561:INFO:Copying test dataset
2020-11-05 12:22:36,562:INFO:Plot type: error
2020-11-05 12:22:36,607:INFO:Fitting Model
2020-11-05 12:22:36,610:INFO:Scoring test/hold-out set
2020-11-05 12:22:36,632:INFO:Saving 'Prediction Error.png' in current active directory
2020-11-05 12:22:36,778:INFO:Visual Rendered Successfully
2020-11-05 12:22:37,459:INFO:plot_model() succesfully completed......................................
2020-11-05 12:22:37,463:INFO:Initializing plot_model()
2020-11-05 12:22:37,463:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2020-11-05 12:22:37,463:INFO:Checking exceptions
2020-11-05 12:22:37,477:INFO:Preparing display monitor
2020-11-05 12:22:37,489:INFO:Preloading libraries
2020-11-05 12:22:37,495:INFO:Copying training dataset
2020-11-05 12:22:37,495:INFO:Copying test dataset
2020-11-05 12:22:37,495:INFO:Plot type: error
2020-11-05 12:22:37,515:INFO:Fitting Model
2020-11-05 12:22:37,516:INFO:Scoring test/hold-out set
2020-11-05 12:22:38,002:INFO:Visual Rendered Successfully
2020-11-05 12:22:38,226:INFO:plot_model() succesfully completed......................................
2020-11-05 12:22:52,131:INFO:Initializing plot_model()
2020-11-05 12:22:52,133:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:22:52,133:INFO:Checking exceptions
2020-11-05 12:22:52,139:INFO:Initializing plot_model()
2020-11-05 12:22:52,139:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:22:52,139:INFO:Checking exceptions
2020-11-05 12:22:52,167:INFO:Preparing display monitor
2020-11-05 12:22:52,182:INFO:Preloading libraries
2020-11-05 12:22:52,190:INFO:Copying training dataset
2020-11-05 12:22:52,193:INFO:Copying test dataset
2020-11-05 12:22:52,194:INFO:Plot type: error
2020-11-05 12:22:52,230:INFO:Fitting Model
2020-11-05 12:22:52,235:INFO:Scoring test/hold-out set
2020-11-05 12:22:52,738:INFO:Visual Rendered Successfully
2020-11-05 12:22:53,398:INFO:plot_model() succesfully completed......................................
2020-11-05 12:22:53,401:INFO:Initializing plot_model()
2020-11-05 12:22:53,401:INFO:plot_model(plot=cooks, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:22:53,402:INFO:Checking exceptions
2020-11-05 12:22:53,404:INFO:Initializing plot_model()
2020-11-05 12:22:53,404:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:22:53,404:INFO:Checking exceptions
2020-11-05 12:22:53,441:INFO:Preparing display monitor
2020-11-05 12:22:53,452:INFO:Preloading libraries
2020-11-05 12:22:53,456:INFO:Copying training dataset
2020-11-05 12:22:53,457:INFO:Copying test dataset
2020-11-05 12:22:53,458:INFO:Plot type: auc
2020-11-05 12:22:53,476:INFO:Fitting Model
2020-11-05 12:22:53,478:INFO:Scoring test/hold-out set
2020-11-05 12:22:54,105:INFO:Visual Rendered Successfully
2020-11-05 12:22:54,414:INFO:plot_model() succesfully completed......................................
2020-11-05 12:22:54,421:INFO:Initializing plot_model()
2020-11-05 12:22:54,422:INFO:plot_model(plot=threshold, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:22:54,422:INFO:Checking exceptions
2020-11-05 12:22:54,439:INFO:Preparing display monitor
2020-11-05 12:22:54,452:INFO:Preloading libraries
2020-11-05 12:22:54,457:INFO:Copying training dataset
2020-11-05 12:22:54,458:INFO:Copying test dataset
2020-11-05 12:22:54,458:INFO:Plot type: threshold
2020-11-05 12:22:54,496:INFO:Fitting Model
2020-11-05 12:23:03,980:INFO:Scoring test/hold-out set
2020-11-05 12:23:04,677:INFO:Visual Rendered Successfully
2020-11-05 12:23:05,387:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:05,391:INFO:Initializing plot_model()
2020-11-05 12:23:05,391:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:05,391:INFO:Checking exceptions
2020-11-05 12:23:05,412:INFO:Preparing display monitor
2020-11-05 12:23:05,424:INFO:Preloading libraries
2020-11-05 12:23:05,432:INFO:Copying training dataset
2020-11-05 12:23:05,436:INFO:Copying test dataset
2020-11-05 12:23:05,438:INFO:Plot type: pr
2020-11-05 12:23:05,461:INFO:Fitting Model
2020-11-05 12:23:05,463:INFO:Scoring test/hold-out set
2020-11-05 12:23:05,980:INFO:Visual Rendered Successfully
2020-11-05 12:23:06,302:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:06,306:INFO:Initializing plot_model()
2020-11-05 12:23:06,306:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:06,306:INFO:Checking exceptions
2020-11-05 12:23:06,322:INFO:Preparing display monitor
2020-11-05 12:23:06,338:INFO:Preloading libraries
2020-11-05 12:23:06,343:INFO:Copying training dataset
2020-11-05 12:23:06,344:INFO:Copying test dataset
2020-11-05 12:23:06,344:INFO:Plot type: confusion_matrix
2020-11-05 12:23:06,365:INFO:Fitting Model
2020-11-05 12:23:06,367:INFO:Scoring test/hold-out set
2020-11-05 12:23:06,596:INFO:Visual Rendered Successfully
2020-11-05 12:23:06,820:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:06,824:INFO:Initializing plot_model()
2020-11-05 12:23:06,824:INFO:plot_model(plot=class_report, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:06,824:INFO:Checking exceptions
2020-11-05 12:23:06,840:INFO:Preparing display monitor
2020-11-05 12:23:06,849:INFO:Preloading libraries
2020-11-05 12:23:06,856:INFO:Copying training dataset
2020-11-05 12:23:06,857:INFO:Copying test dataset
2020-11-05 12:23:06,858:INFO:Plot type: class_report
2020-11-05 12:23:06,877:INFO:Fitting Model
2020-11-05 12:23:06,878:INFO:Scoring test/hold-out set
2020-11-05 12:23:07,559:INFO:Visual Rendered Successfully
2020-11-05 12:23:07,790:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:07,793:INFO:Initializing plot_model()
2020-11-05 12:23:07,794:INFO:plot_model(plot=boundary, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:07,794:INFO:Checking exceptions
2020-11-05 12:23:07,806:INFO:Preparing display monitor
2020-11-05 12:23:07,817:INFO:Preloading libraries
2020-11-05 12:23:07,820:INFO:Copying training dataset
2020-11-05 12:23:07,821:INFO:Copying test dataset
2020-11-05 12:23:07,821:INFO:Plot type: boundary
2020-11-05 12:23:07,835:INFO:Fitting StandardScaler()
2020-11-05 12:23:07,841:INFO:Initializing plot_model()
2020-11-05 12:23:07,841:INFO:plot_model(plot=rfe, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:07,841:INFO:Checking exceptions
2020-11-05 12:23:07,855:INFO:Preparing display monitor
2020-11-05 12:23:07,868:INFO:Preloading libraries
2020-11-05 12:23:07,872:INFO:Copying training dataset
2020-11-05 12:23:07,872:INFO:Copying test dataset
2020-11-05 12:23:07,873:INFO:Plot type: rfe
2020-11-05 12:23:07,889:INFO:Fitting Model
2020-11-05 12:23:19,612:INFO:Initializing plot_model()
2020-11-05 12:23:19,613:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:19,613:INFO:Checking exceptions
2020-11-05 12:23:19,626:INFO:Preparing display monitor
2020-11-05 12:23:19,640:INFO:Preloading libraries
2020-11-05 12:23:19,644:INFO:Copying training dataset
2020-11-05 12:23:19,644:INFO:Copying test dataset
2020-11-05 12:23:19,645:INFO:Plot type: learning
2020-11-05 12:23:19,652:INFO:Fitting Model
2020-11-05 12:23:22,104:INFO:Initializing plot_model()
2020-11-05 12:23:22,105:INFO:plot_model(plot=manifold, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:22,105:INFO:Checking exceptions
2020-11-05 12:23:22,122:INFO:Preparing display monitor
2020-11-05 12:23:22,134:INFO:Preloading libraries
2020-11-05 12:23:22,145:INFO:Copying training dataset
2020-11-05 12:23:22,147:INFO:Copying test dataset
2020-11-05 12:23:22,148:INFO:Plot type: manifold
2020-11-05 12:23:22,157:INFO:Fitting & Transforming Model
2020-11-05 12:23:22,162:INFO:Initializing plot_model()
2020-11-05 12:23:22,163:INFO:plot_model(plot=calibration, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:22,163:INFO:Checking exceptions
2020-11-05 12:23:22,176:INFO:Preparing display monitor
2020-11-05 12:23:22,185:INFO:Preloading libraries
2020-11-05 12:23:22,189:INFO:Copying training dataset
2020-11-05 12:23:22,190:INFO:Copying test dataset
2020-11-05 12:23:22,191:INFO:Plot type: calibration
2020-11-05 12:23:22,224:INFO:Scoring test/hold-out set
2020-11-05 12:23:23,834:INFO:Visual Rendered Successfully
2020-11-05 12:23:24,533:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:24,537:INFO:Initializing plot_model()
2020-11-05 12:23:24,537:INFO:plot_model(plot=vc, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:24,537:INFO:Checking exceptions
2020-11-05 12:23:24,552:INFO:Preparing display monitor
2020-11-05 12:23:24,564:INFO:Preloading libraries
2020-11-05 12:23:24,569:INFO:Copying training dataset
2020-11-05 12:23:24,570:INFO:Copying test dataset
2020-11-05 12:23:24,571:INFO:Plot type: vc
2020-11-05 12:23:24,574:INFO:Determining param_name
2020-11-05 12:23:24,575:INFO:param_name: actual_estimator__max_depth
2020-11-05 12:23:24,592:INFO:Fitting Model
2020-11-05 12:23:24,967:INFO:Initializing plot_model()
2020-11-05 12:23:24,967:INFO:plot_model(plot=dimension, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:24,968:INFO:Checking exceptions
2020-11-05 12:23:24,999:INFO:Preparing display monitor
2020-11-05 12:23:25,022:INFO:Preloading libraries
2020-11-05 12:23:25,039:INFO:Copying training dataset
2020-11-05 12:23:25,043:INFO:Copying test dataset
2020-11-05 12:23:25,049:INFO:Plot type: dimension
2020-11-05 12:23:25,069:INFO:Fitting StandardScaler()
2020-11-05 12:23:25,075:INFO:Initializing plot_model()
2020-11-05 12:23:25,075:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:25,075:INFO:Checking exceptions
2020-11-05 12:23:25,099:INFO:Preparing display monitor
2020-11-05 12:23:25,117:INFO:Preloading libraries
2020-11-05 12:23:25,126:INFO:Copying training dataset
2020-11-05 12:23:25,129:INFO:Copying test dataset
2020-11-05 12:23:25,130:INFO:Plot type: feature
2020-11-05 12:23:25,136:WARNING:No coef_ found. Trying feature_importances_
2020-11-05 12:23:26,250:INFO:Visual Rendered Successfully
2020-11-05 12:23:26,768:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:26,773:INFO:Initializing plot_model()
2020-11-05 12:23:26,773:INFO:plot_model(plot=feature_all, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:26,774:INFO:Checking exceptions
2020-11-05 12:23:26,797:INFO:Preparing display monitor
2020-11-05 12:23:26,813:INFO:Preloading libraries
2020-11-05 12:23:26,817:INFO:Copying training dataset
2020-11-05 12:23:26,818:INFO:Copying test dataset
2020-11-05 12:23:26,818:INFO:Plot type: feature_all
2020-11-05 12:23:26,822:WARNING:No coef_ found. Trying feature_importances_
2020-11-05 12:23:26,842:INFO:Initializing plot_model()
2020-11-05 12:23:26,842:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:26,842:INFO:Checking exceptions
2020-11-05 12:23:26,860:INFO:Preparing display monitor
2020-11-05 12:23:26,868:INFO:Preloading libraries
2020-11-05 12:23:26,875:INFO:Copying training dataset
2020-11-05 12:23:26,877:INFO:Copying test dataset
2020-11-05 12:23:26,877:INFO:Plot type: parameter
2020-11-05 12:23:26,897:INFO:Visual Rendered Successfully
2020-11-05 12:23:27,121:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:27,126:INFO:Initializing plot_model()
2020-11-05 12:23:27,126:INFO:plot_model(plot=lift, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:27,126:INFO:Checking exceptions
2020-11-05 12:23:27,144:INFO:Preparing display monitor
2020-11-05 12:23:27,157:INFO:Preloading libraries
2020-11-05 12:23:27,161:INFO:Copying training dataset
2020-11-05 12:23:27,162:INFO:Copying test dataset
2020-11-05 12:23:27,162:INFO:Plot type: lift
2020-11-05 12:23:27,169:INFO:Generating predictions / predict_proba on X_test
2020-11-05 12:23:27,968:INFO:Visual Rendered Successfully
2020-11-05 12:23:28,236:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:28,242:INFO:Initializing plot_model()
2020-11-05 12:23:28,242:INFO:plot_model(plot=gain, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:28,242:INFO:Checking exceptions
2020-11-05 12:23:28,264:INFO:Preparing display monitor
2020-11-05 12:23:28,295:INFO:Preloading libraries
2020-11-05 12:23:28,310:INFO:Copying training dataset
2020-11-05 12:23:28,311:INFO:Copying test dataset
2020-11-05 12:23:28,312:INFO:Plot type: gain
2020-11-05 12:23:28,321:INFO:Generating predictions / predict_proba on X_test
2020-11-05 12:23:28,987:INFO:Visual Rendered Successfully
2020-11-05 12:23:29,294:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:29,299:INFO:Initializing plot_model()
2020-11-05 12:23:29,299:INFO:plot_model(plot=tree, fold=None, verbose=True, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=2, system=True)
2020-11-05 12:23:29,300:INFO:Checking exceptions
2020-11-05 12:23:51,149:INFO:Initializing plot_model()
2020-11-05 12:23:51,151:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:23:51,151:INFO:Checking exceptions
2020-11-05 12:23:51,154:INFO:Initializing plot_model()
2020-11-05 12:23:51,154:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:23:51,154:INFO:Checking exceptions
2020-11-05 12:23:51,180:INFO:Preloading libraries
2020-11-05 12:23:51,183:INFO:Copying training dataset
2020-11-05 12:23:51,185:INFO:Copying test dataset
2020-11-05 12:23:51,186:INFO:Plot type: error
2020-11-05 12:23:51,217:INFO:Fitting Model
2020-11-05 12:23:51,220:INFO:Scoring test/hold-out set
2020-11-05 12:23:51,239:INFO:Saving 'Prediction Error.png' in current active directory
2020-11-05 12:23:51,585:INFO:Visual Rendered Successfully
2020-11-05 12:23:52,226:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:52,230:INFO:Initializing plot_model()
2020-11-05 12:23:52,230:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:23:52,230:INFO:Checking exceptions
2020-11-05 12:23:52,235:INFO:Initializing plot_model()
2020-11-05 12:23:52,235:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:23:52,235:INFO:Checking exceptions
2020-11-05 12:23:52,249:INFO:Preloading libraries
2020-11-05 12:23:52,251:INFO:Copying training dataset
2020-11-05 12:23:52,252:INFO:Copying test dataset
2020-11-05 12:23:52,252:INFO:Plot type: auc
2020-11-05 12:23:52,280:INFO:Fitting Model
2020-11-05 12:23:52,281:INFO:Scoring test/hold-out set
2020-11-05 12:23:52,300:INFO:Saving 'AUC.png' in current active directory
2020-11-05 12:23:52,510:INFO:Visual Rendered Successfully
2020-11-05 12:23:52,737:INFO:plot_model() succesfully completed......................................
2020-11-05 12:23:52,741:INFO:Initializing plot_model()
2020-11-05 12:23:52,741:INFO:plot_model(plot=threshold, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:23:52,741:INFO:Checking exceptions
2020-11-05 12:23:52,755:INFO:Preloading libraries
2020-11-05 12:23:52,757:INFO:Copying training dataset
2020-11-05 12:23:52,759:INFO:Copying test dataset
2020-11-05 12:23:52,760:INFO:Plot type: threshold
2020-11-05 12:23:52,775:INFO:Fitting Model
2020-11-05 12:24:00,641:INFO:Scoring test/hold-out set
2020-11-05 12:24:00,646:INFO:Saving 'Threshold.png' in current active directory
2020-11-05 12:24:00,917:INFO:Visual Rendered Successfully
2020-11-05 12:24:01,210:INFO:plot_model() succesfully completed......................................
2020-11-05 12:24:01,216:INFO:Initializing plot_model()
2020-11-05 12:24:01,216:INFO:plot_model(plot=pr, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:01,216:INFO:Checking exceptions
2020-11-05 12:24:01,238:INFO:Preloading libraries
2020-11-05 12:24:01,243:INFO:Copying training dataset
2020-11-05 12:24:01,246:INFO:Copying test dataset
2020-11-05 12:24:01,248:INFO:Plot type: pr
2020-11-05 12:24:01,273:INFO:Fitting Model
2020-11-05 12:24:01,274:INFO:Scoring test/hold-out set
2020-11-05 12:24:01,285:INFO:Saving 'Precision Recall.png' in current active directory
2020-11-05 12:24:01,666:INFO:Visual Rendered Successfully
2020-11-05 12:24:02,314:INFO:plot_model() succesfully completed......................................
2020-11-05 12:24:02,319:INFO:Initializing plot_model()
2020-11-05 12:24:02,319:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:02,319:INFO:Checking exceptions
2020-11-05 12:24:02,348:INFO:Preloading libraries
2020-11-05 12:24:02,350:INFO:Copying training dataset
2020-11-05 12:24:02,351:INFO:Copying test dataset
2020-11-05 12:24:02,351:INFO:Plot type: confusion_matrix
2020-11-05 12:24:02,393:INFO:Fitting Model
2020-11-05 12:24:02,393:INFO:Scoring test/hold-out set
2020-11-05 12:24:02,405:INFO:Saving 'Confusion Matrix.png' in current active directory
2020-11-05 12:24:02,838:INFO:Visual Rendered Successfully
2020-11-05 12:24:03,148:INFO:plot_model() succesfully completed......................................
2020-11-05 12:24:03,153:INFO:Initializing plot_model()
2020-11-05 12:24:03,153:INFO:plot_model(plot=class_report, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:03,153:INFO:Checking exceptions
2020-11-05 12:24:03,171:INFO:Preloading libraries
2020-11-05 12:24:03,173:INFO:Copying training dataset
2020-11-05 12:24:03,173:INFO:Copying test dataset
2020-11-05 12:24:03,174:INFO:Plot type: class_report
2020-11-05 12:24:03,201:INFO:Fitting Model
2020-11-05 12:24:03,201:INFO:Scoring test/hold-out set
2020-11-05 12:24:03,248:INFO:Saving 'Class Report.png' in current active directory
2020-11-05 12:24:03,774:INFO:Visual Rendered Successfully
2020-11-05 12:24:04,093:INFO:plot_model() succesfully completed......................................
2020-11-05 12:24:04,097:INFO:Initializing plot_model()
2020-11-05 12:24:04,097:INFO:plot_model(plot=boundary, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:04,097:INFO:Checking exceptions
2020-11-05 12:24:04,111:INFO:Preloading libraries
2020-11-05 12:24:04,113:INFO:Copying training dataset
2020-11-05 12:24:04,114:INFO:Copying test dataset
2020-11-05 12:24:04,114:INFO:Plot type: boundary
2020-11-05 12:24:04,119:INFO:Fitting StandardScaler()
2020-11-05 12:24:04,126:INFO:Initializing plot_model()
2020-11-05 12:24:04,126:INFO:plot_model(plot=rfe, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:04,126:INFO:Checking exceptions
2020-11-05 12:24:04,141:INFO:Preloading libraries
2020-11-05 12:24:04,143:INFO:Copying training dataset
2020-11-05 12:24:04,144:INFO:Copying test dataset
2020-11-05 12:24:04,144:INFO:Plot type: rfe
2020-11-05 12:24:04,168:INFO:Fitting Model
2020-11-05 12:24:17,379:INFO:Initializing plot_model()
2020-11-05 12:24:17,380:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:17,380:INFO:Checking exceptions
2020-11-05 12:24:17,396:INFO:Preloading libraries
2020-11-05 12:24:17,398:INFO:Copying training dataset
2020-11-05 12:24:17,399:INFO:Copying test dataset
2020-11-05 12:24:17,399:INFO:Plot type: learning
2020-11-05 12:24:17,405:INFO:Fitting Model
2020-11-05 12:24:17,753:INFO:Initializing plot_model()
2020-11-05 12:24:17,753:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:17,753:INFO:Checking exceptions
2020-11-05 12:24:17,771:INFO:Preloading libraries
2020-11-05 12:24:17,773:INFO:Copying training dataset
2020-11-05 12:24:17,775:INFO:Copying test dataset
2020-11-05 12:24:17,775:INFO:Plot type: manifold
2020-11-05 12:24:17,788:INFO:Fitting & Transforming Model
2020-11-05 12:24:17,798:INFO:Initializing plot_model()
2020-11-05 12:24:17,798:INFO:plot_model(plot=calibration, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:17,798:INFO:Checking exceptions
2020-11-05 12:24:17,813:INFO:Preloading libraries
2020-11-05 12:24:17,816:INFO:Copying training dataset
2020-11-05 12:24:17,816:INFO:Copying test dataset
2020-11-05 12:24:17,817:INFO:Plot type: calibration
2020-11-05 12:24:17,846:INFO:Scoring test/hold-out set
2020-11-05 12:24:17,943:INFO:Saving 'Calibration Curve.png' in current active directory
2020-11-05 12:24:18,221:INFO:Visual Rendered Successfully
2020-11-05 12:24:19,435:INFO:plot_model() succesfully completed......................................
2020-11-05 12:24:19,456:INFO:Initializing plot_model()
2020-11-05 12:24:19,456:INFO:plot_model(plot=vc, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:19,456:INFO:Checking exceptions
2020-11-05 12:24:19,468:INFO:Preloading libraries
2020-11-05 12:24:19,469:INFO:Copying training dataset
2020-11-05 12:24:19,470:INFO:Copying test dataset
2020-11-05 12:24:19,470:INFO:Plot type: vc
2020-11-05 12:24:19,472:INFO:Determining param_name
2020-11-05 12:24:19,473:INFO:param_name: actual_estimator__max_depth
2020-11-05 12:24:19,487:INFO:Fitting Model
2020-11-05 12:24:19,747:INFO:Initializing plot_model()
2020-11-05 12:24:19,747:INFO:plot_model(plot=dimension, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:19,747:INFO:Checking exceptions
2020-11-05 12:24:19,763:INFO:Preloading libraries
2020-11-05 12:24:19,766:INFO:Copying training dataset
2020-11-05 12:24:19,767:INFO:Copying test dataset
2020-11-05 12:24:19,768:INFO:Plot type: dimension
2020-11-05 12:24:19,773:INFO:Fitting StandardScaler()
2020-11-05 12:24:19,777:INFO:Initializing plot_model()
2020-11-05 12:24:19,777:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:19,777:INFO:Checking exceptions
2020-11-05 12:24:19,790:INFO:Preloading libraries
2020-11-05 12:24:19,791:INFO:Copying training dataset
2020-11-05 12:24:19,792:INFO:Copying test dataset
2020-11-05 12:24:19,792:INFO:Plot type: feature
2020-11-05 12:24:19,795:WARNING:No coef_ found. Trying feature_importances_
2020-11-05 12:24:19,839:INFO:Saving 'Feature Importance.png' in current active directory
2020-11-05 12:24:20,041:INFO:Visual Rendered Successfully
2020-11-05 12:24:20,344:INFO:plot_model() succesfully completed......................................
2020-11-05 12:24:20,351:INFO:Initializing plot_model()
2020-11-05 12:24:20,351:INFO:plot_model(plot=feature_all, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:20,351:INFO:Checking exceptions
2020-11-05 12:24:20,369:INFO:Preloading libraries
2020-11-05 12:24:20,370:INFO:Copying training dataset
2020-11-05 12:24:20,371:INFO:Copying test dataset
2020-11-05 12:24:20,371:INFO:Plot type: feature_all
2020-11-05 12:24:20,374:WARNING:No coef_ found. Trying feature_importances_
2020-11-05 12:24:20,400:INFO:Initializing plot_model()
2020-11-05 12:24:20,400:INFO:plot_model(plot=parameter, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:20,400:INFO:Checking exceptions
2020-11-05 12:24:20,412:INFO:Preloading libraries
2020-11-05 12:24:20,414:INFO:Copying training dataset
2020-11-05 12:24:20,414:INFO:Copying test dataset
2020-11-05 12:24:20,415:INFO:Plot type: parameter
2020-11-05 12:24:20,420:INFO:Visual Rendered Successfully
2020-11-05 12:24:20,668:INFO:plot_model() succesfully completed......................................
2020-11-05 12:24:20,674:INFO:Initializing plot_model()
2020-11-05 12:24:20,674:INFO:plot_model(plot=lift, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:20,674:INFO:Checking exceptions
2020-11-05 12:24:20,698:INFO:Preloading libraries
2020-11-05 12:24:20,700:INFO:Copying training dataset
2020-11-05 12:24:20,700:INFO:Copying test dataset
2020-11-05 12:24:20,701:INFO:Plot type: lift
2020-11-05 12:24:20,702:INFO:Generating predictions / predict_proba on X_test
2020-11-05 12:24:20,812:INFO:Saving 'Lift Chart.png' in current active directory
2020-11-05 12:24:21,180:INFO:Visual Rendered Successfully
2020-11-05 12:24:21,395:INFO:plot_model() succesfully completed......................................
2020-11-05 12:24:21,399:INFO:Initializing plot_model()
2020-11-05 12:24:21,399:INFO:plot_model(plot=gain, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:21,399:INFO:Checking exceptions
2020-11-05 12:24:21,421:INFO:Preloading libraries
2020-11-05 12:24:21,422:INFO:Copying training dataset
2020-11-05 12:24:21,423:INFO:Copying test dataset
2020-11-05 12:24:21,423:INFO:Plot type: gain
2020-11-05 12:24:21,425:INFO:Generating predictions / predict_proba on X_test
2020-11-05 12:24:21,508:INFO:Saving 'Gain Chart.png' in current active directory
2020-11-05 12:24:21,930:INFO:Visual Rendered Successfully
2020-11-05 12:24:22,176:INFO:plot_model() succesfully completed......................................
2020-11-05 12:24:22,181:INFO:Initializing plot_model()
2020-11-05 12:24:22,181:INFO:plot_model(plot=tree, fold=None, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-05 12:24:22,181:INFO:Checking exceptions
2020-11-05 12:27:37,591:INFO:Initializing predict_model()
2020-11-05 12:27:37,596:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.7, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:27:37,596:INFO:Checking exceptions
2020-11-05 12:27:37,596:INFO:Preloading libraries
2020-11-05 12:27:37,599:INFO:Preparing display monitor
2020-11-05 12:27:41,823:INFO:Initializing predict_model()
2020-11-05 12:27:41,823:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-05 12:27:41,823:INFO:Checking exceptions
2020-11-05 12:27:41,823:INFO:Preloading libraries
2020-11-05 12:27:41,823:INFO:Preparing display monitor
2020-11-05 13:07:05,996:INFO:Initializing optimize_threshold()
2020-11-05 13:07:06,000:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-100, false_negative=100)
2020-11-05 13:07:06,001:INFO:Importing libraries
2020-11-05 13:07:06,005:INFO:Checking exceptions
2020-11-05 13:07:06,124:INFO:Defining loss function
2020-11-05 13:07:06,124:INFO:Iteration starts at 0
2020-11-05 13:07:06,368:INFO:Figure ready for render
2020-11-05 13:07:06,387:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 13:07:15,233:INFO:Initializing optimize_threshold()
2020-11-05 13:07:15,234:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=100, false_negative=100)
2020-11-05 13:07:15,234:INFO:Importing libraries
2020-11-05 13:07:15,234:INFO:Checking exceptions
2020-11-05 13:07:15,240:INFO:Defining loss function
2020-11-05 13:07:15,240:INFO:Iteration starts at 0
2020-11-05 13:07:15,290:INFO:Figure ready for render
2020-11-05 13:07:15,333:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 13:07:31,054:INFO:Initializing optimize_threshold()
2020-11-05 13:07:31,056:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=-100, true_negative=100, false_positive=-100, false_negative=100)
2020-11-05 13:07:31,056:INFO:Importing libraries
2020-11-05 13:07:31,056:INFO:Checking exceptions
2020-11-05 13:07:31,077:INFO:Defining loss function
2020-11-05 13:07:31,077:INFO:Iteration starts at 0
2020-11-05 13:07:31,198:INFO:Figure ready for render
2020-11-05 13:07:31,224:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 13:07:35,343:INFO:Initializing optimize_threshold()
2020-11-05 13:07:35,343:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=-100, true_negative=100, false_positive=-1000, false_negative=100)
2020-11-05 13:07:35,343:INFO:Importing libraries
2020-11-05 13:07:35,343:INFO:Checking exceptions
2020-11-05 13:07:35,348:INFO:Defining loss function
2020-11-05 13:07:35,348:INFO:Iteration starts at 0
2020-11-05 13:07:35,427:INFO:Figure ready for render
2020-11-05 13:07:35,466:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 13:07:38,874:INFO:Initializing optimize_threshold()
2020-11-05 13:07:38,875:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.78657704667713, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.46581442104487425, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=214, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005819089477522052, reg_lambda=0.13208003544009964,
              scale_pos_weight=25.42102038235062, subsample=0.9885113862910677,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=-100, true_negative=100, false_positive=-100, false_negative=100)
2020-11-05 13:07:38,875:INFO:Importing libraries
2020-11-05 13:07:38,875:INFO:Checking exceptions
2020-11-05 13:07:38,879:INFO:Defining loss function
2020-11-05 13:07:38,879:INFO:Iteration starts at 0
2020-11-05 13:07:38,933:INFO:Figure ready for render
2020-11-05 13:07:38,938:INFO:optimize_threshold() succesfully completed......................................
2020-11-05 13:23:44,339:INFO:PyCaret Supervised Module
2020-11-05 13:23:44,341:INFO:ML Usecase: classification
2020-11-05 13:23:44,341:INFO:version 2.2.0
2020-11-05 13:23:44,342:INFO:Initializing setup()
2020-11-05 13:23:44,342:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-05 13:23:44,342:INFO:Checking environment
2020-11-05 13:23:44,342:INFO:python_version: 3.8.3
2020-11-05 13:23:44,342:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-05 13:23:44,342:INFO:machine: x86_64
2020-11-05 13:23:44,366:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-05 13:23:44,367:INFO:Memory: svmem(total=8589934592, available=943738880, percent=89.0, used=3076464640, free=16875520, active=929034240, inactive=908926976, wired=2147430400)
2020-11-05 13:23:44,367:INFO:Physical Core: 4
2020-11-05 13:23:44,367:INFO:Logical Core: 8
2020-11-05 13:23:44,367:INFO:Checking libraries
2020-11-05 13:23:44,367:INFO:pd==1.0.5
2020-11-05 13:23:44,367:INFO:numpy==1.18.5
2020-11-05 13:23:44,368:INFO:sklearn==0.23.2
2020-11-05 13:23:45,077:INFO:xgboost==1.2.0
2020-11-05 13:23:45,077:INFO:lightgbm==2.3.1
2020-11-05 13:23:45,142:INFO:catboost==0.24.1
2020-11-05 13:23:46,096:INFO:mlflow==1.11.0
2020-11-05 13:23:46,096:INFO:Checking Exceptions
2020-11-05 13:23:46,096:INFO:Declaring global variables
2020-11-05 13:23:46,096:INFO:USI: c573
2020-11-05 13:23:46,096:INFO:pycaret_globals: {'logging_param', '_internal_pipeline', '_all_models_internal', 'stratify_param', 'fold_param', 'transform_target_param', 'X_train', 'iterative_imputation_iters_param', 'prep_pipe', 'X_test', 'create_model_container', 'html_param', '_gpu_n_jobs_param', 'target_param', 'log_plots_param', '_all_models', 'experiment__', '_all_metrics', 'transform_target_method_param', 'fold_groups_param', 'n_jobs_param', 'y_test', 'display_container', 'seed', 'master_model_container', 'y', 'imputation_regressor', 'fold_shuffle_param', '_ml_usecase', 'fix_imbalance_method_param', 'X', 'data_before_preprocess', 'fix_imbalance_param', 'y_train', 'pycaret_globals', 'exp_name_log', 'imputation_classifier', 'fold_generator', 'gpu_param', '_available_plots', 'USI'}
2020-11-05 13:23:46,096:INFO:Preparing display monitor
2020-11-05 13:23:46,096:INFO:Preparing display monitor
2020-11-05 13:23:46,114:INFO:Importing libraries
2020-11-05 13:23:46,114:INFO:Copying data for preprocessing
2020-11-05 13:23:46,133:INFO:Declaring preprocessing parameters
2020-11-05 13:23:46,135:INFO:Setting up iterative imputation
2020-11-05 13:23:46,568:INFO:Creating preprocessing pipeline
2020-11-05 13:23:46,583:INFO:Preprocessing pipeline created successfully
2020-11-05 13:23:46,584:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-05 13:23:46,584:INFO:Creating global containers
2020-11-05 13:23:46,586:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-05 13:23:46,680:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-05 13:23:47,197:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-05 13:23:47,703:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-05 13:23:47,939:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-05 13:23:48,342:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-05 13:23:48,773:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-05 13:23:49,349:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-05 13:23:49,589:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-05 13:23:49,799:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-05 13:23:50,039:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-05 13:23:50,444:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-05 13:23:50,870:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-05 13:23:51,217:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-05 13:23:51,411:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-05 13:23:51,598:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-05 13:23:51,798:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-05 13:23:52,084:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-05 13:23:52,250:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-05 13:23:53,017:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-05 13:23:53,260:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-05 13:23:53,546:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-05 13:23:53,880:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-05 13:23:54,096:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-05 13:23:54,425:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-05 13:23:54,646:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-05 13:23:54,828:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-05 13:23:55,021:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-05 13:23:55,312:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-05 13:23:55,507:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-05 13:23:55,663:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-05 13:23:55,946:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-05 13:23:56,279:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-05 13:23:56,550:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-05 13:23:56,933:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-05 13:23:57,157:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-05 13:23:57,385:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-05 13:23:57,748:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-05 13:23:58,027:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-05 13:23:58,445:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-05 13:23:58,658:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-05 13:23:58,823:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-05 13:23:59,025:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-05 13:23:59,349:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-05 13:23:59,552:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-05 13:23:59,852:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-05 13:24:00,324:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-05 13:24:00,607:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-05 13:24:01,146:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-05 13:24:01,479:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-05 13:24:01,681:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-05 13:24:05,917:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-05 13:24:06,028:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-05 13:24:06,118:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-05 13:24:06,208:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-05 13:24:06,310:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-05 13:24:06,426:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-05 13:24:06,526:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-05 13:24:06,618:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-05 13:24:06,709:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-05 13:24:06,801:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-05 13:24:06,891:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-05 13:24:06,982:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-05 13:24:07,072:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-05 13:24:07,174:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-05 13:24:07,275:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-05 13:24:07,368:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-05 13:24:07,456:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-05 13:24:07,544:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-05 13:24:07,632:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-05 13:24:07,720:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-05 13:24:07,809:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-05 13:24:07,898:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-05 13:24:07,993:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-05 13:24:08,104:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-05 13:24:08,207:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-05 13:24:08,302:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-05 13:24:08,395:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-05 13:24:08,485:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-05 13:24:08,576:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-05 13:24:08,667:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-05 13:24:08,758:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-05 13:24:08,862:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-05 13:24:08,966:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-05 13:24:09,058:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-05 13:24:09,151:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-05 13:24:09,243:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-05 13:24:09,334:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-05 13:24:09,424:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-05 13:24:09,524:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-05 13:24:09,626:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-05 13:24:09,727:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-05 13:24:09,818:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-05 13:24:09,907:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-05 13:24:09,996:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-05 13:24:10,087:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-05 13:24:10,178:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-05 13:24:10,283:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-05 13:24:10,399:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-05 13:24:10,500:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-05 13:24:10,590:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-05 13:24:10,739:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-05 13:24:10,831:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-05 13:24:10,933:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-05 13:24:11,047:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-05 13:24:11,174:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-05 13:24:11,274:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-05 13:24:11,371:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-05 13:24:11,464:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-05 13:24:11,555:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-05 13:24:11,647:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-05 13:24:11,742:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-05 13:24:11,844:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-05 13:24:11,953:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-05 13:24:12,053:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-05 13:24:12,142:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-05 13:24:12,231:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-05 13:24:12,322:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-05 13:24:12,411:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-05 13:24:12,499:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-05 13:24:12,606:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-05 13:24:12,706:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-05 13:24:12,802:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-05 13:24:12,892:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-05 13:24:12,981:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-05 13:24:13,072:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-05 13:24:13,161:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-05 13:24:13,262:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-05 13:24:13,375:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-05 13:24:13,476:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-05 13:24:13,564:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-05 13:24:13,655:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-05 13:24:13,743:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-05 13:24:13,834:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-05 13:24:13,923:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-05 13:24:14,017:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-05 13:24:14,123:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-05 13:24:14,222:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-05 13:24:14,312:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-05 13:24:14,402:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-05 13:24:14,491:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-05 13:24:14,583:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-05 13:24:14,672:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-05 13:24:14,763:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-05 13:24:14,869:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-05 13:24:14,970:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-05 13:24:15,060:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-05 13:24:15,150:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-05 13:24:15,241:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-05 13:24:15,331:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-05 13:24:15,425:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-05 13:24:15,830:INFO:Creating grid variables
2020-11-05 13:24:15,889:INFO:create_model_container: 0
2020-11-05 13:24:15,889:INFO:master_model_container: 0
2020-11-05 13:24:15,889:INFO:display_container: 0
2020-11-05 13:24:15,907:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-05 13:24:15,907:INFO:setup() succesfully completed......................................
2020-11-05 13:26:09,404:INFO:gpu_param set to False
2020-11-05 13:26:18,372:INFO:Initializing get_config()
2020-11-05 13:26:18,373:INFO:get_config(variable=X_train)
2020-11-05 13:26:18,405:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Friday_multiply_Sunday  Sunday_multiply_Friday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-11-05 13:26:18,405:INFO:get_config() succesfully completed......................................
2020-11-05 13:54:35,488:INFO:PyCaret Supervised Module
2020-11-05 13:54:35,489:INFO:ML Usecase: classification
2020-11-05 13:54:35,489:INFO:version 2.2.0
2020-11-05 13:54:35,489:INFO:Initializing setup()
2020-11-05 13:54:35,489:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-05 13:54:35,489:INFO:Checking environment
2020-11-05 13:54:35,489:INFO:python_version: 3.8.3
2020-11-05 13:54:35,489:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-05 13:54:35,489:INFO:machine: x86_64
2020-11-05 13:54:35,505:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-05 13:54:35,505:INFO:Memory: svmem(total=8589934592, available=2447511552, percent=71.5, used=4287053824, free=428957696, active=2020364288, inactive=1982226432, wired=2266689536)
2020-11-05 13:54:35,505:INFO:Physical Core: 4
2020-11-05 13:54:35,505:INFO:Logical Core: 8
2020-11-05 13:54:35,505:INFO:Checking libraries
2020-11-05 13:54:35,506:INFO:pd==1.0.5
2020-11-05 13:54:35,506:INFO:numpy==1.18.5
2020-11-05 13:54:35,506:INFO:sklearn==0.23.2
2020-11-05 13:54:36,093:INFO:xgboost==1.2.0
2020-11-05 13:54:36,093:INFO:lightgbm==2.3.1
2020-11-05 13:54:36,122:INFO:catboost==0.24.1
2020-11-05 13:54:36,900:INFO:mlflow==1.11.0
2020-11-05 13:54:36,900:INFO:Checking Exceptions
2020-11-05 13:54:36,901:INFO:Declaring global variables
2020-11-05 13:54:36,901:INFO:USI: 26a6
2020-11-05 13:54:36,901:INFO:pycaret_globals: {'log_plots_param', 'create_model_container', 'iterative_imputation_iters_param', 'html_param', 'y_test', 'pycaret_globals', 'n_jobs_param', 'stratify_param', '_ml_usecase', 'X_train', 'y', 'seed', 'fold_generator', 'exp_name_log', 'fold_shuffle_param', '_all_metrics', '_internal_pipeline', 'fold_groups_param', 'fix_imbalance_method_param', '_gpu_n_jobs_param', 'X', 'imputation_classifier', 'display_container', 'transform_target_method_param', 'logging_param', 'imputation_regressor', 'X_test', 'master_model_container', 'data_before_preprocess', 'experiment__', 'fix_imbalance_param', '_all_models_internal', 'y_train', 'fold_param', '_available_plots', 'USI', 'prep_pipe', 'target_param', 'gpu_param', '_all_models', 'transform_target_param'}
2020-11-05 13:54:36,901:INFO:Preparing display monitor
2020-11-05 13:54:36,901:INFO:Preparing display monitor
2020-11-05 13:54:36,918:INFO:Importing libraries
2020-11-05 13:54:36,918:INFO:Copying data for preprocessing
2020-11-05 13:54:36,929:INFO:Declaring preprocessing parameters
2020-11-05 13:54:36,930:INFO:Setting up iterative imputation
2020-11-05 13:54:37,205:INFO:Creating preprocessing pipeline
2020-11-05 13:54:37,216:INFO:Preprocessing pipeline created successfully
2020-11-05 13:54:37,216:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-05 13:54:37,216:INFO:Creating global containers
2020-11-05 13:54:37,218:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-05 13:54:37,290:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-05 13:54:38,046:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-05 13:54:38,225:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-05 13:54:38,390:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-05 13:54:38,514:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-05 13:54:38,633:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-05 13:54:38,748:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-05 13:54:38,862:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-05 13:54:38,982:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-05 13:54:39,097:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-05 13:54:39,209:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-05 13:54:39,348:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-05 13:54:39,483:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-05 13:54:39,613:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-05 13:54:39,736:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-05 13:54:39,861:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-05 13:54:39,980:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-05 13:54:40,098:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-05 13:54:40,213:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-05 13:54:40,323:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-05 13:54:40,449:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-05 13:54:40,570:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-05 13:54:40,689:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-05 13:54:40,813:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-05 13:54:40,929:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-05 13:54:41,042:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-05 13:54:41,155:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-05 13:54:41,271:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-05 13:54:41,386:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-05 13:54:41,500:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-05 13:54:41,629:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-05 13:54:41,768:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-05 13:54:41,883:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-05 13:54:42,001:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-05 13:54:42,114:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-05 13:54:42,228:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-05 13:54:42,349:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-05 13:54:42,465:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-05 13:54:42,583:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-05 13:54:42,692:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-05 13:54:42,805:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-05 13:54:42,932:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-05 13:54:43,052:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-05 13:54:43,183:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-05 13:54:43,303:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-05 13:54:43,422:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-05 13:54:43,551:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-05 13:54:43,673:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-05 13:54:43,785:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-05 13:54:43,898:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-05 13:54:45,763:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-05 13:54:45,866:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-05 13:54:45,954:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-05 13:54:46,042:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-05 13:54:46,128:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-05 13:54:46,215:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-05 13:54:46,304:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-05 13:54:46,391:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-05 13:54:46,478:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-05 13:54:46,567:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-05 13:54:46,656:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-05 13:54:46,743:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-05 13:54:46,830:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-05 13:54:46,915:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-05 13:54:46,999:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-05 13:54:47,084:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-05 13:54:47,169:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-05 13:54:47,254:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-05 13:54:47,339:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-05 13:54:47,425:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-05 13:54:47,510:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-05 13:54:47,597:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-05 13:54:47,683:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-05 13:54:47,768:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-05 13:54:47,853:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-05 13:54:47,939:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-05 13:54:48,025:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-05 13:54:48,154:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-05 13:54:48,240:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-05 13:54:48,339:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-05 13:54:48,426:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-05 13:54:48,512:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-05 13:54:48,598:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-05 13:54:48,684:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-05 13:54:48,789:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-05 13:54:48,880:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-05 13:54:48,972:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-05 13:54:49,057:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-05 13:54:49,142:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-05 13:54:49,226:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-05 13:54:49,311:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-05 13:54:49,396:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-05 13:54:49,507:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-05 13:54:49,591:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-05 13:54:49,676:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-05 13:54:49,760:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-05 13:54:49,845:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-05 13:54:49,930:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-05 13:54:50,015:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-05 13:54:50,099:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-05 13:54:50,237:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-05 13:54:50,327:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-05 13:54:50,418:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-05 13:54:50,502:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-05 13:54:50,586:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-05 13:54:50,671:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-05 13:54:50,766:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-05 13:54:50,852:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-05 13:54:50,937:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-05 13:54:51,038:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-05 13:54:51,131:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-05 13:54:51,223:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-05 13:54:51,310:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-05 13:54:51,396:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-05 13:54:51,484:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-05 13:54:51,571:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-05 13:54:51,656:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-05 13:54:51,742:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-05 13:54:51,826:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-05 13:54:51,911:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-05 13:54:51,995:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-05 13:54:52,079:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-05 13:54:52,164:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-05 13:54:52,249:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-05 13:54:52,336:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-05 13:54:52,422:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-05 13:54:52,517:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-05 13:54:52,603:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-05 13:54:52,689:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-05 13:54:52,774:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-05 13:54:52,859:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-05 13:54:52,956:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-05 13:54:53,056:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-05 13:54:53,158:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-05 13:54:53,264:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-05 13:54:53,372:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-05 13:54:53,478:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-05 13:54:53,570:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-05 13:54:53,656:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-05 13:54:53,746:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-05 13:54:53,832:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-05 13:54:53,919:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-05 13:54:54,006:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-05 13:54:54,091:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-05 13:54:54,179:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-05 13:54:54,277:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-05 13:54:54,375:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-05 13:54:54,474:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-05 13:54:54,581:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-05 13:54:54,671:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-05 13:54:55,004:INFO:Creating grid variables
2020-11-05 13:54:55,046:INFO:create_model_container: 0
2020-11-05 13:54:55,046:INFO:master_model_container: 0
2020-11-05 13:54:55,046:INFO:display_container: 0
2020-11-05 13:54:55,061:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-05 13:54:55,061:INFO:setup() succesfully completed......................................
2020-11-05 13:55:05,239:INFO:gpu_param set to False
2020-11-05 13:55:16,886:INFO:Initializing get_config()
2020-11-05 13:55:16,887:INFO:get_config(variable=X_train)
2020-11-05 13:55:16,891:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday      Monday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  100.000000   
290   89.524284   91.468575   87.825432   97.618568   94.757272   94.801109   
121   94.058571  100.000000   94.127144   96.427498   96.666664  100.000000   
113   98.461998  100.000000  100.000000   98.571426   97.727501   95.312500   
170   97.904259  100.000000   96.207530  100.000000  100.000000   85.595001   
..          ...         ...         ...         ...         ...         ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000   91.666252   
427   91.537498   94.424980   95.738747   94.977776   94.047501   92.606028   
243   94.443336  100.000000   97.500000   93.559998  100.000000   98.148331   
258   90.427139   92.855003   94.431114   95.446251   84.709999   92.783752   
341  100.000000   98.333336   97.910120   94.839996   99.266625   80.092224   

     Sunday_multiply_Friday  Friday_multiply_Sunday  
97              9738.843296             9738.843296  
290             8188.658676             8188.658676  
121             9405.857086             9405.857086  
113             9846.199799             9846.199799  
170             9790.425889             9790.425889  
..                      ...                     ...  
124             9198.381127             9198.381127  
427             8643.426427             8643.426427  
243             9444.333649             9444.333649  
258             8396.612322             8396.612322  
341             9833.333588             9833.333588  

[266 rows x 8 columns]
2020-11-05 13:55:16,891:INFO:get_config() succesfully completed......................................
2020-11-05 13:55:28,765:INFO:Initializing compare_models()
2020-11-05 13:55:28,765:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=6, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-11-05 13:55:28,765:INFO:Checking exceptions
2020-11-05 13:55:28,766:INFO:Preparing display monitor
2020-11-05 13:55:28,766:INFO:Preparing display monitor
2020-11-05 13:55:28,797:INFO:Initializing Logistic Regression
2020-11-05 13:55:28,798:INFO:Total runtime is 4.168351491292318e-06 minutes
2020-11-05 13:55:28,804:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:28,805:INFO:Initializing create_model()
2020-11-05 13:55:28,805:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:28,805:INFO:Checking exceptions
2020-11-05 13:55:28,806:INFO:Importing libraries
2020-11-05 13:55:28,806:INFO:Copying training dataset
2020-11-05 13:55:28,806:INFO:Defining folds
2020-11-05 13:55:28,807:INFO:Declaring metric variables
2020-11-05 13:55:28,813:INFO:Importing untrained model
2020-11-05 13:55:28,820:INFO:Logistic Regression Imported succesfully
2020-11-05 13:55:28,834:INFO:Starting cross validation
2020-11-05 13:55:28,834:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:34,347:INFO:Calculating mean and std
2020-11-05 13:55:34,354:INFO:Creating metrics dataframe
2020-11-05 13:55:34,369:INFO:Uploading results into container
2020-11-05 13:55:34,369:INFO:Uploading model into container now
2020-11-05 13:55:34,370:INFO:create_model_container: 1
2020-11-05 13:55:34,370:INFO:master_model_container: 1
2020-11-05 13:55:34,370:INFO:display_container: 1
2020-11-05 13:55:34,371:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-11-05 13:55:34,372:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:34,609:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:34,609:INFO:Creating metrics dataframe
2020-11-05 13:55:34,624:INFO:Initializing K Neighbors Classifier
2020-11-05 13:55:34,624:INFO:Total runtime is 0.09711105426152547 minutes
2020-11-05 13:55:34,636:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:34,636:INFO:Initializing create_model()
2020-11-05 13:55:34,636:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:34,636:INFO:Checking exceptions
2020-11-05 13:55:34,636:INFO:Importing libraries
2020-11-05 13:55:34,636:INFO:Copying training dataset
2020-11-05 13:55:34,637:INFO:Defining folds
2020-11-05 13:55:34,637:INFO:Declaring metric variables
2020-11-05 13:55:34,649:INFO:Importing untrained model
2020-11-05 13:55:34,659:INFO:K Neighbors Classifier Imported succesfully
2020-11-05 13:55:34,679:INFO:Starting cross validation
2020-11-05 13:55:34,680:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:34,810:INFO:Calculating mean and std
2020-11-05 13:55:34,811:INFO:Creating metrics dataframe
2020-11-05 13:55:34,815:INFO:Uploading results into container
2020-11-05 13:55:34,815:INFO:Uploading model into container now
2020-11-05 13:55:34,815:INFO:create_model_container: 2
2020-11-05 13:55:34,815:INFO:master_model_container: 2
2020-11-05 13:55:34,816:INFO:display_container: 1
2020-11-05 13:55:34,816:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-11-05 13:55:34,816:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:34,936:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:34,936:INFO:Creating metrics dataframe
2020-11-05 13:55:34,969:INFO:Initializing Naive Bayes
2020-11-05 13:55:34,969:INFO:Total runtime is 0.10285667181015014 minutes
2020-11-05 13:55:34,978:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:34,979:INFO:Initializing create_model()
2020-11-05 13:55:34,979:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:34,979:INFO:Checking exceptions
2020-11-05 13:55:34,979:INFO:Importing libraries
2020-11-05 13:55:34,979:INFO:Copying training dataset
2020-11-05 13:55:34,980:INFO:Defining folds
2020-11-05 13:55:34,980:INFO:Declaring metric variables
2020-11-05 13:55:34,990:INFO:Importing untrained model
2020-11-05 13:55:35,003:INFO:Naive Bayes Imported succesfully
2020-11-05 13:55:35,040:INFO:Starting cross validation
2020-11-05 13:55:35,040:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:35,103:INFO:Calculating mean and std
2020-11-05 13:55:35,103:INFO:Creating metrics dataframe
2020-11-05 13:55:35,110:INFO:Uploading results into container
2020-11-05 13:55:35,110:INFO:Uploading model into container now
2020-11-05 13:55:35,110:INFO:create_model_container: 3
2020-11-05 13:55:35,110:INFO:master_model_container: 3
2020-11-05 13:55:35,110:INFO:display_container: 1
2020-11-05 13:55:35,110:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-11-05 13:55:35,110:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:35,276:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:35,276:INFO:Creating metrics dataframe
2020-11-05 13:55:35,307:INFO:Initializing Decision Tree Classifier
2020-11-05 13:55:35,307:INFO:Total runtime is 0.1084918181101481 minutes
2020-11-05 13:55:35,328:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:35,330:INFO:Initializing create_model()
2020-11-05 13:55:35,331:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:35,331:INFO:Checking exceptions
2020-11-05 13:55:35,332:INFO:Importing libraries
2020-11-05 13:55:35,332:INFO:Copying training dataset
2020-11-05 13:55:35,334:INFO:Defining folds
2020-11-05 13:55:35,335:INFO:Declaring metric variables
2020-11-05 13:55:35,344:INFO:Importing untrained model
2020-11-05 13:55:35,356:INFO:Decision Tree Classifier Imported succesfully
2020-11-05 13:55:35,377:INFO:Starting cross validation
2020-11-05 13:55:35,377:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:35,452:INFO:Calculating mean and std
2020-11-05 13:55:35,456:INFO:Creating metrics dataframe
2020-11-05 13:55:35,461:INFO:Uploading results into container
2020-11-05 13:55:35,461:INFO:Uploading model into container now
2020-11-05 13:55:35,461:INFO:create_model_container: 4
2020-11-05 13:55:35,462:INFO:master_model_container: 4
2020-11-05 13:55:35,462:INFO:display_container: 1
2020-11-05 13:55:35,462:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-11-05 13:55:35,462:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:35,555:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:35,555:INFO:Creating metrics dataframe
2020-11-05 13:55:35,585:INFO:Initializing SVM - Linear Kernel
2020-11-05 13:55:35,586:INFO:Total runtime is 0.1131384015083313 minutes
2020-11-05 13:55:35,594:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:35,595:INFO:Initializing create_model()
2020-11-05 13:55:35,595:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:35,595:INFO:Checking exceptions
2020-11-05 13:55:35,595:INFO:Importing libraries
2020-11-05 13:55:35,595:INFO:Copying training dataset
2020-11-05 13:55:35,597:INFO:Defining folds
2020-11-05 13:55:35,597:INFO:Declaring metric variables
2020-11-05 13:55:35,606:INFO:Importing untrained model
2020-11-05 13:55:35,615:INFO:SVM - Linear Kernel Imported succesfully
2020-11-05 13:55:35,633:INFO:Starting cross validation
2020-11-05 13:55:35,634:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:35,708:INFO:Calculating mean and std
2020-11-05 13:55:35,712:INFO:Creating metrics dataframe
2020-11-05 13:55:35,729:INFO:Uploading results into container
2020-11-05 13:55:35,729:INFO:Uploading model into container now
2020-11-05 13:55:35,729:INFO:create_model_container: 5
2020-11-05 13:55:35,729:INFO:master_model_container: 5
2020-11-05 13:55:35,729:INFO:display_container: 1
2020-11-05 13:55:35,729:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-11-05 13:55:35,729:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:35,814:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:35,815:INFO:Creating metrics dataframe
2020-11-05 13:55:35,847:INFO:Initializing Ridge Classifier
2020-11-05 13:55:35,847:INFO:Total runtime is 0.11750127077102661 minutes
2020-11-05 13:55:35,863:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:35,864:INFO:Initializing create_model()
2020-11-05 13:55:35,864:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:35,864:INFO:Checking exceptions
2020-11-05 13:55:35,864:INFO:Importing libraries
2020-11-05 13:55:35,865:INFO:Copying training dataset
2020-11-05 13:55:35,866:INFO:Defining folds
2020-11-05 13:55:35,866:INFO:Declaring metric variables
2020-11-05 13:55:35,878:INFO:Importing untrained model
2020-11-05 13:55:35,890:INFO:Ridge Classifier Imported succesfully
2020-11-05 13:55:35,911:INFO:Starting cross validation
2020-11-05 13:55:35,912:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:35,990:INFO:Calculating mean and std
2020-11-05 13:55:35,991:INFO:Creating metrics dataframe
2020-11-05 13:55:35,998:INFO:Uploading results into container
2020-11-05 13:55:35,998:INFO:Uploading model into container now
2020-11-05 13:55:35,998:INFO:create_model_container: 6
2020-11-05 13:55:35,999:INFO:master_model_container: 6
2020-11-05 13:55:35,999:INFO:display_container: 1
2020-11-05 13:55:35,999:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-11-05 13:55:35,999:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:36,081:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:36,082:INFO:Creating metrics dataframe
2020-11-05 13:55:36,118:INFO:Initializing Random Forest Classifier
2020-11-05 13:55:36,118:INFO:Total runtime is 0.12200641632080078 minutes
2020-11-05 13:55:36,130:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:36,131:INFO:Initializing create_model()
2020-11-05 13:55:36,131:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:36,131:INFO:Checking exceptions
2020-11-05 13:55:36,131:INFO:Importing libraries
2020-11-05 13:55:36,131:INFO:Copying training dataset
2020-11-05 13:55:36,132:INFO:Defining folds
2020-11-05 13:55:36,132:INFO:Declaring metric variables
2020-11-05 13:55:36,139:INFO:Importing untrained model
2020-11-05 13:55:36,148:INFO:Random Forest Classifier Imported succesfully
2020-11-05 13:55:36,167:INFO:Starting cross validation
2020-11-05 13:55:36,168:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:37,065:INFO:Calculating mean and std
2020-11-05 13:55:37,066:INFO:Creating metrics dataframe
2020-11-05 13:55:37,070:INFO:Uploading results into container
2020-11-05 13:55:37,070:INFO:Uploading model into container now
2020-11-05 13:55:37,070:INFO:create_model_container: 7
2020-11-05 13:55:37,071:INFO:master_model_container: 7
2020-11-05 13:55:37,071:INFO:display_container: 1
2020-11-05 13:55:37,071:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-05 13:55:37,071:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:37,156:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:37,156:INFO:Creating metrics dataframe
2020-11-05 13:55:37,198:INFO:Initializing Quadratic Discriminant Analysis
2020-11-05 13:55:37,198:INFO:Total runtime is 0.14001805384953817 minutes
2020-11-05 13:55:37,212:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:37,212:INFO:Initializing create_model()
2020-11-05 13:55:37,212:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:37,212:INFO:Checking exceptions
2020-11-05 13:55:37,213:INFO:Importing libraries
2020-11-05 13:55:37,213:INFO:Copying training dataset
2020-11-05 13:55:37,214:INFO:Defining folds
2020-11-05 13:55:37,214:INFO:Declaring metric variables
2020-11-05 13:55:37,226:INFO:Importing untrained model
2020-11-05 13:55:37,235:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-11-05 13:55:37,264:INFO:Starting cross validation
2020-11-05 13:55:37,265:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:37,322:INFO:Calculating mean and std
2020-11-05 13:55:37,323:INFO:Creating metrics dataframe
2020-11-05 13:55:37,327:INFO:Uploading results into container
2020-11-05 13:55:37,328:INFO:Uploading model into container now
2020-11-05 13:55:37,328:INFO:create_model_container: 8
2020-11-05 13:55:37,328:INFO:master_model_container: 8
2020-11-05 13:55:37,328:INFO:display_container: 1
2020-11-05 13:55:37,328:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-11-05 13:55:37,328:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:37,433:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:37,433:INFO:Creating metrics dataframe
2020-11-05 13:55:37,483:INFO:Initializing Ada Boost Classifier
2020-11-05 13:55:37,484:INFO:Total runtime is 0.14477033615112306 minutes
2020-11-05 13:55:37,499:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:37,499:INFO:Initializing create_model()
2020-11-05 13:55:37,500:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:37,500:INFO:Checking exceptions
2020-11-05 13:55:37,500:INFO:Importing libraries
2020-11-05 13:55:37,500:INFO:Copying training dataset
2020-11-05 13:55:37,502:INFO:Defining folds
2020-11-05 13:55:37,502:INFO:Declaring metric variables
2020-11-05 13:55:37,514:INFO:Importing untrained model
2020-11-05 13:55:37,532:INFO:Ada Boost Classifier Imported succesfully
2020-11-05 13:55:37,553:INFO:Starting cross validation
2020-11-05 13:55:37,553:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:38,118:INFO:Calculating mean and std
2020-11-05 13:55:38,119:INFO:Creating metrics dataframe
2020-11-05 13:55:38,123:INFO:Uploading results into container
2020-11-05 13:55:38,123:INFO:Uploading model into container now
2020-11-05 13:55:38,124:INFO:create_model_container: 9
2020-11-05 13:55:38,124:INFO:master_model_container: 9
2020-11-05 13:55:38,124:INFO:display_container: 1
2020-11-05 13:55:38,124:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-11-05 13:55:38,124:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:38,210:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:38,210:INFO:Creating metrics dataframe
2020-11-05 13:55:38,250:INFO:Initializing Gradient Boosting Classifier
2020-11-05 13:55:38,250:INFO:Total runtime is 0.15754770437876384 minutes
2020-11-05 13:55:38,261:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:38,261:INFO:Initializing create_model()
2020-11-05 13:55:38,261:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:38,261:INFO:Checking exceptions
2020-11-05 13:55:38,261:INFO:Importing libraries
2020-11-05 13:55:38,261:INFO:Copying training dataset
2020-11-05 13:55:38,262:INFO:Defining folds
2020-11-05 13:55:38,262:INFO:Declaring metric variables
2020-11-05 13:55:38,271:INFO:Importing untrained model
2020-11-05 13:55:38,279:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-05 13:55:38,298:INFO:Starting cross validation
2020-11-05 13:55:38,299:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:38,725:INFO:Calculating mean and std
2020-11-05 13:55:38,726:INFO:Creating metrics dataframe
2020-11-05 13:55:38,730:INFO:Uploading results into container
2020-11-05 13:55:38,730:INFO:Uploading model into container now
2020-11-05 13:55:38,730:INFO:create_model_container: 10
2020-11-05 13:55:38,731:INFO:master_model_container: 10
2020-11-05 13:55:38,731:INFO:display_container: 1
2020-11-05 13:55:38,731:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-05 13:55:38,732:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:38,808:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:38,808:INFO:Creating metrics dataframe
2020-11-05 13:55:38,850:INFO:Initializing Linear Discriminant Analysis
2020-11-05 13:55:38,851:INFO:Total runtime is 0.16755393743515015 minutes
2020-11-05 13:55:38,861:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:38,861:INFO:Initializing create_model()
2020-11-05 13:55:38,862:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:38,862:INFO:Checking exceptions
2020-11-05 13:55:38,862:INFO:Importing libraries
2020-11-05 13:55:38,862:INFO:Copying training dataset
2020-11-05 13:55:38,863:INFO:Defining folds
2020-11-05 13:55:38,863:INFO:Declaring metric variables
2020-11-05 13:55:38,872:INFO:Importing untrained model
2020-11-05 13:55:38,882:INFO:Linear Discriminant Analysis Imported succesfully
2020-11-05 13:55:38,901:INFO:Starting cross validation
2020-11-05 13:55:38,902:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:38,991:INFO:Calculating mean and std
2020-11-05 13:55:38,992:INFO:Creating metrics dataframe
2020-11-05 13:55:38,996:INFO:Uploading results into container
2020-11-05 13:55:38,996:INFO:Uploading model into container now
2020-11-05 13:55:38,996:INFO:create_model_container: 11
2020-11-05 13:55:38,996:INFO:master_model_container: 11
2020-11-05 13:55:38,997:INFO:display_container: 1
2020-11-05 13:55:38,997:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-11-05 13:55:38,997:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:39,093:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:39,093:INFO:Creating metrics dataframe
2020-11-05 13:55:39,151:INFO:Initializing Extra Trees Classifier
2020-11-05 13:55:39,151:INFO:Total runtime is 0.17256245215733845 minutes
2020-11-05 13:55:39,165:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:39,165:INFO:Initializing create_model()
2020-11-05 13:55:39,165:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:39,165:INFO:Checking exceptions
2020-11-05 13:55:39,166:INFO:Importing libraries
2020-11-05 13:55:39,166:INFO:Copying training dataset
2020-11-05 13:55:39,167:INFO:Defining folds
2020-11-05 13:55:39,167:INFO:Declaring metric variables
2020-11-05 13:55:39,177:INFO:Importing untrained model
2020-11-05 13:55:39,189:INFO:Extra Trees Classifier Imported succesfully
2020-11-05 13:55:39,206:INFO:Starting cross validation
2020-11-05 13:55:39,206:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:40,102:INFO:Calculating mean and std
2020-11-05 13:55:40,103:INFO:Creating metrics dataframe
2020-11-05 13:55:40,109:INFO:Uploading results into container
2020-11-05 13:55:40,109:INFO:Uploading model into container now
2020-11-05 13:55:40,109:INFO:create_model_container: 12
2020-11-05 13:55:40,110:INFO:master_model_container: 12
2020-11-05 13:55:40,110:INFO:display_container: 1
2020-11-05 13:55:40,110:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-05 13:55:40,110:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:40,199:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:40,199:INFO:Creating metrics dataframe
2020-11-05 13:55:40,251:INFO:Initializing Extreme Gradient Boosting
2020-11-05 13:55:40,251:INFO:Total runtime is 0.19089956680933634 minutes
2020-11-05 13:55:40,260:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:40,260:INFO:Initializing create_model()
2020-11-05 13:55:40,261:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:40,261:INFO:Checking exceptions
2020-11-05 13:55:40,261:INFO:Importing libraries
2020-11-05 13:55:40,261:INFO:Copying training dataset
2020-11-05 13:55:40,262:INFO:Defining folds
2020-11-05 13:55:40,263:INFO:Declaring metric variables
2020-11-05 13:55:40,272:INFO:Importing untrained model
2020-11-05 13:55:40,280:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-05 13:55:40,298:INFO:Starting cross validation
2020-11-05 13:55:40,298:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:42,538:INFO:Calculating mean and std
2020-11-05 13:55:42,539:INFO:Creating metrics dataframe
2020-11-05 13:55:42,545:INFO:Uploading results into container
2020-11-05 13:55:42,545:INFO:Uploading model into container now
2020-11-05 13:55:42,545:INFO:create_model_container: 13
2020-11-05 13:55:42,545:INFO:master_model_container: 13
2020-11-05 13:55:42,546:INFO:display_container: 1
2020-11-05 13:55:42,547:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-11-05 13:55:42,547:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:42,630:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:42,630:INFO:Creating metrics dataframe
2020-11-05 13:55:42,686:INFO:Initializing Light Gradient Boosting Machine
2020-11-05 13:55:42,686:INFO:Total runtime is 0.2314789851506551 minutes
2020-11-05 13:55:42,697:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:42,697:INFO:Initializing create_model()
2020-11-05 13:55:42,698:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:42,698:INFO:Checking exceptions
2020-11-05 13:55:42,698:INFO:Importing libraries
2020-11-05 13:55:42,698:INFO:Copying training dataset
2020-11-05 13:55:42,699:INFO:Defining folds
2020-11-05 13:55:42,699:INFO:Declaring metric variables
2020-11-05 13:55:42,709:INFO:Importing untrained model
2020-11-05 13:55:42,718:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-05 13:55:42,738:INFO:Starting cross validation
2020-11-05 13:55:42,739:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:55:42,993:INFO:Calculating mean and std
2020-11-05 13:55:42,994:INFO:Creating metrics dataframe
2020-11-05 13:55:42,999:INFO:Uploading results into container
2020-11-05 13:55:42,999:INFO:Uploading model into container now
2020-11-05 13:55:42,999:INFO:create_model_container: 14
2020-11-05 13:55:42,999:INFO:master_model_container: 14
2020-11-05 13:55:42,999:INFO:display_container: 1
2020-11-05 13:55:43,000:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-05 13:55:43,000:INFO:create_model() succesfully completed......................................
2020-11-05 13:55:43,091:INFO:SubProcess create_model() end ==================================
2020-11-05 13:55:43,091:INFO:Creating metrics dataframe
2020-11-05 13:55:43,157:INFO:Initializing CatBoost Classifier
2020-11-05 13:55:43,158:INFO:Total runtime is 0.2393384536107381 minutes
2020-11-05 13:55:43,175:INFO:SubProcess create_model() called ==================================
2020-11-05 13:55:43,175:INFO:Initializing create_model()
2020-11-05 13:55:43,175:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7faf1b6cd1c0>, kwargs={})
2020-11-05 13:55:43,175:INFO:Checking exceptions
2020-11-05 13:55:43,176:INFO:Importing libraries
2020-11-05 13:55:43,176:INFO:Copying training dataset
2020-11-05 13:55:43,177:INFO:Defining folds
2020-11-05 13:55:43,178:INFO:Declaring metric variables
2020-11-05 13:55:43,189:INFO:Importing untrained model
2020-11-05 13:55:43,200:INFO:CatBoost Classifier Imported succesfully
2020-11-05 13:55:43,230:INFO:Starting cross validation
2020-11-05 13:55:43,231:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-05 13:56:04,634:INFO:Calculating mean and std
2020-11-05 13:56:04,641:INFO:Creating metrics dataframe
2020-11-05 13:56:04,659:INFO:Uploading results into container
2020-11-05 13:56:04,659:INFO:Uploading model into container now
2020-11-05 13:56:04,659:INFO:create_model_container: 15
2020-11-05 13:56:04,659:INFO:master_model_container: 15
2020-11-05 13:56:04,659:INFO:display_container: 1
2020-11-05 13:56:04,660:INFO:<catboost.core.CatBoostClassifier object at 0x7faf1b4f90a0>
2020-11-05 13:56:04,660:INFO:create_model() succesfully completed......................................
2020-11-05 13:56:04,982:INFO:SubProcess create_model() end ==================================
2020-11-05 13:56:04,982:INFO:Creating metrics dataframe
2020-11-05 13:56:05,076:INFO:Initializing create_model()
2020-11-05 13:56:05,076:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 13:56:05,076:INFO:Checking exceptions
2020-11-05 13:56:05,077:INFO:Importing libraries
2020-11-05 13:56:05,077:INFO:Copying training dataset
2020-11-05 13:56:05,078:INFO:Defining folds
2020-11-05 13:56:05,078:INFO:Declaring metric variables
2020-11-05 13:56:05,078:INFO:Importing untrained model
2020-11-05 13:56:05,079:INFO:Declaring custom model
2020-11-05 13:56:05,080:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-05 13:56:05,080:INFO:Cross validation set to False
2020-11-05 13:56:05,081:INFO:Fitting Model
2020-11-05 13:56:05,183:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-11-05 13:56:05,183:INFO:create_models() succesfully completed......................................
2020-11-05 13:56:05,336:INFO:Initializing create_model()
2020-11-05 13:56:05,336:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 13:56:05,336:INFO:Checking exceptions
2020-11-05 13:56:05,337:INFO:Importing libraries
2020-11-05 13:56:05,337:INFO:Copying training dataset
2020-11-05 13:56:05,337:INFO:Defining folds
2020-11-05 13:56:05,337:INFO:Declaring metric variables
2020-11-05 13:56:05,337:INFO:Importing untrained model
2020-11-05 13:56:05,337:INFO:Declaring custom model
2020-11-05 13:56:05,338:INFO:Random Forest Classifier Imported succesfully
2020-11-05 13:56:05,339:INFO:Cross validation set to False
2020-11-05 13:56:05,339:INFO:Fitting Model
2020-11-05 13:56:05,564:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-05 13:56:05,565:INFO:create_models() succesfully completed......................................
2020-11-05 13:56:05,692:INFO:Initializing create_model()
2020-11-05 13:56:05,693:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 13:56:05,693:INFO:Checking exceptions
2020-11-05 13:56:05,693:INFO:Importing libraries
2020-11-05 13:56:05,693:INFO:Copying training dataset
2020-11-05 13:56:05,694:INFO:Defining folds
2020-11-05 13:56:05,694:INFO:Declaring metric variables
2020-11-05 13:56:05,694:INFO:Importing untrained model
2020-11-05 13:56:05,694:INFO:Declaring custom model
2020-11-05 13:56:05,695:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-05 13:56:05,695:INFO:Cross validation set to False
2020-11-05 13:56:05,695:INFO:Fitting Model
2020-11-05 13:56:05,723:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-05 13:56:05,723:INFO:create_models() succesfully completed......................................
2020-11-05 13:56:05,850:INFO:Initializing create_model()
2020-11-05 13:56:05,851:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7faf1b4f90a0>, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 13:56:05,851:INFO:Checking exceptions
2020-11-05 13:56:05,851:INFO:Importing libraries
2020-11-05 13:56:05,851:INFO:Copying training dataset
2020-11-05 13:56:05,852:INFO:Defining folds
2020-11-05 13:56:05,852:INFO:Declaring metric variables
2020-11-05 13:56:05,852:INFO:Importing untrained model
2020-11-05 13:56:05,852:INFO:Declaring custom model
2020-11-05 13:56:05,852:INFO:CatBoost Classifier Imported succesfully
2020-11-05 13:56:05,853:INFO:Cross validation set to False
2020-11-05 13:56:05,853:INFO:Fitting Model
2020-11-05 13:56:07,485:INFO:<catboost.core.CatBoostClassifier object at 0x7faf1b4f9340>
2020-11-05 13:56:07,485:INFO:create_models() succesfully completed......................................
2020-11-05 13:56:07,577:INFO:Initializing create_model()
2020-11-05 13:56:07,578:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 13:56:07,578:INFO:Checking exceptions
2020-11-05 13:56:07,578:INFO:Importing libraries
2020-11-05 13:56:07,578:INFO:Copying training dataset
2020-11-05 13:56:07,579:INFO:Defining folds
2020-11-05 13:56:07,579:INFO:Declaring metric variables
2020-11-05 13:56:07,579:INFO:Importing untrained model
2020-11-05 13:56:07,579:INFO:Declaring custom model
2020-11-05 13:56:07,580:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-05 13:56:07,581:INFO:Cross validation set to False
2020-11-05 13:56:07,581:INFO:Fitting Model
2020-11-05 13:56:07,699:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-05 13:56:07,699:INFO:create_models() succesfully completed......................................
2020-11-05 13:56:07,799:INFO:Initializing create_model()
2020-11-05 13:56:07,799:INFO:create_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-05 13:56:07,799:INFO:Checking exceptions
2020-11-05 13:56:07,799:INFO:Importing libraries
2020-11-05 13:56:07,800:INFO:Copying training dataset
2020-11-05 13:56:07,800:INFO:Defining folds
2020-11-05 13:56:07,800:INFO:Declaring metric variables
2020-11-05 13:56:07,801:INFO:Importing untrained model
2020-11-05 13:56:07,801:INFO:Declaring custom model
2020-11-05 13:56:07,801:INFO:Extra Trees Classifier Imported succesfully
2020-11-05 13:56:07,801:INFO:Cross validation set to False
2020-11-05 13:56:07,801:INFO:Fitting Model
2020-11-05 13:56:07,975:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-05 13:56:07,975:INFO:create_models() succesfully completed......................................
2020-11-05 13:56:08,176:INFO:create_model_container: 15
2020-11-05 13:56:08,176:INFO:master_model_container: 15
2020-11-05 13:56:08,177:INFO:display_container: 1
2020-11-05 13:56:08,181:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), <catboost.core.CatBoostClassifier object at 0x7faf1b4f9340>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)]
2020-11-05 13:56:08,181:INFO:compare_models() succesfully completed......................................
2020-11-06 12:04:42,946:INFO:PyCaret Supervised Module
2020-11-06 12:04:42,947:INFO:ML Usecase: classification
2020-11-06 12:04:42,947:INFO:version 2.2.0
2020-11-06 12:04:42,947:INFO:Initializing setup()
2020-11-06 12:04:42,947:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-06 12:04:42,947:INFO:Checking environment
2020-11-06 12:04:42,947:INFO:python_version: 3.8.3
2020-11-06 12:04:42,947:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-06 12:04:42,947:INFO:machine: x86_64
2020-11-06 12:04:42,963:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-06 12:04:42,964:INFO:Memory: svmem(total=8589934592, available=2244653056, percent=73.9, used=4360724480, free=19161088, active=2228457472, inactive=2075557888, wired=2132267008)
2020-11-06 12:04:42,964:INFO:Physical Core: 4
2020-11-06 12:04:42,964:INFO:Logical Core: 8
2020-11-06 12:04:42,964:INFO:Checking libraries
2020-11-06 12:04:42,964:INFO:pd==1.0.5
2020-11-06 12:04:42,964:INFO:numpy==1.18.5
2020-11-06 12:04:42,964:INFO:sklearn==0.23.2
2020-11-06 12:04:43,568:INFO:xgboost==1.2.0
2020-11-06 12:04:43,568:INFO:lightgbm==2.3.1
2020-11-06 12:04:43,593:INFO:catboost==0.24.1
2020-11-06 12:04:44,322:INFO:mlflow==1.11.0
2020-11-06 12:04:44,322:INFO:Checking Exceptions
2020-11-06 12:04:44,322:INFO:Declaring global variables
2020-11-06 12:04:44,322:INFO:USI: 6b57
2020-11-06 12:04:44,322:INFO:pycaret_globals: {'master_model_container', 'y', 'X', '_internal_pipeline', 'X_train', 'stratify_param', 'seed', 'USI', 'experiment__', '_all_models_internal', 'fix_imbalance_method_param', 'logging_param', 'gpu_param', 'display_container', 'fold_groups_param', 'X_test', 'create_model_container', 'y_test', '_all_metrics', 'imputation_regressor', 'y_train', '_ml_usecase', 'transform_target_param', 'transform_target_method_param', 'html_param', 'fold_param', 'pycaret_globals', 'exp_name_log', 'target_param', 'data_before_preprocess', '_gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance_param', 'imputation_classifier', 'iterative_imputation_iters_param', 'fold_generator', 'prep_pipe', '_available_plots', 'fold_shuffle_param', 'log_plots_param', '_all_models'}
2020-11-06 12:04:44,322:INFO:Preparing display monitor
2020-11-06 12:04:44,323:INFO:Preparing display monitor
2020-11-06 12:04:44,337:INFO:Importing libraries
2020-11-06 12:04:44,337:INFO:Copying data for preprocessing
2020-11-06 12:04:44,346:INFO:Declaring preprocessing parameters
2020-11-06 12:04:44,347:INFO:Setting up iterative imputation
2020-11-06 12:04:44,582:INFO:Creating preprocessing pipeline
2020-11-06 12:04:44,594:INFO:Preprocessing pipeline created successfully
2020-11-06 12:04:44,594:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-06 12:04:44,594:INFO:Creating global containers
2020-11-06 12:04:44,597:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-06 12:04:44,668:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-06 12:04:45,248:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-06 12:04:45,440:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-06 12:04:46,369:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-06 12:04:46,515:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-06 12:04:46,615:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-06 12:04:46,727:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-06 12:04:46,824:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-06 12:04:46,919:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-06 12:04:47,013:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-06 12:04:47,167:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-06 12:04:47,320:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-06 12:04:47,449:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-06 12:04:47,644:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-06 12:04:47,757:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-06 12:04:47,901:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-06 12:04:48,012:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-06 12:04:48,115:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-06 12:04:48,211:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-06 12:04:48,333:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-06 12:04:48,469:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-06 12:04:48,576:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-06 12:04:48,683:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-06 12:04:48,799:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-06 12:04:48,905:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-06 12:04:49,004:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-06 12:04:49,110:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-06 12:04:49,207:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-06 12:04:49,434:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-06 12:04:49,701:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-06 12:04:49,951:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-06 12:04:50,574:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-06 12:04:50,894:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-06 12:04:51,794:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-06 12:04:52,377:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-06 12:04:52,941:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-06 12:04:53,454:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-06 12:04:53,718:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-06 12:04:53,939:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-06 12:04:54,132:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-06 12:04:54,284:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-06 12:04:54,517:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-06 12:04:54,638:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-06 12:04:54,782:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-06 12:04:55,096:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-06 12:04:55,224:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-06 12:04:55,339:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-06 12:04:55,624:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-06 12:04:55,948:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-06 12:04:56,068:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-06 12:04:58,315:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-06 12:04:58,409:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-06 12:04:58,487:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-06 12:04:58,567:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-06 12:04:58,645:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-06 12:04:58,723:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-06 12:04:58,801:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-06 12:04:58,883:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-06 12:04:58,967:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-06 12:04:59,043:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-06 12:04:59,122:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-06 12:04:59,202:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-06 12:04:59,280:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-06 12:04:59,360:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-06 12:04:59,438:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-06 12:04:59,515:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-06 12:04:59,593:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-06 12:04:59,671:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-06 12:04:59,749:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-06 12:04:59,827:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-06 12:04:59,902:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-06 12:04:59,977:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-06 12:05:00,052:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-06 12:05:00,128:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-06 12:05:00,214:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-06 12:05:00,302:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-06 12:05:00,386:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-06 12:05:00,478:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-06 12:05:00,583:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-06 12:05:00,675:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-06 12:05:00,767:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-06 12:05:00,855:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-06 12:05:00,946:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-06 12:05:01,038:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-06 12:05:01,128:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-06 12:05:01,217:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-06 12:05:01,308:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-06 12:05:01,398:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-06 12:05:01,489:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-06 12:05:01,574:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-06 12:05:01,663:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-06 12:05:01,759:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-06 12:05:01,853:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-06 12:05:01,941:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-06 12:05:02,029:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-06 12:05:02,116:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-06 12:05:02,204:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-06 12:05:02,290:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-06 12:05:02,376:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-06 12:05:02,461:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-06 12:05:02,618:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-06 12:05:02,711:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-06 12:05:02,806:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-06 12:05:02,894:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-06 12:05:02,982:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-06 12:05:03,066:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-06 12:05:03,153:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-06 12:05:03,237:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-06 12:05:03,328:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-06 12:05:03,419:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-06 12:05:03,539:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-06 12:05:03,638:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-06 12:05:03,741:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-06 12:05:03,838:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-06 12:05:03,936:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-06 12:05:04,023:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-06 12:05:04,108:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-06 12:05:04,196:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-06 12:05:04,288:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-06 12:05:04,388:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-06 12:05:04,488:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-06 12:05:04,580:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-06 12:05:04,665:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-06 12:05:04,753:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-06 12:05:04,849:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-06 12:05:04,938:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-06 12:05:05,057:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-06 12:05:05,166:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-06 12:05:05,289:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-06 12:05:05,391:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-06 12:05:05,485:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-06 12:05:05,576:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-06 12:05:05,674:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-06 12:05:05,795:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-06 12:05:05,921:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-06 12:05:06,044:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-06 12:05:06,155:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-06 12:05:06,258:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-06 12:05:06,359:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-06 12:05:06,459:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-06 12:05:06,560:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-06 12:05:06,653:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-06 12:05:06,752:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-06 12:05:06,843:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-06 12:05:06,933:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-06 12:05:07,023:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-06 12:05:07,121:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-06 12:05:07,208:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-06 12:05:07,294:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-06 12:05:07,380:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-06 12:05:07,732:INFO:Creating grid variables
2020-11-06 12:05:08,017:INFO:create_model_container: 0
2020-11-06 12:05:08,025:INFO:master_model_container: 0
2020-11-06 12:05:08,025:INFO:display_container: 0
2020-11-06 12:05:08,054:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-06 12:05:08,054:INFO:setup() succesfully completed......................................
2020-11-06 12:05:27,784:INFO:Initializing get_config()
2020-11-06 12:05:27,784:INFO:get_config(variable=X_train)
2020-11-06 12:05:27,789:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday   Saturday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  95.706665   
290   89.524284   91.468575   87.825432   97.618568   94.757272  95.238571   
121   94.058571  100.000000   94.127144   96.427498   96.666664  94.443336   
113   98.461998  100.000000  100.000000   98.571426   97.727501  93.500000   
170   97.904259  100.000000   96.207530  100.000000  100.000000  94.445000   
..          ...         ...         ...         ...         ...        ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000  95.577141   
427   91.537498   94.424980   95.738747   94.977776   94.047501  92.708748   
243   94.443336  100.000000   97.500000   93.559998  100.000000  94.624008   
258   90.427139   92.855003   94.431114   95.446251   84.709999  91.531946   
341  100.000000   98.333336   97.910120   94.839996   99.266625  97.916664   

     Sunday_multiply_Friday  Friday_multiply_Sunday  \
97              9738.843296             9738.843296   
290             8188.658676             8188.658676   
121             9405.857086             9405.857086   
113             9846.199799             9846.199799   
170             9790.425889             9790.425889   
..                      ...                     ...   
124             9198.381127             9198.381127   
427             8643.426427             8643.426427   
243             9444.333649             9444.333649   
258             8396.612322             8396.612322   
341             9833.333588             9833.333588   

     Wednesday_multiply_Tuesday  
97                  9267.749786  
290                 9250.069283  
121                 9321.324548  
113                 9633.139163  
170                10000.000000  
..                          ...  
124                 8973.125173  
427                 8932.422406  
243                 9355.999756  
258                 8085.251828  
341                 9414.446332  

[266 rows x 9 columns]
2020-11-06 12:05:27,789:INFO:get_config() succesfully completed......................................
2020-11-06 12:05:46,675:INFO:Initializing compare_models()
2020-11-06 12:05:46,675:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-11-06 12:05:46,675:INFO:Checking exceptions
2020-11-06 12:05:46,677:INFO:Preparing display monitor
2020-11-06 12:05:46,677:INFO:Preparing display monitor
2020-11-06 12:05:46,702:INFO:Initializing Logistic Regression
2020-11-06 12:05:46,702:INFO:Total runtime is 3.548463185628255e-06 minutes
2020-11-06 12:05:46,709:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:46,709:INFO:Initializing create_model()
2020-11-06 12:05:46,709:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:46,709:INFO:Checking exceptions
2020-11-06 12:05:46,709:INFO:Importing libraries
2020-11-06 12:05:46,709:INFO:Copying training dataset
2020-11-06 12:05:46,710:INFO:Defining folds
2020-11-06 12:05:46,710:INFO:Declaring metric variables
2020-11-06 12:05:46,716:INFO:Importing untrained model
2020-11-06 12:05:46,722:INFO:Logistic Regression Imported succesfully
2020-11-06 12:05:46,735:INFO:Starting cross validation
2020-11-06 12:05:46,736:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:52,016:INFO:Calculating mean and std
2020-11-06 12:05:52,022:INFO:Creating metrics dataframe
2020-11-06 12:05:52,031:INFO:Uploading results into container
2020-11-06 12:05:52,031:INFO:Uploading model into container now
2020-11-06 12:05:52,031:INFO:create_model_container: 1
2020-11-06 12:05:52,031:INFO:master_model_container: 1
2020-11-06 12:05:52,031:INFO:display_container: 1
2020-11-06 12:05:52,032:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-11-06 12:05:52,032:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:52,159:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:52,159:INFO:Creating metrics dataframe
2020-11-06 12:05:52,175:INFO:Initializing K Neighbors Classifier
2020-11-06 12:05:52,176:INFO:Total runtime is 0.09123373031616211 minutes
2020-11-06 12:05:52,187:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:52,187:INFO:Initializing create_model()
2020-11-06 12:05:52,188:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:52,188:INFO:Checking exceptions
2020-11-06 12:05:52,188:INFO:Importing libraries
2020-11-06 12:05:52,188:INFO:Copying training dataset
2020-11-06 12:05:52,189:INFO:Defining folds
2020-11-06 12:05:52,189:INFO:Declaring metric variables
2020-11-06 12:05:52,197:INFO:Importing untrained model
2020-11-06 12:05:52,204:INFO:K Neighbors Classifier Imported succesfully
2020-11-06 12:05:52,217:INFO:Starting cross validation
2020-11-06 12:05:52,217:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:52,340:INFO:Calculating mean and std
2020-11-06 12:05:52,341:INFO:Creating metrics dataframe
2020-11-06 12:05:52,345:INFO:Uploading results into container
2020-11-06 12:05:52,345:INFO:Uploading model into container now
2020-11-06 12:05:52,345:INFO:create_model_container: 2
2020-11-06 12:05:52,345:INFO:master_model_container: 2
2020-11-06 12:05:52,345:INFO:display_container: 1
2020-11-06 12:05:52,346:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-11-06 12:05:52,346:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:52,430:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:52,430:INFO:Creating metrics dataframe
2020-11-06 12:05:52,447:INFO:Initializing Naive Bayes
2020-11-06 12:05:52,447:INFO:Total runtime is 0.09575615326563518 minutes
2020-11-06 12:05:52,455:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:52,456:INFO:Initializing create_model()
2020-11-06 12:05:52,456:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:52,456:INFO:Checking exceptions
2020-11-06 12:05:52,456:INFO:Importing libraries
2020-11-06 12:05:52,456:INFO:Copying training dataset
2020-11-06 12:05:52,457:INFO:Defining folds
2020-11-06 12:05:52,457:INFO:Declaring metric variables
2020-11-06 12:05:52,464:INFO:Importing untrained model
2020-11-06 12:05:52,471:INFO:Naive Bayes Imported succesfully
2020-11-06 12:05:52,484:INFO:Starting cross validation
2020-11-06 12:05:52,484:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:52,552:INFO:Calculating mean and std
2020-11-06 12:05:52,553:INFO:Creating metrics dataframe
2020-11-06 12:05:52,557:INFO:Uploading results into container
2020-11-06 12:05:52,557:INFO:Uploading model into container now
2020-11-06 12:05:52,557:INFO:create_model_container: 3
2020-11-06 12:05:52,557:INFO:master_model_container: 3
2020-11-06 12:05:52,558:INFO:display_container: 1
2020-11-06 12:05:52,558:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-11-06 12:05:52,558:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:52,648:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:52,649:INFO:Creating metrics dataframe
2020-11-06 12:05:52,667:INFO:Initializing Decision Tree Classifier
2020-11-06 12:05:52,667:INFO:Total runtime is 0.09942666689554851 minutes
2020-11-06 12:05:52,675:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:52,675:INFO:Initializing create_model()
2020-11-06 12:05:52,675:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:52,675:INFO:Checking exceptions
2020-11-06 12:05:52,676:INFO:Importing libraries
2020-11-06 12:05:52,676:INFO:Copying training dataset
2020-11-06 12:05:52,677:INFO:Defining folds
2020-11-06 12:05:52,677:INFO:Declaring metric variables
2020-11-06 12:05:52,693:INFO:Importing untrained model
2020-11-06 12:05:52,709:INFO:Decision Tree Classifier Imported succesfully
2020-11-06 12:05:52,742:INFO:Starting cross validation
2020-11-06 12:05:52,742:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:52,860:INFO:Calculating mean and std
2020-11-06 12:05:52,861:INFO:Creating metrics dataframe
2020-11-06 12:05:52,867:INFO:Uploading results into container
2020-11-06 12:05:52,867:INFO:Uploading model into container now
2020-11-06 12:05:52,867:INFO:create_model_container: 4
2020-11-06 12:05:52,867:INFO:master_model_container: 4
2020-11-06 12:05:52,867:INFO:display_container: 1
2020-11-06 12:05:52,868:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-11-06 12:05:52,868:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:52,968:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:52,968:INFO:Creating metrics dataframe
2020-11-06 12:05:52,997:INFO:Initializing SVM - Linear Kernel
2020-11-06 12:05:52,997:INFO:Total runtime is 0.10492813189824422 minutes
2020-11-06 12:05:53,009:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:53,009:INFO:Initializing create_model()
2020-11-06 12:05:53,009:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:53,010:INFO:Checking exceptions
2020-11-06 12:05:53,010:INFO:Importing libraries
2020-11-06 12:05:53,010:INFO:Copying training dataset
2020-11-06 12:05:53,011:INFO:Defining folds
2020-11-06 12:05:53,011:INFO:Declaring metric variables
2020-11-06 12:05:53,018:INFO:Importing untrained model
2020-11-06 12:05:53,027:INFO:SVM - Linear Kernel Imported succesfully
2020-11-06 12:05:53,047:INFO:Starting cross validation
2020-11-06 12:05:53,048:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:53,127:INFO:Calculating mean and std
2020-11-06 12:05:53,128:INFO:Creating metrics dataframe
2020-11-06 12:05:53,132:INFO:Uploading results into container
2020-11-06 12:05:53,132:INFO:Uploading model into container now
2020-11-06 12:05:53,132:INFO:create_model_container: 5
2020-11-06 12:05:53,133:INFO:master_model_container: 5
2020-11-06 12:05:53,133:INFO:display_container: 1
2020-11-06 12:05:53,133:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-11-06 12:05:53,133:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:53,206:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:53,207:INFO:Creating metrics dataframe
2020-11-06 12:05:53,238:INFO:Initializing Ridge Classifier
2020-11-06 12:05:53,238:INFO:Total runtime is 0.10894388357798258 minutes
2020-11-06 12:05:53,249:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:53,250:INFO:Initializing create_model()
2020-11-06 12:05:53,250:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:53,250:INFO:Checking exceptions
2020-11-06 12:05:53,251:INFO:Importing libraries
2020-11-06 12:05:53,251:INFO:Copying training dataset
2020-11-06 12:05:53,252:INFO:Defining folds
2020-11-06 12:05:53,252:INFO:Declaring metric variables
2020-11-06 12:05:53,264:INFO:Importing untrained model
2020-11-06 12:05:53,276:INFO:Ridge Classifier Imported succesfully
2020-11-06 12:05:53,311:INFO:Starting cross validation
2020-11-06 12:05:53,312:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:53,433:INFO:Calculating mean and std
2020-11-06 12:05:53,434:INFO:Creating metrics dataframe
2020-11-06 12:05:53,441:INFO:Uploading results into container
2020-11-06 12:05:53,441:INFO:Uploading model into container now
2020-11-06 12:05:53,441:INFO:create_model_container: 6
2020-11-06 12:05:53,441:INFO:master_model_container: 6
2020-11-06 12:05:53,441:INFO:display_container: 1
2020-11-06 12:05:53,442:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-11-06 12:05:53,442:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:53,580:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:53,580:INFO:Creating metrics dataframe
2020-11-06 12:05:53,641:INFO:Initializing Random Forest Classifier
2020-11-06 12:05:53,641:INFO:Total runtime is 0.11565785010655721 minutes
2020-11-06 12:05:53,653:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:53,654:INFO:Initializing create_model()
2020-11-06 12:05:53,654:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:53,654:INFO:Checking exceptions
2020-11-06 12:05:53,654:INFO:Importing libraries
2020-11-06 12:05:53,654:INFO:Copying training dataset
2020-11-06 12:05:53,656:INFO:Defining folds
2020-11-06 12:05:53,656:INFO:Declaring metric variables
2020-11-06 12:05:53,668:INFO:Importing untrained model
2020-11-06 12:05:53,680:INFO:Random Forest Classifier Imported succesfully
2020-11-06 12:05:53,699:INFO:Starting cross validation
2020-11-06 12:05:53,699:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:54,707:INFO:Calculating mean and std
2020-11-06 12:05:54,708:INFO:Creating metrics dataframe
2020-11-06 12:05:54,714:INFO:Uploading results into container
2020-11-06 12:05:54,714:INFO:Uploading model into container now
2020-11-06 12:05:54,714:INFO:create_model_container: 7
2020-11-06 12:05:54,714:INFO:master_model_container: 7
2020-11-06 12:05:54,714:INFO:display_container: 1
2020-11-06 12:05:54,715:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-06 12:05:54,715:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:54,797:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:54,798:INFO:Creating metrics dataframe
2020-11-06 12:05:54,837:INFO:Initializing Quadratic Discriminant Analysis
2020-11-06 12:05:54,837:INFO:Total runtime is 0.1355920155843099 minutes
2020-11-06 12:05:54,848:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:54,848:INFO:Initializing create_model()
2020-11-06 12:05:54,848:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:54,849:INFO:Checking exceptions
2020-11-06 12:05:54,849:INFO:Importing libraries
2020-11-06 12:05:54,849:INFO:Copying training dataset
2020-11-06 12:05:54,850:INFO:Defining folds
2020-11-06 12:05:54,850:INFO:Declaring metric variables
2020-11-06 12:05:54,861:INFO:Importing untrained model
2020-11-06 12:05:54,871:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-11-06 12:05:54,891:INFO:Starting cross validation
2020-11-06 12:05:54,892:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:54,960:INFO:Calculating mean and std
2020-11-06 12:05:54,961:INFO:Creating metrics dataframe
2020-11-06 12:05:54,965:INFO:Uploading results into container
2020-11-06 12:05:54,965:INFO:Uploading model into container now
2020-11-06 12:05:54,965:INFO:create_model_container: 8
2020-11-06 12:05:54,966:INFO:master_model_container: 8
2020-11-06 12:05:54,966:INFO:display_container: 1
2020-11-06 12:05:54,966:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-11-06 12:05:54,966:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:55,043:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:55,044:INFO:Creating metrics dataframe
2020-11-06 12:05:55,080:INFO:Initializing Ada Boost Classifier
2020-11-06 12:05:55,080:INFO:Total runtime is 0.1396414001782735 minutes
2020-11-06 12:05:55,091:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:55,091:INFO:Initializing create_model()
2020-11-06 12:05:55,091:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:55,092:INFO:Checking exceptions
2020-11-06 12:05:55,092:INFO:Importing libraries
2020-11-06 12:05:55,092:INFO:Copying training dataset
2020-11-06 12:05:55,093:INFO:Defining folds
2020-11-06 12:05:55,093:INFO:Declaring metric variables
2020-11-06 12:05:55,104:INFO:Importing untrained model
2020-11-06 12:05:55,113:INFO:Ada Boost Classifier Imported succesfully
2020-11-06 12:05:55,133:INFO:Starting cross validation
2020-11-06 12:05:55,134:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:55,692:INFO:Calculating mean and std
2020-11-06 12:05:55,693:INFO:Creating metrics dataframe
2020-11-06 12:05:55,701:INFO:Uploading results into container
2020-11-06 12:05:55,701:INFO:Uploading model into container now
2020-11-06 12:05:55,702:INFO:create_model_container: 9
2020-11-06 12:05:55,702:INFO:master_model_container: 9
2020-11-06 12:05:55,702:INFO:display_container: 1
2020-11-06 12:05:55,703:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-11-06 12:05:55,703:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:55,783:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:55,784:INFO:Creating metrics dataframe
2020-11-06 12:05:55,822:INFO:Initializing Gradient Boosting Classifier
2020-11-06 12:05:55,823:INFO:Total runtime is 0.15201340119043985 minutes
2020-11-06 12:05:55,833:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:55,833:INFO:Initializing create_model()
2020-11-06 12:05:55,834:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:55,834:INFO:Checking exceptions
2020-11-06 12:05:55,834:INFO:Importing libraries
2020-11-06 12:05:55,834:INFO:Copying training dataset
2020-11-06 12:05:55,835:INFO:Defining folds
2020-11-06 12:05:55,835:INFO:Declaring metric variables
2020-11-06 12:05:55,844:INFO:Importing untrained model
2020-11-06 12:05:55,856:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-06 12:05:55,876:INFO:Starting cross validation
2020-11-06 12:05:55,877:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:56,400:INFO:Calculating mean and std
2020-11-06 12:05:56,401:INFO:Creating metrics dataframe
2020-11-06 12:05:56,405:INFO:Uploading results into container
2020-11-06 12:05:56,405:INFO:Uploading model into container now
2020-11-06 12:05:56,405:INFO:create_model_container: 10
2020-11-06 12:05:56,406:INFO:master_model_container: 10
2020-11-06 12:05:56,406:INFO:display_container: 1
2020-11-06 12:05:56,406:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-06 12:05:56,406:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:56,481:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:56,481:INFO:Creating metrics dataframe
2020-11-06 12:05:56,532:INFO:Initializing Linear Discriminant Analysis
2020-11-06 12:05:56,532:INFO:Total runtime is 0.16383916934331258 minutes
2020-11-06 12:05:56,543:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:56,544:INFO:Initializing create_model()
2020-11-06 12:05:56,544:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:56,544:INFO:Checking exceptions
2020-11-06 12:05:56,545:INFO:Importing libraries
2020-11-06 12:05:56,545:INFO:Copying training dataset
2020-11-06 12:05:56,546:INFO:Defining folds
2020-11-06 12:05:56,546:INFO:Declaring metric variables
2020-11-06 12:05:56,556:INFO:Importing untrained model
2020-11-06 12:05:56,566:INFO:Linear Discriminant Analysis Imported succesfully
2020-11-06 12:05:56,584:INFO:Starting cross validation
2020-11-06 12:05:56,584:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:56,669:INFO:Calculating mean and std
2020-11-06 12:05:56,670:INFO:Creating metrics dataframe
2020-11-06 12:05:56,675:INFO:Uploading results into container
2020-11-06 12:05:56,676:INFO:Uploading model into container now
2020-11-06 12:05:56,676:INFO:create_model_container: 11
2020-11-06 12:05:56,676:INFO:master_model_container: 11
2020-11-06 12:05:56,676:INFO:display_container: 1
2020-11-06 12:05:56,676:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-11-06 12:05:56,676:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:56,780:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:56,781:INFO:Creating metrics dataframe
2020-11-06 12:05:56,829:INFO:Initializing Extra Trees Classifier
2020-11-06 12:05:56,829:INFO:Total runtime is 0.16879263321558635 minutes
2020-11-06 12:05:56,842:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:56,842:INFO:Initializing create_model()
2020-11-06 12:05:56,842:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:56,842:INFO:Checking exceptions
2020-11-06 12:05:56,842:INFO:Importing libraries
2020-11-06 12:05:56,842:INFO:Copying training dataset
2020-11-06 12:05:56,843:INFO:Defining folds
2020-11-06 12:05:56,843:INFO:Declaring metric variables
2020-11-06 12:05:56,852:INFO:Importing untrained model
2020-11-06 12:05:56,863:INFO:Extra Trees Classifier Imported succesfully
2020-11-06 12:05:56,881:INFO:Starting cross validation
2020-11-06 12:05:56,882:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:05:57,887:INFO:Calculating mean and std
2020-11-06 12:05:57,889:INFO:Creating metrics dataframe
2020-11-06 12:05:57,895:INFO:Uploading results into container
2020-11-06 12:05:57,895:INFO:Uploading model into container now
2020-11-06 12:05:57,895:INFO:create_model_container: 12
2020-11-06 12:05:57,896:INFO:master_model_container: 12
2020-11-06 12:05:57,896:INFO:display_container: 1
2020-11-06 12:05:57,896:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-06 12:05:57,896:INFO:create_model() succesfully completed......................................
2020-11-06 12:05:57,991:INFO:SubProcess create_model() end ==================================
2020-11-06 12:05:57,991:INFO:Creating metrics dataframe
2020-11-06 12:05:58,064:INFO:Initializing Extreme Gradient Boosting
2020-11-06 12:05:58,064:INFO:Total runtime is 0.18937806685765585 minutes
2020-11-06 12:05:58,075:INFO:SubProcess create_model() called ==================================
2020-11-06 12:05:58,075:INFO:Initializing create_model()
2020-11-06 12:05:58,075:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:05:58,076:INFO:Checking exceptions
2020-11-06 12:05:58,076:INFO:Importing libraries
2020-11-06 12:05:58,076:INFO:Copying training dataset
2020-11-06 12:05:58,077:INFO:Defining folds
2020-11-06 12:05:58,077:INFO:Declaring metric variables
2020-11-06 12:05:58,088:INFO:Importing untrained model
2020-11-06 12:05:58,098:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-06 12:05:58,134:INFO:Starting cross validation
2020-11-06 12:05:58,137:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:06:00,195:INFO:Calculating mean and std
2020-11-06 12:06:00,196:INFO:Creating metrics dataframe
2020-11-06 12:06:00,201:INFO:Uploading results into container
2020-11-06 12:06:00,201:INFO:Uploading model into container now
2020-11-06 12:06:00,201:INFO:create_model_container: 13
2020-11-06 12:06:00,201:INFO:master_model_container: 13
2020-11-06 12:06:00,201:INFO:display_container: 1
2020-11-06 12:06:00,202:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-11-06 12:06:00,202:INFO:create_model() succesfully completed......................................
2020-11-06 12:06:00,281:INFO:SubProcess create_model() end ==================================
2020-11-06 12:06:00,281:INFO:Creating metrics dataframe
2020-11-06 12:06:00,345:INFO:Initializing Light Gradient Boosting Machine
2020-11-06 12:06:00,345:INFO:Total runtime is 0.22738341490427655 minutes
2020-11-06 12:06:00,354:INFO:SubProcess create_model() called ==================================
2020-11-06 12:06:00,355:INFO:Initializing create_model()
2020-11-06 12:06:00,355:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:06:00,355:INFO:Checking exceptions
2020-11-06 12:06:00,355:INFO:Importing libraries
2020-11-06 12:06:00,355:INFO:Copying training dataset
2020-11-06 12:06:00,356:INFO:Defining folds
2020-11-06 12:06:00,356:INFO:Declaring metric variables
2020-11-06 12:06:00,365:INFO:Importing untrained model
2020-11-06 12:06:00,374:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-06 12:06:00,394:INFO:Starting cross validation
2020-11-06 12:06:00,394:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:06:00,606:INFO:Calculating mean and std
2020-11-06 12:06:00,607:INFO:Creating metrics dataframe
2020-11-06 12:06:00,612:INFO:Uploading results into container
2020-11-06 12:06:00,612:INFO:Uploading model into container now
2020-11-06 12:06:00,612:INFO:create_model_container: 14
2020-11-06 12:06:00,612:INFO:master_model_container: 14
2020-11-06 12:06:00,613:INFO:display_container: 1
2020-11-06 12:06:00,613:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-06 12:06:00,613:INFO:create_model() succesfully completed......................................
2020-11-06 12:06:00,703:INFO:SubProcess create_model() end ==================================
2020-11-06 12:06:00,703:INFO:Creating metrics dataframe
2020-11-06 12:06:00,773:INFO:Initializing CatBoost Classifier
2020-11-06 12:06:00,773:INFO:Total runtime is 0.23452163537343346 minutes
2020-11-06 12:06:00,791:INFO:SubProcess create_model() called ==================================
2020-11-06 12:06:00,791:INFO:Initializing create_model()
2020-11-06 12:06:00,791:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bcddce6d0>, kwargs={})
2020-11-06 12:06:00,791:INFO:Checking exceptions
2020-11-06 12:06:00,792:INFO:Importing libraries
2020-11-06 12:06:00,792:INFO:Copying training dataset
2020-11-06 12:06:00,793:INFO:Defining folds
2020-11-06 12:06:00,793:INFO:Declaring metric variables
2020-11-06 12:06:00,809:INFO:Importing untrained model
2020-11-06 12:06:00,826:INFO:CatBoost Classifier Imported succesfully
2020-11-06 12:06:00,852:INFO:Starting cross validation
2020-11-06 12:06:00,853:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:06:20,418:INFO:Calculating mean and std
2020-11-06 12:06:20,423:INFO:Creating metrics dataframe
2020-11-06 12:06:20,434:INFO:Uploading results into container
2020-11-06 12:06:20,434:INFO:Uploading model into container now
2020-11-06 12:06:20,434:INFO:create_model_container: 15
2020-11-06 12:06:20,435:INFO:master_model_container: 15
2020-11-06 12:06:20,435:INFO:display_container: 1
2020-11-06 12:06:20,435:INFO:<catboost.core.CatBoostClassifier object at 0x7f8bd4c80730>
2020-11-06 12:06:20,435:INFO:create_model() succesfully completed......................................
2020-11-06 12:06:20,702:INFO:SubProcess create_model() end ==================================
2020-11-06 12:06:20,702:INFO:Creating metrics dataframe
2020-11-06 12:06:20,780:INFO:Initializing create_model()
2020-11-06 12:06:20,780:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-06 12:06:20,780:INFO:Checking exceptions
2020-11-06 12:06:20,781:INFO:Importing libraries
2020-11-06 12:06:20,781:INFO:Copying training dataset
2020-11-06 12:06:20,784:INFO:Defining folds
2020-11-06 12:06:20,784:INFO:Declaring metric variables
2020-11-06 12:06:20,784:INFO:Importing untrained model
2020-11-06 12:06:20,785:INFO:Declaring custom model
2020-11-06 12:06:20,785:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-06 12:06:20,786:INFO:Cross validation set to False
2020-11-06 12:06:20,786:INFO:Fitting Model
2020-11-06 12:06:20,903:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-11-06 12:06:20,903:INFO:create_models() succesfully completed......................................
2020-11-06 12:06:21,114:INFO:Initializing create_model()
2020-11-06 12:06:21,115:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-06 12:06:21,115:INFO:Checking exceptions
2020-11-06 12:06:21,115:INFO:Importing libraries
2020-11-06 12:06:21,115:INFO:Copying training dataset
2020-11-06 12:06:21,116:INFO:Defining folds
2020-11-06 12:06:21,116:INFO:Declaring metric variables
2020-11-06 12:06:21,116:INFO:Importing untrained model
2020-11-06 12:06:21,116:INFO:Declaring custom model
2020-11-06 12:06:21,117:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-06 12:06:21,118:INFO:Cross validation set to False
2020-11-06 12:06:21,118:INFO:Fitting Model
2020-11-06 12:06:21,149:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-06 12:06:21,149:INFO:create_models() succesfully completed......................................
2020-11-06 12:06:21,464:INFO:create_model_container: 15
2020-11-06 12:06:21,464:INFO:master_model_container: 15
2020-11-06 12:06:21,464:INFO:display_container: 1
2020-11-06 12:06:21,469:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)]
2020-11-06 12:06:21,469:INFO:compare_models() succesfully completed......................................
2020-11-06 12:13:28,934:INFO:Initializing tune_model()
2020-11-06 12:13:28,936:INFO:tune_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-06 12:13:28,936:INFO:Checking exceptions
2020-11-06 12:13:29,527:INFO:Preparing display monitor
2020-11-06 12:13:29,547:INFO:Copying training dataset
2020-11-06 12:13:29,550:INFO:Checking base model
2020-11-06 12:13:29,552:INFO:Base model : Extreme Gradient Boosting
2020-11-06 12:13:29,561:INFO:Declaring metric variables
2020-11-06 12:13:29,569:INFO:Defining Hyperparameters
2020-11-06 12:13:29,846:INFO:Tuning with n_jobs=-1
2020-11-06 12:13:29,847:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-06 12:14:08,263:INFO:best_params: {'actual_estimator__learning_rate': 0.33105673747894604, 'actual_estimator__n_estimators': 256, 'actual_estimator__subsample': 0.6979377908954965, 'actual_estimator__max_depth': 2, 'actual_estimator__colsample_bytree': 0.900897949104049, 'actual_estimator__min_child_weight': 1, 'actual_estimator__reg_alpha': 0.005244332895220059, 'actual_estimator__reg_lambda': 1.1006993553893947, 'actual_estimator__scale_pos_weight': 25.32037701357194}
2020-11-06 12:14:08,264:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-06 12:14:08,268:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4446, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-06 12:14:08,269:INFO:Random search completed
2020-11-06 12:14:08,269:INFO:SubProcess create_model() called ==================================
2020-11-06 12:14:08,270:INFO:Initializing create_model()
2020-11-06 12:14:08,270:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bd4c80790>, kwargs={'learning_rate': 0.33105673747894604, 'n_estimators': 256, 'subsample': 0.6979377908954965, 'max_depth': 2, 'colsample_bytree': 0.900897949104049, 'min_child_weight': 1, 'reg_alpha': 0.005244332895220059, 'reg_lambda': 1.1006993553893947, 'scale_pos_weight': 25.32037701357194})
2020-11-06 12:14:08,270:INFO:Checking exceptions
2020-11-06 12:14:08,270:INFO:Importing libraries
2020-11-06 12:14:08,270:INFO:Copying training dataset
2020-11-06 12:14:08,271:INFO:Defining folds
2020-11-06 12:14:08,271:INFO:Declaring metric variables
2020-11-06 12:14:08,279:INFO:Importing untrained model
2020-11-06 12:14:08,279:INFO:Declaring custom model
2020-11-06 12:14:08,287:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-06 12:14:08,301:INFO:Starting cross validation
2020-11-06 12:14:08,302:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:14:14,826:INFO:Calculating mean and std
2020-11-06 12:14:14,838:INFO:Creating metrics dataframe
2020-11-06 12:14:14,920:INFO:Finalizing model
2020-11-06 12:14:15,026:INFO:Uploading results into container
2020-11-06 12:14:15,027:INFO:Uploading model into container now
2020-11-06 12:14:15,027:INFO:create_model_container: 16
2020-11-06 12:14:15,027:INFO:master_model_container: 16
2020-11-06 12:14:15,027:INFO:display_container: 2
2020-11-06 12:14:15,029:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-06 12:14:15,029:INFO:create_model() succesfully completed......................................
2020-11-06 12:14:15,495:INFO:SubProcess create_model() end ==================================
2020-11-06 12:14:15,526:INFO:create_model_container: 16
2020-11-06 12:14:15,526:INFO:master_model_container: 16
2020-11-06 12:14:15,526:INFO:display_container: 2
2020-11-06 12:14:15,528:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-06 12:14:15,528:INFO:tune_model() succesfully completed......................................
2020-11-06 12:14:15,638:INFO:Initializing tune_model()
2020-11-06 12:14:15,638:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-06 12:14:15,638:INFO:Checking exceptions
2020-11-06 12:14:15,642:INFO:Preparing display monitor
2020-11-06 12:14:15,705:INFO:Copying training dataset
2020-11-06 12:14:15,707:INFO:Checking base model
2020-11-06 12:14:15,708:INFO:Base model : Light Gradient Boosting Machine
2020-11-06 12:14:15,718:INFO:Declaring metric variables
2020-11-06 12:14:15,728:INFO:Defining Hyperparameters
2020-11-06 12:14:15,953:INFO:Tuning with n_jobs=-1
2020-11-06 12:14:15,959:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-06 12:14:39,855:INFO:best_params: {'actual_estimator__num_leaves': 113, 'actual_estimator__learning_rate': 0.3297250119591679, 'actual_estimator__n_estimators': 20, 'actual_estimator__min_split_gain': 0.6344744541627398, 'actual_estimator__reg_alpha': 2.575292084210646e-10, 'actual_estimator__reg_lambda': 9.017759620445805e-10, 'actual_estimator__min_data_in_leaf': 6243, 'actual_estimator__feature_fraction': 0.5106726590297773, 'actual_estimator__bagging_fraction': 0.9088143050094273, 'actual_estimator__bagging_freq': 4, 'actual_estimator__min_child_samples': 96}
2020-11-06 12:14:39,856:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-06 12:14:39,856:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4446, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-06 12:14:39,858:INFO:Random search completed
2020-11-06 12:14:39,858:INFO:SubProcess create_model() called ==================================
2020-11-06 12:14:39,860:INFO:Initializing create_model()
2020-11-06 12:14:39,860:INFO:create_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bb80c4fd0>, kwargs={'num_leaves': 113, 'learning_rate': 0.3297250119591679, 'n_estimators': 20, 'min_split_gain': 0.6344744541627398, 'reg_alpha': 2.575292084210646e-10, 'reg_lambda': 9.017759620445805e-10, 'min_data_in_leaf': 6243, 'feature_fraction': 0.5106726590297773, 'bagging_fraction': 0.9088143050094273, 'bagging_freq': 4, 'min_child_samples': 96})
2020-11-06 12:14:39,860:INFO:Checking exceptions
2020-11-06 12:14:39,860:INFO:Importing libraries
2020-11-06 12:14:39,860:INFO:Copying training dataset
2020-11-06 12:14:39,862:INFO:Defining folds
2020-11-06 12:14:39,862:INFO:Declaring metric variables
2020-11-06 12:14:39,880:INFO:Importing untrained model
2020-11-06 12:14:39,881:INFO:Declaring custom model
2020-11-06 12:14:39,898:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-06 12:14:39,932:INFO:Starting cross validation
2020-11-06 12:14:39,933:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:14:45,334:INFO:Calculating mean and std
2020-11-06 12:14:45,337:INFO:Creating metrics dataframe
2020-11-06 12:14:45,358:INFO:Finalizing model
2020-11-06 12:14:45,372:INFO:Uploading results into container
2020-11-06 12:14:45,373:INFO:Uploading model into container now
2020-11-06 12:14:45,373:INFO:create_model_container: 17
2020-11-06 12:14:45,373:INFO:master_model_container: 17
2020-11-06 12:14:45,373:INFO:display_container: 3
2020-11-06 12:14:45,374:INFO:LGBMClassifier(bagging_fraction=0.9088143050094273, bagging_freq=4,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.5106726590297773, importance_type='split',
               learning_rate=0.3297250119591679, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001,
               min_data_in_leaf=6243, min_split_gain=0.6344744541627398,
               n_estimators=20, n_jobs=-1, num_leaves=113, objective=None,
               random_state=786, reg_alpha=2.575292084210646e-10,
               reg_lambda=9.017759620445805e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-11-06 12:14:45,374:INFO:create_model() succesfully completed......................................
2020-11-06 12:14:46,206:INFO:SubProcess create_model() end ==================================
2020-11-06 12:14:46,246:INFO:create_model_container: 17
2020-11-06 12:14:46,247:INFO:master_model_container: 17
2020-11-06 12:14:46,248:INFO:display_container: 3
2020-11-06 12:14:46,249:INFO:LGBMClassifier(bagging_fraction=0.9088143050094273, bagging_freq=4,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.5106726590297773, importance_type='split',
               learning_rate=0.3297250119591679, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001,
               min_data_in_leaf=6243, min_split_gain=0.6344744541627398,
               n_estimators=20, n_jobs=-1, num_leaves=113, objective=None,
               random_state=786, reg_alpha=2.575292084210646e-10,
               reg_lambda=9.017759620445805e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-11-06 12:14:46,249:INFO:tune_model() succesfully completed......................................
2020-11-06 12:14:46,790:INFO:Initializing blend_models()
2020-11-06 12:14:46,790:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), LGBMClassifier(bagging_fraction=0.9088143050094273, bagging_freq=4,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.5106726590297773, importance_type='split',
               learning_rate=0.3297250119591679, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001,
               min_data_in_leaf=6243, min_split_gain=0.6344744541627398,
               n_estimators=20, n_jobs=-1, num_leaves=113, objective=None,
               random_state=786, reg_alpha=2.575292084210646e-10,
               reg_lambda=9.017759620445805e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)], fold=5, round=4, choose_better=True, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-06 12:14:46,790:INFO:Checking exceptions
2020-11-06 12:14:46,793:INFO:Preparing display monitor
2020-11-06 12:14:46,868:INFO:Importing libraries
2020-11-06 12:14:46,868:INFO:Copying training dataset
2020-11-06 12:14:46,887:INFO:Getting model names
2020-11-06 12:14:46,911:INFO:SubProcess create_model() called ==================================
2020-11-06 12:14:46,943:INFO:Initializing create_model()
2020-11-06 12:14:46,943:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.900897949104049,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.33105673747894604,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=1,
                                                   missing=nan,
                                                   monotone_constraints=...
                                                    min_data_in_leaf=6243,
                                                    min_split_gain=0.6344744541627398,
                                                    n_estimators=20, n_jobs=-1,
                                                    num_leaves=113,
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=2.575292084210646e-10,
                                                    reg_lambda=9.017759620445805e-10,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bb82338e0>, kwargs={})
2020-11-06 12:14:46,943:INFO:Checking exceptions
2020-11-06 12:14:46,943:INFO:Importing libraries
2020-11-06 12:14:46,943:INFO:Copying training dataset
2020-11-06 12:14:46,947:INFO:Defining folds
2020-11-06 12:14:46,947:INFO:Declaring metric variables
2020-11-06 12:14:46,969:INFO:Importing untrained model
2020-11-06 12:14:46,969:INFO:Declaring custom model
2020-11-06 12:14:46,995:INFO:Voting Classifier Imported succesfully
2020-11-06 12:14:47,034:INFO:Starting cross validation
2020-11-06 12:14:47,035:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:14:50,563:INFO:Calculating mean and std
2020-11-06 12:14:50,564:INFO:Creating metrics dataframe
2020-11-06 12:14:50,579:INFO:Finalizing model
2020-11-06 12:14:50,678:INFO:Uploading results into container
2020-11-06 12:14:50,678:INFO:Uploading model into container now
2020-11-06 12:14:50,679:INFO:create_model_container: 18
2020-11-06 12:14:50,679:INFO:master_model_container: 18
2020-11-06 12:14:50,679:INFO:display_container: 4
2020-11-06 12:14:50,689:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.900897949104049,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.33105673747894604,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=1,
                                                   missing=nan,
                                                   monotone_constraints=...
                                                    min_data_in_leaf=6243,
                                                    min_split_gain=0.6344744541627398,
                                                    n_estimators=20, n_jobs=-1,
                                                    num_leaves=113,
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=2.575292084210646e-10,
                                                    reg_lambda=9.017759620445805e-10,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1])
2020-11-06 12:14:50,689:INFO:create_model() succesfully completed......................................
2020-11-06 12:14:50,824:INFO:SubProcess create_model() end ==================================
2020-11-06 12:14:50,824:INFO:choose_better activated
2020-11-06 12:14:50,839:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.900897949104049,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.33105673747894604,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=1,
                                                   missing=nan,
                                                   monotone_constraints=...
                                                    min_data_in_leaf=6243,
                                                    min_split_gain=0.6344744541627398,
                                                    n_estimators=20, n_jobs=-1,
                                                    num_leaves=113,
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=2.575292084210646e-10,
                                                    reg_lambda=9.017759620445805e-10,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1]) result for Accuracy is 0.7705
2020-11-06 12:14:50,840:INFO:SubProcess create_model() called ==================================
2020-11-06 12:14:50,842:INFO:Initializing create_model()
2020-11-06 12:14:50,842:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-06 12:14:50,842:INFO:Checking exceptions
2020-11-06 12:14:50,842:INFO:Importing libraries
2020-11-06 12:14:50,842:INFO:Copying training dataset
2020-11-06 12:14:50,843:INFO:Defining folds
2020-11-06 12:14:50,843:INFO:Declaring metric variables
2020-11-06 12:14:50,843:INFO:Importing untrained model
2020-11-06 12:14:50,843:INFO:Declaring custom model
2020-11-06 12:14:50,845:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-06 12:14:50,845:INFO:Starting cross validation
2020-11-06 12:14:50,845:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:14:51,749:INFO:Calculating mean and std
2020-11-06 12:14:51,750:INFO:Creating metrics dataframe
2020-11-06 12:14:51,757:INFO:Finalizing model
2020-11-06 12:14:51,842:INFO:Uploading results into container
2020-11-06 12:14:51,842:INFO:Uploading model into container now
2020-11-06 12:14:51,842:INFO:create_model_container: 19
2020-11-06 12:14:51,842:INFO:master_model_container: 19
2020-11-06 12:14:51,842:INFO:display_container: 5
2020-11-06 12:14:51,844:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-06 12:14:51,844:INFO:create_model() succesfully completed......................................
2020-11-06 12:14:51,935:INFO:SubProcess create_model() end ==================================
2020-11-06 12:14:51,938:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0) result for Accuracy is 0.778
2020-11-06 12:14:51,938:INFO:SubProcess create_model() called ==================================
2020-11-06 12:14:51,938:INFO:Initializing create_model()
2020-11-06 12:14:51,939:INFO:create_model(estimator=LGBMClassifier(bagging_fraction=0.9088143050094273, bagging_freq=4,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.5106726590297773, importance_type='split',
               learning_rate=0.3297250119591679, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001,
               min_data_in_leaf=6243, min_split_gain=0.6344744541627398,
               n_estimators=20, n_jobs=-1, num_leaves=113, objective=None,
               random_state=786, reg_alpha=2.575292084210646e-10,
               reg_lambda=9.017759620445805e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-06 12:14:51,939:INFO:Checking exceptions
2020-11-06 12:14:51,939:INFO:Importing libraries
2020-11-06 12:14:51,939:INFO:Copying training dataset
2020-11-06 12:14:51,939:INFO:Defining folds
2020-11-06 12:14:51,939:INFO:Declaring metric variables
2020-11-06 12:14:51,939:INFO:Importing untrained model
2020-11-06 12:14:51,939:INFO:Declaring custom model
2020-11-06 12:14:51,940:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-06 12:14:51,940:INFO:Starting cross validation
2020-11-06 12:14:51,940:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 12:14:51,990:INFO:Calculating mean and std
2020-11-06 12:14:51,991:INFO:Creating metrics dataframe
2020-11-06 12:14:51,995:INFO:Finalizing model
2020-11-06 12:14:52,000:INFO:Uploading results into container
2020-11-06 12:14:52,000:INFO:Uploading model into container now
2020-11-06 12:14:52,000:INFO:create_model_container: 20
2020-11-06 12:14:52,001:INFO:master_model_container: 20
2020-11-06 12:14:52,001:INFO:display_container: 5
2020-11-06 12:14:52,001:INFO:LGBMClassifier(bagging_fraction=0.9088143050094273, bagging_freq=4,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.5106726590297773, importance_type='split',
               learning_rate=0.3297250119591679, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001,
               min_data_in_leaf=6243, min_split_gain=0.6344744541627398,
               n_estimators=20, n_jobs=-1, num_leaves=113, objective=None,
               random_state=786, reg_alpha=2.575292084210646e-10,
               reg_lambda=9.017759620445805e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2020-11-06 12:14:52,001:INFO:create_model() succesfully completed......................................
2020-11-06 12:14:52,089:INFO:SubProcess create_model() end ==================================
2020-11-06 12:14:52,090:INFO:LGBMClassifier(bagging_fraction=0.9088143050094273, bagging_freq=4,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.5106726590297773, importance_type='split',
               learning_rate=0.3297250119591679, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001,
               min_data_in_leaf=6243, min_split_gain=0.6344744541627398,
               n_estimators=20, n_jobs=-1, num_leaves=113, objective=None,
               random_state=786, reg_alpha=2.575292084210646e-10,
               reg_lambda=9.017759620445805e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.4737
2020-11-06 12:14:52,093:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0) is best model
2020-11-06 12:14:52,093:INFO:choose_better completed
2020-11-06 12:14:52,119:INFO:create_model_container: 20
2020-11-06 12:14:52,119:INFO:master_model_container: 20
2020-11-06 12:14:52,119:INFO:display_container: 4
2020-11-06 12:14:52,121:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-06 12:14:52,122:INFO:blend_models() succesfully completed......................................
2020-11-06 12:14:52,278:INFO:Initializing optimize_threshold()
2020-11-06 12:14:52,278:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-100, false_negative=100)
2020-11-06 12:14:52,278:INFO:Importing libraries
2020-11-06 12:14:52,279:INFO:Checking exceptions
2020-11-06 12:14:52,284:INFO:Defining loss function
2020-11-06 12:14:52,284:INFO:Iteration starts at 0
2020-11-06 12:14:53,117:INFO:Figure ready for render
2020-11-06 12:14:53,269:INFO:optimize_threshold() succesfully completed......................................
2020-11-06 12:18:16,683:INFO:Initializing plot_model()
2020-11-06 12:18:16,685:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:16,685:INFO:Checking exceptions
2020-11-06 12:18:16,688:INFO:Initializing plot_model()
2020-11-06 12:18:16,688:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:16,688:INFO:Checking exceptions
2020-11-06 12:18:16,756:INFO:Preloading libraries
2020-11-06 12:18:16,766:INFO:Copying training dataset
2020-11-06 12:18:16,768:INFO:Copying test dataset
2020-11-06 12:18:16,768:INFO:Plot type: error
2020-11-06 12:18:16,971:INFO:Fitting Model
2020-11-06 12:18:16,976:INFO:Scoring test/hold-out set
2020-11-06 12:18:16,998:INFO:Saving 'Prediction Error.png' in current active directory
2020-11-06 12:18:17,198:INFO:Visual Rendered Successfully
2020-11-06 12:18:17,567:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:17,573:INFO:Initializing plot_model()
2020-11-06 12:18:17,574:INFO:plot_model(plot=cooks, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:17,574:INFO:Checking exceptions
2020-11-06 12:18:17,577:INFO:Initializing plot_model()
2020-11-06 12:18:17,577:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:17,577:INFO:Checking exceptions
2020-11-06 12:18:17,596:INFO:Preloading libraries
2020-11-06 12:18:17,599:INFO:Copying training dataset
2020-11-06 12:18:17,600:INFO:Copying test dataset
2020-11-06 12:18:17,600:INFO:Plot type: auc
2020-11-06 12:18:17,614:INFO:Fitting Model
2020-11-06 12:18:17,614:INFO:Scoring test/hold-out set
2020-11-06 12:18:17,628:INFO:Saving 'AUC.png' in current active directory
2020-11-06 12:18:17,812:INFO:Visual Rendered Successfully
2020-11-06 12:18:17,912:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:17,917:INFO:Initializing plot_model()
2020-11-06 12:18:17,917:INFO:plot_model(plot=threshold, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:17,917:INFO:Checking exceptions
2020-11-06 12:18:17,930:INFO:Preloading libraries
2020-11-06 12:18:17,931:INFO:Copying training dataset
2020-11-06 12:18:17,931:INFO:Copying test dataset
2020-11-06 12:18:17,932:INFO:Plot type: threshold
2020-11-06 12:18:17,943:INFO:Fitting Model
2020-11-06 12:18:25,492:INFO:Scoring test/hold-out set
2020-11-06 12:18:25,495:INFO:Saving 'Threshold.png' in current active directory
2020-11-06 12:18:25,999:INFO:Visual Rendered Successfully
2020-11-06 12:18:26,407:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:26,411:INFO:Initializing plot_model()
2020-11-06 12:18:26,411:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:26,411:INFO:Checking exceptions
2020-11-06 12:18:26,426:INFO:Preloading libraries
2020-11-06 12:18:26,428:INFO:Copying training dataset
2020-11-06 12:18:26,429:INFO:Copying test dataset
2020-11-06 12:18:26,430:INFO:Plot type: pr
2020-11-06 12:18:26,448:INFO:Fitting Model
2020-11-06 12:18:26,449:INFO:Scoring test/hold-out set
2020-11-06 12:18:26,460:INFO:Saving 'Precision Recall.png' in current active directory
2020-11-06 12:18:26,693:INFO:Visual Rendered Successfully
2020-11-06 12:18:26,848:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:26,853:INFO:Initializing plot_model()
2020-11-06 12:18:26,853:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:26,853:INFO:Checking exceptions
2020-11-06 12:18:26,869:INFO:Preloading libraries
2020-11-06 12:18:26,870:INFO:Copying training dataset
2020-11-06 12:18:26,871:INFO:Copying test dataset
2020-11-06 12:18:26,871:INFO:Plot type: confusion_matrix
2020-11-06 12:18:26,888:INFO:Fitting Model
2020-11-06 12:18:26,888:INFO:Scoring test/hold-out set
2020-11-06 12:18:26,899:INFO:Saving 'Confusion Matrix.png' in current active directory
2020-11-06 12:18:27,100:INFO:Visual Rendered Successfully
2020-11-06 12:18:27,261:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:27,265:INFO:Initializing plot_model()
2020-11-06 12:18:27,265:INFO:plot_model(plot=class_report, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:27,265:INFO:Checking exceptions
2020-11-06 12:18:27,283:INFO:Preloading libraries
2020-11-06 12:18:27,284:INFO:Copying training dataset
2020-11-06 12:18:27,284:INFO:Copying test dataset
2020-11-06 12:18:27,285:INFO:Plot type: class_report
2020-11-06 12:18:27,308:INFO:Fitting Model
2020-11-06 12:18:27,309:INFO:Scoring test/hold-out set
2020-11-06 12:18:27,348:INFO:Saving 'Class Report.png' in current active directory
2020-11-06 12:18:27,705:INFO:Visual Rendered Successfully
2020-11-06 12:18:27,859:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:27,862:INFO:Initializing plot_model()
2020-11-06 12:18:27,862:INFO:plot_model(plot=boundary, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:27,862:INFO:Checking exceptions
2020-11-06 12:18:27,876:INFO:Preloading libraries
2020-11-06 12:18:27,877:INFO:Copying training dataset
2020-11-06 12:18:27,878:INFO:Copying test dataset
2020-11-06 12:18:27,878:INFO:Plot type: boundary
2020-11-06 12:18:27,932:INFO:Fitting StandardScaler()
2020-11-06 12:18:27,936:INFO:Initializing plot_model()
2020-11-06 12:18:27,936:INFO:plot_model(plot=rfe, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:27,936:INFO:Checking exceptions
2020-11-06 12:18:27,950:INFO:Preloading libraries
2020-11-06 12:18:27,952:INFO:Copying training dataset
2020-11-06 12:18:27,952:INFO:Copying test dataset
2020-11-06 12:18:27,953:INFO:Plot type: rfe
2020-11-06 12:18:27,970:INFO:Fitting Model
2020-11-06 12:18:40,136:INFO:Initializing plot_model()
2020-11-06 12:18:40,136:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:40,137:INFO:Checking exceptions
2020-11-06 12:18:40,155:INFO:Preloading libraries
2020-11-06 12:18:40,157:INFO:Copying training dataset
2020-11-06 12:18:40,159:INFO:Copying test dataset
2020-11-06 12:18:40,160:INFO:Plot type: learning
2020-11-06 12:18:40,167:INFO:Fitting Model
2020-11-06 12:18:44,432:INFO:Saving 'Learning Curve.png' in current active directory
2020-11-06 12:18:44,876:INFO:Visual Rendered Successfully
2020-11-06 12:18:45,401:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:45,406:INFO:Initializing plot_model()
2020-11-06 12:18:45,406:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:45,406:INFO:Checking exceptions
2020-11-06 12:18:45,419:INFO:Preloading libraries
2020-11-06 12:18:45,422:INFO:Copying training dataset
2020-11-06 12:18:45,422:INFO:Copying test dataset
2020-11-06 12:18:45,422:INFO:Plot type: manifold
2020-11-06 12:18:45,440:INFO:Fitting & Transforming Model
2020-11-06 12:18:45,445:INFO:Initializing plot_model()
2020-11-06 12:18:45,445:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:45,445:INFO:Checking exceptions
2020-11-06 12:18:45,459:INFO:Preloading libraries
2020-11-06 12:18:45,461:INFO:Copying training dataset
2020-11-06 12:18:45,462:INFO:Copying test dataset
2020-11-06 12:18:45,462:INFO:Plot type: calibration
2020-11-06 12:18:45,476:INFO:Scoring test/hold-out set
2020-11-06 12:18:45,549:INFO:Saving 'Calibration Curve.png' in current active directory
2020-11-06 12:18:45,723:INFO:Visual Rendered Successfully
2020-11-06 12:18:45,848:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:45,850:INFO:Initializing plot_model()
2020-11-06 12:18:45,850:INFO:plot_model(plot=vc, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:45,850:INFO:Checking exceptions
2020-11-06 12:18:45,869:INFO:Preloading libraries
2020-11-06 12:18:45,870:INFO:Copying training dataset
2020-11-06 12:18:45,871:INFO:Copying test dataset
2020-11-06 12:18:45,871:INFO:Plot type: vc
2020-11-06 12:18:45,873:INFO:Determining param_name
2020-11-06 12:18:45,874:INFO:param_name: actual_estimator__max_depth
2020-11-06 12:18:45,886:INFO:Fitting Model
2020-11-06 12:18:51,824:INFO:Saving 'Validation Curve.png' in current active directory
2020-11-06 12:18:51,989:INFO:Visual Rendered Successfully
2020-11-06 12:18:52,101:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:52,105:INFO:Initializing plot_model()
2020-11-06 12:18:52,105:INFO:plot_model(plot=dimension, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:52,105:INFO:Checking exceptions
2020-11-06 12:18:52,121:INFO:Preloading libraries
2020-11-06 12:18:52,123:INFO:Copying training dataset
2020-11-06 12:18:52,123:INFO:Copying test dataset
2020-11-06 12:18:52,123:INFO:Plot type: dimension
2020-11-06 12:18:52,128:INFO:Fitting StandardScaler()
2020-11-06 12:18:52,133:INFO:Initializing plot_model()
2020-11-06 12:18:52,133:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:52,133:INFO:Checking exceptions
2020-11-06 12:18:52,154:INFO:Preloading libraries
2020-11-06 12:18:52,155:INFO:Copying training dataset
2020-11-06 12:18:52,156:INFO:Copying test dataset
2020-11-06 12:18:52,156:INFO:Plot type: feature
2020-11-06 12:18:52,161:WARNING:No coef_ found. Trying feature_importances_
2020-11-06 12:18:52,271:INFO:Saving 'Feature Importance.png' in current active directory
2020-11-06 12:18:52,516:INFO:Visual Rendered Successfully
2020-11-06 12:18:52,660:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:52,666:INFO:Initializing plot_model()
2020-11-06 12:18:52,666:INFO:plot_model(plot=feature_all, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:52,666:INFO:Checking exceptions
2020-11-06 12:18:52,684:INFO:Preloading libraries
2020-11-06 12:18:52,687:INFO:Copying training dataset
2020-11-06 12:18:52,687:INFO:Copying test dataset
2020-11-06 12:18:52,687:INFO:Plot type: feature_all
2020-11-06 12:18:52,691:WARNING:No coef_ found. Trying feature_importances_
2020-11-06 12:18:52,712:INFO:Initializing plot_model()
2020-11-06 12:18:52,712:INFO:plot_model(plot=parameter, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:52,712:INFO:Checking exceptions
2020-11-06 12:18:52,731:INFO:Preloading libraries
2020-11-06 12:18:52,733:INFO:Copying training dataset
2020-11-06 12:18:52,733:INFO:Copying test dataset
2020-11-06 12:18:52,734:INFO:Plot type: parameter
2020-11-06 12:18:52,738:INFO:Visual Rendered Successfully
2020-11-06 12:18:52,919:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:52,922:INFO:Initializing plot_model()
2020-11-06 12:18:52,922:INFO:plot_model(plot=lift, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:52,922:INFO:Checking exceptions
2020-11-06 12:18:52,936:INFO:Preloading libraries
2020-11-06 12:18:52,938:INFO:Copying training dataset
2020-11-06 12:18:52,939:INFO:Copying test dataset
2020-11-06 12:18:52,940:INFO:Plot type: lift
2020-11-06 12:18:52,942:INFO:Generating predictions / predict_proba on X_test
2020-11-06 12:18:52,991:INFO:Saving 'Lift Chart.png' in current active directory
2020-11-06 12:18:53,216:INFO:Visual Rendered Successfully
2020-11-06 12:18:53,335:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:53,337:INFO:Initializing plot_model()
2020-11-06 12:18:53,337:INFO:plot_model(plot=gain, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:53,337:INFO:Checking exceptions
2020-11-06 12:18:53,350:INFO:Preloading libraries
2020-11-06 12:18:53,351:INFO:Copying training dataset
2020-11-06 12:18:53,351:INFO:Copying test dataset
2020-11-06 12:18:53,351:INFO:Plot type: gain
2020-11-06 12:18:53,353:INFO:Generating predictions / predict_proba on X_test
2020-11-06 12:18:53,398:INFO:Saving 'Gain Chart.png' in current active directory
2020-11-06 12:18:53,620:INFO:Visual Rendered Successfully
2020-11-06 12:18:53,757:INFO:plot_model() succesfully completed......................................
2020-11-06 12:18:53,761:INFO:Initializing plot_model()
2020-11-06 12:18:53,761:INFO:plot_model(plot=tree, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 12:18:53,761:INFO:Checking exceptions
2020-11-06 12:19:28,957:INFO:Initializing predict_model()
2020-11-06 12:19:28,959:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=None, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:28,959:INFO:Checking exceptions
2020-11-06 12:19:28,959:INFO:Preloading libraries
2020-11-06 12:19:28,960:INFO:Preparing display monitor
2020-11-06 12:19:29,423:INFO:Initializing predict_model()
2020-11-06 12:19:29,423:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:29,423:INFO:Checking exceptions
2020-11-06 12:19:29,423:INFO:Preloading libraries
2020-11-06 12:19:29,423:INFO:Preparing display monitor
2020-11-06 12:19:29,569:INFO:Initializing predict_model()
2020-11-06 12:19:29,569:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:29,569:INFO:Checking exceptions
2020-11-06 12:19:29,569:INFO:Preloading libraries
2020-11-06 12:19:29,569:INFO:Preparing display monitor
2020-11-06 12:19:29,735:INFO:Initializing predict_model()
2020-11-06 12:19:29,735:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:29,735:INFO:Checking exceptions
2020-11-06 12:19:29,735:INFO:Preloading libraries
2020-11-06 12:19:29,736:INFO:Preparing display monitor
2020-11-06 12:19:29,905:INFO:Initializing predict_model()
2020-11-06 12:19:29,905:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:29,905:INFO:Checking exceptions
2020-11-06 12:19:29,905:INFO:Preloading libraries
2020-11-06 12:19:29,905:INFO:Preparing display monitor
2020-11-06 12:19:30,055:INFO:Initializing predict_model()
2020-11-06 12:19:30,056:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:30,056:INFO:Checking exceptions
2020-11-06 12:19:30,056:INFO:Preloading libraries
2020-11-06 12:19:30,056:INFO:Preparing display monitor
2020-11-06 12:19:30,182:INFO:Initializing predict_model()
2020-11-06 12:19:30,182:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:30,182:INFO:Checking exceptions
2020-11-06 12:19:30,182:INFO:Preloading libraries
2020-11-06 12:19:30,182:INFO:Preparing display monitor
2020-11-06 12:19:30,316:INFO:Initializing predict_model()
2020-11-06 12:19:30,316:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:30,317:INFO:Checking exceptions
2020-11-06 12:19:30,317:INFO:Preloading libraries
2020-11-06 12:19:30,317:INFO:Preparing display monitor
2020-11-06 12:19:30,464:INFO:Initializing predict_model()
2020-11-06 12:19:30,464:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:30,464:INFO:Checking exceptions
2020-11-06 12:19:30,464:INFO:Preloading libraries
2020-11-06 12:19:30,464:INFO:Preparing display monitor
2020-11-06 12:19:30,615:INFO:Initializing predict_model()
2020-11-06 12:19:30,615:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:30,615:INFO:Checking exceptions
2020-11-06 12:19:30,615:INFO:Preloading libraries
2020-11-06 12:19:30,615:INFO:Preparing display monitor
2020-11-06 12:19:30,776:INFO:Initializing predict_model()
2020-11-06 12:19:30,777:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.71, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:30,777:INFO:Checking exceptions
2020-11-06 12:19:30,777:INFO:Preloading libraries
2020-11-06 12:19:30,777:INFO:Preparing display monitor
2020-11-06 12:19:30,954:INFO:Initializing predict_model()
2020-11-06 12:19:30,954:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.74, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:19:30,954:INFO:Checking exceptions
2020-11-06 12:19:30,954:INFO:Preloading libraries
2020-11-06 12:19:30,954:INFO:Preparing display monitor
2020-11-06 12:21:55,435:INFO:Initializing predict_model()
2020-11-06 12:21:55,438:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:21:55,438:INFO:Checking exceptions
2020-11-06 12:21:55,438:INFO:Preloading libraries
2020-11-06 12:21:55,439:INFO:Preparing display monitor
2020-11-06 12:21:56,205:INFO:Initializing predict_model()
2020-11-06 12:21:56,205:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:21:56,205:INFO:Checking exceptions
2020-11-06 12:25:02,968:INFO:Initializing predict_model()
2020-11-06 12:25:02,977:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:25:02,978:INFO:Checking exceptions
2020-11-06 12:25:09,985:INFO:Initializing predict_model()
2020-11-06 12:25:09,989:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:25:09,989:INFO:Checking exceptions
2020-11-06 12:25:37,603:INFO:Initializing predict_model()
2020-11-06 12:25:37,605:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=counter, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:25:37,605:INFO:Checking exceptions
2020-11-06 12:26:07,317:INFO:Initializing predict_model()
2020-11-06 12:26:07,322:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:07,323:INFO:Checking exceptions
2020-11-06 12:26:19,194:INFO:Initializing predict_model()
2020-11-06 12:26:19,195:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:19,195:INFO:Checking exceptions
2020-11-06 12:26:19,196:INFO:Preloading libraries
2020-11-06 12:26:19,196:INFO:Preparing display monitor
2020-11-06 12:26:20,039:INFO:Initializing predict_model()
2020-11-06 12:26:20,039:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:20,040:INFO:Checking exceptions
2020-11-06 12:26:20,040:INFO:Preloading libraries
2020-11-06 12:26:20,040:INFO:Preparing display monitor
2020-11-06 12:26:20,209:INFO:Initializing predict_model()
2020-11-06 12:26:20,209:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:20,209:INFO:Checking exceptions
2020-11-06 12:26:20,209:INFO:Preloading libraries
2020-11-06 12:26:20,210:INFO:Preparing display monitor
2020-11-06 12:26:20,397:INFO:Initializing predict_model()
2020-11-06 12:26:20,397:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:20,397:INFO:Checking exceptions
2020-11-06 12:26:20,397:INFO:Preloading libraries
2020-11-06 12:26:20,397:INFO:Preparing display monitor
2020-11-06 12:26:20,599:INFO:Initializing predict_model()
2020-11-06 12:26:20,599:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:20,599:INFO:Checking exceptions
2020-11-06 12:26:20,599:INFO:Preloading libraries
2020-11-06 12:26:20,599:INFO:Preparing display monitor
2020-11-06 12:26:20,802:INFO:Initializing predict_model()
2020-11-06 12:26:20,802:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:20,803:INFO:Checking exceptions
2020-11-06 12:26:20,803:INFO:Preloading libraries
2020-11-06 12:26:20,803:INFO:Preparing display monitor
2020-11-06 12:26:20,976:INFO:Initializing predict_model()
2020-11-06 12:26:20,976:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:20,976:INFO:Checking exceptions
2020-11-06 12:26:20,976:INFO:Preloading libraries
2020-11-06 12:26:20,977:INFO:Preparing display monitor
2020-11-06 12:26:21,148:INFO:Initializing predict_model()
2020-11-06 12:26:21,149:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:21,149:INFO:Checking exceptions
2020-11-06 12:26:21,149:INFO:Preloading libraries
2020-11-06 12:26:21,149:INFO:Preparing display monitor
2020-11-06 12:26:21,324:INFO:Initializing predict_model()
2020-11-06 12:26:21,324:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:21,324:INFO:Checking exceptions
2020-11-06 12:26:21,324:INFO:Preloading libraries
2020-11-06 12:26:21,325:INFO:Preparing display monitor
2020-11-06 12:26:21,503:INFO:Initializing predict_model()
2020-11-06 12:26:21,504:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:21,504:INFO:Checking exceptions
2020-11-06 12:26:21,504:INFO:Preloading libraries
2020-11-06 12:26:21,504:INFO:Preparing display monitor
2020-11-06 12:26:21,715:INFO:Initializing predict_model()
2020-11-06 12:26:21,715:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:21,716:INFO:Checking exceptions
2020-11-06 12:26:21,716:INFO:Preloading libraries
2020-11-06 12:26:21,716:INFO:Preparing display monitor
2020-11-06 12:26:21,912:INFO:Initializing predict_model()
2020-11-06 12:26:21,912:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:21,912:INFO:Checking exceptions
2020-11-06 12:26:21,912:INFO:Preloading libraries
2020-11-06 12:26:21,912:INFO:Preparing display monitor
2020-11-06 12:26:22,122:INFO:Initializing predict_model()
2020-11-06 12:26:22,122:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:22,122:INFO:Checking exceptions
2020-11-06 12:26:22,122:INFO:Preloading libraries
2020-11-06 12:26:22,122:INFO:Preparing display monitor
2020-11-06 12:26:22,306:INFO:Initializing predict_model()
2020-11-06 12:26:22,306:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:22,306:INFO:Checking exceptions
2020-11-06 12:26:22,306:INFO:Preloading libraries
2020-11-06 12:26:22,306:INFO:Preparing display monitor
2020-11-06 12:26:22,484:INFO:Initializing predict_model()
2020-11-06 12:26:22,484:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:22,484:INFO:Checking exceptions
2020-11-06 12:26:22,484:INFO:Preloading libraries
2020-11-06 12:26:22,484:INFO:Preparing display monitor
2020-11-06 12:26:22,662:INFO:Initializing predict_model()
2020-11-06 12:26:22,662:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:22,662:INFO:Checking exceptions
2020-11-06 12:26:22,662:INFO:Preloading libraries
2020-11-06 12:26:22,663:INFO:Preparing display monitor
2020-11-06 12:26:22,855:INFO:Initializing predict_model()
2020-11-06 12:26:22,855:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:22,856:INFO:Checking exceptions
2020-11-06 12:26:22,856:INFO:Preloading libraries
2020-11-06 12:26:22,856:INFO:Preparing display monitor
2020-11-06 12:26:23,080:INFO:Initializing predict_model()
2020-11-06 12:26:23,080:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:23,080:INFO:Checking exceptions
2020-11-06 12:26:23,080:INFO:Preloading libraries
2020-11-06 12:26:23,080:INFO:Preparing display monitor
2020-11-06 12:26:23,270:INFO:Initializing predict_model()
2020-11-06 12:26:23,270:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:23,270:INFO:Checking exceptions
2020-11-06 12:26:23,270:INFO:Preloading libraries
2020-11-06 12:26:23,270:INFO:Preparing display monitor
2020-11-06 12:26:23,443:INFO:Initializing predict_model()
2020-11-06 12:26:23,443:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:23,443:INFO:Checking exceptions
2020-11-06 12:26:23,443:INFO:Preloading libraries
2020-11-06 12:26:23,444:INFO:Preparing display monitor
2020-11-06 12:26:23,626:INFO:Initializing predict_model()
2020-11-06 12:26:23,626:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:23,626:INFO:Checking exceptions
2020-11-06 12:26:23,626:INFO:Preloading libraries
2020-11-06 12:26:23,626:INFO:Preparing display monitor
2020-11-06 12:26:23,887:INFO:Initializing predict_model()
2020-11-06 12:26:23,887:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:23,887:INFO:Checking exceptions
2020-11-06 12:26:23,888:INFO:Preloading libraries
2020-11-06 12:26:23,888:INFO:Preparing display monitor
2020-11-06 12:26:24,109:INFO:Initializing predict_model()
2020-11-06 12:26:24,110:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:24,110:INFO:Checking exceptions
2020-11-06 12:26:24,110:INFO:Preloading libraries
2020-11-06 12:26:24,110:INFO:Preparing display monitor
2020-11-06 12:26:24,296:INFO:Initializing predict_model()
2020-11-06 12:26:24,297:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:24,297:INFO:Checking exceptions
2020-11-06 12:26:24,297:INFO:Preloading libraries
2020-11-06 12:26:24,297:INFO:Preparing display monitor
2020-11-06 12:26:24,480:INFO:Initializing predict_model()
2020-11-06 12:26:24,480:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:24,480:INFO:Checking exceptions
2020-11-06 12:26:24,480:INFO:Preloading libraries
2020-11-06 12:26:24,480:INFO:Preparing display monitor
2020-11-06 12:26:24,683:INFO:Initializing predict_model()
2020-11-06 12:26:24,683:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:24,683:INFO:Checking exceptions
2020-11-06 12:26:24,683:INFO:Preloading libraries
2020-11-06 12:26:24,684:INFO:Preparing display monitor
2020-11-06 12:26:24,893:INFO:Initializing predict_model()
2020-11-06 12:26:24,893:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:24,893:INFO:Checking exceptions
2020-11-06 12:26:24,894:INFO:Preloading libraries
2020-11-06 12:26:24,894:INFO:Preparing display monitor
2020-11-06 12:26:25,086:INFO:Initializing predict_model()
2020-11-06 12:26:25,086:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:25,087:INFO:Checking exceptions
2020-11-06 12:26:25,087:INFO:Preloading libraries
2020-11-06 12:26:25,087:INFO:Preparing display monitor
2020-11-06 12:26:25,278:INFO:Initializing predict_model()
2020-11-06 12:26:25,278:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:25,278:INFO:Checking exceptions
2020-11-06 12:26:25,278:INFO:Preloading libraries
2020-11-06 12:26:25,278:INFO:Preparing display monitor
2020-11-06 12:26:25,506:INFO:Initializing predict_model()
2020-11-06 12:26:25,506:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:25,506:INFO:Checking exceptions
2020-11-06 12:26:25,506:INFO:Preloading libraries
2020-11-06 12:26:25,506:INFO:Preparing display monitor
2020-11-06 12:26:25,710:INFO:Initializing predict_model()
2020-11-06 12:26:25,710:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:25,710:INFO:Checking exceptions
2020-11-06 12:26:25,710:INFO:Preloading libraries
2020-11-06 12:26:25,711:INFO:Preparing display monitor
2020-11-06 12:26:25,874:INFO:Initializing predict_model()
2020-11-06 12:26:25,875:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:25,875:INFO:Checking exceptions
2020-11-06 12:26:25,875:INFO:Preloading libraries
2020-11-06 12:26:25,875:INFO:Preparing display monitor
2020-11-06 12:26:26,043:INFO:Initializing predict_model()
2020-11-06 12:26:26,043:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:26,043:INFO:Checking exceptions
2020-11-06 12:26:26,043:INFO:Preloading libraries
2020-11-06 12:26:26,044:INFO:Preparing display monitor
2020-11-06 12:26:26,208:INFO:Initializing predict_model()
2020-11-06 12:26:26,209:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:26,209:INFO:Checking exceptions
2020-11-06 12:26:26,209:INFO:Preloading libraries
2020-11-06 12:26:26,209:INFO:Preparing display monitor
2020-11-06 12:26:37,294:INFO:Initializing predict_model()
2020-11-06 12:26:37,295:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:26:37,295:INFO:Checking exceptions
2020-11-06 12:28:00,210:INFO:Initializing predict_model()
2020-11-06 12:28:00,213:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold={0.0}, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:28:00,213:INFO:Checking exceptions
2020-11-06 12:28:07,111:INFO:Initializing predict_model()
2020-11-06 12:28:07,112:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:28:07,113:INFO:Checking exceptions
2020-11-06 12:28:16,398:INFO:Initializing predict_model()
2020-11-06 12:28:16,399:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=[0.0], encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:28:16,399:INFO:Checking exceptions
2020-11-06 12:41:10,593:INFO:Initializing predict_model()
2020-11-06 12:41:10,598:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:41:10,598:INFO:Checking exceptions
2020-11-06 12:41:10,600:INFO:Initializing predict_model()
2020-11-06 12:41:10,600:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:41:10,600:INFO:Checking exceptions
2020-11-06 12:42:02,633:INFO:Initializing predict_model()
2020-11-06 12:42:02,635:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:02,636:INFO:Checking exceptions
2020-11-06 12:42:07,254:INFO:Initializing predict_model()
2020-11-06 12:42:07,254:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:07,255:INFO:Checking exceptions
2020-11-06 12:42:07,257:INFO:Initializing predict_model()
2020-11-06 12:42:07,257:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:07,257:INFO:Checking exceptions
2020-11-06 12:42:18,956:INFO:Initializing predict_model()
2020-11-06 12:42:18,956:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:18,956:INFO:Checking exceptions
2020-11-06 12:42:18,958:INFO:Initializing predict_model()
2020-11-06 12:42:18,959:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:18,959:INFO:Checking exceptions
2020-11-06 12:42:22,098:INFO:Initializing predict_model()
2020-11-06 12:42:22,098:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:22,098:INFO:Checking exceptions
2020-11-06 12:42:22,101:INFO:Initializing predict_model()
2020-11-06 12:42:22,101:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:22,101:INFO:Checking exceptions
2020-11-06 12:42:31,472:INFO:Initializing predict_model()
2020-11-06 12:42:31,473:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:31,473:INFO:Checking exceptions
2020-11-06 12:42:31,476:INFO:Initializing predict_model()
2020-11-06 12:42:31,476:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:31,476:INFO:Checking exceptions
2020-11-06 12:42:47,595:INFO:Initializing predict_model()
2020-11-06 12:42:47,596:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:47,596:INFO:Checking exceptions
2020-11-06 12:42:47,598:INFO:Initializing predict_model()
2020-11-06 12:42:47,598:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:42:47,598:INFO:Checking exceptions
2020-11-06 12:43:48,206:INFO:Initializing predict_model()
2020-11-06 12:43:48,208:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=[0.3, 0.4], encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:43:48,208:INFO:Checking exceptions
2020-11-06 12:43:56,593:INFO:Initializing predict_model()
2020-11-06 12:43:56,594:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=[(0.3, 0.4)], encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:43:56,594:INFO:Checking exceptions
2020-11-06 12:44:03,325:INFO:Initializing predict_model()
2020-11-06 12:44:03,325:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=[0.3, 0.4], encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:44:03,325:INFO:Checking exceptions
2020-11-06 12:45:22,211:INFO:Initializing predict_model()
2020-11-06 12:45:22,214:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:45:22,214:INFO:Checking exceptions
2020-11-06 12:45:22,216:INFO:Initializing predict_model()
2020-11-06 12:45:22,216:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:45:22,216:INFO:Checking exceptions
2020-11-06 12:45:25,640:INFO:Initializing predict_model()
2020-11-06 12:45:25,677:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:45:25,683:INFO:Checking exceptions
2020-11-06 12:45:25,685:INFO:Initializing predict_model()
2020-11-06 12:45:25,696:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:45:25,696:INFO:Checking exceptions
2020-11-06 12:45:50,152:INFO:Initializing predict_model()
2020-11-06 12:45:50,152:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:45:50,152:INFO:Checking exceptions
2020-11-06 12:45:50,152:INFO:Preloading libraries
2020-11-06 12:45:50,153:INFO:Preparing display monitor
2020-11-06 12:45:50,794:INFO:Initializing predict_model()
2020-11-06 12:45:50,795:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:45:50,795:INFO:Checking exceptions
2020-11-06 12:45:50,795:INFO:Preloading libraries
2020-11-06 12:45:50,795:INFO:Preparing display monitor
2020-11-06 12:46:10,553:INFO:Initializing predict_model()
2020-11-06 12:46:10,553:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:10,553:INFO:Checking exceptions
2020-11-06 12:46:10,553:INFO:Preloading libraries
2020-11-06 12:46:10,553:INFO:Preparing display monitor
2020-11-06 12:46:10,721:INFO:Initializing predict_model()
2020-11-06 12:46:10,722:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:10,722:INFO:Checking exceptions
2020-11-06 12:46:10,722:INFO:Preloading libraries
2020-11-06 12:46:10,722:INFO:Preparing display monitor
2020-11-06 12:46:47,560:INFO:Initializing predict_model()
2020-11-06 12:46:47,560:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:47,560:INFO:Checking exceptions
2020-11-06 12:46:47,560:INFO:Preloading libraries
2020-11-06 12:46:47,560:INFO:Preparing display monitor
2020-11-06 12:46:47,724:INFO:Initializing predict_model()
2020-11-06 12:46:47,724:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.1, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:47,724:INFO:Checking exceptions
2020-11-06 12:46:47,724:INFO:Preloading libraries
2020-11-06 12:46:47,725:INFO:Preparing display monitor
2020-11-06 12:46:47,896:INFO:Initializing predict_model()
2020-11-06 12:46:47,896:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.2, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:47,896:INFO:Checking exceptions
2020-11-06 12:46:47,897:INFO:Preloading libraries
2020-11-06 12:46:47,897:INFO:Preparing display monitor
2020-11-06 12:46:48,081:INFO:Initializing predict_model()
2020-11-06 12:46:48,081:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.30000000000000004, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:48,081:INFO:Checking exceptions
2020-11-06 12:46:48,081:INFO:Preloading libraries
2020-11-06 12:46:48,081:INFO:Preparing display monitor
2020-11-06 12:46:48,258:INFO:Initializing predict_model()
2020-11-06 12:46:48,258:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.4, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:48,259:INFO:Checking exceptions
2020-11-06 12:46:48,259:INFO:Preloading libraries
2020-11-06 12:46:48,259:INFO:Preparing display monitor
2020-11-06 12:46:48,433:INFO:Initializing predict_model()
2020-11-06 12:46:48,433:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:48,433:INFO:Checking exceptions
2020-11-06 12:46:48,433:INFO:Preloading libraries
2020-11-06 12:46:48,433:INFO:Preparing display monitor
2020-11-06 12:46:48,612:INFO:Initializing predict_model()
2020-11-06 12:46:48,612:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.6000000000000001, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:48,612:INFO:Checking exceptions
2020-11-06 12:46:48,612:INFO:Preloading libraries
2020-11-06 12:46:48,612:INFO:Preparing display monitor
2020-11-06 12:46:48,798:INFO:Initializing predict_model()
2020-11-06 12:46:48,799:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.7000000000000001, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:48,799:INFO:Checking exceptions
2020-11-06 12:46:48,799:INFO:Preloading libraries
2020-11-06 12:46:48,799:INFO:Preparing display monitor
2020-11-06 12:46:48,977:INFO:Initializing predict_model()
2020-11-06 12:46:48,978:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.8, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:48,978:INFO:Checking exceptions
2020-11-06 12:46:48,978:INFO:Preloading libraries
2020-11-06 12:46:48,978:INFO:Preparing display monitor
2020-11-06 12:46:49,151:INFO:Initializing predict_model()
2020-11-06 12:46:49,151:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.9, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:46:49,151:INFO:Checking exceptions
2020-11-06 12:46:49,151:INFO:Preloading libraries
2020-11-06 12:46:49,151:INFO:Preparing display monitor
2020-11-06 12:47:23,907:INFO:Initializing predict_model()
2020-11-06 12:47:23,907:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:47:23,908:INFO:Checking exceptions
2020-11-06 12:47:23,908:INFO:Preloading libraries
2020-11-06 12:47:23,908:INFO:Preparing display monitor
2020-11-06 12:47:24,065:INFO:Initializing predict_model()
2020-11-06 12:47:24,065:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.1, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:47:24,065:INFO:Checking exceptions
2020-11-06 12:47:24,065:INFO:Preloading libraries
2020-11-06 12:47:24,066:INFO:Preparing display monitor
2020-11-06 12:47:24,242:INFO:Initializing predict_model()
2020-11-06 12:47:24,242:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.2, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:47:24,242:INFO:Checking exceptions
2020-11-06 12:47:24,242:INFO:Preloading libraries
2020-11-06 12:47:24,242:INFO:Preparing display monitor
2020-11-06 12:47:24,409:INFO:Initializing predict_model()
2020-11-06 12:47:24,409:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.30000000000000004, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:47:24,409:INFO:Checking exceptions
2020-11-06 12:47:24,409:INFO:Preloading libraries
2020-11-06 12:47:24,410:INFO:Preparing display monitor
2020-11-06 12:47:24,594:INFO:Initializing predict_model()
2020-11-06 12:47:24,595:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.4, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:47:24,595:INFO:Checking exceptions
2020-11-06 12:47:24,595:INFO:Preloading libraries
2020-11-06 12:47:24,595:INFO:Preparing display monitor
2020-11-06 12:47:24,772:INFO:Initializing predict_model()
2020-11-06 12:47:24,772:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:47:24,772:INFO:Checking exceptions
2020-11-06 12:47:24,772:INFO:Preloading libraries
2020-11-06 12:47:24,772:INFO:Preparing display monitor
2020-11-06 12:47:24,952:INFO:Initializing predict_model()
2020-11-06 12:47:24,953:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.6000000000000001, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:47:24,953:INFO:Checking exceptions
2020-11-06 12:47:24,953:INFO:Preloading libraries
2020-11-06 12:47:24,953:INFO:Preparing display monitor
2020-11-06 12:47:25,133:INFO:Initializing predict_model()
2020-11-06 12:47:25,133:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.7000000000000001, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:47:25,133:INFO:Checking exceptions
2020-11-06 12:47:25,133:INFO:Preloading libraries
2020-11-06 12:47:25,133:INFO:Preparing display monitor
2020-11-06 12:47:25,310:INFO:Initializing predict_model()
2020-11-06 12:47:25,310:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.8, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:47:25,310:INFO:Checking exceptions
2020-11-06 12:47:25,310:INFO:Preloading libraries
2020-11-06 12:47:25,311:INFO:Preparing display monitor
2020-11-06 12:47:25,486:INFO:Initializing predict_model()
2020-11-06 12:47:25,486:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.9, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:47:25,486:INFO:Checking exceptions
2020-11-06 12:47:25,486:INFO:Preloading libraries
2020-11-06 12:47:25,486:INFO:Preparing display monitor
2020-11-06 12:56:36,030:INFO:Initializing predict_model()
2020-11-06 12:56:36,032:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:56:36,032:INFO:Checking exceptions
2020-11-06 12:56:36,032:INFO:Preloading libraries
2020-11-06 12:56:36,032:INFO:Preparing display monitor
2020-11-06 12:56:36,187:INFO:Initializing predict_model()
2020-11-06 12:56:36,187:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.1, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:56:36,187:INFO:Checking exceptions
2020-11-06 12:56:36,187:INFO:Preloading libraries
2020-11-06 12:56:36,187:INFO:Preparing display monitor
2020-11-06 12:56:36,350:INFO:Initializing predict_model()
2020-11-06 12:56:36,350:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.2, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:56:36,350:INFO:Checking exceptions
2020-11-06 12:56:36,350:INFO:Preloading libraries
2020-11-06 12:56:36,350:INFO:Preparing display monitor
2020-11-06 12:56:36,532:INFO:Initializing predict_model()
2020-11-06 12:56:36,532:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.30000000000000004, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:56:36,532:INFO:Checking exceptions
2020-11-06 12:56:36,532:INFO:Preloading libraries
2020-11-06 12:56:36,532:INFO:Preparing display monitor
2020-11-06 12:56:36,701:INFO:Initializing predict_model()
2020-11-06 12:56:36,701:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.4, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:56:36,701:INFO:Checking exceptions
2020-11-06 12:56:36,701:INFO:Preloading libraries
2020-11-06 12:56:36,701:INFO:Preparing display monitor
2020-11-06 12:56:36,878:INFO:Initializing predict_model()
2020-11-06 12:56:36,878:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:56:36,878:INFO:Checking exceptions
2020-11-06 12:56:36,878:INFO:Preloading libraries
2020-11-06 12:56:36,878:INFO:Preparing display monitor
2020-11-06 12:56:37,065:INFO:Initializing predict_model()
2020-11-06 12:56:37,065:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.6000000000000001, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:56:37,065:INFO:Checking exceptions
2020-11-06 12:56:37,065:INFO:Preloading libraries
2020-11-06 12:56:37,065:INFO:Preparing display monitor
2020-11-06 12:56:37,225:INFO:Initializing predict_model()
2020-11-06 12:56:37,225:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.7000000000000001, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:56:37,225:INFO:Checking exceptions
2020-11-06 12:56:37,225:INFO:Preloading libraries
2020-11-06 12:56:37,225:INFO:Preparing display monitor
2020-11-06 12:56:37,379:INFO:Initializing predict_model()
2020-11-06 12:56:37,380:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.8, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:56:37,380:INFO:Checking exceptions
2020-11-06 12:56:37,380:INFO:Preloading libraries
2020-11-06 12:56:37,380:INFO:Preparing display monitor
2020-11-06 12:56:37,536:INFO:Initializing predict_model()
2020-11-06 12:56:37,536:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.9, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:56:37,536:INFO:Checking exceptions
2020-11-06 12:56:37,536:INFO:Preloading libraries
2020-11-06 12:56:37,536:INFO:Preparing display monitor
2020-11-06 12:57:05,636:INFO:Initializing predict_model()
2020-11-06 12:57:05,637:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=None, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:05,637:INFO:Checking exceptions
2020-11-06 12:57:05,637:INFO:Preloading libraries
2020-11-06 12:57:05,637:INFO:Preparing display monitor
2020-11-06 12:57:05,784:INFO:Initializing predict_model()
2020-11-06 12:57:05,785:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.27, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:05,785:INFO:Checking exceptions
2020-11-06 12:57:05,785:INFO:Preloading libraries
2020-11-06 12:57:05,785:INFO:Preparing display monitor
2020-11-06 12:57:05,945:INFO:Initializing predict_model()
2020-11-06 12:57:05,945:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.3, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:05,945:INFO:Checking exceptions
2020-11-06 12:57:05,945:INFO:Preloading libraries
2020-11-06 12:57:05,945:INFO:Preparing display monitor
2020-11-06 12:57:06,105:INFO:Initializing predict_model()
2020-11-06 12:57:06,106:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.33, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:06,106:INFO:Checking exceptions
2020-11-06 12:57:06,106:INFO:Preloading libraries
2020-11-06 12:57:06,106:INFO:Preparing display monitor
2020-11-06 12:57:06,280:INFO:Initializing predict_model()
2020-11-06 12:57:06,280:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.36, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:06,280:INFO:Checking exceptions
2020-11-06 12:57:06,280:INFO:Preloading libraries
2020-11-06 12:57:06,281:INFO:Preparing display monitor
2020-11-06 12:57:06,449:INFO:Initializing predict_model()
2020-11-06 12:57:06,449:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.39, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:06,449:INFO:Checking exceptions
2020-11-06 12:57:06,449:INFO:Preloading libraries
2020-11-06 12:57:06,449:INFO:Preparing display monitor
2020-11-06 12:57:06,609:INFO:Initializing predict_model()
2020-11-06 12:57:06,609:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.42, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:06,609:INFO:Checking exceptions
2020-11-06 12:57:06,609:INFO:Preloading libraries
2020-11-06 12:57:06,609:INFO:Preparing display monitor
2020-11-06 12:57:06,783:INFO:Initializing predict_model()
2020-11-06 12:57:06,783:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.45, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:06,783:INFO:Checking exceptions
2020-11-06 12:57:06,783:INFO:Preloading libraries
2020-11-06 12:57:06,784:INFO:Preparing display monitor
2020-11-06 12:57:06,957:INFO:Initializing predict_model()
2020-11-06 12:57:06,957:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.48, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:06,957:INFO:Checking exceptions
2020-11-06 12:57:06,957:INFO:Preloading libraries
2020-11-06 12:57:06,957:INFO:Preparing display monitor
2020-11-06 12:57:07,125:INFO:Initializing predict_model()
2020-11-06 12:57:07,125:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:07,125:INFO:Checking exceptions
2020-11-06 12:57:07,125:INFO:Preloading libraries
2020-11-06 12:57:07,126:INFO:Preparing display monitor
2020-11-06 12:57:07,297:INFO:Initializing predict_model()
2020-11-06 12:57:07,297:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.71, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:07,298:INFO:Checking exceptions
2020-11-06 12:57:07,298:INFO:Preloading libraries
2020-11-06 12:57:07,298:INFO:Preparing display monitor
2020-11-06 12:57:07,467:INFO:Initializing predict_model()
2020-11-06 12:57:07,467:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.99, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:57:07,467:INFO:Checking exceptions
2020-11-06 12:57:07,467:INFO:Preloading libraries
2020-11-06 12:57:07,467:INFO:Preparing display monitor
2020-11-06 12:58:12,857:INFO:Initializing optimize_threshold()
2020-11-06 12:58:12,857:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-100, false_negative=100)
2020-11-06 12:58:12,857:INFO:Importing libraries
2020-11-06 12:58:12,857:INFO:Checking exceptions
2020-11-06 12:58:12,861:INFO:Defining loss function
2020-11-06 12:58:12,861:INFO:Iteration starts at 0
2020-11-06 12:58:12,910:INFO:Figure ready for render
2020-11-06 12:58:12,916:INFO:optimize_threshold() succesfully completed......................................
2020-11-06 12:58:29,994:INFO:Initializing predict_model()
2020-11-06 12:58:29,994:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.99, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:58:29,994:INFO:Checking exceptions
2020-11-06 12:59:08,079:INFO:Initializing predict_model()
2020-11-06 12:59:08,080:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.99, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 12:59:08,080:INFO:Checking exceptions
2020-11-06 12:59:08,080:INFO:Preloading libraries
2020-11-06 12:59:08,080:INFO:Preparing display monitor
2020-11-06 13:41:01,876:INFO:Initializing predict_model()
2020-11-06 13:41:01,881:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.99, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 13:41:01,881:INFO:Checking exceptions
2020-11-06 13:41:01,881:INFO:Preloading libraries
2020-11-06 13:41:01,883:INFO:Preparing display monitor
2020-11-06 13:43:27,169:INFO:Initializing optimize_threshold()
2020-11-06 13:43:27,170:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-100, false_negative=50)
2020-11-06 13:43:27,170:INFO:Importing libraries
2020-11-06 13:43:27,170:INFO:Checking exceptions
2020-11-06 13:43:27,174:INFO:Defining loss function
2020-11-06 13:43:27,175:INFO:Iteration starts at 0
2020-11-06 13:43:27,223:INFO:Figure ready for render
2020-11-06 13:43:27,229:INFO:optimize_threshold() succesfully completed......................................
2020-11-06 13:43:57,130:INFO:Initializing optimize_threshold()
2020-11-06 13:43:57,130:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-100, false_negative=50)
2020-11-06 13:43:57,131:INFO:Importing libraries
2020-11-06 13:43:57,131:INFO:Checking exceptions
2020-11-06 13:43:57,134:INFO:Defining loss function
2020-11-06 13:43:57,134:INFO:Iteration starts at 0
2020-11-06 13:43:57,169:INFO:Figure ready for render
2020-11-06 13:43:57,173:INFO:optimize_threshold() succesfully completed......................................
2020-11-06 13:44:19,192:INFO:Initializing predict_model()
2020-11-06 13:44:19,192:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.97, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 13:44:19,192:INFO:Checking exceptions
2020-11-06 13:44:19,192:INFO:Preloading libraries
2020-11-06 13:44:19,192:INFO:Preparing display monitor
2020-11-06 13:45:05,078:INFO:Initializing optimize_threshold()
2020-11-06 13:45:05,079:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-100, false_negative=0)
2020-11-06 13:45:05,079:INFO:Importing libraries
2020-11-06 13:45:05,079:INFO:Checking exceptions
2020-11-06 13:45:05,082:INFO:Defining loss function
2020-11-06 13:45:05,082:INFO:Iteration starts at 0
2020-11-06 13:45:05,116:INFO:Figure ready for render
2020-11-06 13:45:05,120:INFO:optimize_threshold() succesfully completed......................................
2020-11-06 13:52:03,374:INFO:Initializing interpret_model()
2020-11-06 13:52:03,375:INFO:interpret_model(estimator=         Friday      Sunday   Thursday     Tuesday   Wednesday    Saturday  \
0     92.666000   93.750000  95.906540  100.000000   99.505837   90.000000   
1     90.475716  100.000000  91.371429   92.856667   95.778000   87.052498   
2     95.238571   96.428574  94.775528  100.000000   95.327909   98.750000   
3    100.000000   98.073858  95.238571   97.916252   94.734283  100.000000   
4    100.000000   92.279742  92.215714   96.129997   97.500000   94.641998   
..          ...         ...        ...         ...         ...         ...   
100   91.910613  100.000000  90.248594  100.000000  100.000000  100.000000   
101   77.779999   92.363998  97.077499   96.686249   97.681427   96.476716   
102   91.468002   91.112000  86.688098   96.666000   91.936459  100.000000   
103   98.214287   88.229401  87.083748   95.237144   87.381248   85.713753   
104   88.888336   92.065488  81.250000   85.185555  100.000000   96.673321   

     Sunday_multiply_Friday  Friday_multiply_Sunday  \
0               8687.437534             8687.437534   
1               9047.571564             9047.571564   
2               9183.719570             9183.719570   
3               9807.385814             9807.385814   
4               9227.974185             9227.974185   
..                      ...                     ...   
100             9191.061253             9191.061253   
101             7184.071684             7184.071684   
102             8333.832583             8333.832583   
103             8665.387674             8665.387674   
104             8183.548059             8183.548059   

     Wednesday_multiply_Tuesday actualvalue_class  Label   Score  
0                   9950.583670                 0      0  0.6122  
1                   8893.625799                 0      0  0.9304  
2                   9532.790911                 1      1  0.9927  
3                   9276.025984                 0      0  0.1211  
4                   9372.674732                 0      0  0.9393  
..                          ...               ...    ...     ...  
100                10000.000000                 0      0  0.7730  
101                 9444.450752                 1      1  0.9972  
102                 8887.129746                 0      0  0.9207  
103                 8321.940585                 0      0  0.9812  
104                 8518.555450                 1      1  0.9948  

[105 rows x 12 columns], plot=summary, use_train_data=False, feature=None, kwargs={}, observation=None)
2020-11-06 13:52:03,376:INFO:Checking exceptions
2020-11-06 13:52:03,404:ERROR:shap library not found. pip install shap to use interpret_model function.
2020-11-06 13:52:12,359:INFO:Initializing interpret_model()
2020-11-06 13:52:12,359:INFO:interpret_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), plot=summary, use_train_data=False, feature=None, kwargs={}, observation=None)
2020-11-06 13:52:12,359:INFO:Checking exceptions
2020-11-06 13:52:12,360:ERROR:shap library not found. pip install shap to use interpret_model function.
2020-11-06 13:52:34,389:INFO:Initializing interpret_model()
2020-11-06 13:52:34,390:INFO:interpret_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), plot=summary, use_train_data=False, feature=None, kwargs={}, observation=None)
2020-11-06 13:52:34,390:INFO:Checking exceptions
2020-11-06 13:52:34,390:ERROR:shap library not found. pip install shap to use interpret_model function.
2020-11-06 13:52:54,383:INFO:Initializing interpret_model()
2020-11-06 13:52:54,383:INFO:interpret_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), plot=correlation, use_train_data=False, feature=None, kwargs={}, observation=None)
2020-11-06 13:52:54,383:INFO:Checking exceptions
2020-11-06 13:52:54,383:ERROR:shap library not found. pip install shap to use interpret_model function.
2020-11-06 13:53:33,917:INFO:Initializing interpret_model()
2020-11-06 13:53:33,918:INFO:interpret_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), plot=reason, use_train_data=False, feature=None, kwargs={}, observation=None)
2020-11-06 13:53:33,918:INFO:Checking exceptions
2020-11-06 13:53:34,434:INFO:plot type: reason
2020-11-06 13:53:34,434:INFO:model type detected: type 2
2020-11-06 13:53:34,434:INFO:Creating TreeExplainer
2020-11-06 13:53:34,508:INFO:Compiling shap values
2020-11-06 13:53:34,527:WARNING:Observation set to None. Model agnostic plot will be rendered.
2020-11-06 13:53:34,559:INFO:Visual Rendered Successfully
2020-11-06 13:53:34,560:INFO:interpret_model() succesfully completed......................................
2020-11-06 13:53:41,384:INFO:Initializing interpret_model()
2020-11-06 13:53:41,384:INFO:interpret_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), plot=summary, use_train_data=False, feature=None, kwargs={}, observation=None)
2020-11-06 13:53:41,385:INFO:Checking exceptions
2020-11-06 13:53:41,385:INFO:plot type: summary
2020-11-06 13:53:41,385:INFO:Creating TreeExplainer
2020-11-06 13:53:41,434:INFO:Compiling shap values
2020-11-06 13:53:41,895:INFO:Visual Rendered Successfully
2020-11-06 13:53:41,895:INFO:interpret_model() succesfully completed......................................
2020-11-06 13:53:49,347:INFO:Initializing interpret_model()
2020-11-06 13:53:49,348:INFO:interpret_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), plot=summary, use_train_data=False, feature=None, kwargs={}, observation=None)
2020-11-06 13:53:49,348:INFO:Checking exceptions
2020-11-06 13:53:49,348:INFO:plot type: summary
2020-11-06 13:53:49,349:INFO:Creating TreeExplainer
2020-11-06 13:53:49,397:INFO:Compiling shap values
2020-11-06 13:53:49,754:INFO:Visual Rendered Successfully
2020-11-06 13:53:49,755:INFO:interpret_model() succesfully completed......................................
2020-11-06 15:17:51,555:INFO:Initializing blend_models()
2020-11-06 15:17:51,559:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.900897949104049, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.33105673747894604, max_delta_step=0, max_depth=2,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=256, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786,
              reg_alpha=0.005244332895220059, reg_lambda=1.1006993553893947,
              scale_pos_weight=25.32037701357194, subsample=0.6979377908954965,
              tree_method='auto', validate_parameters=1, verbosity=0), LGBMClassifier(bagging_fraction=0.9088143050094273, bagging_freq=4,
               boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               feature_fraction=0.5106726590297773, importance_type='split',
               learning_rate=0.3297250119591679, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001,
               min_data_in_leaf=6243, min_split_gain=0.6344744541627398,
               n_estimators=20, n_jobs=-1, num_leaves=113, objective=None,
               random_state=786, reg_alpha=2.575292084210646e-10,
               reg_lambda=9.017759620445805e-10, silent=True, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)], fold=5, round=4, choose_better=True, optimize=Recall, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-06 15:17:51,559:INFO:Checking exceptions
2020-11-06 15:17:51,663:INFO:Preparing display monitor
2020-11-06 15:17:51,815:INFO:Importing libraries
2020-11-06 15:17:51,817:INFO:Copying training dataset
2020-11-06 15:17:51,876:INFO:Getting model names
2020-11-06 15:17:51,894:INFO:SubProcess create_model() called ==================================
2020-11-06 15:17:51,912:INFO:Initializing create_model()
2020-11-06 15:17:51,912:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.900897949104049,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.33105673747894604,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=1,
                                                   missing=nan,
                                                   monotone_constraints=...
                                                    min_data_in_leaf=6243,
                                                    min_split_gain=0.6344744541627398,
                                                    n_estimators=20, n_jobs=-1,
                                                    num_leaves=113,
                                                    objective=None,
                                                    random_state=786,
                                                    reg_alpha=2.575292084210646e-10,
                                                    reg_lambda=9.017759620445805e-10,
                                                    silent=True, subsample=1.0,
                                                    subsample_for_bin=200000,
                                                    subsample_freq=0))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8bbbbe2dc0>, kwargs={})
2020-11-06 15:17:51,912:INFO:Checking exceptions
2020-11-06 15:17:51,912:INFO:Importing libraries
2020-11-06 15:17:51,912:INFO:Copying training dataset
2020-11-06 15:17:51,913:INFO:Defining folds
2020-11-06 15:17:51,913:INFO:Declaring metric variables
2020-11-06 15:17:51,923:INFO:Importing untrained model
2020-11-06 15:17:51,923:INFO:Declaring custom model
2020-11-06 15:17:51,941:INFO:Voting Classifier Imported succesfully
2020-11-06 15:17:51,963:INFO:Starting cross validation
2020-11-06 15:17:51,965:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:18:33,323:INFO:PyCaret Supervised Module
2020-11-06 15:18:33,324:INFO:ML Usecase: classification
2020-11-06 15:18:33,324:INFO:version 2.2.0
2020-11-06 15:18:33,324:INFO:Initializing setup()
2020-11-06 15:18:33,324:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-06 15:18:33,324:INFO:Checking environment
2020-11-06 15:18:33,324:INFO:python_version: 3.8.3
2020-11-06 15:18:33,324:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-06 15:18:33,324:INFO:machine: x86_64
2020-11-06 15:18:33,347:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-06 15:18:33,347:INFO:Memory: svmem(total=8589934592, available=2486353920, percent=71.1, used=4665970688, free=27213824, active=2461126656, inactive=2446835712, wired=2204844032)
2020-11-06 15:18:33,347:INFO:Physical Core: 4
2020-11-06 15:18:33,347:INFO:Logical Core: 8
2020-11-06 15:18:33,347:INFO:Checking libraries
2020-11-06 15:18:33,348:INFO:pd==1.0.5
2020-11-06 15:18:33,348:INFO:numpy==1.18.5
2020-11-06 15:18:33,348:INFO:sklearn==0.23.2
2020-11-06 15:18:34,042:INFO:xgboost==1.2.0
2020-11-06 15:18:34,043:INFO:lightgbm==2.3.1
2020-11-06 15:18:34,139:INFO:catboost==0.24.1
2020-11-06 15:18:35,396:INFO:mlflow==1.11.0
2020-11-06 15:18:35,397:INFO:Checking Exceptions
2020-11-06 15:18:35,397:INFO:Declaring global variables
2020-11-06 15:18:35,397:INFO:USI: 2384
2020-11-06 15:18:35,398:INFO:pycaret_globals: {'logging_param', 'display_container', '_all_models_internal', 'iterative_imputation_iters_param', 'exp_name_log', 'data_before_preprocess', 'fold_generator', 'fix_imbalance_method_param', 'fold_groups_param', 'y_train', 'X', 'log_plots_param', '_gpu_n_jobs_param', '_all_models', 'master_model_container', 'fix_imbalance_param', 'USI', 'pycaret_globals', 'experiment__', 'target_param', '_all_metrics', 'fold_shuffle_param', '_available_plots', 'fold_param', '_internal_pipeline', 'prep_pipe', '_ml_usecase', 'create_model_container', 'imputation_regressor', 'X_test', 'gpu_param', 'seed', 'X_train', 'stratify_param', 'y_test', 'n_jobs_param', 'html_param', 'transform_target_param', 'y', 'imputation_classifier', 'transform_target_method_param'}
2020-11-06 15:18:35,398:INFO:Preparing display monitor
2020-11-06 15:18:35,398:INFO:Preparing display monitor
2020-11-06 15:18:35,420:INFO:Importing libraries
2020-11-06 15:18:35,420:INFO:Copying data for preprocessing
2020-11-06 15:18:35,432:INFO:Declaring preprocessing parameters
2020-11-06 15:18:35,434:INFO:Setting up iterative imputation
2020-11-06 15:18:35,792:INFO:Creating preprocessing pipeline
2020-11-06 15:18:35,804:INFO:Preprocessing pipeline created successfully
2020-11-06 15:18:35,804:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-06 15:18:35,804:INFO:Creating global containers
2020-11-06 15:18:35,806:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-06 15:18:35,886:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-06 15:18:36,435:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-06 15:18:37,736:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-06 15:18:38,083:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-06 15:18:38,822:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-06 15:18:38,978:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-06 15:18:39,091:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-06 15:18:39,213:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-06 15:18:39,341:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-06 15:18:39,451:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-06 15:18:39,610:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-06 15:18:40,204:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-06 15:18:40,483:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-06 15:18:40,797:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-06 15:18:40,974:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-06 15:18:41,172:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-06 15:18:41,435:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-06 15:18:41,607:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-06 15:18:41,946:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-06 15:18:42,393:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-06 15:18:42,720:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-06 15:18:43,175:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-06 15:18:43,505:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-06 15:18:44,004:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-06 15:18:44,275:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-06 15:18:44,527:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-06 15:18:44,826:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-06 15:18:45,161:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-06 15:18:45,592:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-06 15:18:46,628:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-06 15:18:46,994:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-06 15:18:47,748:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-06 15:18:48,341:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-06 15:18:49,124:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-06 15:18:49,768:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-06 15:18:50,469:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-06 15:18:50,953:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-06 15:18:51,432:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-06 15:18:51,662:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-06 15:18:52,071:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-06 15:18:52,752:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-06 15:18:53,394:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-06 15:18:54,179:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-06 15:18:54,461:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-06 15:18:54,677:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-06 15:18:55,204:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-06 15:18:56,109:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-06 15:18:56,387:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-06 15:18:56,608:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-06 15:18:57,329:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-06 15:19:04,634:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-06 15:19:04,786:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-06 15:19:04,890:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-06 15:19:05,008:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-06 15:19:05,126:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-06 15:19:05,244:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-06 15:19:05,345:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-06 15:19:05,434:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-06 15:19:05,524:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-06 15:19:05,615:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-06 15:19:05,705:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-06 15:19:05,804:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-06 15:19:05,905:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-06 15:19:06,021:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-06 15:19:06,139:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-06 15:19:06,258:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-06 15:19:06,354:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-06 15:19:06,444:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-06 15:19:06,548:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-06 15:19:06,668:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-06 15:19:06,780:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-06 15:19:06,871:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-06 15:19:06,991:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-06 15:19:07,106:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-06 15:19:07,214:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-06 15:19:07,306:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-06 15:19:07,395:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-06 15:19:07,484:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-06 15:19:07,582:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-06 15:19:07,681:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-06 15:19:07,786:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-06 15:19:07,884:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-06 15:19:08,041:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-06 15:19:08,193:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-06 15:19:08,335:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-06 15:19:08,461:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-06 15:19:08,579:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-06 15:19:08,686:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-06 15:19:08,795:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-06 15:19:08,924:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-06 15:19:09,078:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-06 15:19:09,245:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-06 15:19:09,377:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-06 15:19:09,483:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-06 15:19:09,635:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-06 15:19:09,753:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-06 15:19:09,869:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-06 15:19:09,981:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-06 15:19:10,104:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-06 15:19:10,254:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-06 15:19:10,445:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-06 15:19:10,575:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-06 15:19:10,704:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-06 15:19:10,827:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-06 15:19:10,945:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-06 15:19:11,066:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-06 15:19:11,179:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-06 15:19:11,292:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-06 15:19:11,424:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-06 15:19:11,540:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-06 15:19:11,658:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-06 15:19:11,780:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-06 15:19:11,913:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-06 15:19:12,075:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-06 15:19:12,410:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-06 15:19:12,567:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-06 15:19:12,715:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-06 15:19:12,867:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-06 15:19:13,006:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-06 15:19:13,133:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-06 15:19:13,256:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-06 15:19:13,405:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-06 15:19:13,546:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-06 15:19:13,669:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-06 15:19:13,790:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-06 15:19:13,899:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-06 15:19:14,001:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-06 15:19:14,113:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-06 15:19:14,231:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-06 15:19:14,360:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-06 15:19:14,528:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-06 15:19:14,747:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-06 15:19:14,921:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-06 15:19:15,084:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-06 15:19:15,258:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-06 15:19:15,464:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-06 15:19:15,609:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-06 15:19:15,793:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-06 15:19:15,919:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-06 15:19:16,066:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-06 15:19:16,236:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-06 15:19:16,614:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-06 15:19:16,873:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-06 15:19:17,056:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-06 15:19:17,295:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-06 15:19:17,411:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-06 15:19:17,585:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-06 15:19:17,714:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-06 15:19:17,840:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-06 15:19:17,966:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-06 15:19:18,932:INFO:Creating grid variables
2020-11-06 15:19:19,064:INFO:create_model_container: 0
2020-11-06 15:19:19,064:INFO:master_model_container: 0
2020-11-06 15:19:19,064:INFO:display_container: 0
2020-11-06 15:19:19,103:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-06 15:19:19,103:INFO:setup() succesfully completed......................................
2020-11-06 15:19:47,964:INFO:Initializing compare_models()
2020-11-06 15:19:47,966:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Recall, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-11-06 15:19:47,966:INFO:Checking exceptions
2020-11-06 15:19:47,972:INFO:Preparing display monitor
2020-11-06 15:19:47,973:INFO:Preparing display monitor
2020-11-06 15:19:48,008:INFO:Initializing Logistic Regression
2020-11-06 15:19:48,008:INFO:Total runtime is 3.2862027486165364e-06 minutes
2020-11-06 15:19:48,016:INFO:SubProcess create_model() called ==================================
2020-11-06 15:19:48,016:INFO:Initializing create_model()
2020-11-06 15:19:48,016:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:19:48,016:INFO:Checking exceptions
2020-11-06 15:19:48,017:INFO:Importing libraries
2020-11-06 15:19:48,017:INFO:Copying training dataset
2020-11-06 15:19:48,017:INFO:Defining folds
2020-11-06 15:19:48,018:INFO:Declaring metric variables
2020-11-06 15:19:48,025:INFO:Importing untrained model
2020-11-06 15:19:48,033:INFO:Logistic Regression Imported succesfully
2020-11-06 15:19:48,052:INFO:Starting cross validation
2020-11-06 15:19:48,058:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:19:55,545:INFO:Calculating mean and std
2020-11-06 15:19:55,551:INFO:Creating metrics dataframe
2020-11-06 15:19:55,569:INFO:Uploading results into container
2020-11-06 15:19:55,570:INFO:Uploading model into container now
2020-11-06 15:19:55,570:INFO:create_model_container: 1
2020-11-06 15:19:55,570:INFO:master_model_container: 1
2020-11-06 15:19:55,570:INFO:display_container: 1
2020-11-06 15:19:55,572:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-11-06 15:19:55,573:INFO:create_model() succesfully completed......................................
2020-11-06 15:19:56,278:INFO:SubProcess create_model() end ==================================
2020-11-06 15:19:56,279:INFO:Creating metrics dataframe
2020-11-06 15:19:56,299:INFO:Initializing K Neighbors Classifier
2020-11-06 15:19:56,299:INFO:Total runtime is 0.13818785349527996 minutes
2020-11-06 15:19:56,321:INFO:SubProcess create_model() called ==================================
2020-11-06 15:19:56,321:INFO:Initializing create_model()
2020-11-06 15:19:56,321:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:19:56,322:INFO:Checking exceptions
2020-11-06 15:19:56,322:INFO:Importing libraries
2020-11-06 15:19:56,322:INFO:Copying training dataset
2020-11-06 15:19:56,324:INFO:Defining folds
2020-11-06 15:19:56,324:INFO:Declaring metric variables
2020-11-06 15:19:56,340:INFO:Importing untrained model
2020-11-06 15:19:56,352:INFO:K Neighbors Classifier Imported succesfully
2020-11-06 15:19:56,380:INFO:Starting cross validation
2020-11-06 15:19:56,381:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:19:56,554:INFO:Calculating mean and std
2020-11-06 15:19:56,556:INFO:Creating metrics dataframe
2020-11-06 15:19:56,563:INFO:Uploading results into container
2020-11-06 15:19:56,563:INFO:Uploading model into container now
2020-11-06 15:19:56,564:INFO:create_model_container: 2
2020-11-06 15:19:56,564:INFO:master_model_container: 2
2020-11-06 15:19:56,564:INFO:display_container: 1
2020-11-06 15:19:56,565:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-11-06 15:19:56,565:INFO:create_model() succesfully completed......................................
2020-11-06 15:19:56,749:INFO:SubProcess create_model() end ==================================
2020-11-06 15:19:56,749:INFO:Creating metrics dataframe
2020-11-06 15:19:56,771:INFO:Initializing Naive Bayes
2020-11-06 15:19:56,772:INFO:Total runtime is 0.14606105089187624 minutes
2020-11-06 15:19:56,783:INFO:SubProcess create_model() called ==================================
2020-11-06 15:19:56,783:INFO:Initializing create_model()
2020-11-06 15:19:56,783:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:19:56,783:INFO:Checking exceptions
2020-11-06 15:19:56,784:INFO:Importing libraries
2020-11-06 15:19:56,784:INFO:Copying training dataset
2020-11-06 15:19:56,785:INFO:Defining folds
2020-11-06 15:19:56,786:INFO:Declaring metric variables
2020-11-06 15:19:56,794:INFO:Importing untrained model
2020-11-06 15:19:56,804:INFO:Naive Bayes Imported succesfully
2020-11-06 15:19:56,841:INFO:Starting cross validation
2020-11-06 15:19:56,841:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:19:56,923:INFO:Calculating mean and std
2020-11-06 15:19:56,924:INFO:Creating metrics dataframe
2020-11-06 15:19:56,928:INFO:Uploading results into container
2020-11-06 15:19:56,929:INFO:Uploading model into container now
2020-11-06 15:19:56,929:INFO:create_model_container: 3
2020-11-06 15:19:56,929:INFO:master_model_container: 3
2020-11-06 15:19:56,929:INFO:display_container: 1
2020-11-06 15:19:56,930:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-11-06 15:19:56,930:INFO:create_model() succesfully completed......................................
2020-11-06 15:19:57,062:INFO:SubProcess create_model() end ==================================
2020-11-06 15:19:57,062:INFO:Creating metrics dataframe
2020-11-06 15:19:57,093:INFO:Initializing Decision Tree Classifier
2020-11-06 15:19:57,093:INFO:Total runtime is 0.15141839981079103 minutes
2020-11-06 15:19:57,104:INFO:SubProcess create_model() called ==================================
2020-11-06 15:19:57,105:INFO:Initializing create_model()
2020-11-06 15:19:57,105:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:19:57,105:INFO:Checking exceptions
2020-11-06 15:19:57,106:INFO:Importing libraries
2020-11-06 15:19:57,106:INFO:Copying training dataset
2020-11-06 15:19:57,108:INFO:Defining folds
2020-11-06 15:19:57,108:INFO:Declaring metric variables
2020-11-06 15:19:57,123:INFO:Importing untrained model
2020-11-06 15:19:57,140:INFO:Decision Tree Classifier Imported succesfully
2020-11-06 15:19:57,224:INFO:Starting cross validation
2020-11-06 15:19:57,225:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:19:57,307:INFO:Calculating mean and std
2020-11-06 15:19:57,308:INFO:Creating metrics dataframe
2020-11-06 15:19:57,313:INFO:Uploading results into container
2020-11-06 15:19:57,313:INFO:Uploading model into container now
2020-11-06 15:19:57,313:INFO:create_model_container: 4
2020-11-06 15:19:57,313:INFO:master_model_container: 4
2020-11-06 15:19:57,313:INFO:display_container: 1
2020-11-06 15:19:57,314:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-11-06 15:19:57,314:INFO:create_model() succesfully completed......................................
2020-11-06 15:19:57,406:INFO:SubProcess create_model() end ==================================
2020-11-06 15:19:57,406:INFO:Creating metrics dataframe
2020-11-06 15:19:57,433:INFO:Initializing SVM - Linear Kernel
2020-11-06 15:19:57,433:INFO:Total runtime is 0.15708702007929484 minutes
2020-11-06 15:19:57,442:INFO:SubProcess create_model() called ==================================
2020-11-06 15:19:57,442:INFO:Initializing create_model()
2020-11-06 15:19:57,443:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:19:57,443:INFO:Checking exceptions
2020-11-06 15:19:57,443:INFO:Importing libraries
2020-11-06 15:19:57,443:INFO:Copying training dataset
2020-11-06 15:19:57,444:INFO:Defining folds
2020-11-06 15:19:57,444:INFO:Declaring metric variables
2020-11-06 15:19:57,455:INFO:Importing untrained model
2020-11-06 15:19:57,469:INFO:SVM - Linear Kernel Imported succesfully
2020-11-06 15:19:57,494:INFO:Starting cross validation
2020-11-06 15:19:57,494:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:19:57,645:INFO:Calculating mean and std
2020-11-06 15:19:57,646:INFO:Creating metrics dataframe
2020-11-06 15:19:57,652:INFO:Uploading results into container
2020-11-06 15:19:57,653:INFO:Uploading model into container now
2020-11-06 15:19:57,653:INFO:create_model_container: 5
2020-11-06 15:19:57,653:INFO:master_model_container: 5
2020-11-06 15:19:57,653:INFO:display_container: 1
2020-11-06 15:19:57,654:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-11-06 15:19:57,654:INFO:create_model() succesfully completed......................................
2020-11-06 15:19:57,784:INFO:SubProcess create_model() end ==================================
2020-11-06 15:19:57,784:INFO:Creating metrics dataframe
2020-11-06 15:19:57,826:INFO:Initializing Ridge Classifier
2020-11-06 15:19:57,826:INFO:Total runtime is 0.16363733212153117 minutes
2020-11-06 15:19:57,837:INFO:SubProcess create_model() called ==================================
2020-11-06 15:19:57,837:INFO:Initializing create_model()
2020-11-06 15:19:57,837:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:19:57,838:INFO:Checking exceptions
2020-11-06 15:19:57,838:INFO:Importing libraries
2020-11-06 15:19:57,838:INFO:Copying training dataset
2020-11-06 15:19:57,839:INFO:Defining folds
2020-11-06 15:19:57,839:INFO:Declaring metric variables
2020-11-06 15:19:57,848:INFO:Importing untrained model
2020-11-06 15:19:57,857:INFO:Ridge Classifier Imported succesfully
2020-11-06 15:19:57,882:INFO:Starting cross validation
2020-11-06 15:19:57,883:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:19:57,965:INFO:Calculating mean and std
2020-11-06 15:19:57,966:INFO:Creating metrics dataframe
2020-11-06 15:19:57,972:INFO:Uploading results into container
2020-11-06 15:19:57,972:INFO:Uploading model into container now
2020-11-06 15:19:57,972:INFO:create_model_container: 6
2020-11-06 15:19:57,972:INFO:master_model_container: 6
2020-11-06 15:19:57,972:INFO:display_container: 1
2020-11-06 15:19:57,973:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-11-06 15:19:57,973:INFO:create_model() succesfully completed......................................
2020-11-06 15:19:58,088:INFO:SubProcess create_model() end ==================================
2020-11-06 15:19:58,088:INFO:Creating metrics dataframe
2020-11-06 15:19:58,149:INFO:Initializing Random Forest Classifier
2020-11-06 15:19:58,150:INFO:Total runtime is 0.1690275033315023 minutes
2020-11-06 15:19:58,180:INFO:SubProcess create_model() called ==================================
2020-11-06 15:19:58,181:INFO:Initializing create_model()
2020-11-06 15:19:58,181:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:19:58,181:INFO:Checking exceptions
2020-11-06 15:19:58,181:INFO:Importing libraries
2020-11-06 15:19:58,181:INFO:Copying training dataset
2020-11-06 15:19:58,182:INFO:Defining folds
2020-11-06 15:19:58,183:INFO:Declaring metric variables
2020-11-06 15:19:58,193:INFO:Importing untrained model
2020-11-06 15:19:58,200:INFO:Random Forest Classifier Imported succesfully
2020-11-06 15:19:58,221:INFO:Starting cross validation
2020-11-06 15:19:58,221:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:19:59,372:INFO:Calculating mean and std
2020-11-06 15:19:59,373:INFO:Creating metrics dataframe
2020-11-06 15:19:59,380:INFO:Uploading results into container
2020-11-06 15:19:59,380:INFO:Uploading model into container now
2020-11-06 15:19:59,380:INFO:create_model_container: 7
2020-11-06 15:19:59,380:INFO:master_model_container: 7
2020-11-06 15:19:59,380:INFO:display_container: 1
2020-11-06 15:19:59,381:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-06 15:19:59,381:INFO:create_model() succesfully completed......................................
2020-11-06 15:19:59,486:INFO:SubProcess create_model() end ==================================
2020-11-06 15:19:59,487:INFO:Creating metrics dataframe
2020-11-06 15:19:59,589:INFO:Initializing Quadratic Discriminant Analysis
2020-11-06 15:19:59,589:INFO:Total runtime is 0.1930146336555481 minutes
2020-11-06 15:19:59,602:INFO:SubProcess create_model() called ==================================
2020-11-06 15:19:59,602:INFO:Initializing create_model()
2020-11-06 15:19:59,602:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:19:59,602:INFO:Checking exceptions
2020-11-06 15:19:59,603:INFO:Importing libraries
2020-11-06 15:19:59,603:INFO:Copying training dataset
2020-11-06 15:19:59,604:INFO:Defining folds
2020-11-06 15:19:59,605:INFO:Declaring metric variables
2020-11-06 15:19:59,622:INFO:Importing untrained model
2020-11-06 15:19:59,633:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-11-06 15:19:59,662:INFO:Starting cross validation
2020-11-06 15:19:59,663:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:19:59,796:INFO:Calculating mean and std
2020-11-06 15:19:59,798:INFO:Creating metrics dataframe
2020-11-06 15:19:59,806:INFO:Uploading results into container
2020-11-06 15:19:59,806:INFO:Uploading model into container now
2020-11-06 15:19:59,806:INFO:create_model_container: 8
2020-11-06 15:19:59,806:INFO:master_model_container: 8
2020-11-06 15:19:59,806:INFO:display_container: 1
2020-11-06 15:19:59,807:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-11-06 15:19:59,807:INFO:create_model() succesfully completed......................................
2020-11-06 15:19:59,914:INFO:SubProcess create_model() end ==================================
2020-11-06 15:19:59,914:INFO:Creating metrics dataframe
2020-11-06 15:19:59,962:INFO:Initializing Ada Boost Classifier
2020-11-06 15:19:59,962:INFO:Total runtime is 0.19923596779505412 minutes
2020-11-06 15:19:59,972:INFO:SubProcess create_model() called ==================================
2020-11-06 15:19:59,973:INFO:Initializing create_model()
2020-11-06 15:19:59,973:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:19:59,973:INFO:Checking exceptions
2020-11-06 15:19:59,973:INFO:Importing libraries
2020-11-06 15:19:59,974:INFO:Copying training dataset
2020-11-06 15:19:59,975:INFO:Defining folds
2020-11-06 15:19:59,975:INFO:Declaring metric variables
2020-11-06 15:19:59,985:INFO:Importing untrained model
2020-11-06 15:20:00,001:INFO:Ada Boost Classifier Imported succesfully
2020-11-06 15:20:00,033:INFO:Starting cross validation
2020-11-06 15:20:00,034:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:20:00,629:INFO:Calculating mean and std
2020-11-06 15:20:00,630:INFO:Creating metrics dataframe
2020-11-06 15:20:00,639:INFO:Uploading results into container
2020-11-06 15:20:00,639:INFO:Uploading model into container now
2020-11-06 15:20:00,639:INFO:create_model_container: 9
2020-11-06 15:20:00,639:INFO:master_model_container: 9
2020-11-06 15:20:00,639:INFO:display_container: 1
2020-11-06 15:20:00,639:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-11-06 15:20:00,640:INFO:create_model() succesfully completed......................................
2020-11-06 15:20:00,732:INFO:SubProcess create_model() end ==================================
2020-11-06 15:20:00,732:INFO:Creating metrics dataframe
2020-11-06 15:20:00,790:INFO:Initializing Gradient Boosting Classifier
2020-11-06 15:20:00,790:INFO:Total runtime is 0.21302831570307415 minutes
2020-11-06 15:20:00,800:INFO:SubProcess create_model() called ==================================
2020-11-06 15:20:00,801:INFO:Initializing create_model()
2020-11-06 15:20:00,801:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:20:00,801:INFO:Checking exceptions
2020-11-06 15:20:00,802:INFO:Importing libraries
2020-11-06 15:20:00,802:INFO:Copying training dataset
2020-11-06 15:20:00,803:INFO:Defining folds
2020-11-06 15:20:00,803:INFO:Declaring metric variables
2020-11-06 15:20:00,814:INFO:Importing untrained model
2020-11-06 15:20:00,822:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-06 15:20:00,843:INFO:Starting cross validation
2020-11-06 15:20:00,843:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:20:01,599:INFO:Calculating mean and std
2020-11-06 15:20:01,600:INFO:Creating metrics dataframe
2020-11-06 15:20:01,606:INFO:Uploading results into container
2020-11-06 15:20:01,606:INFO:Uploading model into container now
2020-11-06 15:20:01,606:INFO:create_model_container: 10
2020-11-06 15:20:01,606:INFO:master_model_container: 10
2020-11-06 15:20:01,607:INFO:display_container: 1
2020-11-06 15:20:01,607:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-06 15:20:01,608:INFO:create_model() succesfully completed......................................
2020-11-06 15:20:01,709:INFO:SubProcess create_model() end ==================================
2020-11-06 15:20:01,710:INFO:Creating metrics dataframe
2020-11-06 15:20:01,763:INFO:Initializing Linear Discriminant Analysis
2020-11-06 15:20:01,763:INFO:Total runtime is 0.22925708293914795 minutes
2020-11-06 15:20:01,815:INFO:SubProcess create_model() called ==================================
2020-11-06 15:20:01,816:INFO:Initializing create_model()
2020-11-06 15:20:01,817:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:20:01,817:INFO:Checking exceptions
2020-11-06 15:20:01,817:INFO:Importing libraries
2020-11-06 15:20:01,817:INFO:Copying training dataset
2020-11-06 15:20:01,819:INFO:Defining folds
2020-11-06 15:20:01,819:INFO:Declaring metric variables
2020-11-06 15:20:01,835:INFO:Importing untrained model
2020-11-06 15:20:01,850:INFO:Linear Discriminant Analysis Imported succesfully
2020-11-06 15:20:01,877:INFO:Starting cross validation
2020-11-06 15:20:01,878:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:20:01,971:INFO:Calculating mean and std
2020-11-06 15:20:01,973:INFO:Creating metrics dataframe
2020-11-06 15:20:01,981:INFO:Uploading results into container
2020-11-06 15:20:01,981:INFO:Uploading model into container now
2020-11-06 15:20:01,981:INFO:create_model_container: 11
2020-11-06 15:20:01,981:INFO:master_model_container: 11
2020-11-06 15:20:01,981:INFO:display_container: 1
2020-11-06 15:20:01,981:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-11-06 15:20:01,982:INFO:create_model() succesfully completed......................................
2020-11-06 15:20:02,104:INFO:SubProcess create_model() end ==================================
2020-11-06 15:20:02,104:INFO:Creating metrics dataframe
2020-11-06 15:20:02,195:INFO:Initializing Extra Trees Classifier
2020-11-06 15:20:02,195:INFO:Total runtime is 0.23645588556925456 minutes
2020-11-06 15:20:02,213:INFO:SubProcess create_model() called ==================================
2020-11-06 15:20:02,213:INFO:Initializing create_model()
2020-11-06 15:20:02,214:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:20:02,214:INFO:Checking exceptions
2020-11-06 15:20:02,214:INFO:Importing libraries
2020-11-06 15:20:02,214:INFO:Copying training dataset
2020-11-06 15:20:02,216:INFO:Defining folds
2020-11-06 15:20:02,216:INFO:Declaring metric variables
2020-11-06 15:20:02,251:INFO:Importing untrained model
2020-11-06 15:20:02,265:INFO:Extra Trees Classifier Imported succesfully
2020-11-06 15:20:02,298:INFO:Starting cross validation
2020-11-06 15:20:02,299:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:20:03,774:INFO:Calculating mean and std
2020-11-06 15:20:03,776:INFO:Creating metrics dataframe
2020-11-06 15:20:03,781:INFO:Uploading results into container
2020-11-06 15:20:03,782:INFO:Uploading model into container now
2020-11-06 15:20:03,782:INFO:create_model_container: 12
2020-11-06 15:20:03,782:INFO:master_model_container: 12
2020-11-06 15:20:03,782:INFO:display_container: 1
2020-11-06 15:20:03,783:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-06 15:20:03,783:INFO:create_model() succesfully completed......................................
2020-11-06 15:20:03,908:INFO:SubProcess create_model() end ==================================
2020-11-06 15:20:03,908:INFO:Creating metrics dataframe
2020-11-06 15:20:04,023:INFO:Initializing Extreme Gradient Boosting
2020-11-06 15:20:04,023:INFO:Total runtime is 0.26691701809565227 minutes
2020-11-06 15:20:04,044:INFO:SubProcess create_model() called ==================================
2020-11-06 15:20:04,045:INFO:Initializing create_model()
2020-11-06 15:20:04,045:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:20:04,045:INFO:Checking exceptions
2020-11-06 15:20:04,045:INFO:Importing libraries
2020-11-06 15:20:04,045:INFO:Copying training dataset
2020-11-06 15:20:04,046:INFO:Defining folds
2020-11-06 15:20:04,047:INFO:Declaring metric variables
2020-11-06 15:20:04,062:INFO:Importing untrained model
2020-11-06 15:20:04,087:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-06 15:20:04,118:INFO:Starting cross validation
2020-11-06 15:20:04,119:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:20:08,481:INFO:Calculating mean and std
2020-11-06 15:20:08,483:INFO:Creating metrics dataframe
2020-11-06 15:20:08,493:INFO:Uploading results into container
2020-11-06 15:20:08,493:INFO:Uploading model into container now
2020-11-06 15:20:08,494:INFO:create_model_container: 13
2020-11-06 15:20:08,494:INFO:master_model_container: 13
2020-11-06 15:20:08,494:INFO:display_container: 1
2020-11-06 15:20:08,495:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-11-06 15:20:08,496:INFO:create_model() succesfully completed......................................
2020-11-06 15:20:08,629:INFO:SubProcess create_model() end ==================================
2020-11-06 15:20:08,629:INFO:Creating metrics dataframe
2020-11-06 15:20:08,848:INFO:Initializing Light Gradient Boosting Machine
2020-11-06 15:20:08,848:INFO:Total runtime is 0.34733946720759074 minutes
2020-11-06 15:20:08,872:INFO:SubProcess create_model() called ==================================
2020-11-06 15:20:08,873:INFO:Initializing create_model()
2020-11-06 15:20:08,874:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:20:08,874:INFO:Checking exceptions
2020-11-06 15:20:08,874:INFO:Importing libraries
2020-11-06 15:20:08,874:INFO:Copying training dataset
2020-11-06 15:20:08,876:INFO:Defining folds
2020-11-06 15:20:08,876:INFO:Declaring metric variables
2020-11-06 15:20:08,897:INFO:Importing untrained model
2020-11-06 15:20:08,918:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-06 15:20:09,007:INFO:Starting cross validation
2020-11-06 15:20:09,009:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:20:09,433:INFO:Calculating mean and std
2020-11-06 15:20:09,436:INFO:Creating metrics dataframe
2020-11-06 15:20:09,450:INFO:Uploading results into container
2020-11-06 15:20:09,450:INFO:Uploading model into container now
2020-11-06 15:20:09,451:INFO:create_model_container: 14
2020-11-06 15:20:09,451:INFO:master_model_container: 14
2020-11-06 15:20:09,451:INFO:display_container: 1
2020-11-06 15:20:09,453:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-06 15:20:09,453:INFO:create_model() succesfully completed......................................
2020-11-06 15:20:09,633:INFO:SubProcess create_model() end ==================================
2020-11-06 15:20:09,634:INFO:Creating metrics dataframe
2020-11-06 15:20:09,857:INFO:Initializing CatBoost Classifier
2020-11-06 15:20:09,858:INFO:Total runtime is 0.36416255235671996 minutes
2020-11-06 15:20:09,897:INFO:SubProcess create_model() called ==================================
2020-11-06 15:20:09,899:INFO:Initializing create_model()
2020-11-06 15:20:09,900:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb143a16190>, kwargs={})
2020-11-06 15:20:09,900:INFO:Checking exceptions
2020-11-06 15:20:09,900:INFO:Importing libraries
2020-11-06 15:20:09,900:INFO:Copying training dataset
2020-11-06 15:20:09,903:INFO:Defining folds
2020-11-06 15:20:09,905:INFO:Declaring metric variables
2020-11-06 15:20:09,945:INFO:Importing untrained model
2020-11-06 15:20:10,003:INFO:CatBoost Classifier Imported succesfully
2020-11-06 15:20:10,053:INFO:Starting cross validation
2020-11-06 15:20:10,054:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:21:14,743:INFO:Calculating mean and std
2020-11-06 15:21:14,753:INFO:Creating metrics dataframe
2020-11-06 15:21:14,780:INFO:Uploading results into container
2020-11-06 15:21:14,780:INFO:Uploading model into container now
2020-11-06 15:21:14,780:INFO:create_model_container: 15
2020-11-06 15:21:14,780:INFO:master_model_container: 15
2020-11-06 15:21:14,780:INFO:display_container: 1
2020-11-06 15:21:14,780:INFO:<catboost.core.CatBoostClassifier object at 0x7fb13ce181f0>
2020-11-06 15:21:14,781:INFO:create_model() succesfully completed......................................
2020-11-06 15:21:15,308:INFO:SubProcess create_model() end ==================================
2020-11-06 15:21:15,309:INFO:Creating metrics dataframe
2020-11-06 15:21:15,532:INFO:Initializing create_model()
2020-11-06 15:21:15,532:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-06 15:21:15,533:INFO:Checking exceptions
2020-11-06 15:21:15,534:INFO:Importing libraries
2020-11-06 15:21:15,534:INFO:Copying training dataset
2020-11-06 15:21:15,535:INFO:Defining folds
2020-11-06 15:21:15,535:INFO:Declaring metric variables
2020-11-06 15:21:15,535:INFO:Importing untrained model
2020-11-06 15:21:15,535:INFO:Declaring custom model
2020-11-06 15:21:15,537:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-06 15:21:15,539:INFO:Cross validation set to False
2020-11-06 15:21:15,540:INFO:Fitting Model
2020-11-06 15:21:15,928:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-11-06 15:21:15,928:INFO:create_models() succesfully completed......................................
2020-11-06 15:21:16,130:INFO:Initializing create_model()
2020-11-06 15:21:16,133:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-06 15:21:16,133:INFO:Checking exceptions
2020-11-06 15:21:16,133:INFO:Importing libraries
2020-11-06 15:21:16,134:INFO:Copying training dataset
2020-11-06 15:21:16,134:INFO:Defining folds
2020-11-06 15:21:16,134:INFO:Declaring metric variables
2020-11-06 15:21:16,134:INFO:Importing untrained model
2020-11-06 15:21:16,134:INFO:Declaring custom model
2020-11-06 15:21:16,135:INFO:Random Forest Classifier Imported succesfully
2020-11-06 15:21:16,135:INFO:Cross validation set to False
2020-11-06 15:21:16,135:INFO:Fitting Model
2020-11-06 15:21:16,594:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-06 15:21:16,594:INFO:create_models() succesfully completed......................................
2020-11-06 15:21:17,394:INFO:create_model_container: 15
2020-11-06 15:21:17,395:INFO:master_model_container: 15
2020-11-06 15:21:17,395:INFO:display_container: 1
2020-11-06 15:21:17,400:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)]
2020-11-06 15:21:17,401:INFO:compare_models() succesfully completed......................................
2020-11-06 15:21:17,867:INFO:Initializing tune_model()
2020-11-06 15:21:17,867:INFO:tune_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Recall, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-06 15:21:17,867:INFO:Checking exceptions
2020-11-06 15:21:19,481:INFO:Preparing display monitor
2020-11-06 15:21:19,548:INFO:Copying training dataset
2020-11-06 15:21:19,549:INFO:Checking base model
2020-11-06 15:21:19,555:INFO:Base model : Extreme Gradient Boosting
2020-11-06 15:21:19,570:INFO:Declaring metric variables
2020-11-06 15:21:19,586:INFO:Defining Hyperparameters
2020-11-06 15:21:20,048:INFO:Tuning with n_jobs=-1
2020-11-06 15:21:20,051:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-06 15:22:31,422:INFO:best_params: {'actual_estimator__learning_rate': 0.0003650690989298994, 'actual_estimator__n_estimators': 277, 'actual_estimator__subsample': 0.5122198531156548, 'actual_estimator__max_depth': 2, 'actual_estimator__colsample_bytree': 0.5090177538125356, 'actual_estimator__min_child_weight': 4, 'actual_estimator__reg_alpha': 2.618008815377073e-08, 'actual_estimator__reg_lambda': 0.007024862962789524, 'actual_estimator__scale_pos_weight': 12.428616316513573}
2020-11-06 15:22:31,424:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-06 15:22:31,430:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4446, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-06 15:22:31,432:INFO:Random search completed
2020-11-06 15:22:31,433:INFO:SubProcess create_model() called ==================================
2020-11-06 15:22:31,435:INFO:Initializing create_model()
2020-11-06 15:22:31,435:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb14333b040>, kwargs={'learning_rate': 0.0003650690989298994, 'n_estimators': 277, 'subsample': 0.5122198531156548, 'max_depth': 2, 'colsample_bytree': 0.5090177538125356, 'min_child_weight': 4, 'reg_alpha': 2.618008815377073e-08, 'reg_lambda': 0.007024862962789524, 'scale_pos_weight': 12.428616316513573})
2020-11-06 15:22:31,435:INFO:Checking exceptions
2020-11-06 15:22:31,435:INFO:Importing libraries
2020-11-06 15:22:31,436:INFO:Copying training dataset
2020-11-06 15:22:31,437:INFO:Defining folds
2020-11-06 15:22:31,437:INFO:Declaring metric variables
2020-11-06 15:22:31,454:INFO:Importing untrained model
2020-11-06 15:22:31,454:INFO:Declaring custom model
2020-11-06 15:22:31,464:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-06 15:22:31,483:INFO:Starting cross validation
2020-11-06 15:22:31,484:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:22:32,073:INFO:Calculating mean and std
2020-11-06 15:22:32,074:INFO:Creating metrics dataframe
2020-11-06 15:22:32,095:INFO:Finalizing model
2020-11-06 15:22:32,197:INFO:Uploading results into container
2020-11-06 15:22:32,197:INFO:Uploading model into container now
2020-11-06 15:22:32,197:INFO:create_model_container: 16
2020-11-06 15:22:32,197:INFO:master_model_container: 16
2020-11-06 15:22:32,198:INFO:display_container: 2
2020-11-06 15:22:32,202:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-06 15:22:32,202:INFO:create_model() succesfully completed......................................
2020-11-06 15:22:33,092:INFO:SubProcess create_model() end ==================================
2020-11-06 15:22:33,156:INFO:create_model_container: 16
2020-11-06 15:22:33,156:INFO:master_model_container: 16
2020-11-06 15:22:33,157:INFO:display_container: 2
2020-11-06 15:22:33,159:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-06 15:22:33,160:INFO:tune_model() succesfully completed......................................
2020-11-06 15:22:33,328:INFO:Initializing tune_model()
2020-11-06 15:22:33,328:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=Recall, custom_scorer=None, search_library=optuna, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-11-06 15:22:33,328:INFO:Checking exceptions
2020-11-06 15:22:33,330:INFO:Preparing display monitor
2020-11-06 15:22:33,362:INFO:Copying training dataset
2020-11-06 15:22:33,364:INFO:Checking base model
2020-11-06 15:22:33,365:INFO:Base model : Random Forest Classifier
2020-11-06 15:22:33,380:INFO:Declaring metric variables
2020-11-06 15:22:33,392:INFO:Defining Hyperparameters
2020-11-06 15:22:33,517:INFO:Tuning with n_jobs=-1
2020-11-06 15:22:33,519:INFO:Initializing optuna.integration.OptunaSearchCV
2020-11-06 15:26:53,064:INFO:best_params: {'actual_estimator__n_estimators': 130, 'actual_estimator__max_depth': 10, 'actual_estimator__min_impurity_decrease': 1.4100186191382527e-08, 'actual_estimator__max_features': 0.8349578819567256, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__bootstrap': True, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample'}
2020-11-06 15:26:53,065:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-11-06 15:26:53,067:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4446, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-11-06 15:26:53,068:INFO:Random search completed
2020-11-06 15:26:53,068:INFO:SubProcess create_model() called ==================================
2020-11-06 15:26:53,070:INFO:Initializing create_model()
2020-11-06 15:26:53,070:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb126fe9400>, kwargs={'n_estimators': 130, 'max_depth': 10, 'min_impurity_decrease': 1.4100186191382527e-08, 'max_features': 0.8349578819567256, 'min_samples_split': 9, 'min_samples_leaf': 2, 'bootstrap': True, 'criterion': 'gini', 'class_weight': 'balanced_subsample'})
2020-11-06 15:26:53,070:INFO:Checking exceptions
2020-11-06 15:26:53,070:INFO:Importing libraries
2020-11-06 15:26:53,070:INFO:Copying training dataset
2020-11-06 15:26:53,072:INFO:Defining folds
2020-11-06 15:26:53,072:INFO:Declaring metric variables
2020-11-06 15:26:53,086:INFO:Importing untrained model
2020-11-06 15:26:53,086:INFO:Declaring custom model
2020-11-06 15:26:53,096:INFO:Random Forest Classifier Imported succesfully
2020-11-06 15:26:53,121:INFO:Starting cross validation
2020-11-06 15:26:53,122:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:26:54,668:INFO:Calculating mean and std
2020-11-06 15:26:54,677:INFO:Creating metrics dataframe
2020-11-06 15:26:54,728:INFO:Finalizing model
2020-11-06 15:26:55,237:INFO:Uploading results into container
2020-11-06 15:26:55,238:INFO:Uploading model into container now
2020-11-06 15:26:55,238:INFO:create_model_container: 17
2020-11-06 15:26:55,238:INFO:master_model_container: 17
2020-11-06 15:26:55,238:INFO:display_container: 3
2020-11-06 15:26:55,239:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-11-06 15:26:55,239:INFO:create_model() succesfully completed......................................
2020-11-06 15:26:56,350:INFO:SubProcess create_model() end ==================================
2020-11-06 15:26:56,504:INFO:create_model_container: 17
2020-11-06 15:26:56,504:INFO:master_model_container: 17
2020-11-06 15:26:56,505:INFO:display_container: 3
2020-11-06 15:26:56,507:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-11-06 15:26:56,507:INFO:tune_model() succesfully completed......................................
2020-11-06 15:26:56,866:INFO:Initializing blend_models()
2020-11-06 15:26:56,866:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)], fold=5, round=4, choose_better=True, optimize=Recall, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-06 15:26:56,866:INFO:Checking exceptions
2020-11-06 15:26:56,869:INFO:Preparing display monitor
2020-11-06 15:26:56,905:INFO:Importing libraries
2020-11-06 15:26:56,906:INFO:Copying training dataset
2020-11-06 15:26:56,917:INFO:Getting model names
2020-11-06 15:26:56,944:INFO:SubProcess create_model() called ==================================
2020-11-06 15:26:56,962:INFO:Initializing create_model()
2020-11-06 15:26:56,962:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.5090177538125356,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.0003650690989298994,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constrain...
                                                            max_leaf_nodes=None,
                                                            max_samples=None,
                                                            min_impurity_decrease=1.4100186191382527e-08,
                                                            min_impurity_split=None,
                                                            min_samples_leaf=2,
                                                            min_samples_split=9,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=130,
                                                            n_jobs=-1,
                                                            oob_score=False,
                                                            random_state=786,
                                                            verbose=0,
                                                            warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb12704feb0>, kwargs={})
2020-11-06 15:26:56,962:INFO:Checking exceptions
2020-11-06 15:26:56,962:INFO:Importing libraries
2020-11-06 15:26:56,962:INFO:Copying training dataset
2020-11-06 15:26:56,963:INFO:Defining folds
2020-11-06 15:26:56,963:INFO:Declaring metric variables
2020-11-06 15:26:56,978:INFO:Importing untrained model
2020-11-06 15:26:56,978:INFO:Declaring custom model
2020-11-06 15:26:57,000:INFO:Voting Classifier Imported succesfully
2020-11-06 15:26:57,048:INFO:Starting cross validation
2020-11-06 15:26:57,049:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:27:07,918:INFO:Calculating mean and std
2020-11-06 15:27:07,931:INFO:Creating metrics dataframe
2020-11-06 15:27:07,998:INFO:Finalizing model
2020-11-06 15:27:10,905:INFO:Uploading results into container
2020-11-06 15:27:10,906:INFO:Uploading model into container now
2020-11-06 15:27:10,906:INFO:create_model_container: 18
2020-11-06 15:27:10,906:INFO:master_model_container: 18
2020-11-06 15:27:10,906:INFO:display_container: 4
2020-11-06 15:27:10,916:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.5090177538125356,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.0003650690989298994,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constrain...
                                                            max_leaf_nodes=None,
                                                            max_samples=None,
                                                            min_impurity_decrease=1.4100186191382527e-08,
                                                            min_impurity_split=None,
                                                            min_samples_leaf=2,
                                                            min_samples_split=9,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=130,
                                                            n_jobs=-1,
                                                            oob_score=False,
                                                            random_state=786,
                                                            verbose=0,
                                                            warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1])
2020-11-06 15:27:10,916:INFO:create_model() succesfully completed......................................
2020-11-06 15:27:11,371:INFO:SubProcess create_model() end ==================================
2020-11-06 15:27:11,371:INFO:choose_better activated
2020-11-06 15:27:11,389:INFO:TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.5090177538125356,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.0003650690989298994,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constrain...
                                                            max_leaf_nodes=None,
                                                            max_samples=None,
                                                            min_impurity_decrease=1.4100186191382527e-08,
                                                            min_impurity_split=None,
                                                            min_samples_leaf=2,
                                                            min_samples_split=9,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=130,
                                                            n_jobs=-1,
                                                            oob_score=False,
                                                            random_state=786,
                                                            verbose=0,
                                                            warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1]) result for Recall is 0.7836
2020-11-06 15:27:11,389:INFO:SubProcess create_model() called ==================================
2020-11-06 15:27:11,393:INFO:Initializing create_model()
2020-11-06 15:27:11,393:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-06 15:27:11,393:INFO:Checking exceptions
2020-11-06 15:27:11,394:INFO:Importing libraries
2020-11-06 15:27:11,394:INFO:Copying training dataset
2020-11-06 15:27:11,395:INFO:Defining folds
2020-11-06 15:27:11,395:INFO:Declaring metric variables
2020-11-06 15:27:11,395:INFO:Importing untrained model
2020-11-06 15:27:11,395:INFO:Declaring custom model
2020-11-06 15:27:11,396:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-06 15:27:11,397:INFO:Starting cross validation
2020-11-06 15:27:11,397:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:27:11,880:INFO:Calculating mean and std
2020-11-06 15:27:11,881:INFO:Creating metrics dataframe
2020-11-06 15:27:11,886:INFO:Finalizing model
2020-11-06 15:27:11,976:INFO:Uploading results into container
2020-11-06 15:27:11,976:INFO:Uploading model into container now
2020-11-06 15:27:11,976:INFO:create_model_container: 19
2020-11-06 15:27:11,976:INFO:master_model_container: 19
2020-11-06 15:27:11,976:INFO:display_container: 5
2020-11-06 15:27:11,980:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-06 15:27:11,980:INFO:create_model() succesfully completed......................................
2020-11-06 15:27:12,098:INFO:SubProcess create_model() end ==================================
2020-11-06 15:27:12,101:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0) result for Recall is 1.0
2020-11-06 15:27:12,101:INFO:SubProcess create_model() called ==================================
2020-11-06 15:27:12,102:INFO:Initializing create_model()
2020-11-06 15:27:12,102:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-06 15:27:12,102:INFO:Checking exceptions
2020-11-06 15:27:12,102:INFO:Importing libraries
2020-11-06 15:27:12,102:INFO:Copying training dataset
2020-11-06 15:27:12,103:INFO:Defining folds
2020-11-06 15:27:12,103:INFO:Declaring metric variables
2020-11-06 15:27:12,103:INFO:Importing untrained model
2020-11-06 15:27:12,103:INFO:Declaring custom model
2020-11-06 15:27:12,103:INFO:Random Forest Classifier Imported succesfully
2020-11-06 15:27:12,103:INFO:Starting cross validation
2020-11-06 15:27:12,104:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 15:27:13,972:INFO:Calculating mean and std
2020-11-06 15:27:13,972:INFO:Creating metrics dataframe
2020-11-06 15:27:13,976:INFO:Finalizing model
2020-11-06 15:27:14,288:INFO:Uploading results into container
2020-11-06 15:27:14,289:INFO:Uploading model into container now
2020-11-06 15:27:14,289:INFO:create_model_container: 20
2020-11-06 15:27:14,289:INFO:master_model_container: 20
2020-11-06 15:27:14,289:INFO:display_container: 5
2020-11-06 15:27:14,289:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)
2020-11-06 15:27:14,289:INFO:create_model() succesfully completed......................................
2020-11-06 15:27:14,382:INFO:SubProcess create_model() end ==================================
2020-11-06 15:27:14,383:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False) result for Recall is 0.7699
2020-11-06 15:27:14,385:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0) is best model
2020-11-06 15:27:14,385:INFO:choose_better completed
2020-11-06 15:27:14,411:INFO:create_model_container: 20
2020-11-06 15:27:14,411:INFO:master_model_container: 20
2020-11-06 15:27:14,412:INFO:display_container: 4
2020-11-06 15:27:14,414:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0)
2020-11-06 15:27:14,415:INFO:blend_models() succesfully completed......................................
2020-11-06 15:27:14,550:INFO:Initializing optimize_threshold()
2020-11-06 15:27:14,551:INFO:optimize_threshold(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), true_positive=100, true_negative=100, false_positive=-100, false_negative=0)
2020-11-06 15:27:14,551:INFO:Importing libraries
2020-11-06 15:27:14,551:INFO:Checking exceptions
2020-11-06 15:27:14,558:INFO:Defining loss function
2020-11-06 15:27:14,558:INFO:Iteration starts at 0
2020-11-06 15:27:15,468:INFO:Figure ready for render
2020-11-06 15:27:15,709:INFO:optimize_threshold() succesfully completed......................................
2020-11-06 15:27:15,735:INFO:Initializing plot_model()
2020-11-06 15:27:15,735:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:15,735:INFO:Checking exceptions
2020-11-06 15:27:15,739:INFO:Initializing plot_model()
2020-11-06 15:27:15,739:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:15,739:INFO:Checking exceptions
2020-11-06 15:27:15,762:INFO:Preloading libraries
2020-11-06 15:27:15,765:INFO:Copying training dataset
2020-11-06 15:27:15,766:INFO:Copying test dataset
2020-11-06 15:27:15,766:INFO:Plot type: error
2020-11-06 15:27:15,936:INFO:Fitting Model
2020-11-06 15:27:15,937:INFO:Scoring test/hold-out set
2020-11-06 15:27:15,953:INFO:Saving 'Prediction Error.png' in current active directory
2020-11-06 15:27:16,239:INFO:Visual Rendered Successfully
2020-11-06 15:27:16,378:INFO:plot_model() succesfully completed......................................
2020-11-06 15:27:16,380:INFO:Initializing plot_model()
2020-11-06 15:27:16,380:INFO:plot_model(plot=cooks, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:16,380:INFO:Checking exceptions
2020-11-06 15:27:16,383:INFO:Initializing plot_model()
2020-11-06 15:27:16,383:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:16,383:INFO:Checking exceptions
2020-11-06 15:27:16,404:INFO:Preloading libraries
2020-11-06 15:27:16,406:INFO:Copying training dataset
2020-11-06 15:27:16,407:INFO:Copying test dataset
2020-11-06 15:27:16,407:INFO:Plot type: auc
2020-11-06 15:27:16,423:INFO:Fitting Model
2020-11-06 15:27:16,424:INFO:Scoring test/hold-out set
2020-11-06 15:27:16,439:INFO:Saving 'AUC.png' in current active directory
2020-11-06 15:27:16,624:INFO:Visual Rendered Successfully
2020-11-06 15:27:16,742:INFO:plot_model() succesfully completed......................................
2020-11-06 15:27:16,745:INFO:Initializing plot_model()
2020-11-06 15:27:16,745:INFO:plot_model(plot=threshold, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:16,745:INFO:Checking exceptions
2020-11-06 15:27:16,758:INFO:Preloading libraries
2020-11-06 15:27:16,760:INFO:Copying training dataset
2020-11-06 15:27:16,761:INFO:Copying test dataset
2020-11-06 15:27:16,761:INFO:Plot type: threshold
2020-11-06 15:27:16,779:INFO:Fitting Model
2020-11-06 15:27:23,849:INFO:Scoring test/hold-out set
2020-11-06 15:27:23,853:INFO:Saving 'Threshold.png' in current active directory
2020-11-06 15:27:24,289:INFO:Visual Rendered Successfully
2020-11-06 15:27:24,723:INFO:plot_model() succesfully completed......................................
2020-11-06 15:27:24,726:INFO:Initializing plot_model()
2020-11-06 15:27:24,726:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:24,726:INFO:Checking exceptions
2020-11-06 15:27:24,738:INFO:Preloading libraries
2020-11-06 15:27:24,740:INFO:Copying training dataset
2020-11-06 15:27:24,740:INFO:Copying test dataset
2020-11-06 15:27:24,741:INFO:Plot type: pr
2020-11-06 15:27:24,753:INFO:Fitting Model
2020-11-06 15:27:24,753:INFO:Scoring test/hold-out set
2020-11-06 15:27:24,761:INFO:Saving 'Precision Recall.png' in current active directory
2020-11-06 15:27:24,901:INFO:Visual Rendered Successfully
2020-11-06 15:27:25,020:INFO:plot_model() succesfully completed......................................
2020-11-06 15:27:25,024:INFO:Initializing plot_model()
2020-11-06 15:27:25,024:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:25,024:INFO:Checking exceptions
2020-11-06 15:27:25,042:INFO:Preloading libraries
2020-11-06 15:27:25,044:INFO:Copying training dataset
2020-11-06 15:27:25,045:INFO:Copying test dataset
2020-11-06 15:27:25,045:INFO:Plot type: confusion_matrix
2020-11-06 15:27:25,065:INFO:Fitting Model
2020-11-06 15:27:25,066:INFO:Scoring test/hold-out set
2020-11-06 15:27:25,078:INFO:Saving 'Confusion Matrix.png' in current active directory
2020-11-06 15:27:25,254:INFO:Visual Rendered Successfully
2020-11-06 15:27:25,377:INFO:plot_model() succesfully completed......................................
2020-11-06 15:27:25,381:INFO:Initializing plot_model()
2020-11-06 15:27:25,381:INFO:plot_model(plot=class_report, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:25,381:INFO:Checking exceptions
2020-11-06 15:27:25,394:INFO:Preloading libraries
2020-11-06 15:27:25,395:INFO:Copying training dataset
2020-11-06 15:27:25,396:INFO:Copying test dataset
2020-11-06 15:27:25,396:INFO:Plot type: class_report
2020-11-06 15:27:25,409:INFO:Fitting Model
2020-11-06 15:27:25,409:INFO:Scoring test/hold-out set
2020-11-06 15:27:25,434:INFO:Saving 'Class Report.png' in current active directory
2020-11-06 15:27:25,612:INFO:Visual Rendered Successfully
2020-11-06 15:27:25,747:INFO:plot_model() succesfully completed......................................
2020-11-06 15:27:25,751:INFO:Initializing plot_model()
2020-11-06 15:27:25,751:INFO:plot_model(plot=boundary, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:25,751:INFO:Checking exceptions
2020-11-06 15:27:25,766:INFO:Preloading libraries
2020-11-06 15:27:25,768:INFO:Copying training dataset
2020-11-06 15:27:25,768:INFO:Copying test dataset
2020-11-06 15:27:25,768:INFO:Plot type: boundary
2020-11-06 15:27:25,840:INFO:Fitting StandardScaler()
2020-11-06 15:27:25,845:INFO:Initializing plot_model()
2020-11-06 15:27:25,845:INFO:plot_model(plot=rfe, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:25,845:INFO:Checking exceptions
2020-11-06 15:27:25,858:INFO:Preloading libraries
2020-11-06 15:27:25,859:INFO:Copying training dataset
2020-11-06 15:27:25,860:INFO:Copying test dataset
2020-11-06 15:27:25,860:INFO:Plot type: rfe
2020-11-06 15:27:25,874:INFO:Fitting Model
2020-11-06 15:27:38,781:INFO:Initializing plot_model()
2020-11-06 15:27:38,782:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:38,782:INFO:Checking exceptions
2020-11-06 15:27:38,802:INFO:Preloading libraries
2020-11-06 15:27:38,804:INFO:Copying training dataset
2020-11-06 15:27:38,805:INFO:Copying test dataset
2020-11-06 15:27:38,806:INFO:Plot type: learning
2020-11-06 15:27:38,811:INFO:Fitting Model
2020-11-06 15:27:44,955:INFO:Saving 'Learning Curve.png' in current active directory
2020-11-06 15:27:45,726:INFO:Visual Rendered Successfully
2020-11-06 15:27:46,390:INFO:plot_model() succesfully completed......................................
2020-11-06 15:27:46,394:INFO:Initializing plot_model()
2020-11-06 15:27:46,394:INFO:plot_model(plot=manifold, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:46,394:INFO:Checking exceptions
2020-11-06 15:27:46,414:INFO:Preloading libraries
2020-11-06 15:27:46,418:INFO:Copying training dataset
2020-11-06 15:27:46,419:INFO:Copying test dataset
2020-11-06 15:27:46,419:INFO:Plot type: manifold
2020-11-06 15:27:46,444:INFO:Fitting & Transforming Model
2020-11-06 15:27:46,455:INFO:Initializing plot_model()
2020-11-06 15:27:46,455:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:46,455:INFO:Checking exceptions
2020-11-06 15:27:46,474:INFO:Preloading libraries
2020-11-06 15:27:46,475:INFO:Copying training dataset
2020-11-06 15:27:46,476:INFO:Copying test dataset
2020-11-06 15:27:46,476:INFO:Plot type: calibration
2020-11-06 15:27:46,494:INFO:Scoring test/hold-out set
2020-11-06 15:27:46,582:INFO:Saving 'Calibration Curve.png' in current active directory
2020-11-06 15:27:47,168:INFO:Visual Rendered Successfully
2020-11-06 15:27:47,343:INFO:plot_model() succesfully completed......................................
2020-11-06 15:27:47,348:INFO:Initializing plot_model()
2020-11-06 15:27:47,348:INFO:plot_model(plot=vc, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:27:47,348:INFO:Checking exceptions
2020-11-06 15:27:47,372:INFO:Preloading libraries
2020-11-06 15:27:47,375:INFO:Copying training dataset
2020-11-06 15:27:47,376:INFO:Copying test dataset
2020-11-06 15:27:47,377:INFO:Plot type: vc
2020-11-06 15:27:47,379:INFO:Determining param_name
2020-11-06 15:27:47,381:INFO:param_name: actual_estimator__max_depth
2020-11-06 15:27:47,398:INFO:Fitting Model
2020-11-06 15:28:03,136:INFO:Saving 'Validation Curve.png' in current active directory
2020-11-06 15:28:03,427:INFO:Visual Rendered Successfully
2020-11-06 15:28:03,928:INFO:plot_model() succesfully completed......................................
2020-11-06 15:28:03,936:INFO:Initializing plot_model()
2020-11-06 15:28:03,936:INFO:plot_model(plot=dimension, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:28:03,936:INFO:Checking exceptions
2020-11-06 15:28:03,954:INFO:Preloading libraries
2020-11-06 15:28:03,958:INFO:Copying training dataset
2020-11-06 15:28:03,959:INFO:Copying test dataset
2020-11-06 15:28:03,959:INFO:Plot type: dimension
2020-11-06 15:28:03,965:INFO:Fitting StandardScaler()
2020-11-06 15:28:03,974:INFO:Initializing plot_model()
2020-11-06 15:28:03,974:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:28:03,974:INFO:Checking exceptions
2020-11-06 15:28:03,990:INFO:Preloading libraries
2020-11-06 15:28:03,992:INFO:Copying training dataset
2020-11-06 15:28:03,993:INFO:Copying test dataset
2020-11-06 15:28:03,993:INFO:Plot type: feature
2020-11-06 15:28:03,996:WARNING:No coef_ found. Trying feature_importances_
2020-11-06 15:28:04,051:INFO:Saving 'Feature Importance.png' in current active directory
2020-11-06 15:28:04,335:INFO:Visual Rendered Successfully
2020-11-06 15:28:04,479:INFO:plot_model() succesfully completed......................................
2020-11-06 15:28:04,482:INFO:Initializing plot_model()
2020-11-06 15:28:04,482:INFO:plot_model(plot=feature_all, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:28:04,482:INFO:Checking exceptions
2020-11-06 15:28:04,500:INFO:Preloading libraries
2020-11-06 15:28:04,502:INFO:Copying training dataset
2020-11-06 15:28:04,503:INFO:Copying test dataset
2020-11-06 15:28:04,504:INFO:Plot type: feature_all
2020-11-06 15:28:04,506:WARNING:No coef_ found. Trying feature_importances_
2020-11-06 15:28:04,535:INFO:Initializing plot_model()
2020-11-06 15:28:04,535:INFO:plot_model(plot=parameter, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:28:04,535:INFO:Checking exceptions
2020-11-06 15:28:04,561:INFO:Preloading libraries
2020-11-06 15:28:04,563:INFO:Copying training dataset
2020-11-06 15:28:04,563:INFO:Copying test dataset
2020-11-06 15:28:04,564:INFO:Plot type: parameter
2020-11-06 15:28:04,572:INFO:Visual Rendered Successfully
2020-11-06 15:28:04,730:INFO:plot_model() succesfully completed......................................
2020-11-06 15:28:04,734:INFO:Initializing plot_model()
2020-11-06 15:28:04,734:INFO:plot_model(plot=lift, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:28:04,734:INFO:Checking exceptions
2020-11-06 15:28:04,753:INFO:Preloading libraries
2020-11-06 15:28:04,756:INFO:Copying training dataset
2020-11-06 15:28:04,756:INFO:Copying test dataset
2020-11-06 15:28:04,757:INFO:Plot type: lift
2020-11-06 15:28:04,759:INFO:Generating predictions / predict_proba on X_test
2020-11-06 15:28:04,831:INFO:Saving 'Lift Chart.png' in current active directory
2020-11-06 15:28:05,074:INFO:Visual Rendered Successfully
2020-11-06 15:28:05,196:INFO:plot_model() succesfully completed......................................
2020-11-06 15:28:05,199:INFO:Initializing plot_model()
2020-11-06 15:28:05,199:INFO:plot_model(plot=gain, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:28:05,199:INFO:Checking exceptions
2020-11-06 15:28:05,211:INFO:Preloading libraries
2020-11-06 15:28:05,215:INFO:Copying training dataset
2020-11-06 15:28:05,216:INFO:Copying test dataset
2020-11-06 15:28:05,216:INFO:Plot type: gain
2020-11-06 15:28:05,218:INFO:Generating predictions / predict_proba on X_test
2020-11-06 15:28:05,290:INFO:Saving 'Gain Chart.png' in current active directory
2020-11-06 15:28:05,601:INFO:Visual Rendered Successfully
2020-11-06 15:28:05,742:INFO:plot_model() succesfully completed......................................
2020-11-06 15:28:05,748:INFO:Initializing plot_model()
2020-11-06 15:28:05,748:INFO:plot_model(plot=tree, fold=None, use_train_data=False, verbose=False, display=None, estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=2, system=True)
2020-11-06 15:28:05,748:INFO:Checking exceptions
2020-11-06 15:31:57,661:INFO:Initializing predict_model()
2020-11-06 15:31:57,663:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.99, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:31:57,663:INFO:Checking exceptions
2020-11-06 15:31:57,663:INFO:Preloading libraries
2020-11-06 15:31:57,667:INFO:Preparing display monitor
2020-11-06 15:32:21,259:INFO:Initializing predict_model()
2020-11-06 15:32:21,260:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.0, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:32:21,260:INFO:Checking exceptions
2020-11-06 15:32:21,260:INFO:Preloading libraries
2020-11-06 15:32:21,261:INFO:Preparing display monitor
2020-11-06 15:32:21,749:INFO:Initializing predict_model()
2020-11-06 15:32:21,750:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.1, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:32:21,750:INFO:Checking exceptions
2020-11-06 15:32:21,750:INFO:Preloading libraries
2020-11-06 15:32:21,750:INFO:Preparing display monitor
2020-11-06 15:32:21,921:INFO:Initializing predict_model()
2020-11-06 15:32:21,921:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.2, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:32:21,921:INFO:Checking exceptions
2020-11-06 15:32:21,921:INFO:Preloading libraries
2020-11-06 15:32:21,921:INFO:Preparing display monitor
2020-11-06 15:32:22,129:INFO:Initializing predict_model()
2020-11-06 15:32:22,130:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.30000000000000004, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:32:22,130:INFO:Checking exceptions
2020-11-06 15:32:22,130:INFO:Preloading libraries
2020-11-06 15:32:22,130:INFO:Preparing display monitor
2020-11-06 15:32:22,330:INFO:Initializing predict_model()
2020-11-06 15:32:22,330:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.4, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:32:22,331:INFO:Checking exceptions
2020-11-06 15:32:22,331:INFO:Preloading libraries
2020-11-06 15:32:22,331:INFO:Preparing display monitor
2020-11-06 15:32:22,494:INFO:Initializing predict_model()
2020-11-06 15:32:22,494:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.5, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:32:22,494:INFO:Checking exceptions
2020-11-06 15:32:22,494:INFO:Preloading libraries
2020-11-06 15:32:22,494:INFO:Preparing display monitor
2020-11-06 15:32:22,956:INFO:Initializing predict_model()
2020-11-06 15:32:22,957:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.6000000000000001, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:32:22,957:INFO:Checking exceptions
2020-11-06 15:32:22,957:INFO:Preloading libraries
2020-11-06 15:32:22,957:INFO:Preparing display monitor
2020-11-06 15:32:23,301:INFO:Initializing predict_model()
2020-11-06 15:32:23,301:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.7000000000000001, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:32:23,301:INFO:Checking exceptions
2020-11-06 15:32:23,301:INFO:Preloading libraries
2020-11-06 15:32:23,301:INFO:Preparing display monitor
2020-11-06 15:32:23,509:INFO:Initializing predict_model()
2020-11-06 15:32:23,509:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.8, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:32:23,509:INFO:Checking exceptions
2020-11-06 15:32:23,509:INFO:Preloading libraries
2020-11-06 15:32:23,509:INFO:Preparing display monitor
2020-11-06 15:32:23,736:INFO:Initializing predict_model()
2020-11-06 15:32:23,736:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), probability_threshold=0.9, encoded_labels=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2020-11-06 15:32:23,736:INFO:Checking exceptions
2020-11-06 15:32:23,736:INFO:Preloading libraries
2020-11-06 15:32:23,736:INFO:Preparing display monitor
2020-11-06 16:05:21,540:INFO:Initializing blend_models()
2020-11-06 16:05:21,550:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)], fold=5, round=4, choose_better=True, optimize=Precision, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-06 16:05:21,551:INFO:Checking exceptions
2020-11-06 16:05:21,640:INFO:Preparing display monitor
2020-11-06 16:05:21,867:INFO:Importing libraries
2020-11-06 16:05:21,872:INFO:Copying training dataset
2020-11-06 16:05:21,892:INFO:Getting model names
2020-11-06 16:05:21,923:INFO:SubProcess create_model() called ==================================
2020-11-06 16:05:21,966:INFO:Initializing create_model()
2020-11-06 16:05:21,967:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.5090177538125356,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.0003650690989298994,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constrain...
                                                            max_leaf_nodes=None,
                                                            max_samples=None,
                                                            min_impurity_decrease=1.4100186191382527e-08,
                                                            min_impurity_split=None,
                                                            min_samples_leaf=2,
                                                            min_samples_split=9,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=130,
                                                            n_jobs=-1,
                                                            oob_score=False,
                                                            random_state=786,
                                                            verbose=0,
                                                            warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb128db90a0>, kwargs={})
2020-11-06 16:05:21,967:INFO:Checking exceptions
2020-11-06 16:05:21,967:INFO:Importing libraries
2020-11-06 16:05:21,968:INFO:Copying training dataset
2020-11-06 16:05:21,969:INFO:Defining folds
2020-11-06 16:05:21,969:INFO:Declaring metric variables
2020-11-06 16:05:21,981:INFO:Importing untrained model
2020-11-06 16:05:21,981:INFO:Declaring custom model
2020-11-06 16:05:22,004:INFO:Voting Classifier Imported succesfully
2020-11-06 16:05:22,034:INFO:Starting cross validation
2020-11-06 16:05:22,043:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 16:12:17,175:INFO:Initializing blend_models()
2020-11-06 16:12:17,181:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)], fold=5, round=4, choose_better=True, optimize=Prec, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-06 16:12:17,181:INFO:Checking exceptions
2020-11-06 16:13:00,047:INFO:Initializing blend_models()
2020-11-06 16:13:00,049:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)], fold=5, round=4, choose_better=True, optimize=f1, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-06 16:13:00,049:INFO:Checking exceptions
2020-11-06 16:13:00,116:INFO:Preparing display monitor
2020-11-06 16:13:00,285:INFO:Importing libraries
2020-11-06 16:13:00,291:INFO:Copying training dataset
2020-11-06 16:13:00,322:INFO:Getting model names
2020-11-06 16:13:00,350:INFO:SubProcess create_model() called ==================================
2020-11-06 16:13:00,410:INFO:Initializing create_model()
2020-11-06 16:13:00,410:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.5090177538125356,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.0003650690989298994,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constrain...
                                                            max_leaf_nodes=None,
                                                            max_samples=None,
                                                            min_impurity_decrease=1.4100186191382527e-08,
                                                            min_impurity_split=None,
                                                            min_samples_leaf=2,
                                                            min_samples_split=9,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=130,
                                                            n_jobs=-1,
                                                            oob_score=False,
                                                            random_state=786,
                                                            verbose=0,
                                                            warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb127d35cd0>, kwargs={})
2020-11-06 16:13:00,410:INFO:Checking exceptions
2020-11-06 16:13:00,410:INFO:Importing libraries
2020-11-06 16:13:00,410:INFO:Copying training dataset
2020-11-06 16:13:00,412:INFO:Defining folds
2020-11-06 16:13:00,412:INFO:Declaring metric variables
2020-11-06 16:13:00,433:INFO:Importing untrained model
2020-11-06 16:13:00,433:INFO:Declaring custom model
2020-11-06 16:13:00,459:INFO:Voting Classifier Imported succesfully
2020-11-06 16:13:00,505:INFO:Starting cross validation
2020-11-06 16:13:00,509:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 16:13:14,966:INFO:Initializing blend_models()
2020-11-06 16:13:14,968:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)], fold=5, round=4, choose_better=True, optimize=F1, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-06 16:13:14,968:INFO:Checking exceptions
2020-11-06 16:13:14,986:INFO:Preparing display monitor
2020-11-06 16:13:15,061:INFO:Importing libraries
2020-11-06 16:13:15,061:INFO:Copying training dataset
2020-11-06 16:13:15,079:INFO:Getting model names
2020-11-06 16:13:15,103:INFO:SubProcess create_model() called ==================================
2020-11-06 16:13:15,135:INFO:Initializing create_model()
2020-11-06 16:13:15,135:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.5090177538125356,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.0003650690989298994,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constrain...
                                                            max_leaf_nodes=None,
                                                            max_samples=None,
                                                            min_impurity_decrease=1.4100186191382527e-08,
                                                            min_impurity_split=None,
                                                            min_samples_leaf=2,
                                                            min_samples_split=9,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=130,
                                                            n_jobs=-1,
                                                            oob_score=False,
                                                            random_state=786,
                                                            verbose=0,
                                                            warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb128d92ac0>, kwargs={})
2020-11-06 16:13:15,136:INFO:Checking exceptions
2020-11-06 16:13:15,136:INFO:Importing libraries
2020-11-06 16:13:15,136:INFO:Copying training dataset
2020-11-06 16:13:15,138:INFO:Defining folds
2020-11-06 16:13:15,138:INFO:Declaring metric variables
2020-11-06 16:13:15,153:INFO:Importing untrained model
2020-11-06 16:13:15,153:INFO:Declaring custom model
2020-11-06 16:13:15,171:INFO:Voting Classifier Imported succesfully
2020-11-06 16:13:15,204:INFO:Starting cross validation
2020-11-06 16:13:15,206:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-06 16:15:21,052:INFO:Initializing blend_models()
2020-11-06 16:15:21,056:INFO:blend_models(estimator_list=[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.5090177538125356, gamma=0,
              gpu_id=-1, importance_type='gain', interaction_constraints='',
              learning_rate=0.0003650690989298994, max_delta_step=0,
              max_depth=2, min_child_weight=4, missing=nan,
              monotone_constraints='()', n_estimators=277, n_jobs=-1,
              num_parallel_tree=1, objective='binary:logistic',
              random_state=786, reg_alpha=2.618008815377073e-08,
              reg_lambda=0.007024862962789524,
              scale_pos_weight=12.428616316513573, subsample=0.5122198531156548,
              tree_method='auto', validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=10, max_features=0.8349578819567256,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=1.4100186191382527e-08,
                       min_impurity_split=None, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=786, verbose=0, warm_start=False)], fold=5, round=4, choose_better=True, optimize=Precision, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-11-06 16:15:21,056:INFO:Checking exceptions
2020-11-06 16:15:21,078:INFO:Preparing display monitor
2020-11-06 16:15:21,132:INFO:Importing libraries
2020-11-06 16:15:21,132:INFO:Copying training dataset
2020-11-06 16:15:21,145:INFO:Getting model names
2020-11-06 16:15:21,173:INFO:SubProcess create_model() called ==================================
2020-11-06 16:15:21,203:INFO:Initializing create_model()
2020-11-06 16:15:21,203:INFO:create_model(estimator=TunableVotingClassifier(estimators=[('xgboost',
                                     XGBClassifier(base_score=0.5,
                                                   booster='gbtree',
                                                   colsample_bylevel=1,
                                                   colsample_bynode=1,
                                                   colsample_bytree=0.5090177538125356,
                                                   gamma=0, gpu_id=-1,
                                                   importance_type='gain',
                                                   interaction_constraints='',
                                                   learning_rate=0.0003650690989298994,
                                                   max_delta_step=0,
                                                   max_depth=2,
                                                   min_child_weight=4,
                                                   missing=nan,
                                                   monotone_constrain...
                                                            max_leaf_nodes=None,
                                                            max_samples=None,
                                                            min_impurity_decrease=1.4100186191382527e-08,
                                                            min_impurity_split=None,
                                                            min_samples_leaf=2,
                                                            min_samples_split=9,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=130,
                                                            n_jobs=-1,
                                                            oob_score=False,
                                                            random_state=786,
                                                            verbose=0,
                                                            warm_start=False))],
                        flatten_transform=True, n_jobs=-1, verbose=False,
                        voting='soft', weight_0=1, weight_1=1, weights=[1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fb1271f6f40>, kwargs={})
2020-11-06 16:15:21,203:INFO:Checking exceptions
2020-11-06 16:15:21,203:INFO:Importing libraries
2020-11-06 16:15:21,203:INFO:Copying training dataset
2020-11-06 16:15:21,205:INFO:Defining folds
2020-11-06 16:15:21,205:INFO:Declaring metric variables
2020-11-06 16:15:21,217:INFO:Importing untrained model
2020-11-06 16:15:21,218:INFO:Declaring custom model
2020-11-06 16:15:21,234:INFO:Voting Classifier Imported succesfully
2020-11-06 16:15:21,263:INFO:Starting cross validation
2020-11-06 16:15:21,266:INFO:Cross validating with KFold(n_splits=5, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:43:46,012:INFO:PyCaret Supervised Module
2020-11-07 08:43:46,013:INFO:ML Usecase: classification
2020-11-07 08:43:46,013:INFO:version 2.2.0
2020-11-07 08:43:46,014:INFO:Initializing setup()
2020-11-07 08:43:46,014:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-07 08:43:46,014:INFO:Checking environment
2020-11-07 08:43:46,014:INFO:python_version: 3.8.3
2020-11-07 08:43:46,014:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-07 08:43:46,014:INFO:machine: x86_64
2020-11-07 08:43:46,032:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-07 08:43:46,032:INFO:Memory: svmem(total=8589934592, available=3348393984, percent=61.0, used=4905836544, free=476499968, active=2874765312, inactive=2578145280, wired=2031071232)
2020-11-07 08:43:46,032:INFO:Physical Core: 4
2020-11-07 08:43:46,032:INFO:Logical Core: 8
2020-11-07 08:43:46,033:INFO:Checking libraries
2020-11-07 08:43:46,033:INFO:pd==1.0.5
2020-11-07 08:43:46,033:INFO:numpy==1.18.5
2020-11-07 08:43:46,033:INFO:sklearn==0.23.2
2020-11-07 08:43:46,588:INFO:xgboost==1.2.0
2020-11-07 08:43:46,588:INFO:lightgbm==2.3.1
2020-11-07 08:43:46,613:INFO:catboost==0.24.1
2020-11-07 08:43:47,288:INFO:mlflow==1.11.0
2020-11-07 08:43:47,288:INFO:Checking Exceptions
2020-11-07 08:43:47,289:INFO:Declaring global variables
2020-11-07 08:43:47,289:INFO:USI: 7858
2020-11-07 08:43:47,289:INFO:pycaret_globals: {'USI', 'log_plots_param', '_available_plots', 'logging_param', 'fix_imbalance_param', 'experiment__', 'pycaret_globals', 'fold_generator', '_all_metrics', 'target_param', 'imputation_regressor', 'X_test', 'create_model_container', 'seed', 'X_train', '_ml_usecase', 'prep_pipe', 'fold_shuffle_param', 'data_before_preprocess', 'stratify_param', 'iterative_imputation_iters_param', 'y_test', 'fix_imbalance_method_param', '_gpu_n_jobs_param', 'gpu_param', 'fold_param', 'master_model_container', '_all_models_internal', 'n_jobs_param', 'transform_target_param', 'exp_name_log', 'html_param', 'imputation_classifier', '_all_models', 'display_container', 'X', 'fold_groups_param', 'transform_target_method_param', 'y_train', '_internal_pipeline', 'y'}
2020-11-07 08:43:47,289:INFO:Preparing display monitor
2020-11-07 08:43:47,289:INFO:Preparing display monitor
2020-11-07 08:43:47,302:INFO:Importing libraries
2020-11-07 08:43:47,302:INFO:Copying data for preprocessing
2020-11-07 08:43:47,312:INFO:Declaring preprocessing parameters
2020-11-07 08:43:47,313:INFO:Setting up iterative imputation
2020-11-07 08:43:47,567:INFO:Creating preprocessing pipeline
2020-11-07 08:43:47,574:INFO:Preprocessing pipeline created successfully
2020-11-07 08:43:47,574:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-07 08:43:47,574:INFO:Creating global containers
2020-11-07 08:43:47,576:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-07 08:43:47,646:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-07 08:43:48,253:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-07 08:43:49,366:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-07 08:43:49,579:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-07 08:43:49,742:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-07 08:43:49,919:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-07 08:43:50,017:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-07 08:43:50,116:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-07 08:43:50,226:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-07 08:43:50,330:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-07 08:43:50,427:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-07 08:43:50,529:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-07 08:43:50,640:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-07 08:43:50,740:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-07 08:43:50,835:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-07 08:43:50,931:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-07 08:43:51,030:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-07 08:43:51,125:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-07 08:43:51,222:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-07 08:43:51,315:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-07 08:43:51,445:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-07 08:43:51,551:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-07 08:43:51,726:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-07 08:43:51,872:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-07 08:43:52,003:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-07 08:43:52,106:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-07 08:43:52,348:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-07 08:43:52,484:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-07 08:43:52,583:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-07 08:43:52,714:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-07 08:43:52,836:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-07 08:43:52,990:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-07 08:43:53,091:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-07 08:43:53,191:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-07 08:43:53,291:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-07 08:43:53,397:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-07 08:43:53,584:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-07 08:43:53,683:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-07 08:43:53,782:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-07 08:43:53,881:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-07 08:43:54,032:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-07 08:43:54,241:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-07 08:43:54,489:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-07 08:43:54,720:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-07 08:43:54,944:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-07 08:43:55,043:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-07 08:43:55,141:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-07 08:43:55,239:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-07 08:43:55,333:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-07 08:43:55,431:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-07 08:43:56,934:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-07 08:43:57,027:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-07 08:43:57,103:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-07 08:43:57,179:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-07 08:43:57,253:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-07 08:43:57,329:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-07 08:43:57,407:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-07 08:43:57,484:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-07 08:43:57,562:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-07 08:43:57,638:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-07 08:43:57,715:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-07 08:43:57,792:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-07 08:43:57,868:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-07 08:43:57,947:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-07 08:43:58,036:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-07 08:43:58,123:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-07 08:43:58,205:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-07 08:43:58,284:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-07 08:43:58,368:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-07 08:43:58,455:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-07 08:43:58,533:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-07 08:43:58,610:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-07 08:43:58,687:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-07 08:43:58,769:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-07 08:43:58,853:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-07 08:43:58,939:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-07 08:43:59,020:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-07 08:43:59,100:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-07 08:43:59,177:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-07 08:43:59,255:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-07 08:43:59,338:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-07 08:43:59,419:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-07 08:43:59,499:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-07 08:43:59,577:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-07 08:43:59,654:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-07 08:43:59,732:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-07 08:43:59,810:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-07 08:43:59,887:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-07 08:43:59,965:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-07 08:44:00,044:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-07 08:44:00,120:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-07 08:44:00,196:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-07 08:44:00,272:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-07 08:44:00,350:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-07 08:44:00,429:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-07 08:44:00,505:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-07 08:44:00,583:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-07 08:44:00,659:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-07 08:44:00,735:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-07 08:44:00,811:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-07 08:44:00,937:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-07 08:44:01,017:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-07 08:44:01,095:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-07 08:44:01,170:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-07 08:44:01,251:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-07 08:44:01,331:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-07 08:44:01,410:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-07 08:44:01,489:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-07 08:44:01,568:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-07 08:44:01,645:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-07 08:44:01,721:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-07 08:44:01,798:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-07 08:44:01,880:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-07 08:44:01,956:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-07 08:44:02,031:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-07 08:44:02,107:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-07 08:44:02,181:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-07 08:44:02,254:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-07 08:44:02,330:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-07 08:44:02,405:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-07 08:44:02,480:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-07 08:44:02,553:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-07 08:44:02,630:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-07 08:44:02,705:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-07 08:44:02,779:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-07 08:44:02,854:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-07 08:44:02,928:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-07 08:44:03,003:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-07 08:44:03,079:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-07 08:44:03,153:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-07 08:44:03,228:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-07 08:44:03,302:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-07 08:44:03,381:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-07 08:44:03,456:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-07 08:44:03,531:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-07 08:44:03,605:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-07 08:44:03,680:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-07 08:44:03,754:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-07 08:44:03,830:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-07 08:44:03,905:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-07 08:44:03,979:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-07 08:44:04,055:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-07 08:44:04,137:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-07 08:44:04,224:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-07 08:44:04,302:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-07 08:44:04,377:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-07 08:44:04,452:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-07 08:44:04,537:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-07 08:44:04,621:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-07 08:44:04,700:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-07 08:44:05,038:INFO:Creating grid variables
2020-11-07 08:44:05,082:INFO:create_model_container: 0
2020-11-07 08:44:05,082:INFO:master_model_container: 0
2020-11-07 08:44:05,082:INFO:display_container: 0
2020-11-07 08:44:05,097:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-07 08:44:05,097:INFO:setup() succesfully completed......................................
2020-11-07 08:44:09,385:INFO:Initializing get_config()
2020-11-07 08:44:09,386:INFO:get_config(variable=X_train)
2020-11-07 08:44:09,392:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday   Saturday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  95.706665   
290   89.524284   91.468575   87.825432   97.618568   94.757272  95.238571   
121   94.058571  100.000000   94.127144   96.427498   96.666664  94.443336   
113   98.461998  100.000000  100.000000   98.571426   97.727501  93.500000   
170   97.904259  100.000000   96.207530  100.000000  100.000000  94.445000   
..          ...         ...         ...         ...         ...        ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000  95.577141   
427   91.537498   94.424980   95.738747   94.977776   94.047501  92.708748   
243   94.443336  100.000000   97.500000   93.559998  100.000000  94.624008   
258   90.427139   92.855003   94.431114   95.446251   84.709999  91.531946   
341  100.000000   98.333336   97.910120   94.839996   99.266625  97.916664   

     Friday_multiply_Sunday  Wednesday_multiply_Tuesday  \
97              9738.843296                 9267.749786   
290             8188.658676                 9250.069283   
121             9405.857086                 9321.324548   
113             9846.199799                 9633.139163   
170             9790.425889                10000.000000   
..                      ...                         ...   
124             9198.381127                 8973.125173   
427             8643.426427                 8932.422406   
243             9444.333649                 9355.999756   
258             8396.612322                 8085.251828   
341             9833.333588                 9414.446332   

     Sunday_multiply_Friday  
97              9738.843296  
290             8188.658676  
121             9405.857086  
113             9846.199799  
170             9790.425889  
..                      ...  
124             9198.381127  
427             8643.426427  
243             9444.333649  
258             8396.612322  
341             9833.333588  

[266 rows x 9 columns]
2020-11-07 08:44:09,392:INFO:get_config() succesfully completed......................................
2020-11-07 08:44:18,397:INFO:Initializing compare_models()
2020-11-07 08:44:18,397:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Recall, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-11-07 08:44:18,397:INFO:Checking exceptions
2020-11-07 08:44:18,398:INFO:Preparing display monitor
2020-11-07 08:44:18,399:INFO:Preparing display monitor
2020-11-07 08:44:18,427:INFO:Initializing Logistic Regression
2020-11-07 08:44:18,427:INFO:Total runtime is 2.002716064453125e-06 minutes
2020-11-07 08:44:18,435:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:18,435:INFO:Initializing create_model()
2020-11-07 08:44:18,436:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:18,436:INFO:Checking exceptions
2020-11-07 08:44:18,436:INFO:Importing libraries
2020-11-07 08:44:18,436:INFO:Copying training dataset
2020-11-07 08:44:18,436:INFO:Defining folds
2020-11-07 08:44:18,436:INFO:Declaring metric variables
2020-11-07 08:44:18,443:INFO:Importing untrained model
2020-11-07 08:44:18,450:INFO:Logistic Regression Imported succesfully
2020-11-07 08:44:18,462:INFO:Starting cross validation
2020-11-07 08:44:18,463:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:23,158:INFO:Calculating mean and std
2020-11-07 08:44:23,162:INFO:Creating metrics dataframe
2020-11-07 08:44:23,170:INFO:Uploading results into container
2020-11-07 08:44:23,170:INFO:Uploading model into container now
2020-11-07 08:44:23,170:INFO:create_model_container: 1
2020-11-07 08:44:23,170:INFO:master_model_container: 1
2020-11-07 08:44:23,170:INFO:display_container: 1
2020-11-07 08:44:23,171:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-11-07 08:44:23,171:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:23,265:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:23,265:INFO:Creating metrics dataframe
2020-11-07 08:44:23,283:INFO:Initializing K Neighbors Classifier
2020-11-07 08:44:23,283:INFO:Total runtime is 0.0809243361155192 minutes
2020-11-07 08:44:23,292:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:23,293:INFO:Initializing create_model()
2020-11-07 08:44:23,293:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:23,293:INFO:Checking exceptions
2020-11-07 08:44:23,293:INFO:Importing libraries
2020-11-07 08:44:23,293:INFO:Copying training dataset
2020-11-07 08:44:23,294:INFO:Defining folds
2020-11-07 08:44:23,294:INFO:Declaring metric variables
2020-11-07 08:44:23,306:INFO:Importing untrained model
2020-11-07 08:44:23,313:INFO:K Neighbors Classifier Imported succesfully
2020-11-07 08:44:23,327:INFO:Starting cross validation
2020-11-07 08:44:23,328:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:23,438:INFO:Calculating mean and std
2020-11-07 08:44:23,439:INFO:Creating metrics dataframe
2020-11-07 08:44:23,444:INFO:Uploading results into container
2020-11-07 08:44:23,444:INFO:Uploading model into container now
2020-11-07 08:44:23,444:INFO:create_model_container: 2
2020-11-07 08:44:23,444:INFO:master_model_container: 2
2020-11-07 08:44:23,444:INFO:display_container: 1
2020-11-07 08:44:23,445:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-11-07 08:44:23,445:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:23,565:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:23,565:INFO:Creating metrics dataframe
2020-11-07 08:44:23,582:INFO:Initializing Naive Bayes
2020-11-07 08:44:23,582:INFO:Total runtime is 0.08591420253117879 minutes
2020-11-07 08:44:23,590:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:23,591:INFO:Initializing create_model()
2020-11-07 08:44:23,591:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:23,591:INFO:Checking exceptions
2020-11-07 08:44:23,591:INFO:Importing libraries
2020-11-07 08:44:23,591:INFO:Copying training dataset
2020-11-07 08:44:23,593:INFO:Defining folds
2020-11-07 08:44:23,593:INFO:Declaring metric variables
2020-11-07 08:44:23,608:INFO:Importing untrained model
2020-11-07 08:44:23,615:INFO:Naive Bayes Imported succesfully
2020-11-07 08:44:23,630:INFO:Starting cross validation
2020-11-07 08:44:23,631:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:23,690:INFO:Calculating mean and std
2020-11-07 08:44:23,691:INFO:Creating metrics dataframe
2020-11-07 08:44:23,696:INFO:Uploading results into container
2020-11-07 08:44:23,696:INFO:Uploading model into container now
2020-11-07 08:44:23,696:INFO:create_model_container: 3
2020-11-07 08:44:23,696:INFO:master_model_container: 3
2020-11-07 08:44:23,696:INFO:display_container: 1
2020-11-07 08:44:23,696:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-11-07 08:44:23,697:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:23,793:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:23,793:INFO:Creating metrics dataframe
2020-11-07 08:44:23,816:INFO:Initializing Decision Tree Classifier
2020-11-07 08:44:23,816:INFO:Total runtime is 0.08981908559799194 minutes
2020-11-07 08:44:23,824:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:23,824:INFO:Initializing create_model()
2020-11-07 08:44:23,824:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:23,825:INFO:Checking exceptions
2020-11-07 08:44:23,825:INFO:Importing libraries
2020-11-07 08:44:23,825:INFO:Copying training dataset
2020-11-07 08:44:23,825:INFO:Defining folds
2020-11-07 08:44:23,825:INFO:Declaring metric variables
2020-11-07 08:44:23,836:INFO:Importing untrained model
2020-11-07 08:44:23,842:INFO:Decision Tree Classifier Imported succesfully
2020-11-07 08:44:23,868:INFO:Starting cross validation
2020-11-07 08:44:23,868:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:23,933:INFO:Calculating mean and std
2020-11-07 08:44:23,934:INFO:Creating metrics dataframe
2020-11-07 08:44:23,939:INFO:Uploading results into container
2020-11-07 08:44:23,940:INFO:Uploading model into container now
2020-11-07 08:44:23,940:INFO:create_model_container: 4
2020-11-07 08:44:23,940:INFO:master_model_container: 4
2020-11-07 08:44:23,940:INFO:display_container: 1
2020-11-07 08:44:23,940:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-11-07 08:44:23,940:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:24,048:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:24,049:INFO:Creating metrics dataframe
2020-11-07 08:44:24,085:INFO:Initializing SVM - Linear Kernel
2020-11-07 08:44:24,086:INFO:Total runtime is 0.09430951674779256 minutes
2020-11-07 08:44:24,107:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:24,108:INFO:Initializing create_model()
2020-11-07 08:44:24,109:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:24,109:INFO:Checking exceptions
2020-11-07 08:44:24,109:INFO:Importing libraries
2020-11-07 08:44:24,109:INFO:Copying training dataset
2020-11-07 08:44:24,115:INFO:Defining folds
2020-11-07 08:44:24,115:INFO:Declaring metric variables
2020-11-07 08:44:24,123:INFO:Importing untrained model
2020-11-07 08:44:24,137:INFO:SVM - Linear Kernel Imported succesfully
2020-11-07 08:44:24,152:INFO:Starting cross validation
2020-11-07 08:44:24,153:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:24,214:INFO:Calculating mean and std
2020-11-07 08:44:24,215:INFO:Creating metrics dataframe
2020-11-07 08:44:24,220:INFO:Uploading results into container
2020-11-07 08:44:24,220:INFO:Uploading model into container now
2020-11-07 08:44:24,220:INFO:create_model_container: 5
2020-11-07 08:44:24,220:INFO:master_model_container: 5
2020-11-07 08:44:24,220:INFO:display_container: 1
2020-11-07 08:44:24,221:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-11-07 08:44:24,221:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:24,373:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:24,374:INFO:Creating metrics dataframe
2020-11-07 08:44:24,407:INFO:Initializing Ridge Classifier
2020-11-07 08:44:24,407:INFO:Total runtime is 0.09965940316518147 minutes
2020-11-07 08:44:24,425:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:24,425:INFO:Initializing create_model()
2020-11-07 08:44:24,425:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:24,426:INFO:Checking exceptions
2020-11-07 08:44:24,426:INFO:Importing libraries
2020-11-07 08:44:24,426:INFO:Copying training dataset
2020-11-07 08:44:24,427:INFO:Defining folds
2020-11-07 08:44:24,427:INFO:Declaring metric variables
2020-11-07 08:44:24,436:INFO:Importing untrained model
2020-11-07 08:44:24,452:INFO:Ridge Classifier Imported succesfully
2020-11-07 08:44:24,471:INFO:Starting cross validation
2020-11-07 08:44:24,471:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:24,525:INFO:Calculating mean and std
2020-11-07 08:44:24,526:INFO:Creating metrics dataframe
2020-11-07 08:44:24,531:INFO:Uploading results into container
2020-11-07 08:44:24,531:INFO:Uploading model into container now
2020-11-07 08:44:24,532:INFO:create_model_container: 6
2020-11-07 08:44:24,532:INFO:master_model_container: 6
2020-11-07 08:44:24,532:INFO:display_container: 1
2020-11-07 08:44:24,533:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-11-07 08:44:24,533:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:24,608:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:24,608:INFO:Creating metrics dataframe
2020-11-07 08:44:24,631:INFO:Initializing Random Forest Classifier
2020-11-07 08:44:24,631:INFO:Total runtime is 0.10339721838633219 minutes
2020-11-07 08:44:24,638:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:24,638:INFO:Initializing create_model()
2020-11-07 08:44:24,638:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:24,638:INFO:Checking exceptions
2020-11-07 08:44:24,638:INFO:Importing libraries
2020-11-07 08:44:24,639:INFO:Copying training dataset
2020-11-07 08:44:24,639:INFO:Defining folds
2020-11-07 08:44:24,640:INFO:Declaring metric variables
2020-11-07 08:44:24,647:INFO:Importing untrained model
2020-11-07 08:44:24,653:INFO:Random Forest Classifier Imported succesfully
2020-11-07 08:44:24,667:INFO:Starting cross validation
2020-11-07 08:44:24,667:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:25,556:INFO:Calculating mean and std
2020-11-07 08:44:25,557:INFO:Creating metrics dataframe
2020-11-07 08:44:25,561:INFO:Uploading results into container
2020-11-07 08:44:25,561:INFO:Uploading model into container now
2020-11-07 08:44:25,561:INFO:create_model_container: 7
2020-11-07 08:44:25,561:INFO:master_model_container: 7
2020-11-07 08:44:25,561:INFO:display_container: 1
2020-11-07 08:44:25,561:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-07 08:44:25,562:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:25,634:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:25,634:INFO:Creating metrics dataframe
2020-11-07 08:44:25,665:INFO:Initializing Quadratic Discriminant Analysis
2020-11-07 08:44:25,665:INFO:Total runtime is 0.12063492139180501 minutes
2020-11-07 08:44:25,673:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:25,674:INFO:Initializing create_model()
2020-11-07 08:44:25,674:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:25,674:INFO:Checking exceptions
2020-11-07 08:44:25,674:INFO:Importing libraries
2020-11-07 08:44:25,674:INFO:Copying training dataset
2020-11-07 08:44:25,675:INFO:Defining folds
2020-11-07 08:44:25,675:INFO:Declaring metric variables
2020-11-07 08:44:25,683:INFO:Importing untrained model
2020-11-07 08:44:25,690:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-11-07 08:44:25,705:INFO:Starting cross validation
2020-11-07 08:44:25,705:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:25,775:INFO:Calculating mean and std
2020-11-07 08:44:25,776:INFO:Creating metrics dataframe
2020-11-07 08:44:25,781:INFO:Uploading results into container
2020-11-07 08:44:25,781:INFO:Uploading model into container now
2020-11-07 08:44:25,781:INFO:create_model_container: 8
2020-11-07 08:44:25,781:INFO:master_model_container: 8
2020-11-07 08:44:25,781:INFO:display_container: 1
2020-11-07 08:44:25,782:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-11-07 08:44:25,782:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:25,870:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:25,870:INFO:Creating metrics dataframe
2020-11-07 08:44:25,932:INFO:Initializing Ada Boost Classifier
2020-11-07 08:44:25,932:INFO:Total runtime is 0.12508411804835 minutes
2020-11-07 08:44:25,960:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:25,961:INFO:Initializing create_model()
2020-11-07 08:44:25,961:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:25,961:INFO:Checking exceptions
2020-11-07 08:44:25,961:INFO:Importing libraries
2020-11-07 08:44:25,963:INFO:Copying training dataset
2020-11-07 08:44:25,964:INFO:Defining folds
2020-11-07 08:44:25,965:INFO:Declaring metric variables
2020-11-07 08:44:25,981:INFO:Importing untrained model
2020-11-07 08:44:25,991:INFO:Ada Boost Classifier Imported succesfully
2020-11-07 08:44:26,020:INFO:Starting cross validation
2020-11-07 08:44:26,021:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:26,422:INFO:Calculating mean and std
2020-11-07 08:44:26,423:INFO:Creating metrics dataframe
2020-11-07 08:44:26,427:INFO:Uploading results into container
2020-11-07 08:44:26,428:INFO:Uploading model into container now
2020-11-07 08:44:26,428:INFO:create_model_container: 9
2020-11-07 08:44:26,428:INFO:master_model_container: 9
2020-11-07 08:44:26,428:INFO:display_container: 1
2020-11-07 08:44:26,428:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-11-07 08:44:26,428:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:26,501:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:26,501:INFO:Creating metrics dataframe
2020-11-07 08:44:26,541:INFO:Initializing Gradient Boosting Classifier
2020-11-07 08:44:26,541:INFO:Total runtime is 0.1352299173672994 minutes
2020-11-07 08:44:26,551:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:26,552:INFO:Initializing create_model()
2020-11-07 08:44:26,552:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:26,552:INFO:Checking exceptions
2020-11-07 08:44:26,552:INFO:Importing libraries
2020-11-07 08:44:26,552:INFO:Copying training dataset
2020-11-07 08:44:26,554:INFO:Defining folds
2020-11-07 08:44:26,554:INFO:Declaring metric variables
2020-11-07 08:44:26,561:INFO:Importing untrained model
2020-11-07 08:44:26,572:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-07 08:44:26,592:INFO:Starting cross validation
2020-11-07 08:44:26,592:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:26,940:INFO:Calculating mean and std
2020-11-07 08:44:26,941:INFO:Creating metrics dataframe
2020-11-07 08:44:26,945:INFO:Uploading results into container
2020-11-07 08:44:26,945:INFO:Uploading model into container now
2020-11-07 08:44:26,945:INFO:create_model_container: 10
2020-11-07 08:44:26,945:INFO:master_model_container: 10
2020-11-07 08:44:26,945:INFO:display_container: 1
2020-11-07 08:44:26,946:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-07 08:44:26,946:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:27,019:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:27,019:INFO:Creating metrics dataframe
2020-11-07 08:44:27,075:INFO:Initializing Linear Discriminant Analysis
2020-11-07 08:44:27,075:INFO:Total runtime is 0.14412751992543538 minutes
2020-11-07 08:44:27,085:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:27,086:INFO:Initializing create_model()
2020-11-07 08:44:27,086:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:27,086:INFO:Checking exceptions
2020-11-07 08:44:27,086:INFO:Importing libraries
2020-11-07 08:44:27,087:INFO:Copying training dataset
2020-11-07 08:44:27,088:INFO:Defining folds
2020-11-07 08:44:27,088:INFO:Declaring metric variables
2020-11-07 08:44:27,097:INFO:Importing untrained model
2020-11-07 08:44:27,105:INFO:Linear Discriminant Analysis Imported succesfully
2020-11-07 08:44:27,121:INFO:Starting cross validation
2020-11-07 08:44:27,121:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:27,217:INFO:Calculating mean and std
2020-11-07 08:44:27,218:INFO:Creating metrics dataframe
2020-11-07 08:44:27,222:INFO:Uploading results into container
2020-11-07 08:44:27,222:INFO:Uploading model into container now
2020-11-07 08:44:27,222:INFO:create_model_container: 11
2020-11-07 08:44:27,222:INFO:master_model_container: 11
2020-11-07 08:44:27,222:INFO:display_container: 1
2020-11-07 08:44:27,223:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-11-07 08:44:27,223:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:27,295:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:27,295:INFO:Creating metrics dataframe
2020-11-07 08:44:27,338:INFO:Initializing Extra Trees Classifier
2020-11-07 08:44:27,339:INFO:Total runtime is 0.14852321942647298 minutes
2020-11-07 08:44:27,347:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:27,347:INFO:Initializing create_model()
2020-11-07 08:44:27,348:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:27,348:INFO:Checking exceptions
2020-11-07 08:44:27,348:INFO:Importing libraries
2020-11-07 08:44:27,348:INFO:Copying training dataset
2020-11-07 08:44:27,349:INFO:Defining folds
2020-11-07 08:44:27,349:INFO:Declaring metric variables
2020-11-07 08:44:27,356:INFO:Importing untrained model
2020-11-07 08:44:27,363:INFO:Extra Trees Classifier Imported succesfully
2020-11-07 08:44:27,378:INFO:Starting cross validation
2020-11-07 08:44:27,379:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:28,273:INFO:Calculating mean and std
2020-11-07 08:44:28,274:INFO:Creating metrics dataframe
2020-11-07 08:44:28,280:INFO:Uploading results into container
2020-11-07 08:44:28,280:INFO:Uploading model into container now
2020-11-07 08:44:28,280:INFO:create_model_container: 12
2020-11-07 08:44:28,280:INFO:master_model_container: 12
2020-11-07 08:44:28,281:INFO:display_container: 1
2020-11-07 08:44:28,281:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-07 08:44:28,281:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:28,361:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:28,362:INFO:Creating metrics dataframe
2020-11-07 08:44:28,414:INFO:Initializing Extreme Gradient Boosting
2020-11-07 08:44:28,414:INFO:Total runtime is 0.16644513607025146 minutes
2020-11-07 08:44:28,423:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:28,423:INFO:Initializing create_model()
2020-11-07 08:44:28,423:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:28,423:INFO:Checking exceptions
2020-11-07 08:44:28,423:INFO:Importing libraries
2020-11-07 08:44:28,424:INFO:Copying training dataset
2020-11-07 08:44:28,425:INFO:Defining folds
2020-11-07 08:44:28,425:INFO:Declaring metric variables
2020-11-07 08:44:28,434:INFO:Importing untrained model
2020-11-07 08:44:28,443:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-07 08:44:28,463:INFO:Starting cross validation
2020-11-07 08:44:28,463:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:30,509:INFO:Calculating mean and std
2020-11-07 08:44:30,510:INFO:Creating metrics dataframe
2020-11-07 08:44:30,515:INFO:Uploading results into container
2020-11-07 08:44:30,515:INFO:Uploading model into container now
2020-11-07 08:44:30,516:INFO:create_model_container: 13
2020-11-07 08:44:30,516:INFO:master_model_container: 13
2020-11-07 08:44:30,516:INFO:display_container: 1
2020-11-07 08:44:30,517:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-11-07 08:44:30,517:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:30,596:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:30,596:INFO:Creating metrics dataframe
2020-11-07 08:44:30,644:INFO:Initializing Light Gradient Boosting Machine
2020-11-07 08:44:30,645:INFO:Total runtime is 0.20362286965052287 minutes
2020-11-07 08:44:30,654:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:30,655:INFO:Initializing create_model()
2020-11-07 08:44:30,655:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:30,655:INFO:Checking exceptions
2020-11-07 08:44:30,655:INFO:Importing libraries
2020-11-07 08:44:30,655:INFO:Copying training dataset
2020-11-07 08:44:30,656:INFO:Defining folds
2020-11-07 08:44:30,656:INFO:Declaring metric variables
2020-11-07 08:44:30,665:INFO:Importing untrained model
2020-11-07 08:44:30,674:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-07 08:44:30,691:INFO:Starting cross validation
2020-11-07 08:44:30,692:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:30,888:INFO:Calculating mean and std
2020-11-07 08:44:30,889:INFO:Creating metrics dataframe
2020-11-07 08:44:30,894:INFO:Uploading results into container
2020-11-07 08:44:30,894:INFO:Uploading model into container now
2020-11-07 08:44:30,894:INFO:create_model_container: 14
2020-11-07 08:44:30,894:INFO:master_model_container: 14
2020-11-07 08:44:30,894:INFO:display_container: 1
2020-11-07 08:44:30,895:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-07 08:44:30,895:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:30,980:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:30,980:INFO:Creating metrics dataframe
2020-11-07 08:44:31,040:INFO:Initializing CatBoost Classifier
2020-11-07 08:44:31,040:INFO:Total runtime is 0.21021125316619874 minutes
2020-11-07 08:44:31,050:INFO:SubProcess create_model() called ==================================
2020-11-07 08:44:31,051:INFO:Initializing create_model()
2020-11-07 08:44:31,051:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff967727430>, kwargs={})
2020-11-07 08:44:31,051:INFO:Checking exceptions
2020-11-07 08:44:31,051:INFO:Importing libraries
2020-11-07 08:44:31,051:INFO:Copying training dataset
2020-11-07 08:44:31,052:INFO:Defining folds
2020-11-07 08:44:31,052:INFO:Declaring metric variables
2020-11-07 08:44:31,059:INFO:Importing untrained model
2020-11-07 08:44:31,069:INFO:CatBoost Classifier Imported succesfully
2020-11-07 08:44:31,089:INFO:Starting cross validation
2020-11-07 08:44:31,089:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 08:44:44,267:INFO:Calculating mean and std
2020-11-07 08:44:44,269:INFO:Creating metrics dataframe
2020-11-07 08:44:44,273:INFO:Uploading results into container
2020-11-07 08:44:44,274:INFO:Uploading model into container now
2020-11-07 08:44:44,274:INFO:create_model_container: 15
2020-11-07 08:44:44,274:INFO:master_model_container: 15
2020-11-07 08:44:44,274:INFO:display_container: 1
2020-11-07 08:44:44,274:INFO:<catboost.core.CatBoostClassifier object at 0x7ff965b2b0d0>
2020-11-07 08:44:44,274:INFO:create_model() succesfully completed......................................
2020-11-07 08:44:44,349:INFO:SubProcess create_model() end ==================================
2020-11-07 08:44:44,350:INFO:Creating metrics dataframe
2020-11-07 08:44:44,432:INFO:Initializing create_model()
2020-11-07 08:44:44,432:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-07 08:44:44,432:INFO:Checking exceptions
2020-11-07 08:44:44,433:INFO:Importing libraries
2020-11-07 08:44:44,433:INFO:Copying training dataset
2020-11-07 08:44:44,433:INFO:Defining folds
2020-11-07 08:44:44,433:INFO:Declaring metric variables
2020-11-07 08:44:44,433:INFO:Importing untrained model
2020-11-07 08:44:44,434:INFO:Declaring custom model
2020-11-07 08:44:44,434:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-07 08:44:44,434:INFO:Cross validation set to False
2020-11-07 08:44:44,434:INFO:Fitting Model
2020-11-07 08:44:44,523:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-11-07 08:44:44,523:INFO:create_models() succesfully completed......................................
2020-11-07 08:44:44,633:INFO:Initializing create_model()
2020-11-07 08:44:44,633:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-07 08:44:44,633:INFO:Checking exceptions
2020-11-07 08:44:44,634:INFO:Importing libraries
2020-11-07 08:44:44,634:INFO:Copying training dataset
2020-11-07 08:44:44,634:INFO:Defining folds
2020-11-07 08:44:44,635:INFO:Declaring metric variables
2020-11-07 08:44:44,635:INFO:Importing untrained model
2020-11-07 08:44:44,635:INFO:Declaring custom model
2020-11-07 08:44:44,636:INFO:Random Forest Classifier Imported succesfully
2020-11-07 08:44:44,636:INFO:Cross validation set to False
2020-11-07 08:44:44,636:INFO:Fitting Model
2020-11-07 08:44:44,913:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-07 08:44:44,913:INFO:create_models() succesfully completed......................................
2020-11-07 08:44:45,154:INFO:create_model_container: 15
2020-11-07 08:44:45,156:INFO:master_model_container: 15
2020-11-07 08:44:45,156:INFO:display_container: 1
2020-11-07 08:44:45,160:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)]
2020-11-07 08:44:45,160:INFO:compare_models() succesfully completed......................................
2020-11-07 09:22:03,566:INFO:PyCaret Supervised Module
2020-11-07 09:22:03,567:INFO:ML Usecase: classification
2020-11-07 09:22:03,567:INFO:version 2.2.0
2020-11-07 09:22:03,567:INFO:Initializing setup()
2020-11-07 09:22:03,567:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-07 09:22:03,567:INFO:Checking environment
2020-11-07 09:22:03,567:INFO:python_version: 3.8.3
2020-11-07 09:22:03,567:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-07 09:22:03,568:INFO:machine: x86_64
2020-11-07 09:22:03,582:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-07 09:22:03,583:INFO:Memory: svmem(total=8589934592, available=3022610432, percent=64.8, used=4907909120, free=18722816, active=3006873600, inactive=2893152256, wired=1901035520)
2020-11-07 09:22:03,583:INFO:Physical Core: 4
2020-11-07 09:22:03,583:INFO:Logical Core: 8
2020-11-07 09:22:03,583:INFO:Checking libraries
2020-11-07 09:22:03,583:INFO:pd==1.0.5
2020-11-07 09:22:03,584:INFO:numpy==1.18.5
2020-11-07 09:22:03,584:INFO:sklearn==0.23.2
2020-11-07 09:22:04,135:INFO:xgboost==1.2.0
2020-11-07 09:22:04,135:INFO:lightgbm==2.3.1
2020-11-07 09:22:04,161:INFO:catboost==0.24.1
2020-11-07 09:22:04,766:INFO:mlflow==1.11.0
2020-11-07 09:22:04,766:INFO:Checking Exceptions
2020-11-07 09:22:04,767:INFO:Declaring global variables
2020-11-07 09:22:04,767:INFO:USI: c16a
2020-11-07 09:22:04,767:INFO:pycaret_globals: {'X', 'logging_param', '_all_models_internal', 'X_test', 'transform_target_method_param', 'seed', 'fold_shuffle_param', 'master_model_container', 'prep_pipe', '_all_models', 'exp_name_log', 'fold_groups_param', 'experiment__', 'pycaret_globals', 'y_train', '_internal_pipeline', 'display_container', 'imputation_regressor', 'imputation_classifier', 'stratify_param', '_gpu_n_jobs_param', 'target_param', 'y', 'transform_target_param', 'X_train', 'USI', 'html_param', 'fix_imbalance_method_param', '_all_metrics', '_available_plots', '_ml_usecase', 'fix_imbalance_param', 'n_jobs_param', 'create_model_container', 'fold_param', 'fold_generator', 'y_test', 'data_before_preprocess', 'log_plots_param', 'gpu_param', 'iterative_imputation_iters_param'}
2020-11-07 09:22:04,767:INFO:Preparing display monitor
2020-11-07 09:22:04,767:INFO:Preparing display monitor
2020-11-07 09:22:04,777:INFO:Importing libraries
2020-11-07 09:22:04,778:INFO:Copying data for preprocessing
2020-11-07 09:22:04,786:INFO:Declaring preprocessing parameters
2020-11-07 09:22:04,787:INFO:Setting up iterative imputation
2020-11-07 09:22:05,020:INFO:Creating preprocessing pipeline
2020-11-07 09:22:05,026:INFO:Preprocessing pipeline created successfully
2020-11-07 09:22:05,027:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-07 09:22:05,027:INFO:Creating global containers
2020-11-07 09:22:05,028:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-07 09:22:05,089:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-07 09:22:05,548:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-07 09:22:05,649:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-07 09:22:05,809:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-07 09:22:05,943:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-07 09:22:06,092:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-07 09:22:06,316:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-07 09:22:06,414:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-07 09:22:06,512:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-07 09:22:06,605:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-07 09:22:06,704:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-07 09:22:06,813:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-07 09:22:06,913:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-07 09:22:07,016:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-07 09:22:07,256:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-07 09:22:07,557:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-07 09:22:07,790:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-07 09:22:07,886:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-07 09:22:07,983:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-07 09:22:08,078:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-07 09:22:08,170:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-07 09:22:08,270:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-07 09:22:08,375:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-07 09:22:08,480:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-07 09:22:08,577:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-07 09:22:08,676:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-07 09:22:08,770:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-07 09:22:08,871:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-07 09:22:08,967:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-07 09:22:09,065:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-07 09:22:09,199:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-07 09:22:09,306:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-07 09:22:09,413:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-07 09:22:09,516:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-07 09:22:09,725:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-07 09:22:09,820:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-07 09:22:09,970:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-07 09:22:10,084:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-07 09:22:10,187:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-07 09:22:10,311:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-07 09:22:10,445:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-07 09:22:10,588:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-07 09:22:10,744:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-07 09:22:10,886:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-07 09:22:10,986:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-07 09:22:11,264:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-07 09:22:11,360:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-07 09:22:11,456:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-07 09:22:11,645:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-07 09:22:11,736:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-07 09:22:13,941:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-07 09:22:14,039:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-07 09:22:14,119:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-07 09:22:14,196:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-07 09:22:14,272:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-07 09:22:14,348:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-07 09:22:14,423:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-07 09:22:14,499:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-07 09:22:14,574:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-07 09:22:14,652:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-07 09:22:14,728:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-07 09:22:14,807:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-07 09:22:14,885:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-07 09:22:14,961:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-07 09:22:15,044:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-07 09:22:15,128:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-07 09:22:15,206:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-07 09:22:15,284:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-07 09:22:15,359:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-07 09:22:15,437:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-07 09:22:15,512:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-07 09:22:15,590:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-07 09:22:15,669:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-07 09:22:15,746:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-07 09:22:15,825:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-07 09:22:15,911:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-07 09:22:15,998:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-07 09:22:16,085:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-07 09:22:16,167:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-07 09:22:16,246:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-07 09:22:16,323:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-07 09:22:16,404:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-07 09:22:16,489:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-07 09:22:16,568:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-07 09:22:16,655:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-07 09:22:16,738:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-07 09:22:16,822:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-07 09:22:16,900:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-07 09:22:16,980:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-07 09:22:17,057:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-07 09:22:17,135:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-07 09:22:17,212:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-07 09:22:17,289:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-07 09:22:17,370:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-07 09:22:17,451:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-07 09:22:17,535:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-07 09:22:17,619:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-07 09:22:17,698:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-07 09:22:17,781:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-07 09:22:17,863:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-07 09:22:18,006:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-07 09:22:18,117:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-07 09:22:18,205:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-07 09:22:18,285:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-07 09:22:18,363:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-07 09:22:18,447:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-07 09:22:18,532:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-07 09:22:18,619:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-07 09:22:18,703:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-07 09:22:18,790:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-07 09:22:18,877:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-07 09:22:18,961:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-07 09:22:19,038:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-07 09:22:19,116:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-07 09:22:19,194:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-07 09:22:19,271:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-07 09:22:19,348:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-07 09:22:19,423:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-07 09:22:19,500:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-07 09:22:19,575:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-07 09:22:19,655:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-07 09:22:19,734:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-07 09:22:19,811:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-07 09:22:19,888:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-07 09:22:19,970:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-07 09:22:20,050:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-07 09:22:20,127:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-07 09:22:20,205:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-07 09:22:20,285:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-07 09:22:20,362:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-07 09:22:20,439:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-07 09:22:20,516:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-07 09:22:20,592:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-07 09:22:20,670:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-07 09:22:20,746:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-07 09:22:20,825:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-07 09:22:20,904:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-07 09:22:20,984:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-07 09:22:21,070:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-07 09:22:21,165:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-07 09:22:21,245:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-07 09:22:21,322:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-07 09:22:21,400:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-07 09:22:21,480:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-07 09:22:21,567:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-07 09:22:21,657:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-07 09:22:21,745:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-07 09:22:21,832:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-07 09:22:21,919:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-07 09:22:22,031:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-07 09:22:22,367:INFO:Creating grid variables
2020-11-07 09:22:22,404:INFO:create_model_container: 0
2020-11-07 09:22:22,404:INFO:master_model_container: 0
2020-11-07 09:22:22,404:INFO:display_container: 0
2020-11-07 09:22:22,418:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-07 09:22:22,418:INFO:setup() succesfully completed......................................
2020-11-07 09:22:22,503:INFO:gpu_param set to False
2020-11-07 09:22:22,685:INFO:Initializing get_config()
2020-11-07 09:22:22,685:INFO:get_config(variable=X_train)
2020-11-07 09:22:22,690:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday   Saturday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  95.706665   
290   89.524284   91.468575   87.825432   97.618568   94.757272  95.238571   
121   94.058571  100.000000   94.127144   96.427498   96.666664  94.443336   
113   98.461998  100.000000  100.000000   98.571426   97.727501  93.500000   
170   97.904259  100.000000   96.207530  100.000000  100.000000  94.445000   
..          ...         ...         ...         ...         ...        ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000  95.577141   
427   91.537498   94.424980   95.738747   94.977776   94.047501  92.708748   
243   94.443336  100.000000   97.500000   93.559998  100.000000  94.624008   
258   90.427139   92.855003   94.431114   95.446251   84.709999  91.531946   
341  100.000000   98.333336   97.910120   94.839996   99.266625  97.916664   

     Wednesday_multiply_Tuesday  Sunday_multiply_Friday  \
97                  9267.749786             9738.843296   
290                 9250.069283             8188.658676   
121                 9321.324548             9405.857086   
113                 9633.139163             9846.199799   
170                10000.000000             9790.425889   
..                          ...                     ...   
124                 8973.125173             9198.381127   
427                 8932.422406             8643.426427   
243                 9355.999756             9444.333649   
258                 8085.251828             8396.612322   
341                 9414.446332             9833.333588   

     Friday_multiply_Sunday  
97              9738.843296  
290             8188.658676  
121             9405.857086  
113             9846.199799  
170             9790.425889  
..                      ...  
124             9198.381127  
427             8643.426427  
243             9444.333649  
258             8396.612322  
341             9833.333588  

[266 rows x 9 columns]
2020-11-07 09:22:22,690:INFO:get_config() succesfully completed......................................
2020-11-07 09:22:22,721:INFO:Initializing compare_models()
2020-11-07 09:22:22,721:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Recall, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-11-07 09:22:22,721:INFO:Checking exceptions
2020-11-07 09:22:22,723:INFO:Preparing display monitor
2020-11-07 09:22:22,723:INFO:Preparing display monitor
2020-11-07 09:22:22,751:INFO:Initializing Logistic Regression
2020-11-07 09:22:22,751:INFO:Total runtime is 3.401438395182292e-06 minutes
2020-11-07 09:22:22,760:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:22,760:INFO:Initializing create_model()
2020-11-07 09:22:22,760:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:22,760:INFO:Checking exceptions
2020-11-07 09:22:22,760:INFO:Importing libraries
2020-11-07 09:22:22,760:INFO:Copying training dataset
2020-11-07 09:22:22,761:INFO:Defining folds
2020-11-07 09:22:22,761:INFO:Declaring metric variables
2020-11-07 09:22:22,768:INFO:Importing untrained model
2020-11-07 09:22:22,775:INFO:Logistic Regression Imported succesfully
2020-11-07 09:22:22,792:INFO:Starting cross validation
2020-11-07 09:22:22,792:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:28,425:INFO:Calculating mean and std
2020-11-07 09:22:28,429:INFO:Creating metrics dataframe
2020-11-07 09:22:28,436:INFO:Uploading results into container
2020-11-07 09:22:28,436:INFO:Uploading model into container now
2020-11-07 09:22:28,436:INFO:create_model_container: 1
2020-11-07 09:22:28,437:INFO:master_model_container: 1
2020-11-07 09:22:28,437:INFO:display_container: 1
2020-11-07 09:22:28,438:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-11-07 09:22:28,438:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:28,535:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:28,535:INFO:Creating metrics dataframe
2020-11-07 09:22:28,550:INFO:Initializing K Neighbors Classifier
2020-11-07 09:22:28,551:INFO:Total runtime is 0.09665981928507487 minutes
2020-11-07 09:22:28,561:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:28,561:INFO:Initializing create_model()
2020-11-07 09:22:28,561:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:28,561:INFO:Checking exceptions
2020-11-07 09:22:28,562:INFO:Importing libraries
2020-11-07 09:22:28,562:INFO:Copying training dataset
2020-11-07 09:22:28,562:INFO:Defining folds
2020-11-07 09:22:28,563:INFO:Declaring metric variables
2020-11-07 09:22:28,570:INFO:Importing untrained model
2020-11-07 09:22:28,578:INFO:K Neighbors Classifier Imported succesfully
2020-11-07 09:22:28,603:INFO:Starting cross validation
2020-11-07 09:22:28,604:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:28,797:INFO:Calculating mean and std
2020-11-07 09:22:28,798:INFO:Creating metrics dataframe
2020-11-07 09:22:28,805:INFO:Uploading results into container
2020-11-07 09:22:28,805:INFO:Uploading model into container now
2020-11-07 09:22:28,805:INFO:create_model_container: 2
2020-11-07 09:22:28,806:INFO:master_model_container: 2
2020-11-07 09:22:28,806:INFO:display_container: 1
2020-11-07 09:22:28,806:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-11-07 09:22:28,807:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:28,881:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:28,881:INFO:Creating metrics dataframe
2020-11-07 09:22:28,898:INFO:Initializing Naive Bayes
2020-11-07 09:22:28,898:INFO:Total runtime is 0.10244466861089072 minutes
2020-11-07 09:22:28,905:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:28,906:INFO:Initializing create_model()
2020-11-07 09:22:28,906:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:28,906:INFO:Checking exceptions
2020-11-07 09:22:28,906:INFO:Importing libraries
2020-11-07 09:22:28,907:INFO:Copying training dataset
2020-11-07 09:22:28,908:INFO:Defining folds
2020-11-07 09:22:28,908:INFO:Declaring metric variables
2020-11-07 09:22:28,915:INFO:Importing untrained model
2020-11-07 09:22:28,922:INFO:Naive Bayes Imported succesfully
2020-11-07 09:22:28,937:INFO:Starting cross validation
2020-11-07 09:22:28,938:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:29,008:INFO:Calculating mean and std
2020-11-07 09:22:29,009:INFO:Creating metrics dataframe
2020-11-07 09:22:29,015:INFO:Uploading results into container
2020-11-07 09:22:29,015:INFO:Uploading model into container now
2020-11-07 09:22:29,015:INFO:create_model_container: 3
2020-11-07 09:22:29,015:INFO:master_model_container: 3
2020-11-07 09:22:29,015:INFO:display_container: 1
2020-11-07 09:22:29,015:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-11-07 09:22:29,015:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:29,115:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:29,115:INFO:Creating metrics dataframe
2020-11-07 09:22:29,135:INFO:Initializing Decision Tree Classifier
2020-11-07 09:22:29,136:INFO:Total runtime is 0.1064122200012207 minutes
2020-11-07 09:22:29,148:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:29,149:INFO:Initializing create_model()
2020-11-07 09:22:29,149:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:29,149:INFO:Checking exceptions
2020-11-07 09:22:29,149:INFO:Importing libraries
2020-11-07 09:22:29,149:INFO:Copying training dataset
2020-11-07 09:22:29,150:INFO:Defining folds
2020-11-07 09:22:29,150:INFO:Declaring metric variables
2020-11-07 09:22:29,158:INFO:Importing untrained model
2020-11-07 09:22:29,164:INFO:Decision Tree Classifier Imported succesfully
2020-11-07 09:22:29,180:INFO:Starting cross validation
2020-11-07 09:22:29,180:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:29,265:INFO:Calculating mean and std
2020-11-07 09:22:29,266:INFO:Creating metrics dataframe
2020-11-07 09:22:29,270:INFO:Uploading results into container
2020-11-07 09:22:29,270:INFO:Uploading model into container now
2020-11-07 09:22:29,270:INFO:create_model_container: 4
2020-11-07 09:22:29,270:INFO:master_model_container: 4
2020-11-07 09:22:29,270:INFO:display_container: 1
2020-11-07 09:22:29,271:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-11-07 09:22:29,271:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:29,351:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:29,351:INFO:Creating metrics dataframe
2020-11-07 09:22:29,373:INFO:Initializing SVM - Linear Kernel
2020-11-07 09:22:29,374:INFO:Total runtime is 0.11037713686625163 minutes
2020-11-07 09:22:29,381:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:29,382:INFO:Initializing create_model()
2020-11-07 09:22:29,382:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:29,382:INFO:Checking exceptions
2020-11-07 09:22:29,382:INFO:Importing libraries
2020-11-07 09:22:29,382:INFO:Copying training dataset
2020-11-07 09:22:29,383:INFO:Defining folds
2020-11-07 09:22:29,384:INFO:Declaring metric variables
2020-11-07 09:22:29,391:INFO:Importing untrained model
2020-11-07 09:22:29,398:INFO:SVM - Linear Kernel Imported succesfully
2020-11-07 09:22:29,413:INFO:Starting cross validation
2020-11-07 09:22:29,413:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:29,483:INFO:Calculating mean and std
2020-11-07 09:22:29,484:INFO:Creating metrics dataframe
2020-11-07 09:22:29,489:INFO:Uploading results into container
2020-11-07 09:22:29,489:INFO:Uploading model into container now
2020-11-07 09:22:29,490:INFO:create_model_container: 5
2020-11-07 09:22:29,490:INFO:master_model_container: 5
2020-11-07 09:22:29,490:INFO:display_container: 1
2020-11-07 09:22:29,490:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-11-07 09:22:29,490:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:29,565:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:29,566:INFO:Creating metrics dataframe
2020-11-07 09:22:29,590:INFO:Initializing Ridge Classifier
2020-11-07 09:22:29,590:INFO:Total runtime is 0.1139887015024821 minutes
2020-11-07 09:22:29,598:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:29,599:INFO:Initializing create_model()
2020-11-07 09:22:29,599:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:29,599:INFO:Checking exceptions
2020-11-07 09:22:29,599:INFO:Importing libraries
2020-11-07 09:22:29,599:INFO:Copying training dataset
2020-11-07 09:22:29,600:INFO:Defining folds
2020-11-07 09:22:29,600:INFO:Declaring metric variables
2020-11-07 09:22:29,611:INFO:Importing untrained model
2020-11-07 09:22:29,618:INFO:Ridge Classifier Imported succesfully
2020-11-07 09:22:29,646:INFO:Starting cross validation
2020-11-07 09:22:29,647:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:29,722:INFO:Calculating mean and std
2020-11-07 09:22:29,723:INFO:Creating metrics dataframe
2020-11-07 09:22:29,728:INFO:Uploading results into container
2020-11-07 09:22:29,728:INFO:Uploading model into container now
2020-11-07 09:22:29,728:INFO:create_model_container: 6
2020-11-07 09:22:29,728:INFO:master_model_container: 6
2020-11-07 09:22:29,728:INFO:display_container: 1
2020-11-07 09:22:29,729:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-11-07 09:22:29,729:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:29,824:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:29,824:INFO:Creating metrics dataframe
2020-11-07 09:22:29,851:INFO:Initializing Random Forest Classifier
2020-11-07 09:22:29,851:INFO:Total runtime is 0.11832971970240275 minutes
2020-11-07 09:22:29,860:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:29,861:INFO:Initializing create_model()
2020-11-07 09:22:29,861:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:29,861:INFO:Checking exceptions
2020-11-07 09:22:29,861:INFO:Importing libraries
2020-11-07 09:22:29,861:INFO:Copying training dataset
2020-11-07 09:22:29,862:INFO:Defining folds
2020-11-07 09:22:29,862:INFO:Declaring metric variables
2020-11-07 09:22:29,869:INFO:Importing untrained model
2020-11-07 09:22:29,877:INFO:Random Forest Classifier Imported succesfully
2020-11-07 09:22:29,892:INFO:Starting cross validation
2020-11-07 09:22:29,893:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:31,047:INFO:Calculating mean and std
2020-11-07 09:22:31,048:INFO:Creating metrics dataframe
2020-11-07 09:22:31,053:INFO:Uploading results into container
2020-11-07 09:22:31,053:INFO:Uploading model into container now
2020-11-07 09:22:31,053:INFO:create_model_container: 7
2020-11-07 09:22:31,053:INFO:master_model_container: 7
2020-11-07 09:22:31,053:INFO:display_container: 1
2020-11-07 09:22:31,054:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-07 09:22:31,054:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:31,136:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:31,137:INFO:Creating metrics dataframe
2020-11-07 09:22:31,167:INFO:Initializing Quadratic Discriminant Analysis
2020-11-07 09:22:31,167:INFO:Total runtime is 0.14026573101679485 minutes
2020-11-07 09:22:31,176:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:31,176:INFO:Initializing create_model()
2020-11-07 09:22:31,177:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:31,177:INFO:Checking exceptions
2020-11-07 09:22:31,177:INFO:Importing libraries
2020-11-07 09:22:31,177:INFO:Copying training dataset
2020-11-07 09:22:31,178:INFO:Defining folds
2020-11-07 09:22:31,178:INFO:Declaring metric variables
2020-11-07 09:22:31,186:INFO:Importing untrained model
2020-11-07 09:22:31,194:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-11-07 09:22:31,212:INFO:Starting cross validation
2020-11-07 09:22:31,213:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:31,290:INFO:Calculating mean and std
2020-11-07 09:22:31,291:INFO:Creating metrics dataframe
2020-11-07 09:22:31,295:INFO:Uploading results into container
2020-11-07 09:22:31,295:INFO:Uploading model into container now
2020-11-07 09:22:31,296:INFO:create_model_container: 8
2020-11-07 09:22:31,296:INFO:master_model_container: 8
2020-11-07 09:22:31,296:INFO:display_container: 1
2020-11-07 09:22:31,296:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-11-07 09:22:31,296:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:31,371:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:31,371:INFO:Creating metrics dataframe
2020-11-07 09:22:31,402:INFO:Initializing Ada Boost Classifier
2020-11-07 09:22:31,403:INFO:Total runtime is 0.1441926678021749 minutes
2020-11-07 09:22:31,412:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:31,412:INFO:Initializing create_model()
2020-11-07 09:22:31,412:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:31,412:INFO:Checking exceptions
2020-11-07 09:22:31,412:INFO:Importing libraries
2020-11-07 09:22:31,413:INFO:Copying training dataset
2020-11-07 09:22:31,414:INFO:Defining folds
2020-11-07 09:22:31,414:INFO:Declaring metric variables
2020-11-07 09:22:31,421:INFO:Importing untrained model
2020-11-07 09:22:31,429:INFO:Ada Boost Classifier Imported succesfully
2020-11-07 09:22:31,444:INFO:Starting cross validation
2020-11-07 09:22:31,444:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:31,873:INFO:Calculating mean and std
2020-11-07 09:22:31,874:INFO:Creating metrics dataframe
2020-11-07 09:22:31,878:INFO:Uploading results into container
2020-11-07 09:22:31,878:INFO:Uploading model into container now
2020-11-07 09:22:31,878:INFO:create_model_container: 9
2020-11-07 09:22:31,878:INFO:master_model_container: 9
2020-11-07 09:22:31,879:INFO:display_container: 1
2020-11-07 09:22:31,879:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-11-07 09:22:31,879:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:31,955:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:31,955:INFO:Creating metrics dataframe
2020-11-07 09:22:31,991:INFO:Initializing Gradient Boosting Classifier
2020-11-07 09:22:31,991:INFO:Total runtime is 0.15400495131810507 minutes
2020-11-07 09:22:31,999:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:32,000:INFO:Initializing create_model()
2020-11-07 09:22:32,000:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:32,000:INFO:Checking exceptions
2020-11-07 09:22:32,000:INFO:Importing libraries
2020-11-07 09:22:32,000:INFO:Copying training dataset
2020-11-07 09:22:32,001:INFO:Defining folds
2020-11-07 09:22:32,001:INFO:Declaring metric variables
2020-11-07 09:22:32,009:INFO:Importing untrained model
2020-11-07 09:22:32,016:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-07 09:22:32,031:INFO:Starting cross validation
2020-11-07 09:22:32,032:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:32,398:INFO:Calculating mean and std
2020-11-07 09:22:32,399:INFO:Creating metrics dataframe
2020-11-07 09:22:32,404:INFO:Uploading results into container
2020-11-07 09:22:32,405:INFO:Uploading model into container now
2020-11-07 09:22:32,405:INFO:create_model_container: 10
2020-11-07 09:22:32,405:INFO:master_model_container: 10
2020-11-07 09:22:32,405:INFO:display_container: 1
2020-11-07 09:22:32,406:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-07 09:22:32,406:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:32,488:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:32,488:INFO:Creating metrics dataframe
2020-11-07 09:22:32,529:INFO:Initializing Linear Discriminant Analysis
2020-11-07 09:22:32,529:INFO:Total runtime is 0.1629660169283549 minutes
2020-11-07 09:22:32,540:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:32,541:INFO:Initializing create_model()
2020-11-07 09:22:32,541:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:32,541:INFO:Checking exceptions
2020-11-07 09:22:32,541:INFO:Importing libraries
2020-11-07 09:22:32,541:INFO:Copying training dataset
2020-11-07 09:22:32,541:INFO:Defining folds
2020-11-07 09:22:32,542:INFO:Declaring metric variables
2020-11-07 09:22:32,549:INFO:Importing untrained model
2020-11-07 09:22:32,559:INFO:Linear Discriminant Analysis Imported succesfully
2020-11-07 09:22:32,583:INFO:Starting cross validation
2020-11-07 09:22:32,584:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:32,654:INFO:Calculating mean and std
2020-11-07 09:22:32,655:INFO:Creating metrics dataframe
2020-11-07 09:22:32,660:INFO:Uploading results into container
2020-11-07 09:22:32,661:INFO:Uploading model into container now
2020-11-07 09:22:32,661:INFO:create_model_container: 11
2020-11-07 09:22:32,661:INFO:master_model_container: 11
2020-11-07 09:22:32,661:INFO:display_container: 1
2020-11-07 09:22:32,661:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-11-07 09:22:32,662:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:32,739:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:32,740:INFO:Creating metrics dataframe
2020-11-07 09:22:32,781:INFO:Initializing Extra Trees Classifier
2020-11-07 09:22:32,781:INFO:Total runtime is 0.16717018683751425 minutes
2020-11-07 09:22:32,789:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:32,790:INFO:Initializing create_model()
2020-11-07 09:22:32,790:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:32,790:INFO:Checking exceptions
2020-11-07 09:22:32,790:INFO:Importing libraries
2020-11-07 09:22:32,791:INFO:Copying training dataset
2020-11-07 09:22:32,792:INFO:Defining folds
2020-11-07 09:22:32,792:INFO:Declaring metric variables
2020-11-07 09:22:32,799:INFO:Importing untrained model
2020-11-07 09:22:32,807:INFO:Extra Trees Classifier Imported succesfully
2020-11-07 09:22:32,826:INFO:Starting cross validation
2020-11-07 09:22:32,827:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:33,676:INFO:Calculating mean and std
2020-11-07 09:22:33,677:INFO:Creating metrics dataframe
2020-11-07 09:22:33,683:INFO:Uploading results into container
2020-11-07 09:22:33,683:INFO:Uploading model into container now
2020-11-07 09:22:33,683:INFO:create_model_container: 12
2020-11-07 09:22:33,684:INFO:master_model_container: 12
2020-11-07 09:22:33,684:INFO:display_container: 1
2020-11-07 09:22:33,684:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-07 09:22:33,684:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:33,787:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:33,787:INFO:Creating metrics dataframe
2020-11-07 09:22:33,845:INFO:Initializing Extreme Gradient Boosting
2020-11-07 09:22:33,845:INFO:Total runtime is 0.18490250110626222 minutes
2020-11-07 09:22:33,855:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:33,855:INFO:Initializing create_model()
2020-11-07 09:22:33,855:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:33,855:INFO:Checking exceptions
2020-11-07 09:22:33,855:INFO:Importing libraries
2020-11-07 09:22:33,855:INFO:Copying training dataset
2020-11-07 09:22:33,856:INFO:Defining folds
2020-11-07 09:22:33,856:INFO:Declaring metric variables
2020-11-07 09:22:33,867:INFO:Importing untrained model
2020-11-07 09:22:33,876:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-07 09:22:33,898:INFO:Starting cross validation
2020-11-07 09:22:33,898:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:35,913:INFO:Calculating mean and std
2020-11-07 09:22:35,915:INFO:Creating metrics dataframe
2020-11-07 09:22:35,922:INFO:Uploading results into container
2020-11-07 09:22:35,923:INFO:Uploading model into container now
2020-11-07 09:22:35,923:INFO:create_model_container: 13
2020-11-07 09:22:35,923:INFO:master_model_container: 13
2020-11-07 09:22:35,923:INFO:display_container: 1
2020-11-07 09:22:35,924:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-11-07 09:22:35,924:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:36,012:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:36,012:INFO:Creating metrics dataframe
2020-11-07 09:22:36,072:INFO:Initializing Light Gradient Boosting Machine
2020-11-07 09:22:36,072:INFO:Total runtime is 0.22202326854070029 minutes
2020-11-07 09:22:36,081:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:36,081:INFO:Initializing create_model()
2020-11-07 09:22:36,081:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:36,081:INFO:Checking exceptions
2020-11-07 09:22:36,081:INFO:Importing libraries
2020-11-07 09:22:36,081:INFO:Copying training dataset
2020-11-07 09:22:36,082:INFO:Defining folds
2020-11-07 09:22:36,082:INFO:Declaring metric variables
2020-11-07 09:22:36,091:INFO:Importing untrained model
2020-11-07 09:22:36,099:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-07 09:22:36,119:INFO:Starting cross validation
2020-11-07 09:22:36,120:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:36,351:INFO:Calculating mean and std
2020-11-07 09:22:36,352:INFO:Creating metrics dataframe
2020-11-07 09:22:36,357:INFO:Uploading results into container
2020-11-07 09:22:36,357:INFO:Uploading model into container now
2020-11-07 09:22:36,357:INFO:create_model_container: 14
2020-11-07 09:22:36,357:INFO:master_model_container: 14
2020-11-07 09:22:36,358:INFO:display_container: 1
2020-11-07 09:22:36,358:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-07 09:22:36,358:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:36,446:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:36,446:INFO:Creating metrics dataframe
2020-11-07 09:22:36,506:INFO:Initializing CatBoost Classifier
2020-11-07 09:22:36,506:INFO:Total runtime is 0.22924768527348838 minutes
2020-11-07 09:22:36,516:INFO:SubProcess create_model() called ==================================
2020-11-07 09:22:36,517:INFO:Initializing create_model()
2020-11-07 09:22:36,517:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ff576ba3910>, kwargs={})
2020-11-07 09:22:36,517:INFO:Checking exceptions
2020-11-07 09:22:36,517:INFO:Importing libraries
2020-11-07 09:22:36,517:INFO:Copying training dataset
2020-11-07 09:22:36,518:INFO:Defining folds
2020-11-07 09:22:36,518:INFO:Declaring metric variables
2020-11-07 09:22:36,527:INFO:Importing untrained model
2020-11-07 09:22:36,538:INFO:CatBoost Classifier Imported succesfully
2020-11-07 09:22:36,558:INFO:Starting cross validation
2020-11-07 09:22:36,559:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 09:22:49,795:INFO:Calculating mean and std
2020-11-07 09:22:49,796:INFO:Creating metrics dataframe
2020-11-07 09:22:49,803:INFO:Uploading results into container
2020-11-07 09:22:49,803:INFO:Uploading model into container now
2020-11-07 09:22:49,803:INFO:create_model_container: 15
2020-11-07 09:22:49,803:INFO:master_model_container: 15
2020-11-07 09:22:49,803:INFO:display_container: 1
2020-11-07 09:22:49,803:INFO:<catboost.core.CatBoostClassifier object at 0x7ff574b7dfa0>
2020-11-07 09:22:49,803:INFO:create_model() succesfully completed......................................
2020-11-07 09:22:49,889:INFO:SubProcess create_model() end ==================================
2020-11-07 09:22:49,889:INFO:Creating metrics dataframe
2020-11-07 09:22:49,965:INFO:Initializing create_model()
2020-11-07 09:22:49,966:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-07 09:22:49,966:INFO:Checking exceptions
2020-11-07 09:22:49,966:INFO:Importing libraries
2020-11-07 09:22:49,966:INFO:Copying training dataset
2020-11-07 09:22:49,966:INFO:Defining folds
2020-11-07 09:22:49,966:INFO:Declaring metric variables
2020-11-07 09:22:49,967:INFO:Importing untrained model
2020-11-07 09:22:49,967:INFO:Declaring custom model
2020-11-07 09:22:49,967:INFO:Random Forest Classifier Imported succesfully
2020-11-07 09:22:49,968:INFO:Cross validation set to False
2020-11-07 09:22:49,968:INFO:Fitting Model
2020-11-07 09:22:50,163:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-07 09:22:50,163:INFO:create_models() succesfully completed......................................
2020-11-07 09:22:50,247:INFO:Initializing create_model()
2020-11-07 09:22:50,248:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-07 09:22:50,248:INFO:Checking exceptions
2020-11-07 09:22:50,248:INFO:Importing libraries
2020-11-07 09:22:50,249:INFO:Copying training dataset
2020-11-07 09:22:50,249:INFO:Defining folds
2020-11-07 09:22:50,249:INFO:Declaring metric variables
2020-11-07 09:22:50,250:INFO:Importing untrained model
2020-11-07 09:22:50,250:INFO:Declaring custom model
2020-11-07 09:22:50,251:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-07 09:22:50,251:INFO:Cross validation set to False
2020-11-07 09:22:50,251:INFO:Fitting Model
2020-11-07 09:22:50,335:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-11-07 09:22:50,335:INFO:create_models() succesfully completed......................................
2020-11-07 09:22:50,592:INFO:create_model_container: 15
2020-11-07 09:22:50,592:INFO:master_model_container: 15
2020-11-07 09:22:50,592:INFO:display_container: 1
2020-11-07 09:22:50,595:INFO:[RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)]
2020-11-07 09:22:50,595:INFO:compare_models() succesfully completed......................................
2020-11-07 10:52:26,044:INFO:PyCaret Supervised Module
2020-11-07 10:52:26,046:INFO:ML Usecase: classification
2020-11-07 10:52:26,046:INFO:version 2.2.0
2020-11-07 10:52:26,046:INFO:Initializing setup()
2020-11-07 10:52:26,046:INFO:setup(target=actualvalue_class, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0', 'actualvalue'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.15, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-11-07 10:52:26,046:INFO:Checking environment
2020-11-07 10:52:26,046:INFO:python_version: 3.8.3
2020-11-07 10:52:26,047:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-11-07 10:52:26,047:INFO:machine: x86_64
2020-11-07 10:52:26,063:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-11-07 10:52:26,063:INFO:Memory: svmem(total=8589934592, available=3118485504, percent=63.7, used=4963577856, free=17715200, active=2981912576, inactive=2997317632, wired=1981665280)
2020-11-07 10:52:26,063:INFO:Physical Core: 4
2020-11-07 10:52:26,063:INFO:Logical Core: 8
2020-11-07 10:52:26,064:INFO:Checking libraries
2020-11-07 10:52:26,064:INFO:pd==1.0.5
2020-11-07 10:52:26,064:INFO:numpy==1.18.5
2020-11-07 10:52:26,064:INFO:sklearn==0.23.2
2020-11-07 10:52:26,616:INFO:xgboost==1.2.0
2020-11-07 10:52:26,616:INFO:lightgbm==2.3.1
2020-11-07 10:52:26,636:INFO:catboost==0.24.1
2020-11-07 10:52:27,310:INFO:mlflow==1.11.0
2020-11-07 10:52:27,310:INFO:Checking Exceptions
2020-11-07 10:52:27,310:INFO:Declaring global variables
2020-11-07 10:52:27,311:INFO:USI: 2400
2020-11-07 10:52:27,311:INFO:pycaret_globals: {'_ml_usecase', 'experiment__', 'X_train', 'log_plots_param', 'gpu_param', '_all_models', 'fix_imbalance_method_param', '_available_plots', 'fold_param', 'transform_target_param', 'fold_shuffle_param', '_internal_pipeline', 'target_param', 'seed', 'data_before_preprocess', 'fold_generator', 'y', 'y_train', '_all_metrics', 'transform_target_method_param', 'prep_pipe', 'logging_param', 'create_model_container', 'display_container', 'y_test', 'exp_name_log', 'fold_groups_param', 'imputation_regressor', 'iterative_imputation_iters_param', 'X', 'imputation_classifier', 'master_model_container', 'n_jobs_param', 'stratify_param', 'pycaret_globals', '_all_models_internal', 'html_param', '_gpu_n_jobs_param', 'fix_imbalance_param', 'USI', 'X_test'}
2020-11-07 10:52:27,311:INFO:Preparing display monitor
2020-11-07 10:52:27,311:INFO:Preparing display monitor
2020-11-07 10:52:27,323:INFO:Importing libraries
2020-11-07 10:52:27,323:INFO:Copying data for preprocessing
2020-11-07 10:52:27,330:INFO:Declaring preprocessing parameters
2020-11-07 10:52:27,332:INFO:Setting up iterative imputation
2020-11-07 10:52:27,551:INFO:Creating preprocessing pipeline
2020-11-07 10:52:27,559:INFO:Preprocessing pipeline created successfully
2020-11-07 10:52:27,559:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-11-07 10:52:27,559:INFO:Creating global containers
2020-11-07 10:52:27,560:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-11-07 10:52:27,614:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-07 10:52:28,063:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-07 10:52:28,829:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-07 10:52:28,941:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-07 10:52:29,081:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-07 10:52:29,222:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-07 10:52:29,318:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-07 10:52:29,415:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-07 10:52:29,520:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-07 10:52:29,685:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-07 10:52:29,823:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-07 10:52:29,925:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-07 10:52:30,029:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-07 10:52:30,128:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-07 10:52:30,234:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-07 10:52:30,331:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-07 10:52:30,432:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-07 10:52:30,590:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-07 10:52:30,689:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-07 10:52:30,784:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-07 10:52:30,878:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-07 10:52:30,983:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-07 10:52:31,139:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-07 10:52:31,344:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-07 10:52:31,462:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-07 10:52:31,649:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-07 10:52:31,849:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-07 10:52:31,976:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-07 10:52:32,108:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-07 10:52:32,218:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-07 10:52:32,309:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-07 10:52:32,418:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-07 10:52:32,519:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-07 10:52:32,648:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-07 10:52:32,750:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-07 10:52:32,875:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-07 10:52:32,971:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-07 10:52:33,068:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-07 10:52:33,167:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-07 10:52:33,262:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-07 10:52:33,357:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-07 10:52:33,467:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-07 10:52:33,567:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-07 10:52:33,667:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-07 10:52:33,764:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-07 10:52:33,860:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-07 10:52:33,961:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-07 10:52:34,057:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-07 10:52:34,157:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-07 10:52:34,255:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-07 10:52:35,650:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-07 10:52:35,742:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-07 10:52:35,816:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-07 10:52:35,891:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-07 10:52:35,965:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-07 10:52:36,043:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-07 10:52:36,130:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-07 10:52:36,211:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-07 10:52:36,305:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-07 10:52:36,385:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-07 10:52:36,467:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-07 10:52:36,543:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-07 10:52:36,621:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-07 10:52:36,696:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-07 10:52:36,771:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-07 10:52:36,847:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-07 10:52:36,930:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-07 10:52:37,044:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-07 10:52:37,158:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-07 10:52:37,246:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-07 10:52:37,326:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-07 10:52:37,400:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-07 10:52:37,478:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-07 10:52:37,555:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-07 10:52:37,632:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-07 10:52:37,709:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-07 10:52:37,794:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-07 10:52:37,873:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-07 10:52:37,954:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-07 10:52:38,030:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-07 10:52:38,105:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-07 10:52:38,180:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-07 10:52:38,257:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-07 10:52:38,336:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-07 10:52:38,421:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-07 10:52:38,501:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-07 10:52:38,585:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-07 10:52:38,668:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-07 10:52:38,746:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-07 10:52:38,828:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-07 10:52:38,908:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-07 10:52:38,987:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-07 10:52:39,064:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-07 10:52:39,140:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-07 10:52:39,215:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-07 10:52:39,292:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-07 10:52:39,370:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-07 10:52:39,447:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-07 10:52:39,524:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-07 10:52:39,601:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-07 10:52:39,730:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-11-07 10:52:39,805:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-11-07 10:52:39,879:INFO:Iterative Imputation: 1 cycle | Friday
2020-11-07 10:52:39,954:INFO:Iterative Imputation: 1 cycle | Monday
2020-11-07 10:52:40,027:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-11-07 10:52:40,105:INFO:Iterative Imputation: 1 cycle | Saturday
2020-11-07 10:52:40,179:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-11-07 10:52:40,256:INFO:Iterative Imputation: 1 cycle | Thursday
2020-11-07 10:52:40,334:INFO:Iterative Imputation: 1 cycle | Sunday
2020-11-07 10:52:40,414:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-11-07 10:52:40,491:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-11-07 10:52:40,568:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-11-07 10:52:40,643:INFO:Iterative Imputation: 2 cycle | Friday
2020-11-07 10:52:40,717:INFO:Iterative Imputation: 2 cycle | Monday
2020-11-07 10:52:40,795:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-11-07 10:52:40,876:INFO:Iterative Imputation: 2 cycle | Saturday
2020-11-07 10:52:40,956:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-11-07 10:52:41,030:INFO:Iterative Imputation: 2 cycle | Thursday
2020-11-07 10:52:41,104:INFO:Iterative Imputation: 2 cycle | Sunday
2020-11-07 10:52:41,180:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-11-07 10:52:41,257:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-11-07 10:52:41,334:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-11-07 10:52:41,408:INFO:Iterative Imputation: 3 cycle | Friday
2020-11-07 10:52:41,482:INFO:Iterative Imputation: 3 cycle | Monday
2020-11-07 10:52:41,566:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-11-07 10:52:41,668:INFO:Iterative Imputation: 3 cycle | Saturday
2020-11-07 10:52:41,752:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-11-07 10:52:41,828:INFO:Iterative Imputation: 3 cycle | Thursday
2020-11-07 10:52:41,903:INFO:Iterative Imputation: 3 cycle | Sunday
2020-11-07 10:52:41,980:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-11-07 10:52:42,053:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-11-07 10:52:42,128:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-11-07 10:52:42,202:INFO:Iterative Imputation: 4 cycle | Friday
2020-11-07 10:52:42,279:INFO:Iterative Imputation: 4 cycle | Monday
2020-11-07 10:52:42,359:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-11-07 10:52:42,435:INFO:Iterative Imputation: 4 cycle | Saturday
2020-11-07 10:52:42,509:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-11-07 10:52:42,585:INFO:Iterative Imputation: 4 cycle | Thursday
2020-11-07 10:52:42,660:INFO:Iterative Imputation: 4 cycle | Sunday
2020-11-07 10:52:42,736:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-11-07 10:52:42,810:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-11-07 10:52:42,884:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-11-07 10:52:42,957:INFO:Iterative Imputation: 5 cycle | Friday
2020-11-07 10:52:43,029:INFO:Iterative Imputation: 5 cycle | Monday
2020-11-07 10:52:43,105:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-11-07 10:52:43,181:INFO:Iterative Imputation: 5 cycle | Saturday
2020-11-07 10:52:43,260:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-11-07 10:52:43,340:INFO:Iterative Imputation: 5 cycle | Thursday
2020-11-07 10:52:43,419:INFO:Iterative Imputation: 5 cycle | Sunday
2020-11-07 10:52:43,498:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-11-07 10:52:43,801:INFO:Creating grid variables
2020-11-07 10:52:43,837:INFO:create_model_container: 0
2020-11-07 10:52:43,838:INFO:master_model_container: 0
2020-11-07 10:52:43,838:INFO:display_container: 0
2020-11-07 10:52:43,850:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0',
                                                       'actualvalue'],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefor...
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue_class',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'],
                             ml_usecase='classification', random_state=786,
                             subclass='binary', target='actualvalue_class',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-11-07 10:52:43,850:INFO:setup() succesfully completed......................................
2020-11-07 10:52:43,921:INFO:gpu_param set to False
2020-11-07 10:52:44,086:INFO:Initializing get_config()
2020-11-07 10:52:44,086:INFO:get_config(variable=X_train)
2020-11-07 10:52:44,092:INFO:Global variable: X_train returned as          Friday      Sunday    Thursday     Tuesday   Wednesday   Saturday  \
97   100.000000   97.388433   95.154442  100.000000   92.677498  95.706665   
290   89.524284   91.468575   87.825432   97.618568   94.757272  95.238571   
121   94.058571  100.000000   94.127144   96.427498   96.666664  94.443336   
113   98.461998  100.000000  100.000000   98.571426   97.727501  93.500000   
170   97.904259  100.000000   96.207530  100.000000  100.000000  94.445000   
..          ...         ...         ...         ...         ...        ...   
124   93.467270   98.412857   96.098358   96.283333   93.195000  95.577141   
427   91.537498   94.424980   95.738747   94.977776   94.047501  92.708748   
243   94.443336  100.000000   97.500000   93.559998  100.000000  94.624008   
258   90.427139   92.855003   94.431114   95.446251   84.709999  91.531946   
341  100.000000   98.333336   97.910120   94.839996   99.266625  97.916664   

     Friday_multiply_Sunday  Sunday_multiply_Friday  \
97              9738.843296             9738.843296   
290             8188.658676             8188.658676   
121             9405.857086             9405.857086   
113             9846.199799             9846.199799   
170             9790.425889             9790.425889   
..                      ...                     ...   
124             9198.381127             9198.381127   
427             8643.426427             8643.426427   
243             9444.333649             9444.333649   
258             8396.612322             8396.612322   
341             9833.333588             9833.333588   

     Wednesday_multiply_Tuesday  
97                  9267.749786  
290                 9250.069283  
121                 9321.324548  
113                 9633.139163  
170                10000.000000  
..                          ...  
124                 8973.125173  
427                 8932.422406  
243                 9355.999756  
258                 8085.251828  
341                 9414.446332  

[266 rows x 9 columns]
2020-11-07 10:52:44,093:INFO:get_config() succesfully completed......................................
2020-11-07 10:52:44,108:INFO:Initializing compare_models()
2020-11-07 10:52:44,108:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Recall, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-11-07 10:52:44,108:INFO:Checking exceptions
2020-11-07 10:52:44,109:INFO:Preparing display monitor
2020-11-07 10:52:44,109:INFO:Preparing display monitor
2020-11-07 10:52:44,140:INFO:Initializing Logistic Regression
2020-11-07 10:52:44,140:INFO:Total runtime is 2.5113423665364583e-06 minutes
2020-11-07 10:52:44,149:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:44,149:INFO:Initializing create_model()
2020-11-07 10:52:44,149:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:44,149:INFO:Checking exceptions
2020-11-07 10:52:44,150:INFO:Importing libraries
2020-11-07 10:52:44,150:INFO:Copying training dataset
2020-11-07 10:52:44,150:INFO:Defining folds
2020-11-07 10:52:44,151:INFO:Declaring metric variables
2020-11-07 10:52:44,160:INFO:Importing untrained model
2020-11-07 10:52:44,168:INFO:Logistic Regression Imported succesfully
2020-11-07 10:52:44,184:INFO:Starting cross validation
2020-11-07 10:52:44,185:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:49,121:INFO:Calculating mean and std
2020-11-07 10:52:49,127:INFO:Creating metrics dataframe
2020-11-07 10:52:49,138:INFO:Uploading results into container
2020-11-07 10:52:49,138:INFO:Uploading model into container now
2020-11-07 10:52:49,139:INFO:create_model_container: 1
2020-11-07 10:52:49,139:INFO:master_model_container: 1
2020-11-07 10:52:49,139:INFO:display_container: 1
2020-11-07 10:52:49,139:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=786, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2020-11-07 10:52:49,140:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:49,332:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:49,332:INFO:Creating metrics dataframe
2020-11-07 10:52:49,348:INFO:Initializing K Neighbors Classifier
2020-11-07 10:52:49,348:INFO:Total runtime is 0.08680127859115601 minutes
2020-11-07 10:52:49,362:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:49,362:INFO:Initializing create_model()
2020-11-07 10:52:49,362:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:49,363:INFO:Checking exceptions
2020-11-07 10:52:49,363:INFO:Importing libraries
2020-11-07 10:52:49,363:INFO:Copying training dataset
2020-11-07 10:52:49,364:INFO:Defining folds
2020-11-07 10:52:49,364:INFO:Declaring metric variables
2020-11-07 10:52:49,372:INFO:Importing untrained model
2020-11-07 10:52:49,383:INFO:K Neighbors Classifier Imported succesfully
2020-11-07 10:52:49,470:INFO:Starting cross validation
2020-11-07 10:52:49,471:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:49,579:INFO:Calculating mean and std
2020-11-07 10:52:49,580:INFO:Creating metrics dataframe
2020-11-07 10:52:49,584:INFO:Uploading results into container
2020-11-07 10:52:49,584:INFO:Uploading model into container now
2020-11-07 10:52:49,585:INFO:create_model_container: 2
2020-11-07 10:52:49,585:INFO:master_model_container: 2
2020-11-07 10:52:49,585:INFO:display_container: 1
2020-11-07 10:52:49,585:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2020-11-07 10:52:49,585:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:49,695:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:49,695:INFO:Creating metrics dataframe
2020-11-07 10:52:49,713:INFO:Initializing Naive Bayes
2020-11-07 10:52:49,713:INFO:Total runtime is 0.09288416306177776 minutes
2020-11-07 10:52:49,721:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:49,721:INFO:Initializing create_model()
2020-11-07 10:52:49,721:INFO:create_model(estimator=nb, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:49,721:INFO:Checking exceptions
2020-11-07 10:52:49,722:INFO:Importing libraries
2020-11-07 10:52:49,722:INFO:Copying training dataset
2020-11-07 10:52:49,722:INFO:Defining folds
2020-11-07 10:52:49,722:INFO:Declaring metric variables
2020-11-07 10:52:49,733:INFO:Importing untrained model
2020-11-07 10:52:49,742:INFO:Naive Bayes Imported succesfully
2020-11-07 10:52:49,762:INFO:Starting cross validation
2020-11-07 10:52:49,763:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:49,831:INFO:Calculating mean and std
2020-11-07 10:52:49,831:INFO:Creating metrics dataframe
2020-11-07 10:52:49,835:INFO:Uploading results into container
2020-11-07 10:52:49,836:INFO:Uploading model into container now
2020-11-07 10:52:49,836:INFO:create_model_container: 3
2020-11-07 10:52:49,836:INFO:master_model_container: 3
2020-11-07 10:52:49,836:INFO:display_container: 1
2020-11-07 10:52:49,836:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2020-11-07 10:52:49,836:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:49,957:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:49,958:INFO:Creating metrics dataframe
2020-11-07 10:52:50,003:INFO:Initializing Decision Tree Classifier
2020-11-07 10:52:50,004:INFO:Total runtime is 0.09772661129633586 minutes
2020-11-07 10:52:50,012:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:50,013:INFO:Initializing create_model()
2020-11-07 10:52:50,013:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:50,013:INFO:Checking exceptions
2020-11-07 10:52:50,013:INFO:Importing libraries
2020-11-07 10:52:50,013:INFO:Copying training dataset
2020-11-07 10:52:50,014:INFO:Defining folds
2020-11-07 10:52:50,014:INFO:Declaring metric variables
2020-11-07 10:52:50,022:INFO:Importing untrained model
2020-11-07 10:52:50,031:INFO:Decision Tree Classifier Imported succesfully
2020-11-07 10:52:50,047:INFO:Starting cross validation
2020-11-07 10:52:50,047:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:50,108:INFO:Calculating mean and std
2020-11-07 10:52:50,109:INFO:Creating metrics dataframe
2020-11-07 10:52:50,114:INFO:Uploading results into container
2020-11-07 10:52:50,114:INFO:Uploading model into container now
2020-11-07 10:52:50,114:INFO:create_model_container: 4
2020-11-07 10:52:50,114:INFO:master_model_container: 4
2020-11-07 10:52:50,115:INFO:display_container: 1
2020-11-07 10:52:50,115:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=786, splitter='best')
2020-11-07 10:52:50,115:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:50,262:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:50,263:INFO:Creating metrics dataframe
2020-11-07 10:52:50,289:INFO:Initializing SVM - Linear Kernel
2020-11-07 10:52:50,289:INFO:Total runtime is 0.10248994827270509 minutes
2020-11-07 10:52:50,298:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:50,298:INFO:Initializing create_model()
2020-11-07 10:52:50,298:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:50,298:INFO:Checking exceptions
2020-11-07 10:52:50,298:INFO:Importing libraries
2020-11-07 10:52:50,298:INFO:Copying training dataset
2020-11-07 10:52:50,299:INFO:Defining folds
2020-11-07 10:52:50,299:INFO:Declaring metric variables
2020-11-07 10:52:50,307:INFO:Importing untrained model
2020-11-07 10:52:50,315:INFO:SVM - Linear Kernel Imported succesfully
2020-11-07 10:52:50,332:INFO:Starting cross validation
2020-11-07 10:52:50,333:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:50,437:INFO:Calculating mean and std
2020-11-07 10:52:50,439:INFO:Creating metrics dataframe
2020-11-07 10:52:50,445:INFO:Uploading results into container
2020-11-07 10:52:50,445:INFO:Uploading model into container now
2020-11-07 10:52:50,445:INFO:create_model_container: 5
2020-11-07 10:52:50,446:INFO:master_model_container: 5
2020-11-07 10:52:50,446:INFO:display_container: 1
2020-11-07 10:52:50,446:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=786, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2020-11-07 10:52:50,446:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:50,535:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:50,535:INFO:Creating metrics dataframe
2020-11-07 10:52:50,558:INFO:Initializing Ridge Classifier
2020-11-07 10:52:50,558:INFO:Total runtime is 0.10696876446406048 minutes
2020-11-07 10:52:50,570:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:50,570:INFO:Initializing create_model()
2020-11-07 10:52:50,571:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:50,571:INFO:Checking exceptions
2020-11-07 10:52:50,571:INFO:Importing libraries
2020-11-07 10:52:50,571:INFO:Copying training dataset
2020-11-07 10:52:50,572:INFO:Defining folds
2020-11-07 10:52:50,572:INFO:Declaring metric variables
2020-11-07 10:52:50,587:INFO:Importing untrained model
2020-11-07 10:52:50,596:INFO:Ridge Classifier Imported succesfully
2020-11-07 10:52:50,658:INFO:Starting cross validation
2020-11-07 10:52:50,662:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:50,724:INFO:Calculating mean and std
2020-11-07 10:52:50,726:INFO:Creating metrics dataframe
2020-11-07 10:52:50,730:INFO:Uploading results into container
2020-11-07 10:52:50,730:INFO:Uploading model into container now
2020-11-07 10:52:50,730:INFO:create_model_container: 6
2020-11-07 10:52:50,730:INFO:master_model_container: 6
2020-11-07 10:52:50,730:INFO:display_container: 1
2020-11-07 10:52:50,730:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=786, solver='auto',
                tol=0.001)
2020-11-07 10:52:50,730:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:50,813:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:50,814:INFO:Creating metrics dataframe
2020-11-07 10:52:50,924:INFO:Initializing Random Forest Classifier
2020-11-07 10:52:50,924:INFO:Total runtime is 0.11306771437327068 minutes
2020-11-07 10:52:50,935:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:50,936:INFO:Initializing create_model()
2020-11-07 10:52:50,936:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:50,936:INFO:Checking exceptions
2020-11-07 10:52:50,936:INFO:Importing libraries
2020-11-07 10:52:50,936:INFO:Copying training dataset
2020-11-07 10:52:50,937:INFO:Defining folds
2020-11-07 10:52:50,937:INFO:Declaring metric variables
2020-11-07 10:52:50,944:INFO:Importing untrained model
2020-11-07 10:52:50,953:INFO:Random Forest Classifier Imported succesfully
2020-11-07 10:52:50,968:INFO:Starting cross validation
2020-11-07 10:52:50,968:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:52,023:INFO:Calculating mean and std
2020-11-07 10:52:52,025:INFO:Creating metrics dataframe
2020-11-07 10:52:52,031:INFO:Uploading results into container
2020-11-07 10:52:52,031:INFO:Uploading model into container now
2020-11-07 10:52:52,031:INFO:create_model_container: 7
2020-11-07 10:52:52,031:INFO:master_model_container: 7
2020-11-07 10:52:52,031:INFO:display_container: 1
2020-11-07 10:52:52,032:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-07 10:52:52,032:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:52,125:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:52,125:INFO:Creating metrics dataframe
2020-11-07 10:52:52,167:INFO:Initializing Quadratic Discriminant Analysis
2020-11-07 10:52:52,167:INFO:Total runtime is 0.13378006617228191 minutes
2020-11-07 10:52:52,177:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:52,177:INFO:Initializing create_model()
2020-11-07 10:52:52,177:INFO:create_model(estimator=qda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:52,177:INFO:Checking exceptions
2020-11-07 10:52:52,178:INFO:Importing libraries
2020-11-07 10:52:52,178:INFO:Copying training dataset
2020-11-07 10:52:52,179:INFO:Defining folds
2020-11-07 10:52:52,179:INFO:Declaring metric variables
2020-11-07 10:52:52,190:INFO:Importing untrained model
2020-11-07 10:52:52,198:INFO:Quadratic Discriminant Analysis Imported succesfully
2020-11-07 10:52:52,221:INFO:Starting cross validation
2020-11-07 10:52:52,222:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:52,311:INFO:Calculating mean and std
2020-11-07 10:52:52,312:INFO:Creating metrics dataframe
2020-11-07 10:52:52,317:INFO:Uploading results into container
2020-11-07 10:52:52,317:INFO:Uploading model into container now
2020-11-07 10:52:52,317:INFO:create_model_container: 8
2020-11-07 10:52:52,318:INFO:master_model_container: 8
2020-11-07 10:52:52,318:INFO:display_container: 1
2020-11-07 10:52:52,318:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2020-11-07 10:52:52,318:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:52,450:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:52,450:INFO:Creating metrics dataframe
2020-11-07 10:52:52,493:INFO:Initializing Ada Boost Classifier
2020-11-07 10:52:52,494:INFO:Total runtime is 0.1392252326011658 minutes
2020-11-07 10:52:52,503:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:52,503:INFO:Initializing create_model()
2020-11-07 10:52:52,503:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:52,503:INFO:Checking exceptions
2020-11-07 10:52:52,503:INFO:Importing libraries
2020-11-07 10:52:52,503:INFO:Copying training dataset
2020-11-07 10:52:52,504:INFO:Defining folds
2020-11-07 10:52:52,505:INFO:Declaring metric variables
2020-11-07 10:52:52,514:INFO:Importing untrained model
2020-11-07 10:52:52,523:INFO:Ada Boost Classifier Imported succesfully
2020-11-07 10:52:52,547:INFO:Starting cross validation
2020-11-07 10:52:52,548:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:53,163:INFO:Calculating mean and std
2020-11-07 10:52:53,165:INFO:Creating metrics dataframe
2020-11-07 10:52:53,170:INFO:Uploading results into container
2020-11-07 10:52:53,170:INFO:Uploading model into container now
2020-11-07 10:52:53,171:INFO:create_model_container: 9
2020-11-07 10:52:53,171:INFO:master_model_container: 9
2020-11-07 10:52:53,171:INFO:display_container: 1
2020-11-07 10:52:53,171:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=786)
2020-11-07 10:52:53,171:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:53,244:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:53,244:INFO:Creating metrics dataframe
2020-11-07 10:52:53,280:INFO:Initializing Gradient Boosting Classifier
2020-11-07 10:52:53,281:INFO:Total runtime is 0.1523407300313314 minutes
2020-11-07 10:52:53,290:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:53,290:INFO:Initializing create_model()
2020-11-07 10:52:53,290:INFO:create_model(estimator=gbc, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:53,290:INFO:Checking exceptions
2020-11-07 10:52:53,290:INFO:Importing libraries
2020-11-07 10:52:53,290:INFO:Copying training dataset
2020-11-07 10:52:53,291:INFO:Defining folds
2020-11-07 10:52:53,292:INFO:Declaring metric variables
2020-11-07 10:52:53,298:INFO:Importing untrained model
2020-11-07 10:52:53,306:INFO:Gradient Boosting Classifier Imported succesfully
2020-11-07 10:52:53,322:INFO:Starting cross validation
2020-11-07 10:52:53,323:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:53,802:INFO:Calculating mean and std
2020-11-07 10:52:53,803:INFO:Creating metrics dataframe
2020-11-07 10:52:53,807:INFO:Uploading results into container
2020-11-07 10:52:53,807:INFO:Uploading model into container now
2020-11-07 10:52:53,807:INFO:create_model_container: 10
2020-11-07 10:52:53,807:INFO:master_model_container: 10
2020-11-07 10:52:53,807:INFO:display_container: 1
2020-11-07 10:52:53,808:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=786, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-11-07 10:52:53,808:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:53,885:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:53,886:INFO:Creating metrics dataframe
2020-11-07 10:52:53,949:INFO:Initializing Linear Discriminant Analysis
2020-11-07 10:52:53,949:INFO:Total runtime is 0.1634803334871928 minutes
2020-11-07 10:52:53,966:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:53,966:INFO:Initializing create_model()
2020-11-07 10:52:53,967:INFO:create_model(estimator=lda, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:53,967:INFO:Checking exceptions
2020-11-07 10:52:53,967:INFO:Importing libraries
2020-11-07 10:52:53,967:INFO:Copying training dataset
2020-11-07 10:52:53,968:INFO:Defining folds
2020-11-07 10:52:53,968:INFO:Declaring metric variables
2020-11-07 10:52:53,979:INFO:Importing untrained model
2020-11-07 10:52:53,987:INFO:Linear Discriminant Analysis Imported succesfully
2020-11-07 10:52:54,004:INFO:Starting cross validation
2020-11-07 10:52:54,004:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:54,069:INFO:Calculating mean and std
2020-11-07 10:52:54,070:INFO:Creating metrics dataframe
2020-11-07 10:52:54,075:INFO:Uploading results into container
2020-11-07 10:52:54,075:INFO:Uploading model into container now
2020-11-07 10:52:54,075:INFO:create_model_container: 11
2020-11-07 10:52:54,075:INFO:master_model_container: 11
2020-11-07 10:52:54,075:INFO:display_container: 1
2020-11-07 10:52:54,076:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2020-11-07 10:52:54,076:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:54,152:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:54,152:INFO:Creating metrics dataframe
2020-11-07 10:52:54,229:INFO:Initializing Extra Trees Classifier
2020-11-07 10:52:54,231:INFO:Total runtime is 0.16817022959391276 minutes
2020-11-07 10:52:54,250:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:54,251:INFO:Initializing create_model()
2020-11-07 10:52:54,251:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:54,251:INFO:Checking exceptions
2020-11-07 10:52:54,252:INFO:Importing libraries
2020-11-07 10:52:54,252:INFO:Copying training dataset
2020-11-07 10:52:54,253:INFO:Defining folds
2020-11-07 10:52:54,253:INFO:Declaring metric variables
2020-11-07 10:52:54,261:INFO:Importing untrained model
2020-11-07 10:52:54,276:INFO:Extra Trees Classifier Imported succesfully
2020-11-07 10:52:54,293:INFO:Starting cross validation
2020-11-07 10:52:54,294:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:55,188:INFO:Calculating mean and std
2020-11-07 10:52:55,190:INFO:Creating metrics dataframe
2020-11-07 10:52:55,195:INFO:Uploading results into container
2020-11-07 10:52:55,195:INFO:Uploading model into container now
2020-11-07 10:52:55,196:INFO:create_model_container: 12
2020-11-07 10:52:55,196:INFO:master_model_container: 12
2020-11-07 10:52:55,196:INFO:display_container: 1
2020-11-07 10:52:55,196:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=786, verbose=0,
                     warm_start=False)
2020-11-07 10:52:55,196:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:55,284:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:55,284:INFO:Creating metrics dataframe
2020-11-07 10:52:55,325:INFO:Initializing Extreme Gradient Boosting
2020-11-07 10:52:55,325:INFO:Total runtime is 0.18641258080800374 minutes
2020-11-07 10:52:55,333:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:55,333:INFO:Initializing create_model()
2020-11-07 10:52:55,333:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:55,333:INFO:Checking exceptions
2020-11-07 10:52:55,333:INFO:Importing libraries
2020-11-07 10:52:55,333:INFO:Copying training dataset
2020-11-07 10:52:55,334:INFO:Defining folds
2020-11-07 10:52:55,334:INFO:Declaring metric variables
2020-11-07 10:52:55,341:INFO:Importing untrained model
2020-11-07 10:52:55,348:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-07 10:52:55,363:INFO:Starting cross validation
2020-11-07 10:52:55,364:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:57,349:INFO:Calculating mean and std
2020-11-07 10:52:57,350:INFO:Creating metrics dataframe
2020-11-07 10:52:57,354:INFO:Uploading results into container
2020-11-07 10:52:57,354:INFO:Uploading model into container now
2020-11-07 10:52:57,354:INFO:create_model_container: 13
2020-11-07 10:52:57,354:INFO:master_model_container: 13
2020-11-07 10:52:57,354:INFO:display_container: 1
2020-11-07 10:52:57,355:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0)
2020-11-07 10:52:57,355:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:57,439:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:57,439:INFO:Creating metrics dataframe
2020-11-07 10:52:57,495:INFO:Initializing Light Gradient Boosting Machine
2020-11-07 10:52:57,496:INFO:Total runtime is 0.2225920796394348 minutes
2020-11-07 10:52:57,503:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:57,504:INFO:Initializing create_model()
2020-11-07 10:52:57,504:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:57,504:INFO:Checking exceptions
2020-11-07 10:52:57,504:INFO:Importing libraries
2020-11-07 10:52:57,504:INFO:Copying training dataset
2020-11-07 10:52:57,505:INFO:Defining folds
2020-11-07 10:52:57,505:INFO:Declaring metric variables
2020-11-07 10:52:57,514:INFO:Importing untrained model
2020-11-07 10:52:57,522:INFO:Light Gradient Boosting Machine Imported succesfully
2020-11-07 10:52:57,537:INFO:Starting cross validation
2020-11-07 10:52:57,538:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:52:57,807:INFO:Calculating mean and std
2020-11-07 10:52:57,808:INFO:Creating metrics dataframe
2020-11-07 10:52:57,813:INFO:Uploading results into container
2020-11-07 10:52:57,813:INFO:Uploading model into container now
2020-11-07 10:52:57,813:INFO:create_model_container: 14
2020-11-07 10:52:57,813:INFO:master_model_container: 14
2020-11-07 10:52:57,813:INFO:display_container: 1
2020-11-07 10:52:57,813:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-11-07 10:52:57,814:INFO:create_model() succesfully completed......................................
2020-11-07 10:52:57,900:INFO:SubProcess create_model() end ==================================
2020-11-07 10:52:57,900:INFO:Creating metrics dataframe
2020-11-07 10:52:57,984:INFO:Initializing CatBoost Classifier
2020-11-07 10:52:57,985:INFO:Total runtime is 0.23074249823888143 minutes
2020-11-07 10:52:57,997:INFO:SubProcess create_model() called ==================================
2020-11-07 10:52:57,997:INFO:Initializing create_model()
2020-11-07 10:52:57,997:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd580ce63a0>, kwargs={})
2020-11-07 10:52:57,997:INFO:Checking exceptions
2020-11-07 10:52:57,997:INFO:Importing libraries
2020-11-07 10:52:57,998:INFO:Copying training dataset
2020-11-07 10:52:57,998:INFO:Defining folds
2020-11-07 10:52:57,999:INFO:Declaring metric variables
2020-11-07 10:52:58,006:INFO:Importing untrained model
2020-11-07 10:52:58,022:INFO:CatBoost Classifier Imported succesfully
2020-11-07 10:52:58,041:INFO:Starting cross validation
2020-11-07 10:52:58,042:INFO:Cross validating with KFold(n_splits=10, random_state=786, shuffle=True), n_jobs=-1
2020-11-07 10:53:13,197:INFO:Calculating mean and std
2020-11-07 10:53:13,199:INFO:Creating metrics dataframe
2020-11-07 10:53:13,205:INFO:Uploading results into container
2020-11-07 10:53:13,205:INFO:Uploading model into container now
2020-11-07 10:53:13,205:INFO:create_model_container: 15
2020-11-07 10:53:13,205:INFO:master_model_container: 15
2020-11-07 10:53:13,206:INFO:display_container: 1
2020-11-07 10:53:13,206:INFO:<catboost.core.CatBoostClassifier object at 0x7fd582839130>
2020-11-07 10:53:13,206:INFO:create_model() succesfully completed......................................
2020-11-07 10:53:13,295:INFO:SubProcess create_model() end ==================================
2020-11-07 10:53:13,295:INFO:Creating metrics dataframe
2020-11-07 10:53:13,369:INFO:Initializing create_model()
2020-11-07 10:53:13,369:INFO:create_model(estimator=XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None, gamma=None,
              gpu_id=None, importance_type='gain', interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', random_state=786, reg_alpha=None,
              reg_lambda=None, scale_pos_weight=None, subsample=None,
              tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-07 10:53:13,370:INFO:Checking exceptions
2020-11-07 10:53:13,370:INFO:Importing libraries
2020-11-07 10:53:13,370:INFO:Copying training dataset
2020-11-07 10:53:13,371:INFO:Defining folds
2020-11-07 10:53:13,371:INFO:Declaring metric variables
2020-11-07 10:53:13,371:INFO:Importing untrained model
2020-11-07 10:53:13,371:INFO:Declaring custom model
2020-11-07 10:53:13,372:INFO:Extreme Gradient Boosting Imported succesfully
2020-11-07 10:53:13,373:INFO:Cross validation set to False
2020-11-07 10:53:13,373:INFO:Fitting Model
2020-11-07 10:53:13,464:INFO:XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0)
2020-11-07 10:53:13,464:INFO:create_models() succesfully completed......................................
2020-11-07 10:53:13,599:INFO:Initializing create_model()
2020-11-07 10:53:13,599:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False), fold=KFold(n_splits=10, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-11-07 10:53:13,599:INFO:Checking exceptions
2020-11-07 10:53:13,599:INFO:Importing libraries
2020-11-07 10:53:13,599:INFO:Copying training dataset
2020-11-07 10:53:13,600:INFO:Defining folds
2020-11-07 10:53:13,600:INFO:Declaring metric variables
2020-11-07 10:53:13,600:INFO:Importing untrained model
2020-11-07 10:53:13,600:INFO:Declaring custom model
2020-11-07 10:53:13,601:INFO:Random Forest Classifier Imported succesfully
2020-11-07 10:53:13,601:INFO:Cross validation set to False
2020-11-07 10:53:13,602:INFO:Fitting Model
2020-11-07 10:53:13,830:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)
2020-11-07 10:53:13,830:INFO:create_models() succesfully completed......................................
2020-11-07 10:53:14,133:INFO:create_model_container: 15
2020-11-07 10:53:14,134:INFO:master_model_container: 15
2020-11-07 10:53:14,134:INFO:display_container: 1
2020-11-07 10:53:14,139:INFO:[XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
              importance_type='gain', interaction_constraints='',
              learning_rate=0.300000012, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=-1, num_parallel_tree=1,
              objective='binary:logistic', random_state=786, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
              validate_parameters=1, verbosity=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=786, verbose=0,
                       warm_start=False)]
2020-11-07 10:53:14,139:INFO:compare_models() succesfully completed......................................
