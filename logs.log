2020-09-04 11:48:26,737:INFO:PyCaret Regression Module
2020-09-04 11:48:26,737:INFO:version 2.1.2
2020-09-04 11:48:26,737:INFO:Initializing setup()
2020-09-04 11:48:26,737:INFO:USI: 4077
2020-09-04 11:48:26,737:INFO:setup(data=(102, 19), target=Actual Value, train_size=0.75, sampling=True, sample_estimator=None, categorical_features=None, categorical_imputation=constant, ordinal_features=None,
                    high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'Total number of calls', 'CSat', 'total coaching', 'total coaching improved', 'FCR Week before'), numeric_imputation=mean, date_features=None, ignore_features=['Agent_ID'], normalize=False,
                    normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear,
                    pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05,
                    remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=False, create_clusters=False, cluster_iter=20,
                    polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None,
                    group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, transform_target=False,
                    transform_target_method=box-cox, data_split_shuffle=True, folds_shuffle=True, n_jobs=-1, html=True, session_id=786, log_experiment=True,
                    experiment_name=reg_fcr_experiments, log_plots=True, log_profile=False, log_data=False, silent=False, verbose=True, profile=False)
2020-09-04 11:48:26,737:INFO:Checking environment
2020-09-04 11:48:26,737:INFO:python_version: 3.8.3
2020-09-04 11:48:26,737:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-09-04 11:48:26,737:INFO:machine: x86_64
2020-09-04 11:48:26,753:INFO:platform: macOS-10.15.6-x86_64-i386-64bit
2020-09-04 11:48:26,754:INFO:Memory: svmem(total=8589934592, available=2306822144, percent=73.1, used=4602482688, free=84926464, active=2223820800, inactive=2065104896, wired=2378661888)
2020-09-04 11:48:26,754:INFO:Physical Core: 4
2020-09-04 11:48:26,754:INFO:Logical Core: 8
2020-09-04 11:48:26,754:INFO:Checking libraries
2020-09-04 11:48:26,754:INFO:pd==1.0.5
2020-09-04 11:48:26,754:INFO:numpy==1.18.5
2020-09-04 11:48:26,755:INFO:sklearn==0.23.1
2020-09-04 11:48:27,355:INFO:xgboost==1.2.0
2020-09-04 11:48:27,372:INFO:lightgbm==2.3.1
2020-09-04 11:48:27,398:INFO:catboost==0.24.1
2020-09-04 11:48:28,136:INFO:mlflow==1.11.0
2020-09-04 11:48:28,136:INFO:Checking Exceptions
2020-09-04 11:48:28,136:INFO:Preloading libraries
2020-09-04 11:48:28,136:INFO:Preparing display monitor
2020-09-04 11:48:28,147:INFO:Importing libraries
2020-09-04 11:48:28,589:INFO:Declaring global variables
2020-09-04 11:48:28,589:INFO:Copying data for preprocessing
2020-09-04 11:48:28,593:INFO:Declaring preprocessing parameters
2020-09-04 11:48:28,593:INFO:Importing preprocessing module
2020-09-04 11:48:29,252:INFO:Creating preprocessing pipeline
2020-09-04 11:48:30,447:INFO:Preprocessing pipeline created successfully
2020-09-04 11:48:30,447:INFO:No inverse transformer found
2020-09-04 11:48:30,447:INFO:Creating grid variables
2020-09-04 11:48:30,449:INFO:Creating global containers
2020-09-04 11:48:30,540:INFO:Logging experiment in MLFlow
2020-09-04 11:48:30,687:INFO:SubProcess save_model() called ==================================
2020-09-04 11:48:30,688:INFO:Initializing save_model()
2020-09-04 11:48:30,695:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      target='Actual V...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False), model_name=Transformation Pipeline, model_only=False, verbose=False)
2020-09-04 11:48:30,738:INFO:Transformation Pipeline.pkl saved in current working directory
2020-09-04 11:48:30,763:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      target='Actual V...
                                                        threshold=0.9)),
                                 ('dfs',
                                  DFS_Classic(interactions=['multiply'],
                                              ml_usecase='regression',
                                              random_state=786,
                                              subclass='binary',
                                              target='Actual Value',
                                              top_features_to_pick_percentage=None)),
                                 ('pca',
                                  Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                                        random_state=786,
                                                                        target='Actual '
                                                                               'Value',
                                                                        variance_retained_or_number_of_components=None))],
                          verbose=False)]],
         verbose=False)
2020-09-04 11:48:30,763:INFO:save_model() succesfully completed......................................
2020-09-04 11:48:30,763:INFO:SubProcess save_model() end ==================================
2020-09-04 11:48:30,771:INFO:create_model_container: 0
2020-09-04 11:48:30,771:INFO:master_model_container: 0
2020-09-04 11:48:30,771:INFO:display_container: 0
2020-09-04 11:48:30,771:INFO:setup() succesfully completed......................................
2020-09-04 11:48:30,793:INFO:Initializing compare_models()
2020-09-04 11:48:30,793:INFO:compare_models(exclude=['ransac', 'knn'], include=None, fold=5, round=4, sort=RMSE, n_select=5, turbo=True, verbose=True)
2020-09-04 11:48:30,793:INFO:Checking exceptions
2020-09-04 11:48:30,793:INFO:Preloading libraries
2020-09-04 11:48:30,793:INFO:Preparing display monitor
2020-09-04 11:48:30,820:INFO:Copying training dataset
2020-09-04 11:48:30,821:INFO:Importing libraries
2020-09-04 11:48:30,831:INFO:Importing untrained models
2020-09-04 11:48:30,833:INFO:Import successful
2020-09-04 11:48:30,841:INFO:Defining folds
2020-09-04 11:48:30,841:INFO:Declaring metric variables
2020-09-04 11:48:30,841:INFO:Initializing Linear Regression
2020-09-04 11:48:30,851:INFO:Initializing Fold 1
2020-09-04 11:48:30,852:INFO:Total runtime is 0.00017151435216267903 minutes
2020-09-04 11:48:30,859:INFO:Fitting Model
2020-09-04 11:48:30,867:INFO:Evaluating Metrics
2020-09-04 11:48:30,870:INFO:No inverse transformer found
2020-09-04 11:48:30,870:INFO:Compiling Metrics
2020-09-04 11:48:30,877:INFO:Initializing Fold 2
2020-09-04 11:48:30,878:INFO:Total runtime is 0.0006056030591328939 minutes
2020-09-04 11:48:30,884:INFO:Fitting Model
2020-09-04 11:48:30,887:INFO:Evaluating Metrics
2020-09-04 11:48:30,889:INFO:No inverse transformer found
2020-09-04 11:48:30,889:INFO:Compiling Metrics
2020-09-04 11:48:30,896:INFO:Initializing Fold 3
2020-09-04 11:48:30,897:INFO:Total runtime is 0.0009195009867350261 minutes
2020-09-04 11:48:30,905:INFO:Fitting Model
2020-09-04 11:48:30,908:INFO:Evaluating Metrics
2020-09-04 11:48:30,910:INFO:No inverse transformer found
2020-09-04 11:48:30,910:INFO:Compiling Metrics
2020-09-04 11:48:30,916:INFO:Initializing Fold 4
2020-09-04 11:48:30,917:INFO:Total runtime is 0.0012576858202616374 minutes
2020-09-04 11:48:30,924:INFO:Fitting Model
2020-09-04 11:48:30,927:INFO:Evaluating Metrics
2020-09-04 11:48:30,929:INFO:No inverse transformer found
2020-09-04 11:48:30,929:INFO:Compiling Metrics
2020-09-04 11:48:30,935:INFO:Initializing Fold 5
2020-09-04 11:48:30,936:INFO:Total runtime is 0.0015756646792093913 minutes
2020-09-04 11:48:30,943:INFO:Fitting Model
2020-09-04 11:48:30,945:INFO:Evaluating Metrics
2020-09-04 11:48:30,947:INFO:No inverse transformer found
2020-09-04 11:48:30,947:INFO:Compiling Metrics
2020-09-04 11:48:30,953:INFO:Calculating mean and std
2020-09-04 11:48:30,954:INFO:Creating metrics dataframe
2020-09-04 11:48:30,966:INFO:Creating MLFlow logs
2020-09-04 11:48:31,018:INFO:Initializing Lasso Regression
2020-09-04 11:48:31,024:INFO:Initializing Fold 1
2020-09-04 11:48:31,025:INFO:Total runtime is 0.003055902322133382 minutes
2020-09-04 11:48:31,031:INFO:Fitting Model
2020-09-04 11:48:31,034:INFO:Evaluating Metrics
2020-09-04 11:48:31,036:INFO:No inverse transformer found
2020-09-04 11:48:31,036:INFO:Compiling Metrics
2020-09-04 11:48:31,042:INFO:Initializing Fold 2
2020-09-04 11:48:31,043:INFO:Total runtime is 0.0033606290817260742 minutes
2020-09-04 11:48:31,049:INFO:Fitting Model
2020-09-04 11:48:31,053:INFO:Evaluating Metrics
2020-09-04 11:48:31,054:INFO:No inverse transformer found
2020-09-04 11:48:31,055:INFO:Compiling Metrics
2020-09-04 11:48:31,061:INFO:Initializing Fold 3
2020-09-04 11:48:31,062:INFO:Total runtime is 0.0036706010500590007 minutes
2020-09-04 11:48:31,068:INFO:Fitting Model
2020-09-04 11:48:31,072:INFO:Evaluating Metrics
2020-09-04 11:48:31,074:INFO:No inverse transformer found
2020-09-04 11:48:31,074:INFO:Compiling Metrics
2020-09-04 11:48:31,080:INFO:Initializing Fold 4
2020-09-04 11:48:31,081:INFO:Total runtime is 0.0039836684862772625 minutes
2020-09-04 11:48:31,087:INFO:Fitting Model
2020-09-04 11:48:31,090:INFO:Evaluating Metrics
2020-09-04 11:48:31,092:INFO:No inverse transformer found
2020-09-04 11:48:31,092:INFO:Compiling Metrics
2020-09-04 11:48:31,098:INFO:Initializing Fold 5
2020-09-04 11:48:31,099:INFO:Total runtime is 0.004289615154266358 minutes
2020-09-04 11:48:31,105:INFO:Fitting Model
2020-09-04 11:48:31,108:INFO:Evaluating Metrics
2020-09-04 11:48:31,110:INFO:No inverse transformer found
2020-09-04 11:48:31,110:INFO:Compiling Metrics
2020-09-04 11:48:31,116:INFO:Calculating mean and std
2020-09-04 11:48:31,117:INFO:Creating metrics dataframe
2020-09-04 11:48:31,130:INFO:Creating MLFlow logs
2020-09-04 11:48:31,186:INFO:Initializing Ridge Regression
2020-09-04 11:48:31,191:INFO:Initializing Fold 1
2020-09-04 11:48:31,192:INFO:Total runtime is 0.00584023396174113 minutes
2020-09-04 11:48:31,197:INFO:Fitting Model
2020-09-04 11:48:31,205:INFO:Evaluating Metrics
2020-09-04 11:48:31,206:INFO:No inverse transformer found
2020-09-04 11:48:31,206:INFO:Compiling Metrics
2020-09-04 11:48:31,212:INFO:Initializing Fold 2
2020-09-04 11:48:31,213:INFO:Total runtime is 0.006193232536315918 minutes
2020-09-04 11:48:31,220:INFO:Fitting Model
2020-09-04 11:48:31,222:INFO:Evaluating Metrics
2020-09-04 11:48:31,224:INFO:No inverse transformer found
2020-09-04 11:48:31,224:INFO:Compiling Metrics
2020-09-04 11:48:31,230:INFO:Initializing Fold 3
2020-09-04 11:48:31,231:INFO:Total runtime is 0.006483983993530273 minutes
2020-09-04 11:48:31,237:INFO:Fitting Model
2020-09-04 11:48:31,239:INFO:Evaluating Metrics
2020-09-04 11:48:31,242:INFO:No inverse transformer found
2020-09-04 11:48:31,242:INFO:Compiling Metrics
2020-09-04 11:48:31,248:INFO:Initializing Fold 4
2020-09-04 11:48:31,249:INFO:Total runtime is 0.0067887465159098305 minutes
2020-09-04 11:48:31,255:INFO:Fitting Model
2020-09-04 11:48:31,258:INFO:Evaluating Metrics
2020-09-04 11:48:31,260:INFO:No inverse transformer found
2020-09-04 11:48:31,260:INFO:Compiling Metrics
2020-09-04 11:48:31,267:INFO:Initializing Fold 5
2020-09-04 11:48:31,268:INFO:Total runtime is 0.007103518644968668 minutes
2020-09-04 11:48:31,275:INFO:Fitting Model
2020-09-04 11:48:31,283:INFO:Evaluating Metrics
2020-09-04 11:48:31,285:INFO:No inverse transformer found
2020-09-04 11:48:31,285:INFO:Compiling Metrics
2020-09-04 11:48:31,294:INFO:Calculating mean and std
2020-09-04 11:48:31,295:INFO:Creating metrics dataframe
2020-09-04 11:48:31,342:INFO:Creating MLFlow logs
2020-09-04 11:48:31,422:INFO:Initializing Elastic Net
2020-09-04 11:48:31,431:INFO:Initializing Fold 1
2020-09-04 11:48:31,431:INFO:Total runtime is 0.009832700093587238 minutes
2020-09-04 11:48:31,438:INFO:Fitting Model
2020-09-04 11:48:31,443:INFO:Evaluating Metrics
2020-09-04 11:48:31,445:INFO:No inverse transformer found
2020-09-04 11:48:31,445:INFO:Compiling Metrics
2020-09-04 11:48:31,453:INFO:Initializing Fold 2
2020-09-04 11:48:31,454:INFO:Total runtime is 0.010215381781260172 minutes
2020-09-04 11:48:31,462:INFO:Fitting Model
2020-09-04 11:48:31,466:INFO:Evaluating Metrics
2020-09-04 11:48:31,468:INFO:No inverse transformer found
2020-09-04 11:48:31,468:INFO:Compiling Metrics
2020-09-04 11:48:31,476:INFO:Initializing Fold 3
2020-09-04 11:48:31,476:INFO:Total runtime is 0.010579101244608561 minutes
2020-09-04 11:48:31,483:INFO:Fitting Model
2020-09-04 11:48:31,486:INFO:Evaluating Metrics
2020-09-04 11:48:31,488:INFO:No inverse transformer found
2020-09-04 11:48:31,488:INFO:Compiling Metrics
2020-09-04 11:48:31,495:INFO:Initializing Fold 4
2020-09-04 11:48:31,496:INFO:Total runtime is 0.010901367664337159 minutes
2020-09-04 11:48:31,501:INFO:Fitting Model
2020-09-04 11:48:31,504:INFO:Evaluating Metrics
2020-09-04 11:48:31,506:INFO:No inverse transformer found
2020-09-04 11:48:31,506:INFO:Compiling Metrics
2020-09-04 11:48:31,512:INFO:Initializing Fold 5
2020-09-04 11:48:31,512:INFO:Total runtime is 0.011177949110666911 minutes
2020-09-04 11:48:31,517:INFO:Fitting Model
2020-09-04 11:48:31,520:INFO:Evaluating Metrics
2020-09-04 11:48:31,522:INFO:No inverse transformer found
2020-09-04 11:48:31,522:INFO:Compiling Metrics
2020-09-04 11:48:31,527:INFO:Calculating mean and std
2020-09-04 11:48:31,528:INFO:Creating metrics dataframe
2020-09-04 11:48:31,538:INFO:Creating MLFlow logs
2020-09-04 11:48:31,619:INFO:Initializing Least Angle Regression
2020-09-04 11:48:31,632:INFO:Initializing Fold 1
2020-09-04 11:48:31,633:INFO:Total runtime is 0.013192534446716309 minutes
2020-09-04 11:48:31,639:INFO:Fitting Model
2020-09-04 11:48:31,652:INFO:Evaluating Metrics
2020-09-04 11:48:31,654:INFO:No inverse transformer found
2020-09-04 11:48:31,654:INFO:Compiling Metrics
2020-09-04 11:48:31,662:INFO:Initializing Fold 2
2020-09-04 11:48:31,663:INFO:Total runtime is 0.013686315218607584 minutes
2020-09-04 11:48:31,670:INFO:Fitting Model
2020-09-04 11:48:31,682:INFO:Evaluating Metrics
2020-09-04 11:48:31,684:INFO:No inverse transformer found
2020-09-04 11:48:31,684:INFO:Compiling Metrics
2020-09-04 11:48:31,692:INFO:Initializing Fold 3
2020-09-04 11:48:31,693:INFO:Total runtime is 0.014189430077870687 minutes
2020-09-04 11:48:31,701:INFO:Fitting Model
2020-09-04 11:48:31,721:INFO:Evaluating Metrics
2020-09-04 11:48:31,723:INFO:No inverse transformer found
2020-09-04 11:48:31,723:INFO:Compiling Metrics
2020-09-04 11:48:31,730:INFO:Initializing Fold 4
2020-09-04 11:48:31,730:INFO:Total runtime is 0.014812783400217692 minutes
2020-09-04 11:48:31,737:INFO:Fitting Model
2020-09-04 11:48:31,745:INFO:Evaluating Metrics
2020-09-04 11:48:31,747:INFO:No inverse transformer found
2020-09-04 11:48:31,747:INFO:Compiling Metrics
2020-09-04 11:48:31,753:INFO:Initializing Fold 5
2020-09-04 11:48:31,754:INFO:Total runtime is 0.015201163291931151 minutes
2020-09-04 11:48:31,760:INFO:Fitting Model
2020-09-04 11:48:31,769:INFO:Evaluating Metrics
2020-09-04 11:48:31,771:INFO:No inverse transformer found
2020-09-04 11:48:31,771:INFO:Compiling Metrics
2020-09-04 11:48:31,778:INFO:Calculating mean and std
2020-09-04 11:48:31,778:INFO:Creating metrics dataframe
2020-09-04 11:48:31,790:INFO:Creating MLFlow logs
2020-09-04 11:48:31,855:INFO:Initializing Lasso Least Angle Regression
2020-09-04 11:48:31,861:INFO:Initializing Fold 1
2020-09-04 11:48:31,862:INFO:Total runtime is 0.01700268189112345 minutes
2020-09-04 11:48:31,867:INFO:Fitting Model
2020-09-04 11:48:31,870:INFO:Evaluating Metrics
2020-09-04 11:48:31,872:INFO:No inverse transformer found
2020-09-04 11:48:31,872:INFO:Compiling Metrics
2020-09-04 11:48:31,880:INFO:Initializing Fold 2
2020-09-04 11:48:31,880:INFO:Total runtime is 0.017314684391021726 minutes
2020-09-04 11:48:31,888:INFO:Fitting Model
2020-09-04 11:48:31,892:INFO:Evaluating Metrics
2020-09-04 11:48:31,894:INFO:No inverse transformer found
2020-09-04 11:48:31,894:INFO:Compiling Metrics
2020-09-04 11:48:31,902:INFO:Initializing Fold 3
2020-09-04 11:48:31,903:INFO:Total runtime is 0.01769656737645467 minutes
2020-09-04 11:48:31,912:INFO:Fitting Model
2020-09-04 11:48:31,916:INFO:Evaluating Metrics
2020-09-04 11:48:31,921:INFO:No inverse transformer found
2020-09-04 11:48:31,921:INFO:Compiling Metrics
2020-09-04 11:48:31,932:INFO:Initializing Fold 4
2020-09-04 11:48:31,933:INFO:Total runtime is 0.018188766638437905 minutes
2020-09-04 11:48:31,942:INFO:Fitting Model
2020-09-04 11:48:31,946:INFO:Evaluating Metrics
2020-09-04 11:48:31,948:INFO:No inverse transformer found
2020-09-04 11:48:31,948:INFO:Compiling Metrics
2020-09-04 11:48:31,959:INFO:Initializing Fold 5
2020-09-04 11:48:31,960:INFO:Total runtime is 0.018641547362009684 minutes
2020-09-04 11:48:31,967:INFO:Fitting Model
2020-09-04 11:48:31,970:INFO:Evaluating Metrics
2020-09-04 11:48:31,972:INFO:No inverse transformer found
2020-09-04 11:48:31,973:INFO:Compiling Metrics
2020-09-04 11:48:31,980:INFO:Calculating mean and std
2020-09-04 11:48:31,980:INFO:Creating metrics dataframe
2020-09-04 11:48:31,995:INFO:Creating MLFlow logs
2020-09-04 11:48:32,057:INFO:Initializing Orthogonal Matching Pursuit
2020-09-04 11:48:32,066:INFO:Initializing Fold 1
2020-09-04 11:48:32,067:INFO:Total runtime is 0.020425649483998616 minutes
2020-09-04 11:48:32,075:INFO:Fitting Model
2020-09-04 11:48:32,090:INFO:Evaluating Metrics
2020-09-04 11:48:32,093:INFO:No inverse transformer found
2020-09-04 11:48:32,093:INFO:Compiling Metrics
2020-09-04 11:48:32,102:INFO:Initializing Fold 2
2020-09-04 11:48:32,103:INFO:Total runtime is 0.021027000745137532 minutes
2020-09-04 11:48:32,112:INFO:Fitting Model
2020-09-04 11:48:32,122:INFO:Evaluating Metrics
2020-09-04 11:48:32,125:INFO:No inverse transformer found
2020-09-04 11:48:32,125:INFO:Compiling Metrics
2020-09-04 11:48:32,134:INFO:Initializing Fold 3
2020-09-04 11:48:32,135:INFO:Total runtime is 0.021553365389506023 minutes
2020-09-04 11:48:32,144:INFO:Fitting Model
2020-09-04 11:48:32,158:INFO:Evaluating Metrics
2020-09-04 11:48:32,160:INFO:No inverse transformer found
2020-09-04 11:48:32,160:INFO:Compiling Metrics
2020-09-04 11:48:32,168:INFO:Initializing Fold 4
2020-09-04 11:48:32,169:INFO:Total runtime is 0.022133068243662516 minutes
2020-09-04 11:48:32,176:INFO:Fitting Model
2020-09-04 11:48:32,179:INFO:Evaluating Metrics
2020-09-04 11:48:32,181:INFO:No inverse transformer found
2020-09-04 11:48:32,181:INFO:Compiling Metrics
2020-09-04 11:48:32,189:INFO:Initializing Fold 5
2020-09-04 11:48:32,189:INFO:Total runtime is 0.022461883227030435 minutes
2020-09-04 11:48:32,195:INFO:Fitting Model
2020-09-04 11:48:32,199:INFO:Evaluating Metrics
2020-09-04 11:48:32,201:INFO:No inverse transformer found
2020-09-04 11:48:32,201:INFO:Compiling Metrics
2020-09-04 11:48:32,209:INFO:Calculating mean and std
2020-09-04 11:48:32,209:INFO:Creating metrics dataframe
2020-09-04 11:48:32,224:INFO:Creating MLFlow logs
2020-09-04 11:48:32,291:INFO:Initializing Bayesian Ridge
2020-09-04 11:48:32,298:INFO:Initializing Fold 1
2020-09-04 11:48:32,300:INFO:Total runtime is 0.024301262696584065 minutes
2020-09-04 11:48:32,307:INFO:Fitting Model
2020-09-04 11:48:32,312:INFO:Evaluating Metrics
2020-09-04 11:48:32,313:INFO:No inverse transformer found
2020-09-04 11:48:32,313:INFO:Compiling Metrics
2020-09-04 11:48:32,320:INFO:Initializing Fold 2
2020-09-04 11:48:32,321:INFO:Total runtime is 0.024650049209594727 minutes
2020-09-04 11:48:32,327:INFO:Fitting Model
2020-09-04 11:48:32,331:INFO:Evaluating Metrics
2020-09-04 11:48:32,333:INFO:No inverse transformer found
2020-09-04 11:48:32,333:INFO:Compiling Metrics
2020-09-04 11:48:32,341:INFO:Initializing Fold 3
2020-09-04 11:48:32,341:INFO:Total runtime is 0.024995831648508708 minutes
2020-09-04 11:48:32,348:INFO:Fitting Model
2020-09-04 11:48:32,354:INFO:Evaluating Metrics
2020-09-04 11:48:32,357:INFO:No inverse transformer found
2020-09-04 11:48:32,357:INFO:Compiling Metrics
2020-09-04 11:48:32,364:INFO:Initializing Fold 4
2020-09-04 11:48:32,365:INFO:Total runtime is 0.02538659969965617 minutes
2020-09-04 11:48:32,372:INFO:Fitting Model
2020-09-04 11:48:32,376:INFO:Evaluating Metrics
2020-09-04 11:48:32,378:INFO:No inverse transformer found
2020-09-04 11:48:32,378:INFO:Compiling Metrics
2020-09-04 11:48:32,385:INFO:Initializing Fold 5
2020-09-04 11:48:32,386:INFO:Total runtime is 0.025734583536783855 minutes
2020-09-04 11:48:32,391:INFO:Fitting Model
2020-09-04 11:48:32,395:INFO:Evaluating Metrics
2020-09-04 11:48:32,398:INFO:No inverse transformer found
2020-09-04 11:48:32,398:INFO:Compiling Metrics
2020-09-04 11:48:32,405:INFO:Calculating mean and std
2020-09-04 11:48:32,406:INFO:Creating metrics dataframe
2020-09-04 11:48:32,420:INFO:Creating MLFlow logs
2020-09-04 11:48:32,484:INFO:Initializing Passive Aggressive Regressor
2020-09-04 11:48:32,491:INFO:Initializing Fold 1
2020-09-04 11:48:32,492:INFO:Total runtime is 0.027510881423950195 minutes
2020-09-04 11:48:32,498:INFO:Fitting Model
2020-09-04 11:48:32,503:INFO:Evaluating Metrics
2020-09-04 11:48:32,543:INFO:No inverse transformer found
2020-09-04 11:48:32,543:INFO:Compiling Metrics
2020-09-04 11:48:32,550:INFO:Initializing Fold 2
2020-09-04 11:48:32,551:INFO:Total runtime is 0.0284865140914917 minutes
2020-09-04 11:48:32,558:INFO:Fitting Model
2020-09-04 11:48:32,562:INFO:Evaluating Metrics
2020-09-04 11:48:32,565:INFO:No inverse transformer found
2020-09-04 11:48:32,565:INFO:Compiling Metrics
2020-09-04 11:48:32,573:INFO:Initializing Fold 3
2020-09-04 11:48:32,574:INFO:Total runtime is 0.028875299294789634 minutes
2020-09-04 11:48:32,580:INFO:Fitting Model
2020-09-04 11:48:32,583:INFO:Evaluating Metrics
2020-09-04 11:48:32,585:INFO:No inverse transformer found
2020-09-04 11:48:32,586:INFO:Compiling Metrics
2020-09-04 11:48:32,593:INFO:Initializing Fold 4
2020-09-04 11:48:32,594:INFO:Total runtime is 0.0292022983233134 minutes
2020-09-04 11:48:32,599:INFO:Fitting Model
2020-09-04 11:48:32,604:INFO:Evaluating Metrics
2020-09-04 11:48:32,606:INFO:No inverse transformer found
2020-09-04 11:48:32,606:INFO:Compiling Metrics
2020-09-04 11:48:32,610:INFO:Initializing Fold 5
2020-09-04 11:48:32,611:INFO:Total runtime is 0.02949238220850627 minutes
2020-09-04 11:48:32,618:INFO:Fitting Model
2020-09-04 11:48:32,622:INFO:Evaluating Metrics
2020-09-04 11:48:32,624:INFO:No inverse transformer found
2020-09-04 11:48:32,624:INFO:Compiling Metrics
2020-09-04 11:48:32,631:INFO:Calculating mean and std
2020-09-04 11:48:32,632:INFO:Creating metrics dataframe
2020-09-04 11:48:32,647:INFO:Creating MLFlow logs
2020-09-04 11:48:32,721:INFO:Initializing TheilSen Regressor
2020-09-04 11:48:32,727:INFO:Initializing Fold 1
2020-09-04 11:48:32,727:INFO:Total runtime is 0.03143151601155599 minutes
2020-09-04 11:48:32,732:INFO:Fitting Model
2020-09-04 11:48:34,569:INFO:Evaluating Metrics
2020-09-04 11:48:34,572:INFO:No inverse transformer found
2020-09-04 11:48:34,572:INFO:Compiling Metrics
2020-09-04 11:48:34,579:INFO:Initializing Fold 2
2020-09-04 11:48:34,580:INFO:Total runtime is 0.06230725049972534 minutes
2020-09-04 11:48:34,586:INFO:Fitting Model
2020-09-04 11:48:35,113:INFO:Evaluating Metrics
2020-09-04 11:48:35,115:INFO:No inverse transformer found
2020-09-04 11:48:35,115:INFO:Compiling Metrics
2020-09-04 11:48:35,121:INFO:Initializing Fold 3
2020-09-04 11:48:35,122:INFO:Total runtime is 0.07134390274683634 minutes
2020-09-04 11:48:35,129:INFO:Fitting Model
2020-09-04 11:48:35,623:INFO:Evaluating Metrics
2020-09-04 11:48:35,624:INFO:No inverse transformer found
2020-09-04 11:48:35,625:INFO:Compiling Metrics
2020-09-04 11:48:35,630:INFO:Initializing Fold 4
2020-09-04 11:48:35,630:INFO:Total runtime is 0.07980873187383015 minutes
2020-09-04 11:48:35,634:INFO:Fitting Model
2020-09-04 11:48:36,139:INFO:Evaluating Metrics
2020-09-04 11:48:36,141:INFO:No inverse transformer found
2020-09-04 11:48:36,141:INFO:Compiling Metrics
2020-09-04 11:48:36,146:INFO:Initializing Fold 5
2020-09-04 11:48:36,147:INFO:Total runtime is 0.08842118183771769 minutes
2020-09-04 11:48:36,151:INFO:Fitting Model
2020-09-04 11:48:36,706:INFO:Evaluating Metrics
2020-09-04 11:48:36,708:INFO:No inverse transformer found
2020-09-04 11:48:36,708:INFO:Compiling Metrics
2020-09-04 11:48:36,714:INFO:Calculating mean and std
2020-09-04 11:48:36,714:INFO:Creating metrics dataframe
2020-09-04 11:48:36,729:INFO:Creating MLFlow logs
2020-09-04 11:48:36,807:INFO:Initializing Huber Regressor
2020-09-04 11:48:36,817:INFO:Initializing Fold 1
2020-09-04 11:48:36,819:INFO:Total runtime is 0.09961673418680826 minutes
2020-09-04 11:48:36,827:INFO:Fitting Model
2020-09-04 11:48:36,854:INFO:Evaluating Metrics
2020-09-04 11:48:36,856:INFO:No inverse transformer found
2020-09-04 11:48:36,856:INFO:Compiling Metrics
2020-09-04 11:48:36,862:INFO:Initializing Fold 2
2020-09-04 11:48:36,863:INFO:Total runtime is 0.10035229921340942 minutes
2020-09-04 11:48:36,868:INFO:Fitting Model
2020-09-04 11:48:36,900:INFO:Evaluating Metrics
2020-09-04 11:48:36,901:INFO:No inverse transformer found
2020-09-04 11:48:36,901:INFO:Compiling Metrics
2020-09-04 11:48:36,908:INFO:Initializing Fold 3
2020-09-04 11:48:36,908:INFO:Total runtime is 0.10111465056737264 minutes
2020-09-04 11:48:36,914:INFO:Fitting Model
2020-09-04 11:48:36,938:INFO:Evaluating Metrics
2020-09-04 11:48:36,940:INFO:No inverse transformer found
2020-09-04 11:48:36,940:INFO:Compiling Metrics
2020-09-04 11:48:36,947:INFO:Initializing Fold 4
2020-09-04 11:48:36,947:INFO:Total runtime is 0.10176051457722982 minutes
2020-09-04 11:48:36,952:INFO:Fitting Model
2020-09-04 11:48:36,974:INFO:Evaluating Metrics
2020-09-04 11:48:36,976:INFO:No inverse transformer found
2020-09-04 11:48:36,976:INFO:Compiling Metrics
2020-09-04 11:48:36,982:INFO:Initializing Fold 5
2020-09-04 11:48:36,982:INFO:Total runtime is 0.10234691699345906 minutes
2020-09-04 11:48:36,988:INFO:Fitting Model
2020-09-04 11:48:37,010:INFO:Evaluating Metrics
2020-09-04 11:48:37,012:INFO:No inverse transformer found
2020-09-04 11:48:37,012:INFO:Compiling Metrics
2020-09-04 11:48:37,018:INFO:Calculating mean and std
2020-09-04 11:48:37,019:INFO:Creating metrics dataframe
2020-09-04 11:48:37,033:INFO:Creating MLFlow logs
2020-09-04 11:48:37,107:INFO:Initializing Support Vector Machine
2020-09-04 11:48:37,115:INFO:Initializing Fold 1
2020-09-04 11:48:37,116:INFO:Total runtime is 0.10457296768824259 minutes
2020-09-04 11:48:37,123:INFO:Fitting Model
2020-09-04 11:48:37,128:INFO:Evaluating Metrics
2020-09-04 11:48:37,130:INFO:No inverse transformer found
2020-09-04 11:48:37,130:INFO:Compiling Metrics
2020-09-04 11:48:37,137:INFO:Initializing Fold 2
2020-09-04 11:48:37,138:INFO:Total runtime is 0.10494190057118734 minutes
2020-09-04 11:48:37,144:INFO:Fitting Model
2020-09-04 11:48:37,147:INFO:Evaluating Metrics
2020-09-04 11:48:37,149:INFO:No inverse transformer found
2020-09-04 11:48:37,149:INFO:Compiling Metrics
2020-09-04 11:48:37,156:INFO:Initializing Fold 3
2020-09-04 11:48:37,156:INFO:Total runtime is 0.1052470326423645 minutes
2020-09-04 11:48:37,163:INFO:Fitting Model
2020-09-04 11:48:37,165:INFO:Evaluating Metrics
2020-09-04 11:48:37,168:INFO:No inverse transformer found
2020-09-04 11:48:37,168:INFO:Compiling Metrics
2020-09-04 11:48:37,174:INFO:Initializing Fold 4
2020-09-04 11:48:37,175:INFO:Total runtime is 0.10555670261383056 minutes
2020-09-04 11:48:37,181:INFO:Fitting Model
2020-09-04 11:48:37,184:INFO:Evaluating Metrics
2020-09-04 11:48:37,186:INFO:No inverse transformer found
2020-09-04 11:48:37,186:INFO:Compiling Metrics
2020-09-04 11:48:37,193:INFO:Initializing Fold 5
2020-09-04 11:48:37,194:INFO:Total runtime is 0.1058749477068583 minutes
2020-09-04 11:48:37,199:INFO:Fitting Model
2020-09-04 11:48:37,202:INFO:Evaluating Metrics
2020-09-04 11:48:37,204:INFO:No inverse transformer found
2020-09-04 11:48:37,204:INFO:Compiling Metrics
2020-09-04 11:48:37,211:INFO:Calculating mean and std
2020-09-04 11:48:37,212:INFO:Creating metrics dataframe
2020-09-04 11:48:37,224:INFO:Creating MLFlow logs
2020-09-04 11:48:37,307:INFO:Initializing Decision Tree
2020-09-04 11:48:37,316:INFO:Initializing Fold 1
2020-09-04 11:48:37,317:INFO:Total runtime is 0.10792419910430907 minutes
2020-09-04 11:48:37,324:INFO:Fitting Model
2020-09-04 11:48:37,329:INFO:Evaluating Metrics
2020-09-04 11:48:37,331:INFO:No inverse transformer found
2020-09-04 11:48:37,331:INFO:Compiling Metrics
2020-09-04 11:48:37,337:INFO:Initializing Fold 2
2020-09-04 11:48:37,338:INFO:Total runtime is 0.10827468236287434 minutes
2020-09-04 11:48:37,346:INFO:Fitting Model
2020-09-04 11:48:37,351:INFO:Evaluating Metrics
2020-09-04 11:48:37,353:INFO:No inverse transformer found
2020-09-04 11:48:37,353:INFO:Compiling Metrics
2020-09-04 11:48:37,361:INFO:Initializing Fold 3
2020-09-04 11:48:37,362:INFO:Total runtime is 0.10866803328196206 minutes
2020-09-04 11:48:37,368:INFO:Fitting Model
2020-09-04 11:48:37,372:INFO:Evaluating Metrics
2020-09-04 11:48:37,374:INFO:No inverse transformer found
2020-09-04 11:48:37,374:INFO:Compiling Metrics
2020-09-04 11:48:37,380:INFO:Initializing Fold 4
2020-09-04 11:48:37,381:INFO:Total runtime is 0.1089892824490865 minutes
2020-09-04 11:48:37,386:INFO:Fitting Model
2020-09-04 11:48:37,390:INFO:Evaluating Metrics
2020-09-04 11:48:37,392:INFO:No inverse transformer found
2020-09-04 11:48:37,392:INFO:Compiling Metrics
2020-09-04 11:48:37,397:INFO:Initializing Fold 5
2020-09-04 11:48:37,398:INFO:Total runtime is 0.10927779674530028 minutes
2020-09-04 11:48:37,404:INFO:Fitting Model
2020-09-04 11:48:37,408:INFO:Evaluating Metrics
2020-09-04 11:48:37,410:INFO:No inverse transformer found
2020-09-04 11:48:37,410:INFO:Compiling Metrics
2020-09-04 11:48:37,416:INFO:Calculating mean and std
2020-09-04 11:48:37,416:INFO:Creating metrics dataframe
2020-09-04 11:48:37,429:INFO:Creating MLFlow logs
2020-09-04 11:48:37,518:INFO:Initializing Random Forest
2020-09-04 11:48:37,528:INFO:Initializing Fold 1
2020-09-04 11:48:37,529:INFO:Total runtime is 0.11145341793696084 minutes
2020-09-04 11:48:37,536:INFO:Fitting Model
2020-09-04 11:48:37,683:INFO:Evaluating Metrics
2020-09-04 11:48:37,693:INFO:No inverse transformer found
2020-09-04 11:48:37,693:INFO:Compiling Metrics
2020-09-04 11:48:37,699:INFO:Initializing Fold 2
2020-09-04 11:48:37,699:INFO:Total runtime is 0.11429524819056192 minutes
2020-09-04 11:48:37,704:INFO:Fitting Model
2020-09-04 11:48:37,831:INFO:Evaluating Metrics
2020-09-04 11:48:37,841:INFO:No inverse transformer found
2020-09-04 11:48:37,841:INFO:Compiling Metrics
2020-09-04 11:48:37,847:INFO:Initializing Fold 3
2020-09-04 11:48:37,847:INFO:Total runtime is 0.11676098108291624 minutes
2020-09-04 11:48:37,852:INFO:Fitting Model
2020-09-04 11:48:37,980:INFO:Evaluating Metrics
2020-09-04 11:48:37,990:INFO:No inverse transformer found
2020-09-04 11:48:37,990:INFO:Compiling Metrics
2020-09-04 11:48:37,996:INFO:Initializing Fold 4
2020-09-04 11:48:37,996:INFO:Total runtime is 0.11924709876378375 minutes
2020-09-04 11:48:38,001:INFO:Fitting Model
2020-09-04 11:48:38,140:INFO:Evaluating Metrics
2020-09-04 11:48:38,152:INFO:No inverse transformer found
2020-09-04 11:48:38,152:INFO:Compiling Metrics
2020-09-04 11:48:38,158:INFO:Initializing Fold 5
2020-09-04 11:48:38,158:INFO:Total runtime is 0.12194868326187132 minutes
2020-09-04 11:48:38,164:INFO:Fitting Model
2020-09-04 11:48:38,302:INFO:Evaluating Metrics
2020-09-04 11:48:38,313:INFO:No inverse transformer found
2020-09-04 11:48:38,313:INFO:Compiling Metrics
2020-09-04 11:48:38,319:INFO:Calculating mean and std
2020-09-04 11:48:38,319:INFO:Creating metrics dataframe
2020-09-04 11:48:38,332:INFO:Creating MLFlow logs
2020-09-04 11:48:38,422:INFO:Initializing Extra Trees Regressor
2020-09-04 11:48:38,432:INFO:Initializing Fold 1
2020-09-04 11:48:38,433:INFO:Total runtime is 0.12652048269907631 minutes
2020-09-04 11:48:38,439:INFO:Fitting Model
2020-09-04 11:48:38,540:INFO:Evaluating Metrics
2020-09-04 11:48:38,552:INFO:No inverse transformer found
2020-09-04 11:48:38,552:INFO:Compiling Metrics
2020-09-04 11:48:38,558:INFO:Initializing Fold 2
2020-09-04 11:48:38,559:INFO:Total runtime is 0.1286231954892476 minutes
2020-09-04 11:48:38,564:INFO:Fitting Model
2020-09-04 11:48:38,658:INFO:Evaluating Metrics
2020-09-04 11:48:38,669:INFO:No inverse transformer found
2020-09-04 11:48:38,669:INFO:Compiling Metrics
2020-09-04 11:48:38,677:INFO:Initializing Fold 3
2020-09-04 11:48:38,677:INFO:Total runtime is 0.13059680064519244 minutes
2020-09-04 11:48:38,684:INFO:Fitting Model
2020-09-04 11:48:38,793:INFO:Evaluating Metrics
2020-09-04 11:48:38,804:INFO:No inverse transformer found
2020-09-04 11:48:38,804:INFO:Compiling Metrics
2020-09-04 11:48:38,810:INFO:Initializing Fold 4
2020-09-04 11:48:38,811:INFO:Total runtime is 0.13281963268915808 minutes
2020-09-04 11:48:38,817:INFO:Fitting Model
2020-09-04 11:48:38,913:INFO:Evaluating Metrics
2020-09-04 11:48:38,924:INFO:No inverse transformer found
2020-09-04 11:48:38,924:INFO:Compiling Metrics
2020-09-04 11:48:38,931:INFO:Initializing Fold 5
2020-09-04 11:48:38,932:INFO:Total runtime is 0.13483821551005043 minutes
2020-09-04 11:48:38,937:INFO:Fitting Model
2020-09-04 11:48:39,032:INFO:Evaluating Metrics
2020-09-04 11:48:39,043:INFO:No inverse transformer found
2020-09-04 11:48:39,043:INFO:Compiling Metrics
2020-09-04 11:48:39,049:INFO:Calculating mean and std
2020-09-04 11:48:39,049:INFO:Creating metrics dataframe
2020-09-04 11:48:39,061:INFO:Creating MLFlow logs
2020-09-04 11:48:39,147:INFO:Initializing AdaBoost Regressor
2020-09-04 11:48:39,155:INFO:Initializing Fold 1
2020-09-04 11:48:39,156:INFO:Total runtime is 0.13856995105743405 minutes
2020-09-04 11:48:39,161:INFO:Fitting Model
2020-09-04 11:48:39,222:INFO:Evaluating Metrics
2020-09-04 11:48:39,227:INFO:No inverse transformer found
2020-09-04 11:48:39,227:INFO:Compiling Metrics
2020-09-04 11:48:39,232:INFO:Initializing Fold 2
2020-09-04 11:48:39,232:INFO:Total runtime is 0.1398476998011271 minutes
2020-09-04 11:48:39,236:INFO:Fitting Model
2020-09-04 11:48:39,295:INFO:Evaluating Metrics
2020-09-04 11:48:39,299:INFO:No inverse transformer found
2020-09-04 11:48:39,299:INFO:Compiling Metrics
2020-09-04 11:48:39,304:INFO:Initializing Fold 3
2020-09-04 11:48:39,305:INFO:Total runtime is 0.1410520315170288 minutes
2020-09-04 11:48:39,309:INFO:Fitting Model
2020-09-04 11:48:39,374:INFO:Evaluating Metrics
2020-09-04 11:48:39,379:INFO:No inverse transformer found
2020-09-04 11:48:39,379:INFO:Compiling Metrics
2020-09-04 11:48:39,384:INFO:Initializing Fold 4
2020-09-04 11:48:39,385:INFO:Total runtime is 0.14239310026168822 minutes
2020-09-04 11:48:39,390:INFO:Fitting Model
2020-09-04 11:48:39,453:INFO:Evaluating Metrics
2020-09-04 11:48:39,458:INFO:No inverse transformer found
2020-09-04 11:48:39,458:INFO:Compiling Metrics
2020-09-04 11:48:39,463:INFO:Initializing Fold 5
2020-09-04 11:48:39,464:INFO:Total runtime is 0.14370161294937134 minutes
2020-09-04 11:48:39,468:INFO:Fitting Model
2020-09-04 11:48:39,525:INFO:Evaluating Metrics
2020-09-04 11:48:39,529:INFO:No inverse transformer found
2020-09-04 11:48:39,529:INFO:Compiling Metrics
2020-09-04 11:48:39,534:INFO:Calculating mean and std
2020-09-04 11:48:39,535:INFO:Creating metrics dataframe
2020-09-04 11:48:39,546:INFO:Creating MLFlow logs
2020-09-04 11:48:39,613:INFO:Initializing Gradient Boosting Regressor
2020-09-04 11:48:39,622:INFO:Initializing Fold 1
2020-09-04 11:48:39,623:INFO:Total runtime is 0.14635318120320637 minutes
2020-09-04 11:48:39,628:INFO:Fitting Model
2020-09-04 11:48:39,677:INFO:Evaluating Metrics
2020-09-04 11:48:39,679:INFO:No inverse transformer found
2020-09-04 11:48:39,679:INFO:Compiling Metrics
2020-09-04 11:48:39,684:INFO:Initializing Fold 2
2020-09-04 11:48:39,684:INFO:Total runtime is 0.14738138516743976 minutes
2020-09-04 11:48:39,689:INFO:Fitting Model
2020-09-04 11:48:39,738:INFO:Evaluating Metrics
2020-09-04 11:48:39,739:INFO:No inverse transformer found
2020-09-04 11:48:39,739:INFO:Compiling Metrics
2020-09-04 11:48:39,744:INFO:Initializing Fold 3
2020-09-04 11:48:39,744:INFO:Total runtime is 0.14838050206502276 minutes
2020-09-04 11:48:39,749:INFO:Fitting Model
2020-09-04 11:48:39,796:INFO:Evaluating Metrics
2020-09-04 11:48:39,798:INFO:No inverse transformer found
2020-09-04 11:48:39,798:INFO:Compiling Metrics
2020-09-04 11:48:39,803:INFO:Initializing Fold 4
2020-09-04 11:48:39,803:INFO:Total runtime is 0.14935801426569617 minutes
2020-09-04 11:48:39,807:INFO:Fitting Model
2020-09-04 11:48:39,856:INFO:Evaluating Metrics
2020-09-04 11:48:39,857:INFO:No inverse transformer found
2020-09-04 11:48:39,857:INFO:Compiling Metrics
2020-09-04 11:48:39,862:INFO:Initializing Fold 5
2020-09-04 11:48:39,863:INFO:Total runtime is 0.15035016536712642 minutes
2020-09-04 11:48:39,867:INFO:Fitting Model
2020-09-04 11:48:39,926:INFO:Evaluating Metrics
2020-09-04 11:48:39,927:INFO:No inverse transformer found
2020-09-04 11:48:39,928:INFO:Compiling Metrics
2020-09-04 11:48:39,933:INFO:Calculating mean and std
2020-09-04 11:48:39,933:INFO:Creating metrics dataframe
2020-09-04 11:48:39,946:INFO:Creating MLFlow logs
2020-09-04 11:48:40,031:INFO:Initializing Extreme Gradient Boosting
2020-09-04 11:48:40,039:INFO:Initializing Fold 1
2020-09-04 11:48:40,040:INFO:Total runtime is 0.1533083359400431 minutes
2020-09-04 11:48:40,048:INFO:Fitting Model
2020-09-04 11:48:40,089:INFO:Evaluating Metrics
2020-09-04 11:48:40,091:INFO:No inverse transformer found
2020-09-04 11:48:40,091:INFO:Compiling Metrics
2020-09-04 11:48:40,098:INFO:Initializing Fold 2
2020-09-04 11:48:40,098:INFO:Total runtime is 0.15428061882654823 minutes
2020-09-04 11:48:40,104:INFO:Fitting Model
2020-09-04 11:48:40,135:INFO:Evaluating Metrics
2020-09-04 11:48:40,137:INFO:No inverse transformer found
2020-09-04 11:48:40,137:INFO:Compiling Metrics
2020-09-04 11:48:40,144:INFO:Initializing Fold 3
2020-09-04 11:48:40,145:INFO:Total runtime is 0.15505183140436804 minutes
2020-09-04 11:48:40,152:INFO:Fitting Model
2020-09-04 11:48:40,183:INFO:Evaluating Metrics
2020-09-04 11:48:40,184:INFO:No inverse transformer found
2020-09-04 11:48:40,184:INFO:Compiling Metrics
2020-09-04 11:48:40,191:INFO:Initializing Fold 4
2020-09-04 11:48:40,191:INFO:Total runtime is 0.15583099921544388 minutes
2020-09-04 11:48:40,197:INFO:Fitting Model
2020-09-04 11:48:40,228:INFO:Evaluating Metrics
2020-09-04 11:48:40,229:INFO:No inverse transformer found
2020-09-04 11:48:40,229:INFO:Compiling Metrics
2020-09-04 11:48:40,235:INFO:Initializing Fold 5
2020-09-04 11:48:40,236:INFO:Total runtime is 0.15657506386439002 minutes
2020-09-04 11:48:40,242:INFO:Fitting Model
2020-09-04 11:48:40,266:INFO:Evaluating Metrics
2020-09-04 11:48:40,267:INFO:No inverse transformer found
2020-09-04 11:48:40,267:INFO:Compiling Metrics
2020-09-04 11:48:40,273:INFO:Calculating mean and std
2020-09-04 11:48:40,273:INFO:Creating metrics dataframe
2020-09-04 11:48:40,286:INFO:Creating MLFlow logs
2020-09-04 11:48:40,361:INFO:Initializing Light Gradient Boosting Machine
2020-09-04 11:48:40,366:INFO:Initializing Fold 1
2020-09-04 11:48:40,367:INFO:Total runtime is 0.15875753164291379 minutes
2020-09-04 11:48:40,372:INFO:Fitting Model
2020-09-04 11:48:40,382:INFO:Evaluating Metrics
2020-09-04 11:48:40,384:INFO:No inverse transformer found
2020-09-04 11:48:40,384:INFO:Compiling Metrics
2020-09-04 11:48:40,390:INFO:Initializing Fold 2
2020-09-04 11:48:40,390:INFO:Total runtime is 0.15914111534754433 minutes
2020-09-04 11:48:40,398:INFO:Fitting Model
2020-09-04 11:48:40,408:INFO:Evaluating Metrics
2020-09-04 11:48:40,410:INFO:No inverse transformer found
2020-09-04 11:48:40,411:INFO:Compiling Metrics
2020-09-04 11:48:40,416:INFO:Initializing Fold 3
2020-09-04 11:48:40,417:INFO:Total runtime is 0.1595884323120117 minutes
2020-09-04 11:48:40,423:INFO:Fitting Model
2020-09-04 11:48:40,434:INFO:Evaluating Metrics
2020-09-04 11:48:40,437:INFO:No inverse transformer found
2020-09-04 11:48:40,437:INFO:Compiling Metrics
2020-09-04 11:48:40,445:INFO:Initializing Fold 4
2020-09-04 11:48:40,445:INFO:Total runtime is 0.16006568670272825 minutes
2020-09-04 11:48:40,449:INFO:Fitting Model
2020-09-04 11:48:40,460:INFO:Evaluating Metrics
2020-09-04 11:48:40,461:INFO:No inverse transformer found
2020-09-04 11:48:40,461:INFO:Compiling Metrics
2020-09-04 11:48:40,468:INFO:Initializing Fold 5
2020-09-04 11:48:40,469:INFO:Total runtime is 0.16046121915181474 minutes
2020-09-04 11:48:40,474:INFO:Fitting Model
2020-09-04 11:48:40,485:INFO:Evaluating Metrics
2020-09-04 11:48:40,487:INFO:No inverse transformer found
2020-09-04 11:48:40,487:INFO:Compiling Metrics
2020-09-04 11:48:40,492:INFO:Calculating mean and std
2020-09-04 11:48:40,493:INFO:Creating metrics dataframe
2020-09-04 11:48:40,507:INFO:Creating MLFlow logs
2020-09-04 11:48:40,585:INFO:Initializing CatBoost Regressor
2020-09-04 11:48:40,593:INFO:Initializing Fold 1
2020-09-04 11:48:40,594:INFO:Total runtime is 0.16253494819005326 minutes
2020-09-04 11:48:40,598:INFO:Fitting Model
2020-09-04 11:48:42,066:INFO:Evaluating Metrics
2020-09-04 11:48:42,071:INFO:No inverse transformer found
2020-09-04 11:48:42,071:INFO:Compiling Metrics
2020-09-04 11:48:42,076:INFO:Initializing Fold 2
2020-09-04 11:48:42,077:INFO:Total runtime is 0.18726376295089717 minutes
2020-09-04 11:48:42,083:INFO:Fitting Model
2020-09-04 11:48:43,403:INFO:Evaluating Metrics
2020-09-04 11:48:43,406:INFO:No inverse transformer found
2020-09-04 11:48:43,406:INFO:Compiling Metrics
2020-09-04 11:48:43,411:INFO:Initializing Fold 3
2020-09-04 11:48:43,411:INFO:Total runtime is 0.20949971675872797 minutes
2020-09-04 11:48:43,416:INFO:Fitting Model
2020-09-04 11:48:44,678:INFO:Evaluating Metrics
2020-09-04 11:48:44,680:INFO:No inverse transformer found
2020-09-04 11:48:44,680:INFO:Compiling Metrics
2020-09-04 11:48:44,685:INFO:Initializing Fold 4
2020-09-04 11:48:44,686:INFO:Total runtime is 0.2307403167088826 minutes
2020-09-04 11:48:44,691:INFO:Fitting Model
2020-09-04 11:48:46,171:INFO:Evaluating Metrics
2020-09-04 11:48:46,174:INFO:No inverse transformer found
2020-09-04 11:48:46,174:INFO:Compiling Metrics
2020-09-04 11:48:46,179:INFO:Initializing Fold 5
2020-09-04 11:48:46,180:INFO:Total runtime is 0.25563938220342 minutes
2020-09-04 11:48:46,184:INFO:Fitting Model
2020-09-04 11:48:47,378:INFO:Evaluating Metrics
2020-09-04 11:48:47,381:INFO:No inverse transformer found
2020-09-04 11:48:47,381:INFO:Compiling Metrics
2020-09-04 11:48:47,386:INFO:Calculating mean and std
2020-09-04 11:48:47,386:INFO:Creating metrics dataframe
2020-09-04 11:48:47,398:INFO:Creating MLFlow logs
2020-09-04 11:48:47,470:INFO:Finalizing top_n models
2020-09-04 11:48:47,470:INFO:SubProcess create_model() called ==================================
2020-09-04 11:48:47,479:INFO:Initializing create_model()
2020-09-04 11:48:47,479:INFO:create_model(estimator=lasso, ensemble=False, method=None, fold=10, round=4, cross_validation=True, verbose=False, system=False)
2020-09-04 11:48:47,479:INFO:Checking exceptions
2020-09-04 11:48:47,479:INFO:Preloading libraries
2020-09-04 11:48:47,479:INFO:Preparing display monitor
2020-09-04 11:48:47,494:INFO:Copying training dataset
2020-09-04 11:48:47,495:INFO:Importing libraries
2020-09-04 11:48:47,497:INFO:Defining folds
2020-09-04 11:48:47,497:INFO:Declaring metric variables
2020-09-04 11:48:47,497:INFO:Lasso Regression Imported succesfully
2020-09-04 11:48:47,498:INFO:Checking ensemble method
2020-09-04 11:48:47,500:INFO:Initializing Fold 1
2020-09-04 11:48:47,502:INFO:Fitting Model
2020-09-04 11:48:47,504:INFO:Evaluating Metrics
2020-09-04 11:48:47,506:INFO:No inverse transformation
2020-09-04 11:48:47,506:INFO:Compiling Metrics
2020-09-04 11:48:47,512:INFO:Initializing Fold 2
2020-09-04 11:48:47,513:INFO:Fitting Model
2020-09-04 11:48:47,516:INFO:Evaluating Metrics
2020-09-04 11:48:47,517:INFO:No inverse transformation
2020-09-04 11:48:47,517:INFO:Compiling Metrics
2020-09-04 11:48:47,522:INFO:Initializing Fold 3
2020-09-04 11:48:47,523:INFO:Fitting Model
2020-09-04 11:48:47,525:INFO:Evaluating Metrics
2020-09-04 11:48:47,527:INFO:No inverse transformation
2020-09-04 11:48:47,527:INFO:Compiling Metrics
2020-09-04 11:48:47,531:INFO:Initializing Fold 4
2020-09-04 11:48:47,532:INFO:Fitting Model
2020-09-04 11:48:47,535:INFO:Evaluating Metrics
2020-09-04 11:48:47,536:INFO:No inverse transformation
2020-09-04 11:48:47,536:INFO:Compiling Metrics
2020-09-04 11:48:47,541:INFO:Initializing Fold 5
2020-09-04 11:48:47,542:INFO:Fitting Model
2020-09-04 11:48:47,544:INFO:Evaluating Metrics
2020-09-04 11:48:47,545:INFO:No inverse transformation
2020-09-04 11:48:47,545:INFO:Compiling Metrics
2020-09-04 11:48:47,550:INFO:Initializing Fold 6
2020-09-04 11:48:47,551:INFO:Fitting Model
2020-09-04 11:48:47,553:INFO:Evaluating Metrics
2020-09-04 11:48:47,555:INFO:No inverse transformation
2020-09-04 11:48:47,555:INFO:Compiling Metrics
2020-09-04 11:48:47,559:INFO:Initializing Fold 7
2020-09-04 11:48:47,560:INFO:Fitting Model
2020-09-04 11:48:47,562:INFO:Evaluating Metrics
2020-09-04 11:48:47,563:INFO:No inverse transformation
2020-09-04 11:48:47,563:INFO:Compiling Metrics
2020-09-04 11:48:47,569:INFO:Initializing Fold 8
2020-09-04 11:48:47,570:INFO:Fitting Model
2020-09-04 11:48:47,572:INFO:Evaluating Metrics
2020-09-04 11:48:47,573:INFO:No inverse transformation
2020-09-04 11:48:47,573:INFO:Compiling Metrics
2020-09-04 11:48:47,577:INFO:Initializing Fold 9
2020-09-04 11:48:47,578:INFO:Fitting Model
2020-09-04 11:48:47,580:INFO:Evaluating Metrics
2020-09-04 11:48:47,582:INFO:No inverse transformation
2020-09-04 11:48:47,582:INFO:Compiling Metrics
2020-09-04 11:48:47,587:INFO:Initializing Fold 10
2020-09-04 11:48:47,589:INFO:Fitting Model
2020-09-04 11:48:47,591:INFO:Evaluating Metrics
2020-09-04 11:48:47,592:INFO:No inverse transformation
2020-09-04 11:48:47,592:INFO:Compiling Metrics
2020-09-04 11:48:47,597:INFO:Calculating mean and std
2020-09-04 11:48:47,599:INFO:Creating metrics dataframe
2020-09-04 11:48:47,602:INFO:Finalizing model
2020-09-04 11:48:47,605:INFO:Uploading results into container
2020-09-04 11:48:47,605:INFO:Uploading model into container
2020-09-04 11:48:47,605:INFO:create_model_container: 1
2020-09-04 11:48:47,605:INFO:master_model_container: 1
2020-09-04 11:48:47,605:INFO:display_container: 1
2020-09-04 11:48:47,606:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False)
2020-09-04 11:48:47,606:INFO:create_model() succesfully completed......................................
2020-09-04 11:48:47,611:INFO:Initializing create_model()
2020-09-04 11:48:47,611:INFO:create_model(estimator=en, ensemble=False, method=None, fold=10, round=4, cross_validation=True, verbose=False, system=False)
2020-09-04 11:48:47,612:INFO:Checking exceptions
2020-09-04 11:48:47,612:INFO:Preloading libraries
2020-09-04 11:48:47,612:INFO:Preparing display monitor
2020-09-04 11:48:47,619:INFO:Copying training dataset
2020-09-04 11:48:47,620:INFO:Importing libraries
2020-09-04 11:48:47,620:INFO:Defining folds
2020-09-04 11:48:47,620:INFO:Declaring metric variables
2020-09-04 11:48:47,621:INFO:Elastic Net Imported succesfully
2020-09-04 11:48:47,621:INFO:Checking ensemble method
2020-09-04 11:48:47,622:INFO:Initializing Fold 1
2020-09-04 11:48:47,623:INFO:Fitting Model
2020-09-04 11:48:47,626:INFO:Evaluating Metrics
2020-09-04 11:48:47,627:INFO:No inverse transformation
2020-09-04 11:48:47,627:INFO:Compiling Metrics
2020-09-04 11:48:47,632:INFO:Initializing Fold 2
2020-09-04 11:48:47,633:INFO:Fitting Model
2020-09-04 11:48:47,635:INFO:Evaluating Metrics
2020-09-04 11:48:47,637:INFO:No inverse transformation
2020-09-04 11:48:47,637:INFO:Compiling Metrics
2020-09-04 11:48:47,643:INFO:Initializing Fold 3
2020-09-04 11:48:47,644:INFO:Fitting Model
2020-09-04 11:48:47,646:INFO:Evaluating Metrics
2020-09-04 11:48:47,647:INFO:No inverse transformation
2020-09-04 11:48:47,647:INFO:Compiling Metrics
2020-09-04 11:48:47,652:INFO:Initializing Fold 4
2020-09-04 11:48:47,652:INFO:Fitting Model
2020-09-04 11:48:47,654:INFO:Evaluating Metrics
2020-09-04 11:48:47,656:INFO:No inverse transformation
2020-09-04 11:48:47,656:INFO:Compiling Metrics
2020-09-04 11:48:47,660:INFO:Initializing Fold 5
2020-09-04 11:48:47,661:INFO:Fitting Model
2020-09-04 11:48:47,663:INFO:Evaluating Metrics
2020-09-04 11:48:47,665:INFO:No inverse transformation
2020-09-04 11:48:47,665:INFO:Compiling Metrics
2020-09-04 11:48:47,669:INFO:Initializing Fold 6
2020-09-04 11:48:47,670:INFO:Fitting Model
2020-09-04 11:48:47,672:INFO:Evaluating Metrics
2020-09-04 11:48:47,673:INFO:No inverse transformation
2020-09-04 11:48:47,673:INFO:Compiling Metrics
2020-09-04 11:48:47,678:INFO:Initializing Fold 7
2020-09-04 11:48:47,679:INFO:Fitting Model
2020-09-04 11:48:47,682:INFO:Evaluating Metrics
2020-09-04 11:48:47,683:INFO:No inverse transformation
2020-09-04 11:48:47,683:INFO:Compiling Metrics
2020-09-04 11:48:47,688:INFO:Initializing Fold 8
2020-09-04 11:48:47,689:INFO:Fitting Model
2020-09-04 11:48:47,691:INFO:Evaluating Metrics
2020-09-04 11:48:47,693:INFO:No inverse transformation
2020-09-04 11:48:47,693:INFO:Compiling Metrics
2020-09-04 11:48:47,697:INFO:Initializing Fold 9
2020-09-04 11:48:47,699:INFO:Fitting Model
2020-09-04 11:48:47,701:INFO:Evaluating Metrics
2020-09-04 11:48:47,702:INFO:No inverse transformation
2020-09-04 11:48:47,702:INFO:Compiling Metrics
2020-09-04 11:48:47,707:INFO:Initializing Fold 10
2020-09-04 11:48:47,708:INFO:Fitting Model
2020-09-04 11:48:47,710:INFO:Evaluating Metrics
2020-09-04 11:48:47,711:INFO:No inverse transformation
2020-09-04 11:48:47,711:INFO:Compiling Metrics
2020-09-04 11:48:47,716:INFO:Calculating mean and std
2020-09-04 11:48:47,717:INFO:Creating metrics dataframe
2020-09-04 11:48:47,720:INFO:Finalizing model
2020-09-04 11:48:47,723:INFO:Uploading results into container
2020-09-04 11:48:47,723:INFO:Uploading model into container
2020-09-04 11:48:47,723:INFO:create_model_container: 2
2020-09-04 11:48:47,723:INFO:master_model_container: 2
2020-09-04 11:48:47,723:INFO:display_container: 2
2020-09-04 11:48:47,724:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False)
2020-09-04 11:48:47,724:INFO:create_model() succesfully completed......................................
2020-09-04 11:48:47,728:INFO:Initializing create_model()
2020-09-04 11:48:47,728:INFO:create_model(estimator=omp, ensemble=False, method=None, fold=10, round=4, cross_validation=True, verbose=False, system=False)
2020-09-04 11:48:47,728:INFO:Checking exceptions
2020-09-04 11:48:47,728:INFO:Preloading libraries
2020-09-04 11:48:47,728:INFO:Preparing display monitor
2020-09-04 11:48:47,736:INFO:Copying training dataset
2020-09-04 11:48:47,736:INFO:Importing libraries
2020-09-04 11:48:47,737:INFO:Defining folds
2020-09-04 11:48:47,737:INFO:Declaring metric variables
2020-09-04 11:48:47,737:INFO:Orthogonal Matching Pursuit Imported succesfully
2020-09-04 11:48:47,738:INFO:Checking ensemble method
2020-09-04 11:48:47,739:INFO:Initializing Fold 1
2020-09-04 11:48:47,740:INFO:Fitting Model
2020-09-04 11:48:47,742:INFO:Evaluating Metrics
2020-09-04 11:48:47,745:INFO:No inverse transformation
2020-09-04 11:48:47,745:INFO:Compiling Metrics
2020-09-04 11:48:47,752:INFO:Initializing Fold 2
2020-09-04 11:48:47,752:INFO:Fitting Model
2020-09-04 11:48:47,754:INFO:Evaluating Metrics
2020-09-04 11:48:47,756:INFO:No inverse transformation
2020-09-04 11:48:47,756:INFO:Compiling Metrics
2020-09-04 11:48:47,761:INFO:Initializing Fold 3
2020-09-04 11:48:47,762:INFO:Fitting Model
2020-09-04 11:48:47,764:INFO:Evaluating Metrics
2020-09-04 11:48:47,765:INFO:No inverse transformation
2020-09-04 11:48:47,765:INFO:Compiling Metrics
2020-09-04 11:48:47,771:INFO:Initializing Fold 4
2020-09-04 11:48:47,772:INFO:Fitting Model
2020-09-04 11:48:47,774:INFO:Evaluating Metrics
2020-09-04 11:48:47,776:INFO:No inverse transformation
2020-09-04 11:48:47,776:INFO:Compiling Metrics
2020-09-04 11:48:47,781:INFO:Initializing Fold 5
2020-09-04 11:48:47,782:INFO:Fitting Model
2020-09-04 11:48:47,784:INFO:Evaluating Metrics
2020-09-04 11:48:47,786:INFO:No inverse transformation
2020-09-04 11:48:47,786:INFO:Compiling Metrics
2020-09-04 11:48:47,791:INFO:Initializing Fold 6
2020-09-04 11:48:47,792:INFO:Fitting Model
2020-09-04 11:48:47,793:INFO:Evaluating Metrics
2020-09-04 11:48:47,795:INFO:No inverse transformation
2020-09-04 11:48:47,795:INFO:Compiling Metrics
2020-09-04 11:48:47,801:INFO:Initializing Fold 7
2020-09-04 11:48:47,802:INFO:Fitting Model
2020-09-04 11:48:47,805:INFO:Evaluating Metrics
2020-09-04 11:48:47,806:INFO:No inverse transformation
2020-09-04 11:48:47,806:INFO:Compiling Metrics
2020-09-04 11:48:47,811:INFO:Initializing Fold 8
2020-09-04 11:48:47,812:INFO:Fitting Model
2020-09-04 11:48:47,815:INFO:Evaluating Metrics
2020-09-04 11:48:47,816:INFO:No inverse transformation
2020-09-04 11:48:47,816:INFO:Compiling Metrics
2020-09-04 11:48:47,821:INFO:Initializing Fold 9
2020-09-04 11:48:47,823:INFO:Fitting Model
2020-09-04 11:48:47,825:INFO:Evaluating Metrics
2020-09-04 11:48:47,827:INFO:No inverse transformation
2020-09-04 11:48:47,827:INFO:Compiling Metrics
2020-09-04 11:48:47,832:INFO:Initializing Fold 10
2020-09-04 11:48:47,833:INFO:Fitting Model
2020-09-04 11:48:47,835:INFO:Evaluating Metrics
2020-09-04 11:48:47,837:INFO:No inverse transformation
2020-09-04 11:48:47,837:INFO:Compiling Metrics
2020-09-04 11:48:47,841:INFO:Calculating mean and std
2020-09-04 11:48:47,842:INFO:Creating metrics dataframe
2020-09-04 11:48:47,846:INFO:Finalizing model
2020-09-04 11:48:47,849:INFO:Uploading results into container
2020-09-04 11:48:47,849:INFO:Uploading model into container
2020-09-04 11:48:47,849:INFO:create_model_container: 3
2020-09-04 11:48:47,849:INFO:master_model_container: 3
2020-09-04 11:48:47,849:INFO:display_container: 3
2020-09-04 11:48:47,850:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2020-09-04 11:48:47,850:INFO:create_model() succesfully completed......................................
2020-09-04 11:48:47,855:INFO:Initializing create_model()
2020-09-04 11:48:47,855:INFO:create_model(estimator=catboost, ensemble=False, method=None, fold=10, round=4, cross_validation=True, verbose=False, system=False)
2020-09-04 11:48:47,855:INFO:Checking exceptions
2020-09-04 11:48:47,855:INFO:Preloading libraries
2020-09-04 11:48:47,855:INFO:Preparing display monitor
2020-09-04 11:48:47,863:INFO:Copying training dataset
2020-09-04 11:48:47,863:INFO:Importing libraries
2020-09-04 11:48:47,864:INFO:Defining folds
2020-09-04 11:48:47,864:INFO:Declaring metric variables
2020-09-04 11:48:47,865:INFO:CatBoost Regressor Imported succesfully
2020-09-04 11:48:47,865:INFO:Checking ensemble method
2020-09-04 11:48:47,867:INFO:Initializing Fold 1
2020-09-04 11:48:47,868:INFO:Fitting Model
2020-09-04 11:48:48,985:INFO:Evaluating Metrics
2020-09-04 11:48:48,987:INFO:No inverse transformation
2020-09-04 11:48:48,987:INFO:Compiling Metrics
2020-09-04 11:48:48,992:INFO:Initializing Fold 2
2020-09-04 11:48:48,993:INFO:Fitting Model
2020-09-04 11:48:50,180:INFO:Evaluating Metrics
2020-09-04 11:48:50,183:INFO:No inverse transformation
2020-09-04 11:48:50,183:INFO:Compiling Metrics
2020-09-04 11:48:50,188:INFO:Initializing Fold 3
2020-09-04 11:48:50,189:INFO:Fitting Model
2020-09-04 11:48:51,254:INFO:Evaluating Metrics
2020-09-04 11:48:51,257:INFO:No inverse transformation
2020-09-04 11:48:51,257:INFO:Compiling Metrics
2020-09-04 11:48:51,262:INFO:Initializing Fold 4
2020-09-04 11:48:51,263:INFO:Fitting Model
2020-09-04 11:48:52,268:INFO:Evaluating Metrics
2020-09-04 11:48:52,271:INFO:No inverse transformation
2020-09-04 11:48:52,271:INFO:Compiling Metrics
2020-09-04 11:48:52,275:INFO:Initializing Fold 5
2020-09-04 11:48:52,276:INFO:Fitting Model
2020-09-04 11:48:53,398:INFO:Evaluating Metrics
2020-09-04 11:48:53,401:INFO:No inverse transformation
2020-09-04 11:48:53,401:INFO:Compiling Metrics
2020-09-04 11:48:53,407:INFO:Initializing Fold 6
2020-09-04 11:48:53,408:INFO:Fitting Model
2020-09-04 11:48:54,495:INFO:Evaluating Metrics
2020-09-04 11:48:54,498:INFO:No inverse transformation
2020-09-04 11:48:54,498:INFO:Compiling Metrics
2020-09-04 11:48:54,502:INFO:Initializing Fold 7
2020-09-04 11:48:54,503:INFO:Fitting Model
2020-09-04 11:48:55,537:INFO:Evaluating Metrics
2020-09-04 11:48:55,540:INFO:No inverse transformation
2020-09-04 11:48:55,540:INFO:Compiling Metrics
2020-09-04 11:48:55,544:INFO:Initializing Fold 8
2020-09-04 11:48:55,545:INFO:Fitting Model
2020-09-04 11:48:56,516:INFO:Evaluating Metrics
2020-09-04 11:48:56,519:INFO:No inverse transformation
2020-09-04 11:48:56,519:INFO:Compiling Metrics
2020-09-04 11:48:56,523:INFO:Initializing Fold 9
2020-09-04 11:48:56,524:INFO:Fitting Model
2020-09-04 11:48:57,475:INFO:Evaluating Metrics
2020-09-04 11:48:57,477:INFO:No inverse transformation
2020-09-04 11:48:57,477:INFO:Compiling Metrics
2020-09-04 11:48:57,482:INFO:Initializing Fold 10
2020-09-04 11:48:57,483:INFO:Fitting Model
2020-09-04 11:48:58,423:INFO:Evaluating Metrics
2020-09-04 11:48:58,426:INFO:No inverse transformation
2020-09-04 11:48:58,426:INFO:Compiling Metrics
2020-09-04 11:48:58,430:INFO:Calculating mean and std
2020-09-04 11:48:58,432:INFO:Creating metrics dataframe
2020-09-04 11:48:58,435:INFO:Finalizing model
2020-09-04 11:48:59,416:INFO:Uploading results into container
2020-09-04 11:48:59,417:INFO:Uploading model into container
2020-09-04 11:48:59,417:INFO:create_model_container: 4
2020-09-04 11:48:59,417:INFO:master_model_container: 4
2020-09-04 11:48:59,417:INFO:display_container: 4
2020-09-04 11:48:59,417:INFO:<catboost.core.CatBoostRegressor object at 0x7f9aff396dc0>
2020-09-04 11:48:59,417:INFO:create_model() succesfully completed......................................
2020-09-04 11:48:59,422:INFO:Initializing create_model()
2020-09-04 11:48:59,422:INFO:create_model(estimator=br, ensemble=False, method=None, fold=10, round=4, cross_validation=True, verbose=False, system=False)
2020-09-04 11:48:59,422:INFO:Checking exceptions
2020-09-04 11:48:59,422:INFO:Preloading libraries
2020-09-04 11:48:59,422:INFO:Preparing display monitor
2020-09-04 11:48:59,429:INFO:Copying training dataset
2020-09-04 11:48:59,430:INFO:Importing libraries
2020-09-04 11:48:59,430:INFO:Defining folds
2020-09-04 11:48:59,430:INFO:Declaring metric variables
2020-09-04 11:48:59,430:INFO:Bayesian Ridge Regression Imported succesfully
2020-09-04 11:48:59,431:INFO:Checking ensemble method
2020-09-04 11:48:59,432:INFO:Initializing Fold 1
2020-09-04 11:48:59,434:INFO:Fitting Model
2020-09-04 11:48:59,438:INFO:Evaluating Metrics
2020-09-04 11:48:59,439:INFO:No inverse transformation
2020-09-04 11:48:59,439:INFO:Compiling Metrics
2020-09-04 11:48:59,445:INFO:Initializing Fold 2
2020-09-04 11:48:59,447:INFO:Fitting Model
2020-09-04 11:48:59,449:INFO:Evaluating Metrics
2020-09-04 11:48:59,450:INFO:No inverse transformation
2020-09-04 11:48:59,450:INFO:Compiling Metrics
2020-09-04 11:48:59,456:INFO:Initializing Fold 3
2020-09-04 11:48:59,457:INFO:Fitting Model
2020-09-04 11:48:59,459:INFO:Evaluating Metrics
2020-09-04 11:48:59,460:INFO:No inverse transformation
2020-09-04 11:48:59,460:INFO:Compiling Metrics
2020-09-04 11:48:59,466:INFO:Initializing Fold 4
2020-09-04 11:48:59,467:INFO:Fitting Model
2020-09-04 11:48:59,470:INFO:Evaluating Metrics
2020-09-04 11:48:59,471:INFO:No inverse transformation
2020-09-04 11:48:59,471:INFO:Compiling Metrics
2020-09-04 11:48:59,476:INFO:Initializing Fold 5
2020-09-04 11:48:59,477:INFO:Fitting Model
2020-09-04 11:48:59,480:INFO:Evaluating Metrics
2020-09-04 11:48:59,481:INFO:No inverse transformation
2020-09-04 11:48:59,481:INFO:Compiling Metrics
2020-09-04 11:48:59,487:INFO:Initializing Fold 6
2020-09-04 11:48:59,488:INFO:Fitting Model
2020-09-04 11:48:59,490:INFO:Evaluating Metrics
2020-09-04 11:48:59,492:INFO:No inverse transformation
2020-09-04 11:48:59,492:INFO:Compiling Metrics
2020-09-04 11:48:59,497:INFO:Initializing Fold 7
2020-09-04 11:48:59,498:INFO:Fitting Model
2020-09-04 11:48:59,500:INFO:Evaluating Metrics
2020-09-04 11:48:59,501:INFO:No inverse transformation
2020-09-04 11:48:59,501:INFO:Compiling Metrics
2020-09-04 11:48:59,506:INFO:Initializing Fold 8
2020-09-04 11:48:59,507:INFO:Fitting Model
2020-09-04 11:48:59,509:INFO:Evaluating Metrics
2020-09-04 11:48:59,511:INFO:No inverse transformation
2020-09-04 11:48:59,511:INFO:Compiling Metrics
2020-09-04 11:48:59,516:INFO:Initializing Fold 9
2020-09-04 11:48:59,517:INFO:Fitting Model
2020-09-04 11:48:59,520:INFO:Evaluating Metrics
2020-09-04 11:48:59,521:INFO:No inverse transformation
2020-09-04 11:48:59,522:INFO:Compiling Metrics
2020-09-04 11:48:59,527:INFO:Initializing Fold 10
2020-09-04 11:48:59,528:INFO:Fitting Model
2020-09-04 11:48:59,530:INFO:Evaluating Metrics
2020-09-04 11:48:59,532:INFO:No inverse transformation
2020-09-04 11:48:59,532:INFO:Compiling Metrics
2020-09-04 11:48:59,537:INFO:Calculating mean and std
2020-09-04 11:48:59,538:INFO:Creating metrics dataframe
2020-09-04 11:48:59,542:INFO:Finalizing model
2020-09-04 11:48:59,545:INFO:Uploading results into container
2020-09-04 11:48:59,545:INFO:Uploading model into container
2020-09-04 11:48:59,545:INFO:create_model_container: 5
2020-09-04 11:48:59,545:INFO:master_model_container: 5
2020-09-04 11:48:59,545:INFO:display_container: 5
2020-09-04 11:48:59,546:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2020-09-04 11:48:59,546:INFO:create_model() succesfully completed......................................
2020-09-04 11:48:59,546:INFO:SubProcess create_model() end ==================================
2020-09-04 11:48:59,624:INFO:create_model_container: 5
2020-09-04 11:48:59,624:INFO:master_model_container: 5
2020-09-04 11:48:59,624:INFO:display_container: 6
2020-09-04 11:48:59,625:INFO:[Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False), OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None), <catboost.core.CatBoostRegressor object at 0x7f9aff396dc0>, BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)]
2020-09-04 11:48:59,625:INFO:compare_models() succesfully completed......................................
2020-09-04 11:48:59,661:INFO:Initializing tune_model()
2020-09-04 11:48:59,662:INFO:tune_model(estimator=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, choose_better=False, verbose=True)
2020-09-04 11:48:59,662:INFO:Checking exceptions
2020-09-04 11:48:59,662:INFO:Preloading libraries
2020-09-04 11:48:59,662:INFO:Preparing display monitor
2020-09-04 11:48:59,684:INFO:Copying training dataset
2020-09-04 11:48:59,684:INFO:Creating estimator clone to inherit model parameters
2020-09-04 11:48:59,685:INFO:Importing libraries
2020-09-04 11:48:59,685:INFO:Checking base model
2020-09-04 11:48:59,686:INFO:Base model : Lasso Regression
2020-09-04 11:48:59,687:INFO:Defining folds
2020-09-04 11:48:59,687:INFO:Declaring metric variables
2020-09-04 11:48:59,691:INFO:Defining Hyperparameters
2020-09-04 11:48:59,692:INFO:Initializing RandomizedSearchCV
2020-09-04 11:49:00,668:INFO:Random search completed
2020-09-04 11:49:00,672:INFO:Initializing Fold 1
2020-09-04 11:49:00,677:INFO:Fitting Model
2020-09-04 11:49:00,679:INFO:Evaluating Metrics
2020-09-04 11:49:00,680:INFO:Compiling Metrics
2020-09-04 11:49:00,696:INFO:Initializing Fold 2
2020-09-04 11:49:00,701:INFO:Fitting Model
2020-09-04 11:49:00,703:INFO:Evaluating Metrics
2020-09-04 11:49:00,706:INFO:Compiling Metrics
2020-09-04 11:49:00,724:INFO:Initializing Fold 3
2020-09-04 11:49:00,732:INFO:Fitting Model
2020-09-04 11:49:00,734:INFO:Evaluating Metrics
2020-09-04 11:49:00,736:INFO:Compiling Metrics
2020-09-04 11:49:00,758:INFO:Initializing Fold 4
2020-09-04 11:49:00,767:INFO:Fitting Model
2020-09-04 11:49:00,770:INFO:Evaluating Metrics
2020-09-04 11:49:00,772:INFO:Compiling Metrics
2020-09-04 11:49:00,792:INFO:Initializing Fold 5
2020-09-04 11:49:00,802:INFO:Fitting Model
2020-09-04 11:49:00,807:INFO:Evaluating Metrics
2020-09-04 11:49:00,812:INFO:Compiling Metrics
2020-09-04 11:49:00,834:INFO:Calculating mean and std
2020-09-04 11:49:00,836:INFO:Creating metrics dataframe
2020-09-04 11:49:00,847:INFO:Finalizing model
2020-09-04 11:49:00,852:INFO:Uploading results into container
2020-09-04 11:49:00,852:INFO:Uploading model into container
2020-09-04 11:49:00,852:INFO:Creating MLFlow logs
2020-09-04 11:49:00,918:INFO:SubProcess plot_model() called ==================================
2020-09-04 11:49:00,919:INFO:Initializing plot_model()
2020-09-04 11:49:00,919:INFO:plot_model(estimator=Lasso(alpha=0.777, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), plot=residuals, save=True, verbose=False, system=False)
2020-09-04 11:49:00,919:INFO:Checking exceptions
2020-09-04 11:49:00,919:INFO:Preloading libraries
2020-09-04 11:49:00,919:INFO:Preparing display monitor
2020-09-04 11:49:00,923:INFO:Importing libraries
2020-09-04 11:49:00,924:INFO:plot type: residuals
2020-09-04 11:49:00,995:INFO:Fitting Model
2020-09-04 11:49:01,024:INFO:Scoring test/hold-out set
2020-09-04 11:49:01,054:INFO:Saving 'Residuals.png' in current active directory
2020-09-04 11:49:01,516:INFO:Visual Rendered Successfully
2020-09-04 11:49:01,516:INFO:plot_model() succesfully completed......................................
2020-09-04 11:49:01,520:INFO:Initializing plot_model()
2020-09-04 11:49:01,520:INFO:plot_model(estimator=Lasso(alpha=0.777, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), plot=error, save=True, verbose=False, system=False)
2020-09-04 11:49:01,520:INFO:Checking exceptions
2020-09-04 11:49:01,520:INFO:Preloading libraries
2020-09-04 11:49:01,520:INFO:Preparing display monitor
2020-09-04 11:49:01,524:INFO:Importing libraries
2020-09-04 11:49:01,524:INFO:plot type: error
2020-09-04 11:49:01,525:INFO:Fitting Model
2020-09-04 11:49:01,526:INFO:Scoring test/hold-out set
2020-09-04 11:49:01,546:INFO:Saving 'Prediction Error.png' in current active directory
2020-09-04 11:49:01,784:INFO:Visual Rendered Successfully
2020-09-04 11:49:01,784:INFO:plot_model() succesfully completed......................................
2020-09-04 11:49:01,788:INFO:Initializing plot_model()
2020-09-04 11:49:01,788:INFO:plot_model(estimator=Lasso(alpha=0.777, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), plot=feature, save=True, verbose=False, system=False)
2020-09-04 11:49:01,789:INFO:Checking exceptions
2020-09-04 11:49:01,789:INFO:Preloading libraries
2020-09-04 11:49:01,789:INFO:Preparing display monitor
2020-09-04 11:49:01,792:INFO:Importing libraries
2020-09-04 11:49:01,793:INFO:plot type: feature
2020-09-04 11:49:01,814:INFO:Saving 'Feature Importance.png' in current active directory
2020-09-04 11:49:01,881:INFO:Visual Rendered Successfully
2020-09-04 11:49:01,881:INFO:plot_model() succesfully completed......................................
2020-09-04 11:49:01,885:INFO:SubProcess plot_model() end ==================================
2020-09-04 11:49:01,939:INFO:create_model_container: 6
2020-09-04 11:49:01,939:INFO:master_model_container: 6
2020-09-04 11:49:01,939:INFO:display_container: 7
2020-09-04 11:49:01,940:INFO:Lasso(alpha=0.777, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False)
2020-09-04 11:49:01,940:INFO:tune_model() succesfully completed......................................
2020-09-04 11:49:01,941:INFO:Initializing tune_model()
2020-09-04 11:49:01,941:INFO:tune_model(estimator=ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, choose_better=False, verbose=True)
2020-09-04 11:49:01,941:INFO:Checking exceptions
2020-09-04 11:49:01,941:INFO:Preloading libraries
2020-09-04 11:49:01,941:INFO:Preparing display monitor
2020-09-04 11:49:01,958:INFO:Copying training dataset
2020-09-04 11:49:01,959:INFO:Creating estimator clone to inherit model parameters
2020-09-04 11:49:01,959:INFO:Importing libraries
2020-09-04 11:49:01,960:INFO:Checking base model
2020-09-04 11:49:01,960:INFO:Base model : Elastic Net
2020-09-04 11:49:01,961:INFO:Defining folds
2020-09-04 11:49:01,961:INFO:Declaring metric variables
2020-09-04 11:49:01,965:INFO:Defining Hyperparameters
2020-09-04 11:49:01,965:INFO:Initializing RandomizedSearchCV
2020-09-04 11:49:02,429:INFO:Random search completed
2020-09-04 11:49:02,433:INFO:Initializing Fold 1
2020-09-04 11:49:02,438:INFO:Fitting Model
2020-09-04 11:49:02,440:INFO:Evaluating Metrics
2020-09-04 11:49:02,442:INFO:Compiling Metrics
2020-09-04 11:49:02,456:INFO:Initializing Fold 2
2020-09-04 11:49:02,461:INFO:Fitting Model
2020-09-04 11:49:02,463:INFO:Evaluating Metrics
2020-09-04 11:49:02,465:INFO:Compiling Metrics
2020-09-04 11:49:02,480:INFO:Initializing Fold 3
2020-09-04 11:49:02,484:INFO:Fitting Model
2020-09-04 11:49:02,487:INFO:Evaluating Metrics
2020-09-04 11:49:02,489:INFO:Compiling Metrics
2020-09-04 11:49:02,510:INFO:Initializing Fold 4
2020-09-04 11:49:02,515:INFO:Fitting Model
2020-09-04 11:49:02,517:INFO:Evaluating Metrics
2020-09-04 11:49:02,518:INFO:Compiling Metrics
2020-09-04 11:49:02,532:INFO:Initializing Fold 5
2020-09-04 11:49:02,537:INFO:Fitting Model
2020-09-04 11:49:02,542:INFO:Evaluating Metrics
2020-09-04 11:49:02,544:INFO:Compiling Metrics
2020-09-04 11:49:02,561:INFO:Calculating mean and std
2020-09-04 11:49:02,562:INFO:Creating metrics dataframe
2020-09-04 11:49:02,569:INFO:Finalizing model
2020-09-04 11:49:02,571:INFO:Uploading results into container
2020-09-04 11:49:02,572:INFO:Uploading model into container
2020-09-04 11:49:02,572:INFO:Creating MLFlow logs
2020-09-04 11:49:02,629:INFO:SubProcess plot_model() called ==================================
2020-09-04 11:49:02,629:INFO:Initializing plot_model()
2020-09-04 11:49:02,630:INFO:plot_model(estimator=ElasticNet(alpha=0.8300000000000001, copy_X=True, fit_intercept=True,
           l1_ratio=0.26, max_iter=1000, normalize=False, positive=False,
           precompute=False, random_state=786, selection='cyclic', tol=0.0001,
           warm_start=False), plot=residuals, save=True, verbose=False, system=False)
2020-09-04 11:49:02,630:INFO:Checking exceptions
2020-09-04 11:49:02,630:INFO:Preloading libraries
2020-09-04 11:49:02,630:INFO:Preparing display monitor
2020-09-04 11:49:02,635:INFO:Importing libraries
2020-09-04 11:49:02,636:INFO:plot type: residuals
2020-09-04 11:49:02,662:INFO:Fitting Model
2020-09-04 11:49:02,692:INFO:Scoring test/hold-out set
2020-09-04 11:49:02,717:INFO:Saving 'Residuals.png' in current active directory
2020-09-04 11:49:02,902:INFO:Visual Rendered Successfully
2020-09-04 11:49:02,902:INFO:plot_model() succesfully completed......................................
2020-09-04 11:49:02,906:INFO:Initializing plot_model()
2020-09-04 11:49:02,907:INFO:plot_model(estimator=ElasticNet(alpha=0.8300000000000001, copy_X=True, fit_intercept=True,
           l1_ratio=0.26, max_iter=1000, normalize=False, positive=False,
           precompute=False, random_state=786, selection='cyclic', tol=0.0001,
           warm_start=False), plot=error, save=True, verbose=False, system=False)
2020-09-04 11:49:02,907:INFO:Checking exceptions
2020-09-04 11:49:02,907:INFO:Preloading libraries
2020-09-04 11:49:02,907:INFO:Preparing display monitor
2020-09-04 11:49:02,911:INFO:Importing libraries
2020-09-04 11:49:02,911:INFO:plot type: error
2020-09-04 11:49:02,912:INFO:Fitting Model
2020-09-04 11:49:02,912:INFO:Scoring test/hold-out set
2020-09-04 11:49:02,932:INFO:Saving 'Prediction Error.png' in current active directory
2020-09-04 11:49:03,032:INFO:Visual Rendered Successfully
2020-09-04 11:49:03,032:INFO:plot_model() succesfully completed......................................
2020-09-04 11:49:03,036:INFO:Initializing plot_model()
2020-09-04 11:49:03,036:INFO:plot_model(estimator=ElasticNet(alpha=0.8300000000000001, copy_X=True, fit_intercept=True,
           l1_ratio=0.26, max_iter=1000, normalize=False, positive=False,
           precompute=False, random_state=786, selection='cyclic', tol=0.0001,
           warm_start=False), plot=feature, save=True, verbose=False, system=False)
2020-09-04 11:49:03,036:INFO:Checking exceptions
2020-09-04 11:49:03,036:INFO:Preloading libraries
2020-09-04 11:49:03,036:INFO:Preparing display monitor
2020-09-04 11:49:03,040:INFO:Importing libraries
2020-09-04 11:49:03,040:INFO:plot type: feature
2020-09-04 11:49:03,061:INFO:Saving 'Feature Importance.png' in current active directory
2020-09-04 11:49:03,128:INFO:Visual Rendered Successfully
2020-09-04 11:49:03,128:INFO:plot_model() succesfully completed......................................
2020-09-04 11:49:03,132:INFO:SubProcess plot_model() end ==================================
2020-09-04 11:49:03,191:INFO:create_model_container: 7
2020-09-04 11:49:03,192:INFO:master_model_container: 7
2020-09-04 11:49:03,192:INFO:display_container: 8
2020-09-04 11:49:03,192:INFO:ElasticNet(alpha=0.8300000000000001, copy_X=True, fit_intercept=True,
           l1_ratio=0.26, max_iter=1000, normalize=False, positive=False,
           precompute=False, random_state=786, selection='cyclic', tol=0.0001,
           warm_start=False)
2020-09-04 11:49:03,193:INFO:tune_model() succesfully completed......................................
2020-09-04 11:49:03,193:INFO:Initializing tune_model()
2020-09-04 11:49:03,194:INFO:tune_model(estimator=OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, choose_better=False, verbose=True)
2020-09-04 11:49:03,194:INFO:Checking exceptions
2020-09-04 11:49:03,194:INFO:Preloading libraries
2020-09-04 11:49:03,194:INFO:Preparing display monitor
2020-09-04 11:49:03,212:INFO:Copying training dataset
2020-09-04 11:49:03,212:INFO:Creating estimator clone to inherit model parameters
2020-09-04 11:49:03,213:INFO:Importing libraries
2020-09-04 11:49:03,213:INFO:Checking base model
2020-09-04 11:49:03,214:INFO:Base model : Orthogonal Matching Pursuit
2020-09-04 11:49:03,214:INFO:Defining folds
2020-09-04 11:49:03,215:INFO:Declaring metric variables
2020-09-04 11:49:03,218:INFO:Defining Hyperparameters
2020-09-04 11:49:03,224:INFO:Initializing RandomizedSearchCV
2020-09-04 11:49:03,697:INFO:Random search completed
2020-09-04 11:49:03,701:INFO:Initializing Fold 1
2020-09-04 11:49:03,707:INFO:Fitting Model
2020-09-04 11:49:03,709:INFO:Evaluating Metrics
2020-09-04 11:49:03,711:INFO:Compiling Metrics
2020-09-04 11:49:03,725:INFO:Initializing Fold 2
2020-09-04 11:49:03,731:INFO:Fitting Model
2020-09-04 11:49:03,734:INFO:Evaluating Metrics
2020-09-04 11:49:03,736:INFO:Compiling Metrics
2020-09-04 11:49:03,756:INFO:Initializing Fold 3
2020-09-04 11:49:03,762:INFO:Fitting Model
2020-09-04 11:49:03,767:INFO:Evaluating Metrics
2020-09-04 11:49:03,769:INFO:Compiling Metrics
2020-09-04 11:49:03,787:INFO:Initializing Fold 4
2020-09-04 11:49:03,792:INFO:Fitting Model
2020-09-04 11:49:03,796:INFO:Evaluating Metrics
2020-09-04 11:49:03,798:INFO:Compiling Metrics
2020-09-04 11:49:03,818:INFO:Initializing Fold 5
2020-09-04 11:49:03,823:INFO:Fitting Model
2020-09-04 11:49:03,827:INFO:Evaluating Metrics
2020-09-04 11:49:03,830:INFO:Compiling Metrics
2020-09-04 11:49:03,847:INFO:Calculating mean and std
2020-09-04 11:49:03,849:INFO:Creating metrics dataframe
2020-09-04 11:49:03,857:INFO:Finalizing model
2020-09-04 11:49:03,862:INFO:Uploading results into container
2020-09-04 11:49:03,862:INFO:Uploading model into container
2020-09-04 11:49:03,862:INFO:Creating MLFlow logs
2020-09-04 11:49:03,923:INFO:SubProcess plot_model() called ==================================
2020-09-04 11:49:03,923:INFO:Initializing plot_model()
2020-09-04 11:49:03,923:INFO:plot_model(estimator=OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=2, normalize=True,
                          precompute='auto', tol=None), plot=residuals, save=True, verbose=False, system=False)
2020-09-04 11:49:03,923:INFO:Checking exceptions
2020-09-04 11:49:03,923:INFO:Preloading libraries
2020-09-04 11:49:03,923:INFO:Preparing display monitor
2020-09-04 11:49:03,929:INFO:Importing libraries
2020-09-04 11:49:03,930:INFO:plot type: residuals
2020-09-04 11:49:03,955:INFO:Fitting Model
2020-09-04 11:49:03,983:INFO:Scoring test/hold-out set
2020-09-04 11:49:04,012:INFO:Saving 'Residuals.png' in current active directory
2020-09-04 11:49:04,205:INFO:Visual Rendered Successfully
2020-09-04 11:49:04,205:INFO:plot_model() succesfully completed......................................
2020-09-04 11:49:04,209:INFO:Initializing plot_model()
2020-09-04 11:49:04,209:INFO:plot_model(estimator=OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=2, normalize=True,
                          precompute='auto', tol=None), plot=error, save=True, verbose=False, system=False)
2020-09-04 11:49:04,209:INFO:Checking exceptions
2020-09-04 11:49:04,209:INFO:Preloading libraries
2020-09-04 11:49:04,209:INFO:Preparing display monitor
2020-09-04 11:49:04,213:INFO:Importing libraries
2020-09-04 11:49:04,213:INFO:plot type: error
2020-09-04 11:49:04,214:INFO:Fitting Model
2020-09-04 11:49:04,214:INFO:Scoring test/hold-out set
2020-09-04 11:49:04,235:INFO:Saving 'Prediction Error.png' in current active directory
2020-09-04 11:49:04,335:INFO:Visual Rendered Successfully
2020-09-04 11:49:04,335:INFO:plot_model() succesfully completed......................................
2020-09-04 11:49:04,339:INFO:Initializing plot_model()
2020-09-04 11:49:04,339:INFO:plot_model(estimator=OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=2, normalize=True,
                          precompute='auto', tol=None), plot=feature, save=True, verbose=False, system=False)
2020-09-04 11:49:04,339:INFO:Checking exceptions
2020-09-04 11:49:04,339:INFO:Preloading libraries
2020-09-04 11:49:04,339:INFO:Preparing display monitor
2020-09-04 11:49:04,343:INFO:Importing libraries
2020-09-04 11:49:04,343:INFO:plot type: feature
2020-09-04 11:49:04,363:INFO:Saving 'Feature Importance.png' in current active directory
2020-09-04 11:49:04,442:INFO:Visual Rendered Successfully
2020-09-04 11:49:04,442:INFO:plot_model() succesfully completed......................................
2020-09-04 11:49:04,445:INFO:SubProcess plot_model() end ==================================
2020-09-04 11:49:04,505:INFO:create_model_container: 8
2020-09-04 11:49:04,505:INFO:master_model_container: 8
2020-09-04 11:49:04,505:INFO:display_container: 9
2020-09-04 11:49:04,506:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=2, normalize=True,
                          precompute='auto', tol=None)
2020-09-04 11:49:04,506:INFO:tune_model() succesfully completed......................................
2020-09-04 11:49:04,507:INFO:Initializing tune_model()
2020-09-04 11:49:04,507:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f9aff396dc0>, fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, choose_better=False, verbose=True)
2020-09-04 11:49:04,507:INFO:Checking exceptions
2020-09-04 11:49:04,508:INFO:Preloading libraries
2020-09-04 11:49:04,508:INFO:Preparing display monitor
2020-09-04 11:49:04,525:INFO:Copying training dataset
2020-09-04 11:49:04,525:INFO:Creating estimator clone to inherit model parameters
2020-09-04 11:49:04,525:INFO:Importing libraries
2020-09-04 11:49:04,526:INFO:Checking base model
2020-09-04 11:49:04,526:INFO:Base model : CatBoost Regressor
2020-09-04 11:49:04,527:INFO:Defining folds
2020-09-04 11:49:04,527:INFO:Declaring metric variables
2020-09-04 11:49:04,530:INFO:Defining Hyperparameters
2020-09-04 11:49:04,530:INFO:Initializing RandomizedSearchCV
2020-09-04 11:51:34,430:INFO:Random search completed
2020-09-04 11:51:34,443:INFO:Initializing Fold 1
2020-09-04 11:51:34,448:INFO:Fitting Model
2020-09-04 11:51:57,679:INFO:Evaluating Metrics
2020-09-04 11:51:57,687:INFO:Compiling Metrics
2020-09-04 11:51:57,759:INFO:Initializing Fold 2
2020-09-04 11:51:57,786:INFO:Fitting Model
2020-09-04 11:51:59,221:INFO:Evaluating Metrics
2020-09-04 11:51:59,224:INFO:Compiling Metrics
2020-09-04 11:51:59,245:INFO:Initializing Fold 3
2020-09-04 11:51:59,251:INFO:Fitting Model
2020-09-04 11:52:00,490:INFO:Evaluating Metrics
2020-09-04 11:52:00,494:INFO:Compiling Metrics
2020-09-04 11:52:00,520:INFO:Initializing Fold 4
2020-09-04 11:52:00,529:INFO:Fitting Model
2020-09-04 11:52:01,343:INFO:Evaluating Metrics
2020-09-04 11:52:01,346:INFO:Compiling Metrics
2020-09-04 11:52:01,361:INFO:Initializing Fold 5
2020-09-04 11:52:01,365:INFO:Fitting Model
2020-09-04 11:52:02,029:INFO:Evaluating Metrics
2020-09-04 11:52:02,032:INFO:Compiling Metrics
2020-09-04 11:52:02,050:INFO:Calculating mean and std
2020-09-04 11:52:02,052:INFO:Creating metrics dataframe
2020-09-04 11:52:02,059:INFO:Finalizing model
2020-09-04 11:52:02,842:INFO:Uploading results into container
2020-09-04 11:52:02,842:INFO:Uploading model into container
2020-09-04 11:52:02,842:INFO:Creating MLFlow logs
2020-09-04 11:52:02,899:INFO:SubProcess plot_model() called ==================================
2020-09-04 11:52:02,903:INFO:Initializing plot_model()
2020-09-04 11:52:02,903:INFO:plot_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f9aff702d60>, plot=residuals, save=True, verbose=False, system=False)
2020-09-04 11:52:02,903:INFO:Checking exceptions
2020-09-04 11:52:02,904:INFO:Initializing plot_model()
2020-09-04 11:52:02,904:INFO:plot_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f9aff702d60>, plot=error, save=True, verbose=False, system=False)
2020-09-04 11:52:02,904:INFO:Checking exceptions
2020-09-04 11:52:02,904:INFO:Initializing plot_model()
2020-09-04 11:52:02,904:INFO:plot_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f9aff702d60>, plot=feature, save=True, verbose=False, system=False)
2020-09-04 11:52:02,904:INFO:Checking exceptions
2020-09-04 11:52:02,904:INFO:SubProcess plot_model() end ==================================
2020-09-04 11:52:03,017:INFO:create_model_container: 9
2020-09-04 11:52:03,017:INFO:master_model_container: 9
2020-09-04 11:52:03,017:INFO:display_container: 10
2020-09-04 11:52:03,017:INFO:<catboost.core.CatBoostRegressor object at 0x7f9aff702d60>
2020-09-04 11:52:03,017:INFO:tune_model() succesfully completed......................................
2020-09-04 11:52:03,019:INFO:Initializing tune_model()
2020-09-04 11:52:03,020:INFO:tune_model(estimator=BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, choose_better=False, verbose=True)
2020-09-04 11:52:03,020:INFO:Checking exceptions
2020-09-04 11:52:03,020:INFO:Preloading libraries
2020-09-04 11:52:03,020:INFO:Preparing display monitor
2020-09-04 11:52:03,041:INFO:Copying training dataset
2020-09-04 11:52:03,041:INFO:Creating estimator clone to inherit model parameters
2020-09-04 11:52:03,042:INFO:Importing libraries
2020-09-04 11:52:03,043:INFO:Checking base model
2020-09-04 11:52:03,043:INFO:Base model : Bayesian Ridge
2020-09-04 11:52:03,044:INFO:Defining folds
2020-09-04 11:52:03,045:INFO:Declaring metric variables
2020-09-04 11:52:03,050:INFO:Defining Hyperparameters
2020-09-04 11:52:03,050:INFO:Initializing RandomizedSearchCV
2020-09-04 11:52:03,585:INFO:Random search completed
2020-09-04 11:52:03,593:INFO:Initializing Fold 1
2020-09-04 11:52:03,601:INFO:Fitting Model
2020-09-04 11:52:03,605:INFO:Evaluating Metrics
2020-09-04 11:52:03,608:INFO:Compiling Metrics
2020-09-04 11:52:03,629:INFO:Initializing Fold 2
2020-09-04 11:52:03,636:INFO:Fitting Model
2020-09-04 11:52:03,642:INFO:Evaluating Metrics
2020-09-04 11:52:03,644:INFO:Compiling Metrics
2020-09-04 11:52:03,663:INFO:Initializing Fold 3
2020-09-04 11:52:03,670:INFO:Fitting Model
2020-09-04 11:52:03,675:INFO:Evaluating Metrics
2020-09-04 11:52:03,677:INFO:Compiling Metrics
2020-09-04 11:52:03,695:INFO:Initializing Fold 4
2020-09-04 11:52:03,701:INFO:Fitting Model
2020-09-04 11:52:03,704:INFO:Evaluating Metrics
2020-09-04 11:52:03,706:INFO:Compiling Metrics
2020-09-04 11:52:03,723:INFO:Initializing Fold 5
2020-09-04 11:52:03,729:INFO:Fitting Model
2020-09-04 11:52:03,733:INFO:Evaluating Metrics
2020-09-04 11:52:03,735:INFO:Compiling Metrics
2020-09-04 11:52:03,752:INFO:Calculating mean and std
2020-09-04 11:52:03,753:INFO:Creating metrics dataframe
2020-09-04 11:52:03,762:INFO:Finalizing model
2020-09-04 11:52:03,766:INFO:Uploading results into container
2020-09-04 11:52:03,766:INFO:Uploading model into container
2020-09-04 11:52:03,766:INFO:Creating MLFlow logs
2020-09-04 11:52:03,831:INFO:SubProcess plot_model() called ==================================
2020-09-04 11:52:03,832:INFO:Initializing plot_model()
2020-09-04 11:52:03,832:INFO:plot_model(estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.0001, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=0.3, lambda_2=0.3, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), plot=residuals, save=True, verbose=False, system=False)
2020-09-04 11:52:03,832:INFO:Checking exceptions
2020-09-04 11:52:03,833:INFO:Preloading libraries
2020-09-04 11:52:03,833:INFO:Preparing display monitor
2020-09-04 11:52:03,839:INFO:Importing libraries
2020-09-04 11:52:03,839:INFO:plot type: residuals
2020-09-04 11:52:03,873:INFO:Fitting Model
2020-09-04 11:52:03,910:INFO:Scoring test/hold-out set
2020-09-04 11:52:03,942:INFO:Saving 'Residuals.png' in current active directory
2020-09-04 11:52:04,170:INFO:Visual Rendered Successfully
2020-09-04 11:52:04,170:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:04,175:INFO:Initializing plot_model()
2020-09-04 11:52:04,175:INFO:plot_model(estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.0001, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=0.3, lambda_2=0.3, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), plot=error, save=True, verbose=False, system=False)
2020-09-04 11:52:04,175:INFO:Checking exceptions
2020-09-04 11:52:04,175:INFO:Preloading libraries
2020-09-04 11:52:04,175:INFO:Preparing display monitor
2020-09-04 11:52:04,179:INFO:Importing libraries
2020-09-04 11:52:04,180:INFO:plot type: error
2020-09-04 11:52:04,182:INFO:Fitting Model
2020-09-04 11:52:04,183:INFO:Scoring test/hold-out set
2020-09-04 11:52:04,207:INFO:Saving 'Prediction Error.png' in current active directory
2020-09-04 11:52:04,328:INFO:Visual Rendered Successfully
2020-09-04 11:52:04,328:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:04,333:INFO:Initializing plot_model()
2020-09-04 11:52:04,333:INFO:plot_model(estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.0001, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=0.3, lambda_2=0.3, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), plot=feature, save=True, verbose=False, system=False)
2020-09-04 11:52:04,333:INFO:Checking exceptions
2020-09-04 11:52:04,333:INFO:Preloading libraries
2020-09-04 11:52:04,333:INFO:Preparing display monitor
2020-09-04 11:52:04,337:INFO:Importing libraries
2020-09-04 11:52:04,337:INFO:plot type: feature
2020-09-04 11:52:04,361:INFO:Saving 'Feature Importance.png' in current active directory
2020-09-04 11:52:04,482:INFO:Visual Rendered Successfully
2020-09-04 11:52:04,482:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:04,486:INFO:SubProcess plot_model() end ==================================
2020-09-04 11:52:04,899:INFO:create_model_container: 10
2020-09-04 11:52:04,899:INFO:master_model_container: 10
2020-09-04 11:52:04,899:INFO:display_container: 11
2020-09-04 11:52:04,900:INFO:BayesianRidge(alpha_1=0.001, alpha_2=0.0001, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=0.3, lambda_2=0.3, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2020-09-04 11:52:04,900:INFO:tune_model() succesfully completed......................................
2020-09-04 11:52:04,908:INFO:Initializing blend_models()
2020-09-04 11:52:04,909:INFO:blend_models(estimator_list=[Lasso(alpha=0.777, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), ElasticNet(alpha=0.8300000000000001, copy_X=True, fit_intercept=True,
           l1_ratio=0.26, max_iter=1000, normalize=False, positive=False,
           precompute=False, random_state=786, selection='cyclic', tol=0.0001,
           warm_start=False), OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=2, normalize=True,
                          precompute='auto', tol=None), <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>, BayesianRidge(alpha_1=0.001, alpha_2=0.0001, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=0.3, lambda_2=0.3, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)], fold=5, round=4, choose_better=False, optimize=RMSE, turbo=True, verbose=True)
2020-09-04 11:52:04,909:INFO:Checking exceptions
2020-09-04 11:52:04,909:INFO:Preloading libraries
2020-09-04 11:52:04,910:INFO:Preparing display monitor
2020-09-04 11:52:04,925:INFO:Importing libraries
2020-09-04 11:52:04,926:INFO:Copying training dataset
2020-09-04 11:52:04,927:INFO:Declaring metric variables
2020-09-04 11:52:04,927:INFO:Defining folds
2020-09-04 11:52:04,931:INFO:Defining model names in estimator_list
2020-09-04 11:52:05,774:INFO:n_jobs multiple passed
2020-09-04 11:52:05,779:INFO:Initializing Fold 1
2020-09-04 11:52:05,784:INFO:Fitting Model
2020-09-04 11:52:06,737:INFO:Evaluating Metrics
2020-09-04 11:52:06,745:INFO:Compiling Metrics
2020-09-04 11:52:06,756:INFO:Initializing Fold 2
2020-09-04 11:52:06,761:INFO:Fitting Model
2020-09-04 11:52:07,459:INFO:Evaluating Metrics
2020-09-04 11:52:07,466:INFO:Compiling Metrics
2020-09-04 11:52:07,478:INFO:Initializing Fold 3
2020-09-04 11:52:07,482:INFO:Fitting Model
2020-09-04 11:52:08,200:INFO:Evaluating Metrics
2020-09-04 11:52:08,207:INFO:Compiling Metrics
2020-09-04 11:52:08,220:INFO:Initializing Fold 4
2020-09-04 11:52:08,225:INFO:Fitting Model
2020-09-04 11:52:08,849:INFO:Evaluating Metrics
2020-09-04 11:52:08,856:INFO:Compiling Metrics
2020-09-04 11:52:08,869:INFO:Initializing Fold 5
2020-09-04 11:52:08,873:INFO:Fitting Model
2020-09-04 11:52:09,533:INFO:Evaluating Metrics
2020-09-04 11:52:09,541:INFO:Compiling Metrics
2020-09-04 11:52:09,554:INFO:Calculating mean and std
2020-09-04 11:52:09,555:INFO:Creating metrics dataframe
2020-09-04 11:52:09,562:INFO:Finalizing model
2020-09-04 11:52:10,455:INFO:Uploading results into container
2020-09-04 11:52:10,455:INFO:Uploading model into container
2020-09-04 11:52:10,455:INFO:Creating MLFlow logs
2020-09-04 11:52:10,503:INFO:SubProcess plot_model() called ==================================
2020-09-04 11:52:10,504:INFO:Initializing plot_model()
2020-09-04 11:52:10,507:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=residuals, save=True, verbose=False, system=False)
2020-09-04 11:52:10,507:INFO:Checking exceptions
2020-09-04 11:52:10,507:INFO:Preloading libraries
2020-09-04 11:52:10,507:INFO:Preparing display monitor
2020-09-04 11:52:10,511:INFO:Importing libraries
2020-09-04 11:52:10,511:INFO:plot type: residuals
2020-09-04 11:52:10,542:INFO:Fitting Model
2020-09-04 11:52:10,588:INFO:Scoring test/hold-out set
2020-09-04 11:52:10,642:INFO:Saving 'Residuals.png' in current active directory
2020-09-04 11:52:10,842:INFO:Visual Rendered Successfully
2020-09-04 11:52:10,842:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:10,845:INFO:Initializing plot_model()
2020-09-04 11:52:10,849:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=error, save=True, verbose=False, system=False)
2020-09-04 11:52:10,849:INFO:Checking exceptions
2020-09-04 11:52:10,849:INFO:Preloading libraries
2020-09-04 11:52:10,849:INFO:Preparing display monitor
2020-09-04 11:52:10,852:INFO:Importing libraries
2020-09-04 11:52:10,853:INFO:plot type: error
2020-09-04 11:52:10,854:INFO:Fitting Model
2020-09-04 11:52:10,854:INFO:Scoring test/hold-out set
2020-09-04 11:52:10,880:INFO:Saving 'Prediction Error.png' in current active directory
2020-09-04 11:52:10,990:INFO:Visual Rendered Successfully
2020-09-04 11:52:10,990:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:10,994:INFO:Initializing plot_model()
2020-09-04 11:52:10,997:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=feature, save=True, verbose=False, system=False)
2020-09-04 11:52:10,997:INFO:Checking exceptions
2020-09-04 11:52:10,997:INFO:SubProcess plot_model() end ==================================
2020-09-04 11:52:11,044:INFO:create_model_container: 11
2020-09-04 11:52:11,044:INFO:master_model_container: 11
2020-09-04 11:52:11,044:INFO:display_container: 12
2020-09-04 11:52:11,048:INFO:VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None)
2020-09-04 11:52:11,048:INFO:blend_models() succesfully completed......................................
2020-09-04 11:52:11,065:INFO:Initializing stack_models()
2020-09-04 11:52:11,067:INFO:stack_models(estimator_list=[ElasticNet(alpha=0.8300000000000001, copy_X=True, fit_intercept=True,
           l1_ratio=0.26, max_iter=1000, normalize=False, positive=False,
           precompute=False, random_state=786, selection='cyclic', tol=0.0001,
           warm_start=False), OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=2, normalize=True,
                          precompute='auto', tol=None), <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>, BayesianRidge(alpha_1=0.001, alpha_2=0.0001, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=0.3, lambda_2=0.3, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)], meta_model=Lasso(alpha=0.777, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), fold=5, round=4, restack=True, choose_better=False, optimize=RMSE, verbose=True)
2020-09-04 11:52:11,067:INFO:Checking exceptions
2020-09-04 11:52:11,067:INFO:Preloading libraries
2020-09-04 11:52:11,067:INFO:Defining meta model
2020-09-04 11:52:11,068:INFO:Preparing display monitor
2020-09-04 11:52:11,088:INFO:Importing libraries
2020-09-04 11:52:11,088:INFO:Copying training dataset
2020-09-04 11:52:11,089:INFO:Defining folds
2020-09-04 11:52:11,089:INFO:Declaring metric variables
2020-09-04 11:52:11,089:INFO:Getting model names
2020-09-04 11:52:11,090:INFO:Compiling estimator_list parameter
2020-09-04 11:52:11,090:INFO:Creating StackingRegressor()
2020-09-04 11:52:11,091:INFO:Initializing Fold 1
2020-09-04 11:52:11,095:INFO:Fitting Model
2020-09-04 11:52:14,302:INFO:Evaluating Metrics
2020-09-04 11:52:14,309:INFO:No inverse transformation
2020-09-04 11:52:14,309:INFO:Compiling Metrics
2020-09-04 11:52:14,322:INFO:Initializing Fold 2
2020-09-04 11:52:14,328:INFO:Fitting Model
2020-09-04 11:52:17,868:INFO:Evaluating Metrics
2020-09-04 11:52:17,875:INFO:No inverse transformation
2020-09-04 11:52:17,875:INFO:Compiling Metrics
2020-09-04 11:52:17,896:INFO:Initializing Fold 3
2020-09-04 11:52:17,902:INFO:Fitting Model
2020-09-04 11:52:21,729:INFO:Evaluating Metrics
2020-09-04 11:52:21,735:INFO:No inverse transformation
2020-09-04 11:52:21,735:INFO:Compiling Metrics
2020-09-04 11:52:21,749:INFO:Initializing Fold 4
2020-09-04 11:52:21,754:INFO:Fitting Model
2020-09-04 11:52:24,911:INFO:Evaluating Metrics
2020-09-04 11:52:24,918:INFO:No inverse transformation
2020-09-04 11:52:24,918:INFO:Compiling Metrics
2020-09-04 11:52:24,932:INFO:Initializing Fold 5
2020-09-04 11:52:24,937:INFO:Fitting Model
2020-09-04 11:52:28,051:INFO:Evaluating Metrics
2020-09-04 11:52:28,058:INFO:No inverse transformation
2020-09-04 11:52:28,058:INFO:Compiling Metrics
2020-09-04 11:52:28,072:INFO:Calculating mean and std
2020-09-04 11:52:28,073:INFO:Creating metrics dataframe
2020-09-04 11:52:28,080:INFO:Finalizing model
2020-09-04 11:52:31,585:INFO:Creating MLFlow logs
2020-09-04 11:52:31,662:INFO:SubProcess plot_model() called ==================================
2020-09-04 11:52:31,662:INFO:Initializing plot_model()
2020-09-04 11:52:31,666:INFO:plot_model(estimator=StackingRegressor(cv=5,
                  estimators=[('ElasticNet_0',
                               ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                          fit_intercept=True, l1_ratio=0.26,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('OrthogonalMatchingPursuit_1',
                               OrthogonalMatchingPursuit(fit_intercept=True,
                                                         n_nonzero_coef...
                                             compute_score=False, copy_X=True,
                                             fit_intercept=True, lambda_1=0.3,
                                             lambda_2=0.3, lambda_init=None,
                                             n_iter=300, normalize=False,
                                             tol=0.001, verbose=False))],
                  final_estimator=Lasso(alpha=0.777, copy_X=True,
                                        fit_intercept=True, max_iter=1000,
                                        normalize=False, positive=False,
                                        precompute=False, random_state=786,
                                        selection='cyclic', tol=0.0001,
                                        warm_start=False),
                  n_jobs=-1, passthrough=True, verbose=0), plot=residuals, save=True, verbose=False, system=False)
2020-09-04 11:52:31,666:INFO:Checking exceptions
2020-09-04 11:52:31,666:INFO:Preloading libraries
2020-09-04 11:52:31,666:INFO:Preparing display monitor
2020-09-04 11:52:31,670:INFO:Importing libraries
2020-09-04 11:52:31,671:INFO:plot type: residuals
2020-09-04 11:52:31,694:INFO:Fitting Model
2020-09-04 11:52:31,734:INFO:Scoring test/hold-out set
2020-09-04 11:52:31,775:INFO:Saving 'Residuals.png' in current active directory
2020-09-04 11:52:31,992:INFO:Visual Rendered Successfully
2020-09-04 11:52:31,992:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:31,999:INFO:Initializing plot_model()
2020-09-04 11:52:32,003:INFO:plot_model(estimator=StackingRegressor(cv=5,
                  estimators=[('ElasticNet_0',
                               ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                          fit_intercept=True, l1_ratio=0.26,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('OrthogonalMatchingPursuit_1',
                               OrthogonalMatchingPursuit(fit_intercept=True,
                                                         n_nonzero_coef...
                                             compute_score=False, copy_X=True,
                                             fit_intercept=True, lambda_1=0.3,
                                             lambda_2=0.3, lambda_init=None,
                                             n_iter=300, normalize=False,
                                             tol=0.001, verbose=False))],
                  final_estimator=Lasso(alpha=0.777, copy_X=True,
                                        fit_intercept=True, max_iter=1000,
                                        normalize=False, positive=False,
                                        precompute=False, random_state=786,
                                        selection='cyclic', tol=0.0001,
                                        warm_start=False),
                  n_jobs=-1, passthrough=True, verbose=0), plot=error, save=True, verbose=False, system=False)
2020-09-04 11:52:32,003:INFO:Checking exceptions
2020-09-04 11:52:32,003:INFO:Preloading libraries
2020-09-04 11:52:32,003:INFO:Preparing display monitor
2020-09-04 11:52:32,007:INFO:Importing libraries
2020-09-04 11:52:32,007:INFO:plot type: error
2020-09-04 11:52:32,008:INFO:Fitting Model
2020-09-04 11:52:32,008:INFO:Scoring test/hold-out set
2020-09-04 11:52:32,035:INFO:Saving 'Prediction Error.png' in current active directory
2020-09-04 11:52:32,149:INFO:Visual Rendered Successfully
2020-09-04 11:52:32,150:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:32,156:INFO:Initializing plot_model()
2020-09-04 11:52:32,160:INFO:plot_model(estimator=StackingRegressor(cv=5,
                  estimators=[('ElasticNet_0',
                               ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                          fit_intercept=True, l1_ratio=0.26,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('OrthogonalMatchingPursuit_1',
                               OrthogonalMatchingPursuit(fit_intercept=True,
                                                         n_nonzero_coef...
                                             compute_score=False, copy_X=True,
                                             fit_intercept=True, lambda_1=0.3,
                                             lambda_2=0.3, lambda_init=None,
                                             n_iter=300, normalize=False,
                                             tol=0.001, verbose=False))],
                  final_estimator=Lasso(alpha=0.777, copy_X=True,
                                        fit_intercept=True, max_iter=1000,
                                        normalize=False, positive=False,
                                        precompute=False, random_state=786,
                                        selection='cyclic', tol=0.0001,
                                        warm_start=False),
                  n_jobs=-1, passthrough=True, verbose=0), plot=feature, save=True, verbose=False, system=False)
2020-09-04 11:52:32,160:INFO:Checking exceptions
2020-09-04 11:52:32,160:INFO:SubProcess plot_model() end ==================================
2020-09-04 11:52:32,207:INFO:create_model_container: 11
2020-09-04 11:52:32,207:INFO:master_model_container: 11
2020-09-04 11:52:32,207:INFO:display_container: 12
2020-09-04 11:52:32,210:INFO:StackingRegressor(cv=5,
                  estimators=[('ElasticNet_0',
                               ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                          fit_intercept=True, l1_ratio=0.26,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('OrthogonalMatchingPursuit_1',
                               OrthogonalMatchingPursuit(fit_intercept=True,
                                                         n_nonzero_coef...
                                             compute_score=False, copy_X=True,
                                             fit_intercept=True, lambda_1=0.3,
                                             lambda_2=0.3, lambda_init=None,
                                             n_iter=300, normalize=False,
                                             tol=0.001, verbose=False))],
                  final_estimator=Lasso(alpha=0.777, copy_X=True,
                                        fit_intercept=True, max_iter=1000,
                                        normalize=False, positive=False,
                                        precompute=False, random_state=786,
                                        selection='cyclic', tol=0.0001,
                                        warm_start=False),
                  n_jobs=-1, passthrough=True, verbose=0)
2020-09-04 11:52:32,210:INFO:stack_models() succesfully completed......................................
2020-09-04 11:52:32,237:INFO:Initializing plot_model()
2020-09-04 11:52:32,241:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=cooks, save=True, verbose=False, system=True)
2020-09-04 11:52:32,241:INFO:Checking exceptions
2020-09-04 11:52:32,241:INFO:Preloading libraries
2020-09-04 11:52:32,241:INFO:Preparing display monitor
2020-09-04 11:52:32,244:INFO:Importing libraries
2020-09-04 11:52:32,245:INFO:plot type: cooks
2020-09-04 11:52:32,246:INFO:Fitting Model
2020-09-04 11:52:32,301:INFO:Saving 'Cooks Distance.png' in current active directory
2020-09-04 11:52:32,574:INFO:Visual Rendered Successfully
2020-09-04 11:52:32,574:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:32,583:INFO:Initializing plot_model()
2020-09-04 11:52:32,588:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=manifold, save=True, verbose=False, system=True)
2020-09-04 11:52:32,588:INFO:Checking exceptions
2020-09-04 11:52:32,588:INFO:Preloading libraries
2020-09-04 11:52:32,588:INFO:Preparing display monitor
2020-09-04 11:52:32,591:INFO:Importing libraries
2020-09-04 11:52:32,592:INFO:plot type: manifold
2020-09-04 11:52:32,618:INFO:Fitting Model
2020-09-04 11:52:33,019:INFO:Saving 'Manifold.png' in current active directory
2020-09-04 11:52:33,413:INFO:Visual Rendered Successfully
2020-09-04 11:52:33,413:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:39,563:INFO:Initializing plot_model()
2020-09-04 11:52:39,566:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=residuals, save=True, verbose=False, system=True)
2020-09-04 11:52:39,566:INFO:Checking exceptions
2020-09-04 11:52:39,566:INFO:Preloading libraries
2020-09-04 11:52:39,566:INFO:Preparing display monitor
2020-09-04 11:52:39,570:INFO:Importing libraries
2020-09-04 11:52:39,570:INFO:plot type: residuals
2020-09-04 11:52:39,581:INFO:Fitting Model
2020-09-04 11:52:39,621:INFO:Scoring test/hold-out set
2020-09-04 11:52:41,096:INFO:Saving 'Residuals.png' in current active directory
2020-09-04 11:52:41,534:INFO:Visual Rendered Successfully
2020-09-04 11:52:41,535:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:41,544:INFO:Initializing plot_model()
2020-09-04 11:52:41,548:INFO:plot_model(estimator=StackingRegressor(cv=5,
                  estimators=[('ElasticNet_0',
                               ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                          fit_intercept=True, l1_ratio=0.26,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('OrthogonalMatchingPursuit_1',
                               OrthogonalMatchingPursuit(fit_intercept=True,
                                                         n_nonzero_coef...
                                             compute_score=False, copy_X=True,
                                             fit_intercept=True, lambda_1=0.3,
                                             lambda_2=0.3, lambda_init=None,
                                             n_iter=300, normalize=False,
                                             tol=0.001, verbose=False))],
                  final_estimator=Lasso(alpha=0.777, copy_X=True,
                                        fit_intercept=True, max_iter=1000,
                                        normalize=False, positive=False,
                                        precompute=False, random_state=786,
                                        selection='cyclic', tol=0.0001,
                                        warm_start=False),
                  n_jobs=-1, passthrough=True, verbose=0), plot=residuals, save=True, verbose=False, system=True)
2020-09-04 11:52:41,548:INFO:Checking exceptions
2020-09-04 11:52:41,548:INFO:Preloading libraries
2020-09-04 11:52:41,548:INFO:Preparing display monitor
2020-09-04 11:52:41,552:INFO:Importing libraries
2020-09-04 11:52:41,553:INFO:plot type: residuals
2020-09-04 11:52:41,566:INFO:Fitting Model
2020-09-04 11:52:41,606:INFO:Scoring test/hold-out set
2020-09-04 11:52:41,658:INFO:Saving 'Residuals.png' in current active directory
2020-09-04 11:52:42,113:INFO:Visual Rendered Successfully
2020-09-04 11:52:42,114:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:42,124:INFO:Initializing plot_model()
2020-09-04 11:52:42,127:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=error, save=True, verbose=False, system=True)
2020-09-04 11:52:42,127:INFO:Checking exceptions
2020-09-04 11:52:42,127:INFO:Preloading libraries
2020-09-04 11:52:42,127:INFO:Preparing display monitor
2020-09-04 11:52:42,132:INFO:Importing libraries
2020-09-04 11:52:42,132:INFO:plot type: error
2020-09-04 11:52:42,134:INFO:Fitting Model
2020-09-04 11:52:42,135:INFO:Scoring test/hold-out set
2020-09-04 11:52:42,152:INFO:Saving 'Prediction Error.png' in current active directory
2020-09-04 11:52:42,985:INFO:Visual Rendered Successfully
2020-09-04 11:52:42,986:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:42,996:INFO:Initializing plot_model()
2020-09-04 11:52:43,000:INFO:plot_model(estimator=StackingRegressor(cv=5,
                  estimators=[('ElasticNet_0',
                               ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                          fit_intercept=True, l1_ratio=0.26,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('OrthogonalMatchingPursuit_1',
                               OrthogonalMatchingPursuit(fit_intercept=True,
                                                         n_nonzero_coef...
                                             compute_score=False, copy_X=True,
                                             fit_intercept=True, lambda_1=0.3,
                                             lambda_2=0.3, lambda_init=None,
                                             n_iter=300, normalize=False,
                                             tol=0.001, verbose=False))],
                  final_estimator=Lasso(alpha=0.777, copy_X=True,
                                        fit_intercept=True, max_iter=1000,
                                        normalize=False, positive=False,
                                        precompute=False, random_state=786,
                                        selection='cyclic', tol=0.0001,
                                        warm_start=False),
                  n_jobs=-1, passthrough=True, verbose=0), plot=error, save=True, verbose=False, system=True)
2020-09-04 11:52:43,000:INFO:Checking exceptions
2020-09-04 11:52:43,000:INFO:Preloading libraries
2020-09-04 11:52:43,000:INFO:Preparing display monitor
2020-09-04 11:52:43,006:INFO:Importing libraries
2020-09-04 11:52:43,007:INFO:plot type: error
2020-09-04 11:52:43,010:INFO:Fitting Model
2020-09-04 11:52:43,011:INFO:Scoring test/hold-out set
2020-09-04 11:52:43,031:INFO:Saving 'Prediction Error.png' in current active directory
2020-09-04 11:52:45,989:INFO:Visual Rendered Successfully
2020-09-04 11:52:45,989:INFO:plot_model() succesfully completed......................................
2020-09-04 11:52:46,001:INFO:Initializing plot_model()
2020-09-04 11:52:46,006:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=learning, save=True, verbose=False, system=True)
2020-09-04 11:52:46,006:INFO:Checking exceptions
2020-09-04 11:52:46,006:INFO:Preloading libraries
2020-09-04 11:52:46,007:INFO:Preparing display monitor
2020-09-04 11:52:46,012:INFO:Importing libraries
2020-09-04 11:52:46,012:INFO:plot type: learning
2020-09-04 11:52:46,016:INFO:Fitting Model
2020-09-04 11:54:15,819:INFO:Saving 'Learning Curve.png' in current active directory
2020-09-04 11:54:16,668:INFO:Visual Rendered Successfully
2020-09-04 11:54:16,668:INFO:plot_model() succesfully completed......................................
2020-09-04 11:54:17,089:INFO:Initializing plot_model()
2020-09-04 11:54:17,095:INFO:plot_model(estimator=StackingRegressor(cv=5,
                  estimators=[('ElasticNet_0',
                               ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                          fit_intercept=True, l1_ratio=0.26,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('OrthogonalMatchingPursuit_1',
                               OrthogonalMatchingPursuit(fit_intercept=True,
                                                         n_nonzero_coef...
                                             compute_score=False, copy_X=True,
                                             fit_intercept=True, lambda_1=0.3,
                                             lambda_2=0.3, lambda_init=None,
                                             n_iter=300, normalize=False,
                                             tol=0.001, verbose=False))],
                  final_estimator=Lasso(alpha=0.777, copy_X=True,
                                        fit_intercept=True, max_iter=1000,
                                        normalize=False, positive=False,
                                        precompute=False, random_state=786,
                                        selection='cyclic', tol=0.0001,
                                        warm_start=False),
                  n_jobs=-1, passthrough=True, verbose=0), plot=learning, save=True, verbose=False, system=True)
2020-09-04 11:54:17,095:INFO:Checking exceptions
2020-09-04 11:54:17,095:INFO:Preloading libraries
2020-09-04 11:54:17,095:INFO:Preparing display monitor
2020-09-04 11:54:17,101:INFO:Importing libraries
2020-09-04 11:54:17,102:INFO:plot type: learning
2020-09-04 11:54:17,105:INFO:Fitting Model
2020-09-04 11:59:41,877:INFO:Saving 'Learning Curve.png' in current active directory
2020-09-04 11:59:42,893:INFO:Visual Rendered Successfully
2020-09-04 11:59:42,893:INFO:plot_model() succesfully completed......................................
2020-09-04 11:59:46,935:INFO:Initializing finalize_model()
2020-09-04 11:59:46,940:INFO:finalize_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None))
2020-09-04 11:59:46,940:INFO:Importing libraries
2020-09-04 11:59:46,940:INFO:Getting model name
2020-09-04 11:59:46,946:INFO:Finalizing Voting Regressor
2020-09-04 11:59:47,799:INFO:Initializing create_model()
2020-09-04 11:59:47,802:INFO:create_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), ensemble=False, method=None, fold=10, round=4, cross_validation=True, verbose=False, system=False)
2020-09-04 11:59:47,802:INFO:Checking exceptions
2020-09-04 11:59:47,803:INFO:Preloading libraries
2020-09-04 11:59:47,804:INFO:Preparing display monitor
2020-09-04 11:59:47,819:INFO:Copying training dataset
2020-09-04 11:59:47,820:INFO:Importing libraries
2020-09-04 11:59:47,820:INFO:Defining folds
2020-09-04 11:59:47,820:INFO:Declaring metric variables
2020-09-04 11:59:47,822:INFO:Declaring custom model
2020-09-04 11:59:47,825:INFO:VotingRegressor Imported succesfully
2020-09-04 11:59:47,826:INFO:Checking ensemble method
2020-09-04 11:59:47,828:INFO:Initializing Fold 1
2020-09-04 11:59:47,830:INFO:Fitting Model
2020-09-04 11:59:48,546:INFO:Evaluating Metrics
2020-09-04 11:59:48,554:INFO:No inverse transformation
2020-09-04 11:59:48,554:INFO:Compiling Metrics
2020-09-04 11:59:48,560:INFO:Initializing Fold 2
2020-09-04 11:59:48,561:INFO:Fitting Model
2020-09-04 11:59:49,140:INFO:Evaluating Metrics
2020-09-04 11:59:49,147:INFO:No inverse transformation
2020-09-04 11:59:49,147:INFO:Compiling Metrics
2020-09-04 11:59:49,151:INFO:Initializing Fold 3
2020-09-04 11:59:49,152:INFO:Fitting Model
2020-09-04 11:59:49,712:INFO:Evaluating Metrics
2020-09-04 11:59:49,719:INFO:No inverse transformation
2020-09-04 11:59:49,719:INFO:Compiling Metrics
2020-09-04 11:59:49,723:INFO:Initializing Fold 4
2020-09-04 11:59:49,724:INFO:Fitting Model
2020-09-04 11:59:50,281:INFO:Evaluating Metrics
2020-09-04 11:59:50,289:INFO:No inverse transformation
2020-09-04 11:59:50,289:INFO:Compiling Metrics
2020-09-04 11:59:50,294:INFO:Initializing Fold 5
2020-09-04 11:59:50,294:INFO:Fitting Model
2020-09-04 11:59:51,095:INFO:Evaluating Metrics
2020-09-04 11:59:51,102:INFO:No inverse transformation
2020-09-04 11:59:51,102:INFO:Compiling Metrics
2020-09-04 11:59:51,106:INFO:Initializing Fold 6
2020-09-04 11:59:51,107:INFO:Fitting Model
2020-09-04 11:59:51,820:INFO:Evaluating Metrics
2020-09-04 11:59:51,827:INFO:No inverse transformation
2020-09-04 11:59:51,827:INFO:Compiling Metrics
2020-09-04 11:59:51,832:INFO:Initializing Fold 7
2020-09-04 11:59:51,832:INFO:Fitting Model
2020-09-04 11:59:52,545:INFO:Evaluating Metrics
2020-09-04 11:59:52,553:INFO:No inverse transformation
2020-09-04 11:59:52,553:INFO:Compiling Metrics
2020-09-04 11:59:52,558:INFO:Initializing Fold 8
2020-09-04 11:59:52,559:INFO:Fitting Model
2020-09-04 11:59:53,229:INFO:Evaluating Metrics
2020-09-04 11:59:53,237:INFO:No inverse transformation
2020-09-04 11:59:53,237:INFO:Compiling Metrics
2020-09-04 11:59:53,243:INFO:Initializing Fold 9
2020-09-04 11:59:53,244:INFO:Fitting Model
2020-09-04 11:59:53,887:INFO:Evaluating Metrics
2020-09-04 11:59:53,895:INFO:No inverse transformation
2020-09-04 11:59:53,895:INFO:Compiling Metrics
2020-09-04 11:59:53,900:INFO:Initializing Fold 10
2020-09-04 11:59:53,900:INFO:Fitting Model
2020-09-04 11:59:54,501:INFO:Evaluating Metrics
2020-09-04 11:59:54,508:INFO:No inverse transformation
2020-09-04 11:59:54,508:INFO:Compiling Metrics
2020-09-04 11:59:54,513:INFO:Calculating mean and std
2020-09-04 11:59:54,514:INFO:Creating metrics dataframe
2020-09-04 11:59:54,517:INFO:Finalizing model
2020-09-04 11:59:55,121:INFO:Uploading results into container
2020-09-04 11:59:55,121:INFO:Uploading model into container
2020-09-04 11:59:55,121:INFO:create_model_container: 12
2020-09-04 11:59:55,121:INFO:master_model_container: 12
2020-09-04 11:59:55,121:INFO:display_container: 15
2020-09-04 11:59:55,125:INFO:VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9aff702d60>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None)
2020-09-04 11:59:55,126:INFO:create_model() succesfully completed......................................
2020-09-04 11:59:55,126:INFO:Creating MLFlow logs
2020-09-04 11:59:55,163:INFO:SubProcess plot_model() called ==================================
2020-09-04 11:59:55,164:INFO:Initializing plot_model()
2020-09-04 11:59:55,168:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9b02cd9820>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=residuals, save=True, verbose=False, system=False)
2020-09-04 11:59:55,168:INFO:Checking exceptions
2020-09-04 11:59:55,168:INFO:Preloading libraries
2020-09-04 11:59:55,168:INFO:Preparing display monitor
2020-09-04 11:59:55,172:INFO:Importing libraries
2020-09-04 11:59:55,173:INFO:plot type: residuals
2020-09-04 11:59:55,198:INFO:Fitting Model
2020-09-04 11:59:55,246:INFO:Scoring test/hold-out set
2020-09-04 11:59:55,290:INFO:Saving 'Residuals.png' in current active directory
2020-09-04 11:59:55,490:INFO:Visual Rendered Successfully
2020-09-04 11:59:55,490:INFO:plot_model() succesfully completed......................................
2020-09-04 11:59:55,494:INFO:Initializing plot_model()
2020-09-04 11:59:55,497:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9b02cd9820>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=error, save=True, verbose=False, system=False)
2020-09-04 11:59:55,497:INFO:Checking exceptions
2020-09-04 11:59:55,497:INFO:Preloading libraries
2020-09-04 11:59:55,497:INFO:Preparing display monitor
2020-09-04 11:59:55,501:INFO:Importing libraries
2020-09-04 11:59:55,501:INFO:plot type: error
2020-09-04 11:59:55,504:INFO:Fitting Model
2020-09-04 11:59:55,504:INFO:Scoring test/hold-out set
2020-09-04 11:59:55,540:INFO:Saving 'Prediction Error.png' in current active directory
2020-09-04 11:59:55,649:INFO:Visual Rendered Successfully
2020-09-04 11:59:55,649:INFO:plot_model() succesfully completed......................................
2020-09-04 11:59:55,652:INFO:Initializing plot_model()
2020-09-04 11:59:55,656:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9b02cd9820>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=feature, save=True, verbose=False, system=False)
2020-09-04 11:59:55,656:INFO:Checking exceptions
2020-09-04 11:59:55,656:INFO:SubProcess plot_model() end ==================================
2020-09-04 11:59:55,705:INFO:create_model_container: 12
2020-09-04 11:59:55,705:INFO:master_model_container: 12
2020-09-04 11:59:55,705:INFO:display_container: 15
2020-09-04 11:59:55,709:INFO:VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9b02cd9820>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None)
2020-09-04 11:59:55,709:INFO:finalize_model() succesfully completed......................................
2020-09-04 11:59:55,935:INFO:Initializing plot_model()
2020-09-04 11:59:55,939:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9b02cd9820>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=residuals, save=True, verbose=False, system=True)
2020-09-04 11:59:55,939:INFO:Checking exceptions
2020-09-04 11:59:55,939:INFO:Preloading libraries
2020-09-04 11:59:55,939:INFO:Preparing display monitor
2020-09-04 11:59:55,943:INFO:Importing libraries
2020-09-04 11:59:55,944:INFO:plot type: residuals
2020-09-04 11:59:55,958:INFO:Fitting Model
2020-09-04 11:59:55,995:INFO:Scoring test/hold-out set
2020-09-04 11:59:56,030:INFO:Saving 'Residuals.png' in current active directory
2020-09-04 11:59:56,667:INFO:Visual Rendered Successfully
2020-09-04 11:59:56,667:INFO:plot_model() succesfully completed......................................
2020-09-04 11:59:56,677:INFO:Initializing plot_model()
2020-09-04 11:59:56,680:INFO:plot_model(estimator=VotingRegressor(estimators=[('Lasso_0',
                             Lasso(alpha=0.777, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, precompute=False,
                                   random_state=786, selection='cyclic',
                                   tol=0.0001, warm_start=False)),
                            ('Elastic Net_1',
                             ElasticNet(alpha=0.8300000000000001, copy_X=True,
                                        fit_intercept=True, l1_ratio=0.26,
                                        max_iter=1000, normalize=False,
                                        positiv...
                                                       tol=None)),
                            ('CatBoost Regressor_3',
                             <catboost.core.CatBoostRegressor object at 0x7f9b02cd9820>),
                            ('Bayesian Ridge_4',
                             BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=0.3, lambda_2=0.3,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=False))],
                n_jobs=-1, verbose=False, weights=None), plot=error, save=True, verbose=False, system=True)
2020-09-04 11:59:56,681:INFO:Checking exceptions
2020-09-04 11:59:56,681:INFO:Preloading libraries
2020-09-04 11:59:56,681:INFO:Preparing display monitor
2020-09-04 11:59:56,684:INFO:Importing libraries
2020-09-04 11:59:56,685:INFO:plot type: error
2020-09-04 11:59:56,686:INFO:Fitting Model
2020-09-04 11:59:56,687:INFO:Scoring test/hold-out set
2020-09-04 11:59:56,706:INFO:Saving 'Prediction Error.png' in current active directory
2020-09-04 11:59:56,942:INFO:Visual Rendered Successfully
2020-09-04 11:59:56,942:INFO:plot_model() succesfully completed......................................
2020-10-13 12:56:01,795:INFO:PyCaret Supervised Module
2020-10-13 12:56:01,807:INFO:ML Usecase: regression
2020-10-13 12:56:01,807:INFO:version 2.2
2020-10-13 12:56:01,808:INFO:Initializing setup()
2020-10-13 12:56:01,808:INFO:setup(target=Actual Value, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'Total number of calls', 'CSat', 'total coaching', 'total coaching improved', 'FCR Week before'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['Agent_ID'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-13 12:56:01,808:INFO:Checking environment
2020-10-13 12:56:01,809:INFO:python_version: 3.8.3
2020-10-13 12:56:01,809:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-13 12:56:01,810:INFO:machine: x86_64
2020-10-13 12:56:01,862:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-13 12:56:01,864:INFO:Memory: svmem(total=8589934592, available=1035046912, percent=88.0, used=3111272448, free=101851136, active=935792640, inactive=897503232, wired=2175479808)
2020-10-13 12:56:01,864:INFO:Physical Core: 4
2020-10-13 12:56:01,864:INFO:Logical Core: 8
2020-10-13 12:56:01,864:INFO:Checking libraries
2020-10-13 12:56:01,865:INFO:pd==1.0.5
2020-10-13 12:56:01,865:INFO:numpy==1.18.5
2020-10-13 12:56:01,865:INFO:sklearn==0.23.2
2020-10-13 12:56:02,615:INFO:xgboost==1.2.0
2020-10-13 12:56:02,615:INFO:lightgbm==2.3.1
2020-10-13 12:56:02,686:INFO:catboost==0.24.1
2020-10-13 12:56:03,383:INFO:mlflow==1.11.0
2020-10-13 12:56:03,383:INFO:Checking Exceptions
2020-10-13 12:56:03,383:INFO:Declaring global variables
2020-10-13 12:56:03,384:INFO:USI: 92ad
2020-10-13 12:56:03,384:INFO:pycaret_globals: {'experiment__', 'imputation_regressor', 'y_train', '_ml_usecase', 'target_param', '_gpu_n_jobs_param', 'exp_name_log', 'n_jobs_param', 'fold_shuffle_param', 'seed', '_all_models_internal', 'display_container', 'data_before_preprocess', 'fold_param', 'iterative_imputation_iters_param', 'master_model_container', 'html_param', 'prep_pipe', 'fix_imbalance_param', '_internal_pipeline', 'transform_target_param', 'log_plots_param', 'logging_param', 'fold_generator', 'X', 'y', 'stratify_param', 'fix_imbalance_method_param', 'X_train', 'pycaret_globals', 'imputation_classifier', 'gpu_param', 'create_model_container', 'fold_groups_param', '_all_metrics', 'X_test', 'y_test', 'transform_target_method_param', '_all_models', 'USI'}
2020-10-13 12:56:03,384:INFO:Preparing display monitor
2020-10-13 12:56:03,384:INFO:Preparing display monitor
2020-10-13 12:56:03,407:INFO:Importing libraries
2020-10-13 12:56:03,408:INFO:Copying data for preprocessing
2020-10-13 12:56:03,415:INFO:Declaring preprocessing parameters
2020-10-13 12:56:03,419:INFO:Creating preprocessing pipeline
2020-10-13 12:56:03,432:INFO:Preprocessing pipeline created successfully
2020-10-13 12:56:03,432:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-13 12:56:03,433:INFO:Creating global containers
2020-10-13 12:56:03,435:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-13 12:56:13,675:INFO:Creating grid variables
2020-10-13 12:56:13,715:INFO:Logging experiment in MLFlow
2020-10-13 12:56:13,845:INFO:SubProcess save_model() called ==================================
2020-10-13 12:56:13,863:INFO:Initializing save_model()
2020-10-13 12:56:13,864:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False), verbose=False)
2020-10-13 12:56:13,864:INFO:Adding model into prep_pipe
2020-10-13 12:56:13,911:INFO:Transformation Pipeline.pkl saved in current working directory
2020-10-13 12:56:13,948:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                                        threshold=0.9)),
                                 ('dfs',
                                  DFS_Classic(interactions=['multiply'],
                                              ml_usecase='regression',
                                              random_state=786,
                                              subclass='binary',
                                              target='Actual Value',
                                              top_features_to_pick_percentage=None)),
                                 ('pca',
                                  Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                                        random_state=786,
                                                                        target='Actual '
                                                                               'Value',
                                                                        variance_retained_or_number_of_components=None))],
                          verbose=False)]],
         verbose=False)
2020-10-13 12:56:13,948:INFO:save_model() succesfully completed......................................
2020-10-13 12:56:13,948:INFO:SubProcess save_model() end ==================================
2020-10-13 12:56:13,963:INFO:create_model_container: 0
2020-10-13 12:56:13,963:INFO:master_model_container: 0
2020-10-13 12:56:13,963:INFO:display_container: 0
2020-10-13 12:56:13,971:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False)
2020-10-13 12:56:13,971:INFO:setup() succesfully completed......................................
2020-10-13 12:56:42,185:INFO:gpu_param set to False
2020-10-13 12:56:53,071:INFO:Initializing compare_models()
2020-10-13 12:56:53,071:INFO:compare_models(include=None, fold=5, round=4, cross_validation=True, sort=RMSE, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=['ransac', 'knn'])
2020-10-13 12:56:53,071:INFO:Checking exceptions
2020-10-13 12:56:53,072:INFO:Preparing display monitor
2020-10-13 12:56:53,073:INFO:Preparing display monitor
2020-10-13 12:56:53,108:INFO:Initializing Linear Regression
2020-10-13 12:56:53,108:INFO:Total runtime is 3.2703081766764323e-06 minutes
2020-10-13 12:56:53,115:INFO:SubProcess create_model() called ==================================
2020-10-13 12:56:53,116:INFO:Initializing create_model()
2020-10-13 12:56:53,116:INFO:create_model(estimator=lr, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:56:53,116:INFO:Checking exceptions
2020-10-13 12:56:53,117:INFO:Importing libraries
2020-10-13 12:56:53,117:INFO:Copying training dataset
2020-10-13 12:56:53,118:INFO:Defining folds
2020-10-13 12:56:53,118:INFO:Declaring metric variables
2020-10-13 12:56:53,127:INFO:Importing untrained model
2020-10-13 12:56:53,135:INFO:Linear Regression Imported succesfully
2020-10-13 12:56:53,151:INFO:Starting cross validation
2020-10-13 12:56:53,161:INFO:Cross validating with n_jobs=-1
2020-10-13 12:56:57,031:INFO:Calculating mean and std
2020-10-13 12:56:57,039:INFO:Creating metrics dataframe
2020-10-13 12:56:57,066:INFO:Uploading results into container
2020-10-13 12:56:57,066:INFO:Uploading model into container now
2020-10-13 12:56:57,066:INFO:create_model_container: 1
2020-10-13 12:56:57,067:INFO:master_model_container: 1
2020-10-13 12:56:57,067:INFO:display_container: 1
2020-10-13 12:56:57,068:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-13 12:56:57,069:INFO:create_model() succesfully completed......................................
2020-10-13 12:56:57,413:INFO:SubProcess create_model() end ==================================
2020-10-13 12:56:57,413:INFO:Creating metrics dataframe
2020-10-13 12:56:57,433:INFO:Initializing Lasso Regression
2020-10-13 12:56:57,433:INFO:Total runtime is 0.07209275166193645 minutes
2020-10-13 12:56:57,442:INFO:SubProcess create_model() called ==================================
2020-10-13 12:56:57,443:INFO:Initializing create_model()
2020-10-13 12:56:57,443:INFO:create_model(estimator=lasso, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:56:57,443:INFO:Checking exceptions
2020-10-13 12:56:57,444:INFO:Importing libraries
2020-10-13 12:56:57,444:INFO:Copying training dataset
2020-10-13 12:56:57,445:INFO:Defining folds
2020-10-13 12:56:57,446:INFO:Declaring metric variables
2020-10-13 12:56:57,454:INFO:Importing untrained model
2020-10-13 12:56:57,462:INFO:Lasso Regression Imported succesfully
2020-10-13 12:56:57,477:INFO:Starting cross validation
2020-10-13 12:56:57,478:INFO:Cross validating with n_jobs=-1
2020-10-13 12:56:59,523:INFO:Calculating mean and std
2020-10-13 12:56:59,525:INFO:Creating metrics dataframe
2020-10-13 12:56:59,534:INFO:Uploading results into container
2020-10-13 12:56:59,535:INFO:Uploading model into container now
2020-10-13 12:56:59,535:INFO:create_model_container: 2
2020-10-13 12:56:59,535:INFO:master_model_container: 2
2020-10-13 12:56:59,535:INFO:display_container: 1
2020-10-13 12:56:59,536:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False)
2020-10-13 12:56:59,536:INFO:create_model() succesfully completed......................................
2020-10-13 12:56:59,651:INFO:SubProcess create_model() end ==================================
2020-10-13 12:56:59,652:INFO:Creating metrics dataframe
2020-10-13 12:56:59,670:INFO:Initializing Ridge Regression
2020-10-13 12:56:59,670:INFO:Total runtime is 0.10937608083089193 minutes
2020-10-13 12:56:59,681:INFO:SubProcess create_model() called ==================================
2020-10-13 12:56:59,681:INFO:Initializing create_model()
2020-10-13 12:56:59,682:INFO:create_model(estimator=ridge, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:56:59,682:INFO:Checking exceptions
2020-10-13 12:56:59,682:INFO:Importing libraries
2020-10-13 12:56:59,682:INFO:Copying training dataset
2020-10-13 12:56:59,683:INFO:Defining folds
2020-10-13 12:56:59,683:INFO:Declaring metric variables
2020-10-13 12:56:59,690:INFO:Importing untrained model
2020-10-13 12:56:59,697:INFO:Ridge Regression Imported succesfully
2020-10-13 12:56:59,714:INFO:Starting cross validation
2020-10-13 12:56:59,714:INFO:Cross validating with n_jobs=-1
2020-10-13 12:56:59,763:INFO:Calculating mean and std
2020-10-13 12:56:59,764:INFO:Creating metrics dataframe
2020-10-13 12:56:59,768:INFO:Uploading results into container
2020-10-13 12:56:59,768:INFO:Uploading model into container now
2020-10-13 12:56:59,768:INFO:create_model_container: 3
2020-10-13 12:56:59,768:INFO:master_model_container: 3
2020-10-13 12:56:59,768:INFO:display_container: 1
2020-10-13 12:56:59,769:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001)
2020-10-13 12:56:59,769:INFO:create_model() succesfully completed......................................
2020-10-13 12:56:59,898:INFO:SubProcess create_model() end ==================================
2020-10-13 12:56:59,898:INFO:Creating metrics dataframe
2020-10-13 12:56:59,921:INFO:Initializing Elastic Net
2020-10-13 12:56:59,922:INFO:Total runtime is 0.11356895367304484 minutes
2020-10-13 12:56:59,932:INFO:SubProcess create_model() called ==================================
2020-10-13 12:56:59,933:INFO:Initializing create_model()
2020-10-13 12:56:59,933:INFO:create_model(estimator=en, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:56:59,933:INFO:Checking exceptions
2020-10-13 12:56:59,933:INFO:Importing libraries
2020-10-13 12:56:59,933:INFO:Copying training dataset
2020-10-13 12:56:59,934:INFO:Defining folds
2020-10-13 12:56:59,934:INFO:Declaring metric variables
2020-10-13 12:56:59,945:INFO:Importing untrained model
2020-10-13 12:56:59,957:INFO:Elastic Net Imported succesfully
2020-10-13 12:56:59,977:INFO:Starting cross validation
2020-10-13 12:56:59,978:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:00,017:INFO:Calculating mean and std
2020-10-13 12:57:00,018:INFO:Creating metrics dataframe
2020-10-13 12:57:00,021:INFO:Uploading results into container
2020-10-13 12:57:00,022:INFO:Uploading model into container now
2020-10-13 12:57:00,022:INFO:create_model_container: 4
2020-10-13 12:57:00,022:INFO:master_model_container: 4
2020-10-13 12:57:00,022:INFO:display_container: 1
2020-10-13 12:57:00,022:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False)
2020-10-13 12:57:00,022:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:00,185:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:00,185:INFO:Creating metrics dataframe
2020-10-13 12:57:00,225:INFO:Initializing Least Angle Regression
2020-10-13 12:57:00,226:INFO:Total runtime is 0.11863507032394409 minutes
2020-10-13 12:57:00,236:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:00,236:INFO:Initializing create_model()
2020-10-13 12:57:00,236:INFO:create_model(estimator=lar, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:00,236:INFO:Checking exceptions
2020-10-13 12:57:00,237:INFO:Importing libraries
2020-10-13 12:57:00,237:INFO:Copying training dataset
2020-10-13 12:57:00,239:INFO:Defining folds
2020-10-13 12:57:00,239:INFO:Declaring metric variables
2020-10-13 12:57:00,247:INFO:Importing untrained model
2020-10-13 12:57:00,258:INFO:Least Angle Regression Imported succesfully
2020-10-13 12:57:00,288:INFO:Starting cross validation
2020-10-13 12:57:00,289:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:00,336:INFO:Calculating mean and std
2020-10-13 12:57:00,337:INFO:Creating metrics dataframe
2020-10-13 12:57:00,341:INFO:Uploading results into container
2020-10-13 12:57:00,341:INFO:Uploading model into container now
2020-10-13 12:57:00,341:INFO:create_model_container: 5
2020-10-13 12:57:00,341:INFO:master_model_container: 5
2020-10-13 12:57:00,341:INFO:display_container: 1
2020-10-13 12:57:00,342:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=786, verbose=False)
2020-10-13 12:57:00,342:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:00,453:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:00,453:INFO:Creating metrics dataframe
2020-10-13 12:57:00,478:INFO:Initializing Lasso Least Angle Regression
2020-10-13 12:57:00,478:INFO:Total runtime is 0.12284313440322876 minutes
2020-10-13 12:57:00,487:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:00,487:INFO:Initializing create_model()
2020-10-13 12:57:00,487:INFO:create_model(estimator=llar, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:00,488:INFO:Checking exceptions
2020-10-13 12:57:00,488:INFO:Importing libraries
2020-10-13 12:57:00,488:INFO:Copying training dataset
2020-10-13 12:57:00,489:INFO:Defining folds
2020-10-13 12:57:00,489:INFO:Declaring metric variables
2020-10-13 12:57:00,499:INFO:Importing untrained model
2020-10-13 12:57:00,509:INFO:Lasso Least Angle Regression Imported succesfully
2020-10-13 12:57:00,535:INFO:Starting cross validation
2020-10-13 12:57:00,536:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:00,580:INFO:Calculating mean and std
2020-10-13 12:57:00,582:INFO:Creating metrics dataframe
2020-10-13 12:57:00,586:INFO:Uploading results into container
2020-10-13 12:57:00,586:INFO:Uploading model into container now
2020-10-13 12:57:00,586:INFO:create_model_container: 6
2020-10-13 12:57:00,586:INFO:master_model_container: 6
2020-10-13 12:57:00,586:INFO:display_container: 1
2020-10-13 12:57:00,586:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=786, verbose=False)
2020-10-13 12:57:00,586:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:00,700:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:00,700:INFO:Creating metrics dataframe
2020-10-13 12:57:00,748:INFO:Initializing Orthogonal Matching Pursuit
2020-10-13 12:57:00,749:INFO:Total runtime is 0.12734968264897664 minutes
2020-10-13 12:57:00,757:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:00,758:INFO:Initializing create_model()
2020-10-13 12:57:00,758:INFO:create_model(estimator=omp, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:00,758:INFO:Checking exceptions
2020-10-13 12:57:00,758:INFO:Importing libraries
2020-10-13 12:57:00,758:INFO:Copying training dataset
2020-10-13 12:57:00,759:INFO:Defining folds
2020-10-13 12:57:00,759:INFO:Declaring metric variables
2020-10-13 12:57:00,771:INFO:Importing untrained model
2020-10-13 12:57:00,780:INFO:Orthogonal Matching Pursuit Imported succesfully
2020-10-13 12:57:00,815:INFO:Starting cross validation
2020-10-13 12:57:00,816:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:00,849:INFO:Calculating mean and std
2020-10-13 12:57:00,850:INFO:Creating metrics dataframe
2020-10-13 12:57:00,854:INFO:Uploading results into container
2020-10-13 12:57:00,854:INFO:Uploading model into container now
2020-10-13 12:57:00,854:INFO:create_model_container: 7
2020-10-13 12:57:00,855:INFO:master_model_container: 7
2020-10-13 12:57:00,855:INFO:display_container: 1
2020-10-13 12:57:00,855:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2020-10-13 12:57:00,855:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:00,951:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:00,951:INFO:Creating metrics dataframe
2020-10-13 12:57:00,985:INFO:Initializing Bayesian Ridge
2020-10-13 12:57:00,986:INFO:Total runtime is 0.13130056460698444 minutes
2020-10-13 12:57:00,994:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:00,995:INFO:Initializing create_model()
2020-10-13 12:57:00,995:INFO:create_model(estimator=br, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:00,995:INFO:Checking exceptions
2020-10-13 12:57:00,995:INFO:Importing libraries
2020-10-13 12:57:00,996:INFO:Copying training dataset
2020-10-13 12:57:00,997:INFO:Defining folds
2020-10-13 12:57:00,997:INFO:Declaring metric variables
2020-10-13 12:57:01,011:INFO:Importing untrained model
2020-10-13 12:57:01,025:INFO:Bayesian Ridge Imported succesfully
2020-10-13 12:57:01,049:INFO:Starting cross validation
2020-10-13 12:57:01,050:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:01,119:INFO:Calculating mean and std
2020-10-13 12:57:01,120:INFO:Creating metrics dataframe
2020-10-13 12:57:01,126:INFO:Uploading results into container
2020-10-13 12:57:01,127:INFO:Uploading model into container now
2020-10-13 12:57:01,127:INFO:create_model_container: 8
2020-10-13 12:57:01,127:INFO:master_model_container: 8
2020-10-13 12:57:01,127:INFO:display_container: 1
2020-10-13 12:57:01,128:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2020-10-13 12:57:01,128:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:01,221:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:01,222:INFO:Creating metrics dataframe
2020-10-13 12:57:01,256:INFO:Initializing Passive Aggressive Regressor
2020-10-13 12:57:01,256:INFO:Total runtime is 0.13581008513768514 minutes
2020-10-13 12:57:01,266:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:01,266:INFO:Initializing create_model()
2020-10-13 12:57:01,266:INFO:create_model(estimator=par, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:01,266:INFO:Checking exceptions
2020-10-13 12:57:01,267:INFO:Importing libraries
2020-10-13 12:57:01,267:INFO:Copying training dataset
2020-10-13 12:57:01,268:INFO:Defining folds
2020-10-13 12:57:01,268:INFO:Declaring metric variables
2020-10-13 12:57:01,279:INFO:Importing untrained model
2020-10-13 12:57:01,295:INFO:Passive Aggressive Regressor Imported succesfully
2020-10-13 12:57:01,318:INFO:Starting cross validation
2020-10-13 12:57:01,319:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:01,362:INFO:Calculating mean and std
2020-10-13 12:57:01,363:INFO:Creating metrics dataframe
2020-10-13 12:57:01,367:INFO:Uploading results into container
2020-10-13 12:57:01,367:INFO:Uploading model into container now
2020-10-13 12:57:01,368:INFO:create_model_container: 9
2020-10-13 12:57:01,368:INFO:master_model_container: 9
2020-10-13 12:57:01,368:INFO:display_container: 1
2020-10-13 12:57:01,368:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=786, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-13 12:57:01,368:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:01,478:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:01,478:INFO:Creating metrics dataframe
2020-10-13 12:57:01,516:INFO:Initializing Huber Regressor
2020-10-13 12:57:01,516:INFO:Total runtime is 0.1401486873626709 minutes
2020-10-13 12:57:01,530:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:01,530:INFO:Initializing create_model()
2020-10-13 12:57:01,530:INFO:create_model(estimator=huber, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:01,530:INFO:Checking exceptions
2020-10-13 12:57:01,530:INFO:Importing libraries
2020-10-13 12:57:01,531:INFO:Copying training dataset
2020-10-13 12:57:01,532:INFO:Defining folds
2020-10-13 12:57:01,532:INFO:Declaring metric variables
2020-10-13 12:57:01,542:INFO:Importing untrained model
2020-10-13 12:57:01,550:INFO:Huber Regressor Imported succesfully
2020-10-13 12:57:01,578:INFO:Starting cross validation
2020-10-13 12:57:01,578:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:01,686:INFO:Calculating mean and std
2020-10-13 12:57:01,687:INFO:Creating metrics dataframe
2020-10-13 12:57:01,691:INFO:Uploading results into container
2020-10-13 12:57:01,692:INFO:Uploading model into container now
2020-10-13 12:57:01,692:INFO:create_model_container: 10
2020-10-13 12:57:01,692:INFO:master_model_container: 10
2020-10-13 12:57:01,692:INFO:display_container: 1
2020-10-13 12:57:01,692:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2020-10-13 12:57:01,692:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:01,846:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:01,846:INFO:Creating metrics dataframe
2020-10-13 12:57:01,906:INFO:Initializing Decision Tree Regressor
2020-10-13 12:57:01,906:INFO:Total runtime is 0.1466390013694763 minutes
2020-10-13 12:57:01,919:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:01,919:INFO:Initializing create_model()
2020-10-13 12:57:01,920:INFO:create_model(estimator=dt, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:01,920:INFO:Checking exceptions
2020-10-13 12:57:01,920:INFO:Importing libraries
2020-10-13 12:57:01,921:INFO:Copying training dataset
2020-10-13 12:57:01,922:INFO:Defining folds
2020-10-13 12:57:01,922:INFO:Declaring metric variables
2020-10-13 12:57:01,936:INFO:Importing untrained model
2020-10-13 12:57:01,948:INFO:Decision Tree Regressor Imported succesfully
2020-10-13 12:57:01,972:INFO:Starting cross validation
2020-10-13 12:57:01,973:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:02,017:INFO:Calculating mean and std
2020-10-13 12:57:02,018:INFO:Creating metrics dataframe
2020-10-13 12:57:02,023:INFO:Uploading results into container
2020-10-13 12:57:02,024:INFO:Uploading model into container now
2020-10-13 12:57:02,024:INFO:create_model_container: 11
2020-10-13 12:57:02,024:INFO:master_model_container: 11
2020-10-13 12:57:02,024:INFO:display_container: 1
2020-10-13 12:57:02,024:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=786, splitter='best')
2020-10-13 12:57:02,025:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:02,124:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:02,124:INFO:Creating metrics dataframe
2020-10-13 12:57:02,160:INFO:Initializing Random Forest Regressor
2020-10-13 12:57:02,160:INFO:Total runtime is 0.15087555249532061 minutes
2020-10-13 12:57:02,173:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:02,174:INFO:Initializing create_model()
2020-10-13 12:57:02,174:INFO:create_model(estimator=rf, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:02,174:INFO:Checking exceptions
2020-10-13 12:57:02,175:INFO:Importing libraries
2020-10-13 12:57:02,175:INFO:Copying training dataset
2020-10-13 12:57:02,176:INFO:Defining folds
2020-10-13 12:57:02,176:INFO:Declaring metric variables
2020-10-13 12:57:02,192:INFO:Importing untrained model
2020-10-13 12:57:02,207:INFO:Random Forest Regressor Imported succesfully
2020-10-13 12:57:02,242:INFO:Starting cross validation
2020-10-13 12:57:02,242:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:02,734:INFO:Calculating mean and std
2020-10-13 12:57:02,735:INFO:Creating metrics dataframe
2020-10-13 12:57:02,740:INFO:Uploading results into container
2020-10-13 12:57:02,740:INFO:Uploading model into container now
2020-10-13 12:57:02,740:INFO:create_model_container: 12
2020-10-13 12:57:02,740:INFO:master_model_container: 12
2020-10-13 12:57:02,740:INFO:display_container: 1
2020-10-13 12:57:02,740:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False)
2020-10-13 12:57:02,740:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:02,832:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:02,833:INFO:Creating metrics dataframe
2020-10-13 12:57:02,871:INFO:Initializing Extra Trees Regressor
2020-10-13 12:57:02,871:INFO:Total runtime is 0.16272258361180622 minutes
2020-10-13 12:57:02,881:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:02,881:INFO:Initializing create_model()
2020-10-13 12:57:02,881:INFO:create_model(estimator=et, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:02,881:INFO:Checking exceptions
2020-10-13 12:57:02,881:INFO:Importing libraries
2020-10-13 12:57:02,881:INFO:Copying training dataset
2020-10-13 12:57:02,882:INFO:Defining folds
2020-10-13 12:57:02,882:INFO:Declaring metric variables
2020-10-13 12:57:02,889:INFO:Importing untrained model
2020-10-13 12:57:02,897:INFO:Extra Trees Regressor Imported succesfully
2020-10-13 12:57:02,915:INFO:Starting cross validation
2020-10-13 12:57:02,915:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:03,289:INFO:Calculating mean and std
2020-10-13 12:57:03,290:INFO:Creating metrics dataframe
2020-10-13 12:57:03,294:INFO:Uploading results into container
2020-10-13 12:57:03,294:INFO:Uploading model into container now
2020-10-13 12:57:03,295:INFO:create_model_container: 13
2020-10-13 12:57:03,295:INFO:master_model_container: 13
2020-10-13 12:57:03,295:INFO:display_container: 1
2020-10-13 12:57:03,295:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False)
2020-10-13 12:57:03,295:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:03,379:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:03,379:INFO:Creating metrics dataframe
2020-10-13 12:57:03,431:INFO:Initializing AdaBoost Regressor
2020-10-13 12:57:03,431:INFO:Total runtime is 0.17205631732940674 minutes
2020-10-13 12:57:03,439:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:03,439:INFO:Initializing create_model()
2020-10-13 12:57:03,439:INFO:create_model(estimator=ada, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:03,439:INFO:Checking exceptions
2020-10-13 12:57:03,439:INFO:Importing libraries
2020-10-13 12:57:03,440:INFO:Copying training dataset
2020-10-13 12:57:03,440:INFO:Defining folds
2020-10-13 12:57:03,440:INFO:Declaring metric variables
2020-10-13 12:57:03,448:INFO:Importing untrained model
2020-10-13 12:57:03,455:INFO:AdaBoost Regressor Imported succesfully
2020-10-13 12:57:03,474:INFO:Starting cross validation
2020-10-13 12:57:03,475:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:03,692:INFO:Calculating mean and std
2020-10-13 12:57:03,693:INFO:Creating metrics dataframe
2020-10-13 12:57:03,697:INFO:Uploading results into container
2020-10-13 12:57:03,698:INFO:Uploading model into container now
2020-10-13 12:57:03,698:INFO:create_model_container: 14
2020-10-13 12:57:03,698:INFO:master_model_container: 14
2020-10-13 12:57:03,698:INFO:display_container: 1
2020-10-13 12:57:03,698:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=786)
2020-10-13 12:57:03,698:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:03,795:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:03,795:INFO:Creating metrics dataframe
2020-10-13 12:57:03,847:INFO:Initializing Gradient Boosting Regressor
2020-10-13 12:57:03,848:INFO:Total runtime is 0.17899985313415528 minutes
2020-10-13 12:57:03,855:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:03,856:INFO:Initializing create_model()
2020-10-13 12:57:03,856:INFO:create_model(estimator=gbr, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:03,856:INFO:Checking exceptions
2020-10-13 12:57:03,856:INFO:Importing libraries
2020-10-13 12:57:03,856:INFO:Copying training dataset
2020-10-13 12:57:03,858:INFO:Defining folds
2020-10-13 12:57:03,858:INFO:Declaring metric variables
2020-10-13 12:57:03,868:INFO:Importing untrained model
2020-10-13 12:57:03,878:INFO:Gradient Boosting Regressor Imported succesfully
2020-10-13 12:57:03,893:INFO:Starting cross validation
2020-10-13 12:57:03,894:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:04,033:INFO:Calculating mean and std
2020-10-13 12:57:04,035:INFO:Creating metrics dataframe
2020-10-13 12:57:04,039:INFO:Uploading results into container
2020-10-13 12:57:04,039:INFO:Uploading model into container now
2020-10-13 12:57:04,039:INFO:create_model_container: 15
2020-10-13 12:57:04,039:INFO:master_model_container: 15
2020-10-13 12:57:04,039:INFO:display_container: 1
2020-10-13 12:57:04,040:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-13 12:57:04,040:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:04,149:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:04,149:INFO:Creating metrics dataframe
2020-10-13 12:57:04,200:INFO:Initializing Extreme Gradient Boosting
2020-10-13 12:57:04,200:INFO:Total runtime is 0.18487211465835574 minutes
2020-10-13 12:57:04,208:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:04,208:INFO:Initializing create_model()
2020-10-13 12:57:04,209:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:04,209:INFO:Checking exceptions
2020-10-13 12:57:04,209:INFO:Importing libraries
2020-10-13 12:57:04,209:INFO:Copying training dataset
2020-10-13 12:57:04,209:INFO:Defining folds
2020-10-13 12:57:04,210:INFO:Declaring metric variables
2020-10-13 12:57:04,259:INFO:Importing untrained model
2020-10-13 12:57:04,270:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-13 12:57:04,301:INFO:Starting cross validation
2020-10-13 12:57:04,304:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:05,492:INFO:Calculating mean and std
2020-10-13 12:57:05,494:INFO:Creating metrics dataframe
2020-10-13 12:57:05,499:INFO:Uploading results into container
2020-10-13 12:57:05,499:INFO:Uploading model into container now
2020-10-13 12:57:05,499:INFO:create_model_container: 16
2020-10-13 12:57:05,499:INFO:master_model_container: 16
2020-10-13 12:57:05,499:INFO:display_container: 1
2020-10-13 12:57:05,500:INFO:XGBRegressor(base_score=None, booster='gbtree', colsample_bylevel=None,
             colsample_bynode=None, colsample_bytree=None, gamma=None,
             gpu_id=None, importance_type='gain', interaction_constraints=None,
             learning_rate=None, max_delta_step=None, max_depth=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             objective='reg:squarederror', random_state=786, reg_alpha=None,
             reg_lambda=None, scale_pos_weight=None, subsample=None,
             tree_method='auto', validate_parameters=None, verbosity=0)
2020-10-13 12:57:05,500:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:05,602:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:05,602:INFO:Creating metrics dataframe
2020-10-13 12:57:05,657:INFO:Initializing Light Gradient Boosting Machine
2020-10-13 12:57:05,657:INFO:Total runtime is 0.20915361642837527 minutes
2020-10-13 12:57:05,666:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:05,667:INFO:Initializing create_model()
2020-10-13 12:57:05,667:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:05,667:INFO:Checking exceptions
2020-10-13 12:57:05,667:INFO:Importing libraries
2020-10-13 12:57:05,667:INFO:Copying training dataset
2020-10-13 12:57:05,668:INFO:Defining folds
2020-10-13 12:57:05,668:INFO:Declaring metric variables
2020-10-13 12:57:05,679:INFO:Importing untrained model
2020-10-13 12:57:05,688:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-13 12:57:05,704:INFO:Starting cross validation
2020-10-13 12:57:05,704:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:05,784:INFO:Calculating mean and std
2020-10-13 12:57:05,789:INFO:Creating metrics dataframe
2020-10-13 12:57:05,795:INFO:Uploading results into container
2020-10-13 12:57:05,795:INFO:Uploading model into container now
2020-10-13 12:57:05,795:INFO:create_model_container: 17
2020-10-13 12:57:05,795:INFO:master_model_container: 17
2020-10-13 12:57:05,796:INFO:display_container: 1
2020-10-13 12:57:05,796:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-13 12:57:05,796:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:05,903:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:05,903:INFO:Creating metrics dataframe
2020-10-13 12:57:05,956:INFO:Initializing CatBoost Regressor
2020-10-13 12:57:05,956:INFO:Total runtime is 0.2141485333442688 minutes
2020-10-13 12:57:05,970:INFO:SubProcess create_model() called ==================================
2020-10-13 12:57:05,975:INFO:Initializing create_model()
2020-10-13 12:57:05,975:INFO:create_model(estimator=catboost, fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={})
2020-10-13 12:57:05,976:INFO:Checking exceptions
2020-10-13 12:57:05,976:INFO:Importing libraries
2020-10-13 12:57:05,976:INFO:Copying training dataset
2020-10-13 12:57:05,978:INFO:Defining folds
2020-10-13 12:57:05,978:INFO:Declaring metric variables
2020-10-13 12:57:05,989:INFO:Importing untrained model
2020-10-13 12:57:06,002:INFO:CatBoost Regressor Imported succesfully
2020-10-13 12:57:06,021:INFO:Starting cross validation
2020-10-13 12:57:06,023:INFO:Cross validating with n_jobs=-1
2020-10-13 12:57:18,206:INFO:Calculating mean and std
2020-10-13 12:57:18,211:INFO:Creating metrics dataframe
2020-10-13 12:57:18,232:INFO:Uploading results into container
2020-10-13 12:57:18,232:INFO:Uploading model into container now
2020-10-13 12:57:18,232:INFO:create_model_container: 18
2020-10-13 12:57:18,233:INFO:master_model_container: 18
2020-10-13 12:57:18,233:INFO:display_container: 1
2020-10-13 12:57:18,233:INFO:<catboost.core.CatBoostRegressor object at 0x7ffc90b66ee0>
2020-10-13 12:57:18,233:INFO:create_model() succesfully completed......................................
2020-10-13 12:57:18,617:INFO:SubProcess create_model() end ==================================
2020-10-13 12:57:18,618:INFO:Creating metrics dataframe
2020-10-13 12:57:18,732:INFO:Initializing create_model()
2020-10-13 12:57:18,732:INFO:create_model(estimator=BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-13 12:57:18,732:INFO:Checking exceptions
2020-10-13 12:57:18,733:INFO:Importing libraries
2020-10-13 12:57:18,733:INFO:Copying training dataset
2020-10-13 12:57:18,735:INFO:Defining folds
2020-10-13 12:57:18,735:INFO:Declaring metric variables
2020-10-13 12:57:18,735:INFO:Importing untrained model
2020-10-13 12:57:18,735:INFO:Declaring custom model
2020-10-13 12:57:18,739:INFO:Bayesian Ridge Imported succesfully
2020-10-13 12:57:18,740:INFO:Cross validation set to False
2020-10-13 12:57:18,740:INFO:Fitting Model
2020-10-13 12:57:18,761:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2020-10-13 12:57:18,762:INFO:create_models() succesfully completed......................................
2020-10-13 12:57:18,879:INFO:Creating MLFlow logs
2020-10-13 12:57:18,896:INFO:Model: Bayesian Ridge
2020-10-13 12:57:18,914:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2020-10-13 12:57:18,948:INFO:Initializing predict_model()
2020-10-13 12:57:18,948:INFO:predict_model(estimator=BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:57:18,948:INFO:Checking exceptions
2020-10-13 12:57:18,948:INFO:Preloading libraries
2020-10-13 12:57:19,085:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:57:19,086:INFO:Initializing plot_model()
2020-10-13 12:57:19,086:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:19,086:INFO:Checking exceptions
2020-10-13 12:57:19,087:INFO:Preloading libraries
2020-10-13 12:57:19,087:INFO:Copying training dataset
2020-10-13 12:57:19,087:INFO:Copying test dataset
2020-10-13 12:57:19,087:INFO:Plot type: residuals
2020-10-13 12:57:19,292:INFO:Fitting Model
2020-10-13 12:57:19,333:INFO:Scoring test/hold-out set
2020-10-13 12:57:19,373:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:57:20,181:INFO:Visual Rendered Successfully
2020-10-13 12:57:20,288:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:20,295:INFO:Initializing plot_model()
2020-10-13 12:57:20,295:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:20,295:INFO:Checking exceptions
2020-10-13 12:57:20,296:INFO:Preloading libraries
2020-10-13 12:57:20,296:INFO:Copying training dataset
2020-10-13 12:57:20,296:INFO:Copying test dataset
2020-10-13 12:57:20,297:INFO:Plot type: error
2020-10-13 12:57:20,298:INFO:Fitting Model
2020-10-13 12:57:20,298:INFO:Scoring test/hold-out set
2020-10-13 12:57:20,320:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:57:20,573:INFO:Visual Rendered Successfully
2020-10-13 12:57:20,696:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:20,728:INFO:Initializing plot_model()
2020-10-13 12:57:20,728:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:20,728:INFO:Checking exceptions
2020-10-13 12:57:20,728:INFO:Preloading libraries
2020-10-13 12:57:20,728:INFO:Copying training dataset
2020-10-13 12:57:20,772:INFO:Copying test dataset
2020-10-13 12:57:20,773:INFO:Plot type: feature
2020-10-13 12:57:20,806:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-13 12:57:20,982:INFO:Visual Rendered Successfully
2020-10-13 12:57:21,140:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:21,147:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:57:21,319:INFO:Initializing create_model()
2020-10-13 12:57:21,319:INFO:create_model(estimator=ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-13 12:57:21,320:INFO:Checking exceptions
2020-10-13 12:57:21,320:INFO:Importing libraries
2020-10-13 12:57:21,320:INFO:Copying training dataset
2020-10-13 12:57:21,320:INFO:Defining folds
2020-10-13 12:57:21,321:INFO:Declaring metric variables
2020-10-13 12:57:21,321:INFO:Importing untrained model
2020-10-13 12:57:21,321:INFO:Declaring custom model
2020-10-13 12:57:21,321:INFO:Elastic Net Imported succesfully
2020-10-13 12:57:21,322:INFO:Cross validation set to False
2020-10-13 12:57:21,322:INFO:Fitting Model
2020-10-13 12:57:21,334:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False)
2020-10-13 12:57:21,334:INFO:create_models() succesfully completed......................................
2020-10-13 12:57:21,439:INFO:Creating MLFlow logs
2020-10-13 12:57:21,451:INFO:Model: Elastic Net
2020-10-13 12:57:21,460:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2020-10-13 12:57:21,494:INFO:Initializing predict_model()
2020-10-13 12:57:21,494:INFO:predict_model(estimator=ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:57:21,494:INFO:Checking exceptions
2020-10-13 12:57:21,494:INFO:Preloading libraries
2020-10-13 12:57:21,742:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:57:21,745:INFO:Initializing plot_model()
2020-10-13 12:57:21,746:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:21,746:INFO:Checking exceptions
2020-10-13 12:57:21,746:INFO:Preloading libraries
2020-10-13 12:57:21,746:INFO:Copying training dataset
2020-10-13 12:57:21,746:INFO:Copying test dataset
2020-10-13 12:57:21,747:INFO:Plot type: residuals
2020-10-13 12:57:21,786:INFO:Fitting Model
2020-10-13 12:57:21,848:INFO:Scoring test/hold-out set
2020-10-13 12:57:21,888:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:57:22,274:INFO:Visual Rendered Successfully
2020-10-13 12:57:22,441:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:22,447:INFO:Initializing plot_model()
2020-10-13 12:57:22,447:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:22,447:INFO:Checking exceptions
2020-10-13 12:57:22,447:INFO:Preloading libraries
2020-10-13 12:57:22,448:INFO:Copying training dataset
2020-10-13 12:57:22,448:INFO:Copying test dataset
2020-10-13 12:57:22,448:INFO:Plot type: error
2020-10-13 12:57:22,451:INFO:Fitting Model
2020-10-13 12:57:22,451:INFO:Scoring test/hold-out set
2020-10-13 12:57:22,472:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:57:22,662:INFO:Visual Rendered Successfully
2020-10-13 12:57:22,875:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:22,887:INFO:Initializing plot_model()
2020-10-13 12:57:22,887:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:22,887:INFO:Checking exceptions
2020-10-13 12:57:22,888:INFO:Preloading libraries
2020-10-13 12:57:22,888:INFO:Copying training dataset
2020-10-13 12:57:22,889:INFO:Copying test dataset
2020-10-13 12:57:22,889:INFO:Plot type: feature
2020-10-13 12:57:22,921:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-13 12:57:23,055:INFO:Visual Rendered Successfully
2020-10-13 12:57:23,195:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:23,212:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:57:23,504:INFO:Initializing create_model()
2020-10-13 12:57:23,504:INFO:create_model(estimator=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-13 12:57:23,504:INFO:Checking exceptions
2020-10-13 12:57:23,504:INFO:Importing libraries
2020-10-13 12:57:23,504:INFO:Copying training dataset
2020-10-13 12:57:23,505:INFO:Defining folds
2020-10-13 12:57:23,505:INFO:Declaring metric variables
2020-10-13 12:57:23,505:INFO:Importing untrained model
2020-10-13 12:57:23,505:INFO:Declaring custom model
2020-10-13 12:57:23,505:INFO:Lasso Regression Imported succesfully
2020-10-13 12:57:23,506:INFO:Cross validation set to False
2020-10-13 12:57:23,506:INFO:Fitting Model
2020-10-13 12:57:23,514:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False)
2020-10-13 12:57:23,514:INFO:create_models() succesfully completed......................................
2020-10-13 12:57:23,996:INFO:Creating MLFlow logs
2020-10-13 12:57:24,133:INFO:Model: Lasso Regression
2020-10-13 12:57:24,149:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2020-10-13 12:57:24,186:INFO:Initializing predict_model()
2020-10-13 12:57:24,186:INFO:predict_model(estimator=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:57:24,186:INFO:Checking exceptions
2020-10-13 12:57:24,186:INFO:Preloading libraries
2020-10-13 12:57:24,361:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:57:24,362:INFO:Initializing plot_model()
2020-10-13 12:57:24,362:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:24,362:INFO:Checking exceptions
2020-10-13 12:57:24,363:INFO:Preloading libraries
2020-10-13 12:57:24,363:INFO:Copying training dataset
2020-10-13 12:57:24,363:INFO:Copying test dataset
2020-10-13 12:57:24,364:INFO:Plot type: residuals
2020-10-13 12:57:24,417:INFO:Fitting Model
2020-10-13 12:57:24,515:INFO:Scoring test/hold-out set
2020-10-13 12:57:24,577:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:57:25,003:INFO:Visual Rendered Successfully
2020-10-13 12:57:25,144:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:25,152:INFO:Initializing plot_model()
2020-10-13 12:57:25,152:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:25,152:INFO:Checking exceptions
2020-10-13 12:57:25,152:INFO:Preloading libraries
2020-10-13 12:57:25,152:INFO:Copying training dataset
2020-10-13 12:57:25,153:INFO:Copying test dataset
2020-10-13 12:57:25,153:INFO:Plot type: error
2020-10-13 12:57:25,158:INFO:Fitting Model
2020-10-13 12:57:25,159:INFO:Scoring test/hold-out set
2020-10-13 12:57:25,191:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:57:25,367:INFO:Visual Rendered Successfully
2020-10-13 12:57:25,496:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:25,506:INFO:Initializing plot_model()
2020-10-13 12:57:25,506:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:25,506:INFO:Checking exceptions
2020-10-13 12:57:25,506:INFO:Preloading libraries
2020-10-13 12:57:25,506:INFO:Copying training dataset
2020-10-13 12:57:25,507:INFO:Copying test dataset
2020-10-13 12:57:25,507:INFO:Plot type: feature
2020-10-13 12:57:25,537:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-13 12:57:25,660:INFO:Visual Rendered Successfully
2020-10-13 12:57:25,762:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:25,768:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:57:25,967:INFO:Initializing create_model()
2020-10-13 12:57:25,968:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-13 12:57:25,971:INFO:Checking exceptions
2020-10-13 12:57:25,972:INFO:Importing libraries
2020-10-13 12:57:25,972:INFO:Copying training dataset
2020-10-13 12:57:25,973:INFO:Defining folds
2020-10-13 12:57:25,973:INFO:Declaring metric variables
2020-10-13 12:57:25,973:INFO:Importing untrained model
2020-10-13 12:57:25,973:INFO:Declaring custom model
2020-10-13 12:57:25,974:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-13 12:57:25,974:INFO:Cross validation set to False
2020-10-13 12:57:25,974:INFO:Fitting Model
2020-10-13 12:57:26,199:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-13 12:57:26,199:INFO:create_models() succesfully completed......................................
2020-10-13 12:57:26,311:INFO:Creating MLFlow logs
2020-10-13 12:57:26,327:INFO:Model: Light Gradient Boosting Machine
2020-10-13 12:57:26,340:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2020-10-13 12:57:26,396:INFO:Initializing predict_model()
2020-10-13 12:57:26,397:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:57:26,397:INFO:Checking exceptions
2020-10-13 12:57:26,397:INFO:Preloading libraries
2020-10-13 12:57:26,534:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:57:26,535:INFO:Initializing plot_model()
2020-10-13 12:57:26,535:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:26,535:INFO:Checking exceptions
2020-10-13 12:57:26,535:INFO:Preloading libraries
2020-10-13 12:57:26,537:INFO:Copying training dataset
2020-10-13 12:57:26,538:INFO:Copying test dataset
2020-10-13 12:57:26,539:INFO:Plot type: residuals
2020-10-13 12:57:26,565:INFO:Fitting Model
2020-10-13 12:57:26,603:INFO:Scoring test/hold-out set
2020-10-13 12:57:26,642:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:57:26,900:INFO:Visual Rendered Successfully
2020-10-13 12:57:26,999:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:27,006:INFO:Initializing plot_model()
2020-10-13 12:57:27,007:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:27,007:INFO:Checking exceptions
2020-10-13 12:57:27,007:INFO:Preloading libraries
2020-10-13 12:57:27,010:INFO:Copying training dataset
2020-10-13 12:57:27,011:INFO:Copying test dataset
2020-10-13 12:57:27,012:INFO:Plot type: error
2020-10-13 12:57:27,013:INFO:Fitting Model
2020-10-13 12:57:27,014:INFO:Scoring test/hold-out set
2020-10-13 12:57:27,036:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:57:27,181:INFO:Visual Rendered Successfully
2020-10-13 12:57:27,285:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:27,296:INFO:Initializing plot_model()
2020-10-13 12:57:27,296:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:27,296:INFO:Checking exceptions
2020-10-13 12:57:27,296:INFO:Preloading libraries
2020-10-13 12:57:27,299:INFO:Copying training dataset
2020-10-13 12:57:27,300:INFO:Copying test dataset
2020-10-13 12:57:27,300:INFO:Plot type: feature
2020-10-13 12:57:27,302:WARNING:No coef_ found. Trying feature_importances_
2020-10-13 12:57:27,329:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-13 12:57:27,432:INFO:Visual Rendered Successfully
2020-10-13 12:57:27,529:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:27,537:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:57:27,683:INFO:Initializing create_model()
2020-10-13 12:57:27,684:INFO:create_model(estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-13 12:57:27,684:INFO:Checking exceptions
2020-10-13 12:57:27,685:INFO:Importing libraries
2020-10-13 12:57:27,685:INFO:Copying training dataset
2020-10-13 12:57:27,686:INFO:Defining folds
2020-10-13 12:57:27,686:INFO:Declaring metric variables
2020-10-13 12:57:27,686:INFO:Importing untrained model
2020-10-13 12:57:27,686:INFO:Declaring custom model
2020-10-13 12:57:27,686:INFO:Ridge Regression Imported succesfully
2020-10-13 12:57:27,687:INFO:Cross validation set to False
2020-10-13 12:57:27,687:INFO:Fitting Model
2020-10-13 12:57:27,697:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001)
2020-10-13 12:57:27,697:INFO:create_models() succesfully completed......................................
2020-10-13 12:57:27,863:INFO:Creating MLFlow logs
2020-10-13 12:57:27,878:INFO:Model: Ridge Regression
2020-10-13 12:57:27,896:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2020-10-13 12:57:27,932:INFO:Initializing predict_model()
2020-10-13 12:57:27,932:INFO:predict_model(estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:57:27,932:INFO:Checking exceptions
2020-10-13 12:57:27,932:INFO:Preloading libraries
2020-10-13 12:57:28,128:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:57:28,129:INFO:Initializing plot_model()
2020-10-13 12:57:28,129:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:28,129:INFO:Checking exceptions
2020-10-13 12:57:28,129:INFO:Preloading libraries
2020-10-13 12:57:28,129:INFO:Copying training dataset
2020-10-13 12:57:28,130:INFO:Copying test dataset
2020-10-13 12:57:28,130:INFO:Plot type: residuals
2020-10-13 12:57:28,172:INFO:Fitting Model
2020-10-13 12:57:28,215:INFO:Scoring test/hold-out set
2020-10-13 12:57:28,256:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:57:28,507:INFO:Visual Rendered Successfully
2020-10-13 12:57:28,605:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:28,611:INFO:Initializing plot_model()
2020-10-13 12:57:28,611:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:28,611:INFO:Checking exceptions
2020-10-13 12:57:28,611:INFO:Preloading libraries
2020-10-13 12:57:28,612:INFO:Copying training dataset
2020-10-13 12:57:28,612:INFO:Copying test dataset
2020-10-13 12:57:28,612:INFO:Plot type: error
2020-10-13 12:57:28,614:INFO:Fitting Model
2020-10-13 12:57:28,614:INFO:Scoring test/hold-out set
2020-10-13 12:57:28,632:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:57:28,755:INFO:Visual Rendered Successfully
2020-10-13 12:57:28,878:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:28,886:INFO:Initializing plot_model()
2020-10-13 12:57:28,886:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:57:28,886:INFO:Checking exceptions
2020-10-13 12:57:28,886:INFO:Preloading libraries
2020-10-13 12:57:28,887:INFO:Copying training dataset
2020-10-13 12:57:28,887:INFO:Copying test dataset
2020-10-13 12:57:28,888:INFO:Plot type: feature
2020-10-13 12:57:28,912:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-13 12:57:29,001:INFO:Visual Rendered Successfully
2020-10-13 12:57:29,094:INFO:plot_model() succesfully completed......................................
2020-10-13 12:57:29,100:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:57:29,233:INFO:Creating MLFlow logs
2020-10-13 12:57:29,246:INFO:Model: Least Angle Regression
2020-10-13 12:57:29,257:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2020-10-13 12:57:29,442:INFO:Creating MLFlow logs
2020-10-13 12:57:29,452:INFO:Model: CatBoost Regressor
2020-10-13 12:57:29,461:INFO:logged params: {'loss_function': 'RMSE', 'border_count': 254, 'verbose': False, 'task_type': 'CPU', 'random_state': 786}
2020-10-13 12:57:29,620:INFO:Creating MLFlow logs
2020-10-13 12:57:29,630:INFO:Model: Passive Aggressive Regressor
2020-10-13 12:57:29,639:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2020-10-13 12:57:29,809:INFO:Creating MLFlow logs
2020-10-13 12:57:29,819:INFO:Model: Extra Trees Regressor
2020-10-13 12:57:29,829:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2020-10-13 12:57:30,022:INFO:Creating MLFlow logs
2020-10-13 12:57:30,037:INFO:Model: AdaBoost Regressor
2020-10-13 12:57:30,052:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2020-10-13 12:57:30,259:INFO:Creating MLFlow logs
2020-10-13 12:57:30,271:INFO:Model: Extreme Gradient Boosting
2020-10-13 12:57:30,279:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2020-10-13 12:57:30,488:INFO:Creating MLFlow logs
2020-10-13 12:57:30,503:INFO:Model: Random Forest Regressor
2020-10-13 12:57:30,516:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2020-10-13 12:57:30,710:INFO:Creating MLFlow logs
2020-10-13 12:57:30,720:INFO:Model: Gradient Boosting Regressor
2020-10-13 12:57:30,729:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2020-10-13 12:57:30,928:INFO:Creating MLFlow logs
2020-10-13 12:57:30,938:INFO:Model: Orthogonal Matching Pursuit
2020-10-13 12:57:30,949:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2020-10-13 12:57:31,137:INFO:Creating MLFlow logs
2020-10-13 12:57:31,152:INFO:Model: Linear Regression
2020-10-13 12:57:31,161:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2020-10-13 12:57:31,335:INFO:Creating MLFlow logs
2020-10-13 12:57:31,354:INFO:Model: Decision Tree Regressor
2020-10-13 12:57:31,370:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2020-10-13 12:57:31,560:INFO:Creating MLFlow logs
2020-10-13 12:57:31,570:INFO:Model: Huber Regressor
2020-10-13 12:57:31,580:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2020-10-13 12:57:31,766:INFO:Creating MLFlow logs
2020-10-13 12:57:31,778:INFO:Model: Least Angle Regression
2020-10-13 12:57:31,788:INFO:logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'normalize': True, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2020-10-13 12:57:32,164:INFO:create_model_container: 18
2020-10-13 12:57:32,164:INFO:master_model_container: 18
2020-10-13 12:57:32,164:INFO:display_container: 1
2020-10-13 12:57:32,170:INFO:[BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False), Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001)]
2020-10-13 12:57:32,171:INFO:compare_models() succesfully completed......................................
2020-10-13 12:58:22,349:INFO:Initializing tune_model()
2020-10-13 12:58:22,350:INFO:tune_model(estimator=BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-13 12:58:22,350:INFO:Checking exceptions
2020-10-13 12:58:22,352:INFO:Preparing display monitor
2020-10-13 12:58:22,378:INFO:Copying training dataset
2020-10-13 12:58:22,379:INFO:Checking base model
2020-10-13 12:58:22,380:INFO:Base model : Bayesian Ridge
2020-10-13 12:58:22,390:INFO:Declaring metric variables
2020-10-13 12:58:22,400:INFO:Defining Hyperparameters
2020-10-13 12:58:22,877:INFO:Tuning with n_jobs=-1
2020-10-13 12:58:22,877:INFO:Initializing RandomizedSearchCV
2020-10-13 12:58:24,892:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__lambda_2': 0.3, 'actual_estimator__lambda_1': 1e-06, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': True, 'actual_estimator__alpha_2': 0.2, 'actual_estimator__alpha_1': 0.001}
2020-10-13 12:58:24,893:INFO:Random search completed
2020-10-13 12:58:24,893:INFO:SubProcess create_model() called ==================================
2020-10-13 12:58:24,894:INFO:Initializing create_model()
2020-10-13 12:58:24,894:INFO:create_model(estimator=BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffca694dd90>, kwargs={'normalize': False, 'lambda_2': 0.3, 'lambda_1': 1e-06, 'fit_intercept': True, 'compute_score': True, 'alpha_2': 0.2, 'alpha_1': 0.001})
2020-10-13 12:58:24,894:INFO:Checking exceptions
2020-10-13 12:58:24,894:INFO:Importing libraries
2020-10-13 12:58:24,894:INFO:Copying training dataset
2020-10-13 12:58:24,895:INFO:Defining folds
2020-10-13 12:58:24,895:INFO:Declaring metric variables
2020-10-13 12:58:24,905:INFO:Importing untrained model
2020-10-13 12:58:24,906:INFO:Declaring custom model
2020-10-13 12:58:24,915:INFO:Bayesian Ridge Imported succesfully
2020-10-13 12:58:24,933:INFO:Starting cross validation
2020-10-13 12:58:24,933:INFO:Cross validating with n_jobs=-1
2020-10-13 12:58:24,969:INFO:Calculating mean and std
2020-10-13 12:58:24,970:INFO:Creating metrics dataframe
2020-10-13 12:58:24,984:INFO:Finalizing model
2020-10-13 12:58:24,992:INFO:Uploading results into container
2020-10-13 12:58:24,992:INFO:Uploading model into container now
2020-10-13 12:58:24,993:INFO:create_model_container: 19
2020-10-13 12:58:24,993:INFO:master_model_container: 19
2020-10-13 12:58:24,993:INFO:display_container: 2
2020-10-13 12:58:24,993:INFO:BayesianRidge(alpha_1=0.001, alpha_2=0.2, alpha_init=None, compute_score=True,
              copy_X=True, fit_intercept=True, lambda_1=1e-06, lambda_2=0.3,
              lambda_init=None, n_iter=300, normalize=False, tol=0.001,
              verbose=False)
2020-10-13 12:58:24,993:INFO:create_model() succesfully completed......................................
2020-10-13 12:58:25,103:INFO:SubProcess create_model() end ==================================
2020-10-13 12:58:25,103:INFO:Creating MLFlow logs
2020-10-13 12:58:25,116:INFO:Model: Bayesian Ridge
2020-10-13 12:58:25,129:INFO:logged params: {'alpha_1': 0.001, 'alpha_2': 0.2, 'alpha_init': None, 'compute_score': True, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 0.3, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2020-10-13 12:58:25,157:INFO:Initializing predict_model()
2020-10-13 12:58:25,157:INFO:predict_model(estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2, alpha_init=None, compute_score=True,
              copy_X=True, fit_intercept=True, lambda_1=1e-06, lambda_2=0.3,
              lambda_init=None, n_iter=300, normalize=False, tol=0.001,
              verbose=False), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:58:25,157:INFO:Checking exceptions
2020-10-13 12:58:25,157:INFO:Preloading libraries
2020-10-13 12:58:25,285:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:58:25,286:INFO:Initializing plot_model()
2020-10-13 12:58:25,286:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2, alpha_init=None, compute_score=True,
              copy_X=True, fit_intercept=True, lambda_1=1e-06, lambda_2=0.3,
              lambda_init=None, n_iter=300, normalize=False, tol=0.001,
              verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:25,286:INFO:Checking exceptions
2020-10-13 12:58:25,287:INFO:Preloading libraries
2020-10-13 12:58:25,289:INFO:Copying training dataset
2020-10-13 12:58:25,289:INFO:Copying test dataset
2020-10-13 12:58:25,291:INFO:Plot type: residuals
2020-10-13 12:58:25,319:INFO:Fitting Model
2020-10-13 12:58:25,366:INFO:Scoring test/hold-out set
2020-10-13 12:58:25,411:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:58:25,754:INFO:Visual Rendered Successfully
2020-10-13 12:58:25,886:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:25,893:INFO:Initializing plot_model()
2020-10-13 12:58:25,894:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2, alpha_init=None, compute_score=True,
              copy_X=True, fit_intercept=True, lambda_1=1e-06, lambda_2=0.3,
              lambda_init=None, n_iter=300, normalize=False, tol=0.001,
              verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:25,894:INFO:Checking exceptions
2020-10-13 12:58:25,894:INFO:Preloading libraries
2020-10-13 12:58:25,894:INFO:Copying training dataset
2020-10-13 12:58:25,894:INFO:Copying test dataset
2020-10-13 12:58:25,895:INFO:Plot type: error
2020-10-13 12:58:25,896:INFO:Fitting Model
2020-10-13 12:58:25,896:INFO:Scoring test/hold-out set
2020-10-13 12:58:25,918:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:58:26,060:INFO:Visual Rendered Successfully
2020-10-13 12:58:26,215:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:26,225:INFO:Initializing plot_model()
2020-10-13 12:58:26,225:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2, alpha_init=None, compute_score=True,
              copy_X=True, fit_intercept=True, lambda_1=1e-06, lambda_2=0.3,
              lambda_init=None, n_iter=300, normalize=False, tol=0.001,
              verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:26,225:INFO:Checking exceptions
2020-10-13 12:58:26,225:INFO:Preloading libraries
2020-10-13 12:58:26,225:INFO:Copying training dataset
2020-10-13 12:58:26,226:INFO:Copying test dataset
2020-10-13 12:58:26,226:INFO:Plot type: feature
2020-10-13 12:58:26,285:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-13 12:58:26,435:INFO:Visual Rendered Successfully
2020-10-13 12:58:26,551:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:26,558:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:58:26,788:INFO:create_model_container: 19
2020-10-13 12:58:26,789:INFO:master_model_container: 19
2020-10-13 12:58:26,789:INFO:display_container: 2
2020-10-13 12:58:26,790:INFO:BayesianRidge(alpha_1=0.001, alpha_2=0.2, alpha_init=None, compute_score=True,
              copy_X=True, fit_intercept=True, lambda_1=1e-06, lambda_2=0.3,
              lambda_init=None, n_iter=300, normalize=False, tol=0.001,
              verbose=False)
2020-10-13 12:58:26,791:INFO:tune_model() succesfully completed......................................
2020-10-13 12:58:26,908:INFO:Initializing tune_model()
2020-10-13 12:58:26,908:INFO:tune_model(estimator=ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-13 12:58:26,908:INFO:Checking exceptions
2020-10-13 12:58:26,908:INFO:Preparing display monitor
2020-10-13 12:58:26,934:INFO:Copying training dataset
2020-10-13 12:58:26,935:INFO:Checking base model
2020-10-13 12:58:26,936:INFO:Base model : Elastic Net
2020-10-13 12:58:26,949:INFO:Declaring metric variables
2020-10-13 12:58:26,967:INFO:Defining Hyperparameters
2020-10-13 12:58:27,085:INFO:Tuning with n_jobs=-1
2020-10-13 12:58:27,085:INFO:Initializing RandomizedSearchCV
2020-10-13 12:58:28,772:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__l1_ratio': 0.788999999999999, 'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 0.14}
2020-10-13 12:58:28,773:INFO:Random search completed
2020-10-13 12:58:28,774:INFO:SubProcess create_model() called ==================================
2020-10-13 12:58:28,774:INFO:Initializing create_model()
2020-10-13 12:58:28,775:INFO:create_model(estimator=ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffcab967760>, kwargs={'normalize': False, 'l1_ratio': 0.788999999999999, 'fit_intercept': True, 'alpha': 0.14})
2020-10-13 12:58:28,775:INFO:Checking exceptions
2020-10-13 12:58:28,775:INFO:Importing libraries
2020-10-13 12:58:28,775:INFO:Copying training dataset
2020-10-13 12:58:28,776:INFO:Defining folds
2020-10-13 12:58:28,776:INFO:Declaring metric variables
2020-10-13 12:58:28,787:INFO:Importing untrained model
2020-10-13 12:58:28,787:INFO:Declaring custom model
2020-10-13 12:58:28,798:INFO:Elastic Net Imported succesfully
2020-10-13 12:58:28,819:INFO:Starting cross validation
2020-10-13 12:58:28,819:INFO:Cross validating with n_jobs=-1
2020-10-13 12:58:28,858:INFO:Calculating mean and std
2020-10-13 12:58:28,859:INFO:Creating metrics dataframe
2020-10-13 12:58:28,871:INFO:Finalizing model
2020-10-13 12:58:28,878:INFO:Uploading results into container
2020-10-13 12:58:28,878:INFO:Uploading model into container now
2020-10-13 12:58:28,878:INFO:create_model_container: 20
2020-10-13 12:58:28,878:INFO:master_model_container: 20
2020-10-13 12:58:28,878:INFO:display_container: 3
2020-10-13 12:58:28,879:INFO:ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False)
2020-10-13 12:58:28,879:INFO:create_model() succesfully completed......................................
2020-10-13 12:58:28,981:INFO:SubProcess create_model() end ==================================
2020-10-13 12:58:28,981:INFO:Creating MLFlow logs
2020-10-13 12:58:28,996:INFO:Model: Elastic Net
2020-10-13 12:58:29,008:INFO:logged params: {'alpha': 0.14, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.788999999999999, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2020-10-13 12:58:29,041:INFO:Initializing predict_model()
2020-10-13 12:58:29,041:INFO:predict_model(estimator=ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:58:29,041:INFO:Checking exceptions
2020-10-13 12:58:29,041:INFO:Preloading libraries
2020-10-13 12:58:29,151:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:58:29,151:INFO:Initializing plot_model()
2020-10-13 12:58:29,151:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:29,152:INFO:Checking exceptions
2020-10-13 12:58:29,152:INFO:Preloading libraries
2020-10-13 12:58:29,152:INFO:Copying training dataset
2020-10-13 12:58:29,154:INFO:Copying test dataset
2020-10-13 12:58:29,155:INFO:Plot type: residuals
2020-10-13 12:58:29,190:INFO:Fitting Model
2020-10-13 12:58:29,236:INFO:Scoring test/hold-out set
2020-10-13 12:58:29,287:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:58:29,588:INFO:Visual Rendered Successfully
2020-10-13 12:58:29,721:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:29,728:INFO:Initializing plot_model()
2020-10-13 12:58:29,728:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:29,729:INFO:Checking exceptions
2020-10-13 12:58:29,729:INFO:Preloading libraries
2020-10-13 12:58:29,729:INFO:Copying training dataset
2020-10-13 12:58:29,729:INFO:Copying test dataset
2020-10-13 12:58:29,730:INFO:Plot type: error
2020-10-13 12:58:29,732:INFO:Fitting Model
2020-10-13 12:58:29,732:INFO:Scoring test/hold-out set
2020-10-13 12:58:29,754:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:58:29,936:INFO:Visual Rendered Successfully
2020-10-13 12:58:30,036:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:30,041:INFO:Initializing plot_model()
2020-10-13 12:58:30,041:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:30,041:INFO:Checking exceptions
2020-10-13 12:58:30,041:INFO:Preloading libraries
2020-10-13 12:58:30,041:INFO:Copying training dataset
2020-10-13 12:58:30,041:INFO:Copying test dataset
2020-10-13 12:58:30,042:INFO:Plot type: feature
2020-10-13 12:58:30,063:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-13 12:58:30,168:INFO:Visual Rendered Successfully
2020-10-13 12:58:30,261:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:30,269:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:58:30,488:INFO:create_model_container: 20
2020-10-13 12:58:30,488:INFO:master_model_container: 20
2020-10-13 12:58:30,488:INFO:display_container: 3
2020-10-13 12:58:30,489:INFO:ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False)
2020-10-13 12:58:30,489:INFO:tune_model() succesfully completed......................................
2020-10-13 12:58:30,589:INFO:Initializing tune_model()
2020-10-13 12:58:30,589:INFO:tune_model(estimator=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-13 12:58:30,589:INFO:Checking exceptions
2020-10-13 12:58:30,589:INFO:Preparing display monitor
2020-10-13 12:58:30,613:INFO:Copying training dataset
2020-10-13 12:58:30,614:INFO:Checking base model
2020-10-13 12:58:30,614:INFO:Base model : Lasso Regression
2020-10-13 12:58:30,623:INFO:Declaring metric variables
2020-10-13 12:58:30,630:INFO:Defining Hyperparameters
2020-10-13 12:58:30,776:INFO:Tuning with n_jobs=-1
2020-10-13 12:58:30,776:INFO:Initializing RandomizedSearchCV
2020-10-13 12:58:32,534:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 0.33}
2020-10-13 12:58:32,535:INFO:Random search completed
2020-10-13 12:58:32,535:INFO:SubProcess create_model() called ==================================
2020-10-13 12:58:32,536:INFO:Initializing create_model()
2020-10-13 12:58:32,536:INFO:create_model(estimator=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffcab95c970>, kwargs={'normalize': False, 'fit_intercept': True, 'alpha': 0.33})
2020-10-13 12:58:32,536:INFO:Checking exceptions
2020-10-13 12:58:32,536:INFO:Importing libraries
2020-10-13 12:58:32,536:INFO:Copying training dataset
2020-10-13 12:58:32,537:INFO:Defining folds
2020-10-13 12:58:32,537:INFO:Declaring metric variables
2020-10-13 12:58:32,546:INFO:Importing untrained model
2020-10-13 12:58:32,546:INFO:Declaring custom model
2020-10-13 12:58:32,554:INFO:Lasso Regression Imported succesfully
2020-10-13 12:58:32,573:INFO:Starting cross validation
2020-10-13 12:58:32,574:INFO:Cross validating with n_jobs=-1
2020-10-13 12:58:32,612:INFO:Calculating mean and std
2020-10-13 12:58:32,613:INFO:Creating metrics dataframe
2020-10-13 12:58:32,626:INFO:Finalizing model
2020-10-13 12:58:32,630:INFO:Uploading results into container
2020-10-13 12:58:32,630:INFO:Uploading model into container now
2020-10-13 12:58:32,630:INFO:create_model_container: 21
2020-10-13 12:58:32,631:INFO:master_model_container: 21
2020-10-13 12:58:32,631:INFO:display_container: 4
2020-10-13 12:58:32,631:INFO:Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False)
2020-10-13 12:58:32,631:INFO:create_model() succesfully completed......................................
2020-10-13 12:58:32,730:INFO:SubProcess create_model() end ==================================
2020-10-13 12:58:32,731:INFO:Creating MLFlow logs
2020-10-13 12:58:32,743:INFO:Model: Lasso Regression
2020-10-13 12:58:32,758:INFO:logged params: {'alpha': 0.33, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2020-10-13 12:58:32,794:INFO:Initializing predict_model()
2020-10-13 12:58:32,794:INFO:predict_model(estimator=Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:58:32,794:INFO:Checking exceptions
2020-10-13 12:58:32,794:INFO:Preloading libraries
2020-10-13 12:58:32,941:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:58:32,942:INFO:Initializing plot_model()
2020-10-13 12:58:32,942:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:32,942:INFO:Checking exceptions
2020-10-13 12:58:32,942:INFO:Preloading libraries
2020-10-13 12:58:32,942:INFO:Copying training dataset
2020-10-13 12:58:32,943:INFO:Copying test dataset
2020-10-13 12:58:32,943:INFO:Plot type: residuals
2020-10-13 12:58:32,975:INFO:Fitting Model
2020-10-13 12:58:33,028:INFO:Scoring test/hold-out set
2020-10-13 12:58:33,080:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:58:33,457:INFO:Visual Rendered Successfully
2020-10-13 12:58:33,584:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:33,591:INFO:Initializing plot_model()
2020-10-13 12:58:33,591:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:33,591:INFO:Checking exceptions
2020-10-13 12:58:33,591:INFO:Preloading libraries
2020-10-13 12:58:33,592:INFO:Copying training dataset
2020-10-13 12:58:33,592:INFO:Copying test dataset
2020-10-13 12:58:33,592:INFO:Plot type: error
2020-10-13 12:58:33,594:INFO:Fitting Model
2020-10-13 12:58:33,594:INFO:Scoring test/hold-out set
2020-10-13 12:58:33,626:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:58:33,815:INFO:Visual Rendered Successfully
2020-10-13 12:58:33,988:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:33,995:INFO:Initializing plot_model()
2020-10-13 12:58:33,995:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:33,996:INFO:Checking exceptions
2020-10-13 12:58:33,996:INFO:Preloading libraries
2020-10-13 12:58:33,996:INFO:Copying training dataset
2020-10-13 12:58:33,996:INFO:Copying test dataset
2020-10-13 12:58:33,997:INFO:Plot type: feature
2020-10-13 12:58:34,027:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-13 12:58:34,138:INFO:Visual Rendered Successfully
2020-10-13 12:58:34,247:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:34,256:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:58:34,520:INFO:create_model_container: 21
2020-10-13 12:58:34,520:INFO:master_model_container: 21
2020-10-13 12:58:34,520:INFO:display_container: 4
2020-10-13 12:58:34,521:INFO:Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False)
2020-10-13 12:58:34,521:INFO:tune_model() succesfully completed......................................
2020-10-13 12:58:34,656:INFO:Initializing tune_model()
2020-10-13 12:58:34,656:INFO:tune_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-13 12:58:34,656:INFO:Checking exceptions
2020-10-13 12:58:34,656:INFO:Preparing display monitor
2020-10-13 12:58:34,677:INFO:Copying training dataset
2020-10-13 12:58:34,678:INFO:Checking base model
2020-10-13 12:58:34,679:INFO:Base model : Light Gradient Boosting Machine
2020-10-13 12:58:34,687:INFO:Declaring metric variables
2020-10-13 12:58:34,694:INFO:Defining Hyperparameters
2020-10-13 12:58:34,815:INFO:Tuning with n_jobs=-1
2020-10-13 12:58:34,815:INFO:Initializing RandomizedSearchCV
2020-10-13 12:58:37,995:INFO:best_params: {'actual_estimator__reg_lambda': 1, 'actual_estimator__reg_alpha': 0.2, 'actual_estimator__num_leaves': 200, 'actual_estimator__n_estimators': 130, 'actual_estimator__min_split_gain': 0.9, 'actual_estimator__min_child_samples': 20, 'actual_estimator__learning_rate': 0.153, 'actual_estimator__feature_fraction': 0.4, 'actual_estimator__bagging_freq': 3, 'actual_estimator__bagging_fraction': 0.7}
2020-10-13 12:58:37,996:INFO:Random search completed
2020-10-13 12:58:37,996:INFO:SubProcess create_model() called ==================================
2020-10-13 12:58:37,996:INFO:Initializing create_model()
2020-10-13 12:58:37,996:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffcabfc9fd0>, kwargs={'reg_lambda': 1, 'reg_alpha': 0.2, 'num_leaves': 200, 'n_estimators': 130, 'min_split_gain': 0.9, 'min_child_samples': 20, 'learning_rate': 0.153, 'feature_fraction': 0.4, 'bagging_freq': 3, 'bagging_fraction': 0.7})
2020-10-13 12:58:37,997:INFO:Checking exceptions
2020-10-13 12:58:37,997:INFO:Importing libraries
2020-10-13 12:58:37,997:INFO:Copying training dataset
2020-10-13 12:58:37,998:INFO:Defining folds
2020-10-13 12:58:37,998:INFO:Declaring metric variables
2020-10-13 12:58:38,006:INFO:Importing untrained model
2020-10-13 12:58:38,006:INFO:Declaring custom model
2020-10-13 12:58:38,014:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-13 12:58:38,033:INFO:Starting cross validation
2020-10-13 12:58:38,034:INFO:Cross validating with n_jobs=-1
2020-10-13 12:58:38,093:INFO:Calculating mean and std
2020-10-13 12:58:38,094:INFO:Creating metrics dataframe
2020-10-13 12:58:38,108:INFO:Finalizing model
2020-10-13 12:58:38,271:INFO:Uploading results into container
2020-10-13 12:58:38,272:INFO:Uploading model into container now
2020-10-13 12:58:38,272:INFO:create_model_container: 22
2020-10-13 12:58:38,272:INFO:master_model_container: 22
2020-10-13 12:58:38,272:INFO:display_container: 5
2020-10-13 12:58:38,273:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=3, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.4,
              importance_type='split', learning_rate=0.153, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.9,
              n_estimators=130, n_jobs=-1, num_leaves=200, objective=None,
              random_state=786, reg_alpha=0.2, reg_lambda=1, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-13 12:58:38,273:INFO:create_model() succesfully completed......................................
2020-10-13 12:58:38,428:INFO:SubProcess create_model() end ==================================
2020-10-13 12:58:38,428:INFO:Creating MLFlow logs
2020-10-13 12:58:38,462:INFO:Model: Light Gradient Boosting Machine
2020-10-13 12:58:38,477:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.153, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.9, 'n_estimators': 130, 'n_jobs': -1, 'num_leaves': 200, 'objective': None, 'random_state': 786, 'reg_alpha': 0.2, 'reg_lambda': 1, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'feature_fraction': 0.4, 'bagging_freq': 3, 'bagging_fraction': 0.7}
2020-10-13 12:58:38,515:INFO:Initializing predict_model()
2020-10-13 12:58:38,515:INFO:predict_model(estimator=LGBMRegressor(bagging_fraction=0.7, bagging_freq=3, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.4,
              importance_type='split', learning_rate=0.153, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.9,
              n_estimators=130, n_jobs=-1, num_leaves=200, objective=None,
              random_state=786, reg_alpha=0.2, reg_lambda=1, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:58:38,515:INFO:Checking exceptions
2020-10-13 12:58:38,515:INFO:Preloading libraries
2020-10-13 12:58:38,665:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:58:38,665:INFO:Initializing plot_model()
2020-10-13 12:58:38,666:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=LGBMRegressor(bagging_fraction=0.7, bagging_freq=3, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.4,
              importance_type='split', learning_rate=0.153, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.9,
              n_estimators=130, n_jobs=-1, num_leaves=200, objective=None,
              random_state=786, reg_alpha=0.2, reg_lambda=1, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:38,666:INFO:Checking exceptions
2020-10-13 12:58:38,666:INFO:Preloading libraries
2020-10-13 12:58:38,668:INFO:Copying training dataset
2020-10-13 12:58:38,669:INFO:Copying test dataset
2020-10-13 12:58:38,669:INFO:Plot type: residuals
2020-10-13 12:58:38,711:INFO:Fitting Model
2020-10-13 12:58:38,760:INFO:Scoring test/hold-out set
2020-10-13 12:58:38,818:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:58:39,198:INFO:Visual Rendered Successfully
2020-10-13 12:58:39,322:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:39,329:INFO:Initializing plot_model()
2020-10-13 12:58:39,329:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=LGBMRegressor(bagging_fraction=0.7, bagging_freq=3, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.4,
              importance_type='split', learning_rate=0.153, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.9,
              n_estimators=130, n_jobs=-1, num_leaves=200, objective=None,
              random_state=786, reg_alpha=0.2, reg_lambda=1, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:39,329:INFO:Checking exceptions
2020-10-13 12:58:39,329:INFO:Preloading libraries
2020-10-13 12:58:39,332:INFO:Copying training dataset
2020-10-13 12:58:39,333:INFO:Copying test dataset
2020-10-13 12:58:39,335:INFO:Plot type: error
2020-10-13 12:58:39,337:INFO:Fitting Model
2020-10-13 12:58:39,337:INFO:Scoring test/hold-out set
2020-10-13 12:58:39,364:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:58:39,543:INFO:Visual Rendered Successfully
2020-10-13 12:58:39,654:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:39,663:INFO:Initializing plot_model()
2020-10-13 12:58:39,663:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=LGBMRegressor(bagging_fraction=0.7, bagging_freq=3, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.4,
              importance_type='split', learning_rate=0.153, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.9,
              n_estimators=130, n_jobs=-1, num_leaves=200, objective=None,
              random_state=786, reg_alpha=0.2, reg_lambda=1, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:39,663:INFO:Checking exceptions
2020-10-13 12:58:39,663:INFO:Preloading libraries
2020-10-13 12:58:39,666:INFO:Copying training dataset
2020-10-13 12:58:39,667:INFO:Copying test dataset
2020-10-13 12:58:39,667:INFO:Plot type: feature
2020-10-13 12:58:39,668:WARNING:No coef_ found. Trying feature_importances_
2020-10-13 12:58:39,699:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-13 12:58:39,841:INFO:Visual Rendered Successfully
2020-10-13 12:58:39,970:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:39,978:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:58:40,213:INFO:create_model_container: 22
2020-10-13 12:58:40,213:INFO:master_model_container: 22
2020-10-13 12:58:40,213:INFO:display_container: 5
2020-10-13 12:58:40,214:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=3, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.4,
              importance_type='split', learning_rate=0.153, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.9,
              n_estimators=130, n_jobs=-1, num_leaves=200, objective=None,
              random_state=786, reg_alpha=0.2, reg_lambda=1, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-13 12:58:40,214:INFO:tune_model() succesfully completed......................................
2020-10-13 12:58:40,366:INFO:Initializing tune_model()
2020-10-13 12:58:40,366:INFO:tune_model(estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-13 12:58:40,366:INFO:Checking exceptions
2020-10-13 12:58:40,366:INFO:Preparing display monitor
2020-10-13 12:58:40,386:INFO:Copying training dataset
2020-10-13 12:58:40,387:INFO:Checking base model
2020-10-13 12:58:40,388:INFO:Base model : Ridge Regression
2020-10-13 12:58:40,396:INFO:Declaring metric variables
2020-10-13 12:58:40,409:INFO:Defining Hyperparameters
2020-10-13 12:58:40,540:INFO:Tuning with n_jobs=-1
2020-10-13 12:58:40,540:INFO:Initializing RandomizedSearchCV
2020-10-13 12:58:41,954:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 9.3}
2020-10-13 12:58:41,954:INFO:Random search completed
2020-10-13 12:58:41,955:INFO:SubProcess create_model() called ==================================
2020-10-13 12:58:41,955:INFO:Initializing create_model()
2020-10-13 12:58:41,955:INFO:create_model(estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffc90f88730>, kwargs={'normalize': False, 'fit_intercept': True, 'alpha': 9.3})
2020-10-13 12:58:41,955:INFO:Checking exceptions
2020-10-13 12:58:41,955:INFO:Importing libraries
2020-10-13 12:58:41,956:INFO:Copying training dataset
2020-10-13 12:58:41,956:INFO:Defining folds
2020-10-13 12:58:41,957:INFO:Declaring metric variables
2020-10-13 12:58:41,964:INFO:Importing untrained model
2020-10-13 12:58:41,964:INFO:Declaring custom model
2020-10-13 12:58:41,972:INFO:Ridge Regression Imported succesfully
2020-10-13 12:58:41,991:INFO:Starting cross validation
2020-10-13 12:58:41,992:INFO:Cross validating with n_jobs=-1
2020-10-13 12:58:42,022:INFO:Calculating mean and std
2020-10-13 12:58:42,023:INFO:Creating metrics dataframe
2020-10-13 12:58:42,036:INFO:Finalizing model
2020-10-13 12:58:42,041:INFO:Uploading results into container
2020-10-13 12:58:42,041:INFO:Uploading model into container now
2020-10-13 12:58:42,041:INFO:create_model_container: 23
2020-10-13 12:58:42,042:INFO:master_model_container: 23
2020-10-13 12:58:42,042:INFO:display_container: 6
2020-10-13 12:58:42,042:INFO:Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001)
2020-10-13 12:58:42,042:INFO:create_model() succesfully completed......................................
2020-10-13 12:58:42,165:INFO:SubProcess create_model() end ==================================
2020-10-13 12:58:42,166:INFO:Creating MLFlow logs
2020-10-13 12:58:42,178:INFO:Model: Ridge Regression
2020-10-13 12:58:42,192:INFO:logged params: {'alpha': 9.3, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2020-10-13 12:58:42,240:INFO:Initializing predict_model()
2020-10-13 12:58:42,240:INFO:predict_model(estimator=Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:58:42,240:INFO:Checking exceptions
2020-10-13 12:58:42,240:INFO:Preloading libraries
2020-10-13 12:58:42,367:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:58:42,368:INFO:Initializing plot_model()
2020-10-13 12:58:42,368:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:42,368:INFO:Checking exceptions
2020-10-13 12:58:42,368:INFO:Preloading libraries
2020-10-13 12:58:42,368:INFO:Copying training dataset
2020-10-13 12:58:42,368:INFO:Copying test dataset
2020-10-13 12:58:42,369:INFO:Plot type: residuals
2020-10-13 12:58:42,398:INFO:Fitting Model
2020-10-13 12:58:42,437:INFO:Scoring test/hold-out set
2020-10-13 12:58:42,479:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:58:42,764:INFO:Visual Rendered Successfully
2020-10-13 12:58:42,869:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:42,874:INFO:Initializing plot_model()
2020-10-13 12:58:42,874:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:42,874:INFO:Checking exceptions
2020-10-13 12:58:42,874:INFO:Preloading libraries
2020-10-13 12:58:42,875:INFO:Copying training dataset
2020-10-13 12:58:42,875:INFO:Copying test dataset
2020-10-13 12:58:42,875:INFO:Plot type: error
2020-10-13 12:58:42,876:INFO:Fitting Model
2020-10-13 12:58:42,876:INFO:Scoring test/hold-out set
2020-10-13 12:58:42,892:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:58:43,028:INFO:Visual Rendered Successfully
2020-10-13 12:58:43,123:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:43,127:INFO:Initializing plot_model()
2020-10-13 12:58:43,128:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:43,128:INFO:Checking exceptions
2020-10-13 12:58:43,128:INFO:Preloading libraries
2020-10-13 12:58:43,128:INFO:Copying training dataset
2020-10-13 12:58:43,128:INFO:Copying test dataset
2020-10-13 12:58:43,128:INFO:Plot type: feature
2020-10-13 12:58:43,151:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-13 12:58:43,247:INFO:Visual Rendered Successfully
2020-10-13 12:58:43,392:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:43,396:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:58:43,611:INFO:create_model_container: 23
2020-10-13 12:58:43,611:INFO:master_model_container: 23
2020-10-13 12:58:43,611:INFO:display_container: 6
2020-10-13 12:58:43,612:INFO:Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001)
2020-10-13 12:58:43,612:INFO:tune_model() succesfully completed......................................
2020-10-13 12:58:48,093:INFO:Initializing blend_models()
2020-10-13 12:58:48,095:INFO:blend_models(estimator_list=[BayesianRidge(alpha_1=0.001, alpha_2=0.2, alpha_init=None, compute_score=True,
              copy_X=True, fit_intercept=True, lambda_1=1e-06, lambda_2=0.3,
              lambda_init=None, n_iter=300, normalize=False, tol=0.001,
              verbose=False), ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False), Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), LGBMRegressor(bagging_fraction=0.7, bagging_freq=3, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.4,
              importance_type='split', learning_rate=0.153, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.9,
              n_estimators=130, n_jobs=-1, num_leaves=200, objective=None,
              random_state=786, reg_alpha=0.2, reg_lambda=1, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001)], fold=5, round=4, choose_better=False, optimize=RMSE, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-10-13 12:58:48,095:INFO:Checking exceptions
2020-10-13 12:58:48,097:INFO:Preparing display monitor
2020-10-13 12:58:48,132:INFO:Importing libraries
2020-10-13 12:58:48,132:INFO:Copying training dataset
2020-10-13 12:58:48,143:INFO:Getting model names
2020-10-13 12:58:48,153:INFO:SubProcess create_model() called ==================================
2020-10-13 12:58:48,161:INFO:Initializing create_model()
2020-10-13 12:58:48,161:INFO:create_model(estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffc90eae520>, kwargs={})
2020-10-13 12:58:48,161:INFO:Checking exceptions
2020-10-13 12:58:48,162:INFO:Importing libraries
2020-10-13 12:58:48,162:INFO:Copying training dataset
2020-10-13 12:58:48,163:INFO:Defining folds
2020-10-13 12:58:48,163:INFO:Declaring metric variables
2020-10-13 12:58:48,170:INFO:Importing untrained model
2020-10-13 12:58:48,170:INFO:Declaring custom model
2020-10-13 12:58:48,178:INFO:Voting Regressor Imported succesfully
2020-10-13 12:58:48,198:INFO:Starting cross validation
2020-10-13 12:58:48,199:INFO:Cross validating with n_jobs=-1
2020-10-13 12:58:48,543:INFO:Calculating mean and std
2020-10-13 12:58:48,544:INFO:Creating metrics dataframe
2020-10-13 12:58:48,560:INFO:Finalizing model
2020-10-13 12:58:48,622:INFO:Uploading results into container
2020-10-13 12:58:48,622:INFO:Uploading model into container now
2020-10-13 12:58:48,622:INFO:create_model_container: 24
2020-10-13 12:58:48,622:INFO:master_model_container: 24
2020-10-13 12:58:48,622:INFO:display_container: 7
2020-10-13 12:58:48,630:INFO:TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1])
2020-10-13 12:58:48,630:INFO:create_model() succesfully completed......................................
2020-10-13 12:58:48,775:INFO:SubProcess create_model() end ==================================
2020-10-13 12:58:48,775:INFO:Creating MLFlow logs
2020-10-13 12:58:48,791:INFO:Model: Voting Regressor
2020-10-13 12:58:48,809:INFO:logged params: {'n_jobs': -1, 'verbose': False, 'weights': [1, 1, 1, 1, 1], 'en': ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False), 'lasso': Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), 'ridge': Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), 'br__alpha_1': 0.001, 'br__alpha_2': 0.2, 'br__alpha_init': None, 'br__compute_score': True, 'br__copy_X': True, 'br__fit_intercept': True, 'br__lambda_1': 1e-06, 'br__lambda_2': 0.3, 'br__lambda_init': None, 'br__n_iter': 300, 'br__normalize': False, 'br__tol': 0.001, 'br__verbose': False, 'en__alpha': 0.14, 'en__copy_X': True, 'en__fit_intercept': True, 'en__l1_ratio': 0.788999999999999, 'en__max_iter': 1000, 'en__normalize': False, 'en__positive': False, 'en__precompute': False, 'en__random_state': 786, 'en__selection': 'cyclic', 'en__tol': 0.0001, 'en__warm_start': False, 'lasso__alpha': 0.33, 'lasso__copy_X': True, 'lasso__fit_intercept': True, 'lasso__max_iter': 1000, 'lasso__normalize': False, 'lasso__positive': False, 'lasso__precompute': False, 'lasso__random_state': 786, 'lasso__selection': 'cyclic', 'lasso__tol': 0.0001, 'lasso__warm_start': False, 'lightgbm__boosting_type': 'gbdt', 'lightgbm__class_weight': None, 'lightgbm__colsample_bytree': 1.0, 'lightgbm__importance_type': 'split', 'lightgbm__learning_rate': 0.153, 'lightgbm__max_depth': -1, 'lightgbm__min_child_samples': 20, 'lightgbm__min_child_weight': 0.001, 'lightgbm__min_split_gain': 0.9, 'lightgbm__n_estimators': 130, 'lightgbm__n_jobs': -1, 'lightgbm__num_leaves': 200, 'lightgbm__objective': None, 'lightgbm__random_state': 786, 'lightgbm__reg_alpha': 0.2, 'lightgbm__reg_lambda': 1, 'lightgbm__silent': True, 'lightgbm__subsample': 1.0, 'lightgbm__subsample_for_bin': 200000, 'lightgbm__subsample_freq': 0, 'lightgbm__feature_fraction': 0.4, 'lightgbm__bagging_freq': 3, 'lightgbm__bagging_fraction': 0.7, 'ridge__alpha': 9.3, 'ridge__copy_X': True, 'ridge__fit_intercept': True, 'ridge__max_iter': None, 'ridge__normalize': False, 'ridge__random_state': 786, 'ridge__solver': 'auto', 'ridge__tol': 0.001, 'weight_0': 1, 'weight_1': 1, 'weight_2': 1, 'weight_3': 1, 'weight_4': 1}
2020-10-13 12:58:48,966:INFO:Initializing predict_model()
2020-10-13 12:58:48,966:INFO:predict_model(estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:58:48,967:INFO:Checking exceptions
2020-10-13 12:58:48,967:INFO:Preloading libraries
2020-10-13 12:58:49,134:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:58:49,144:INFO:Initializing plot_model()
2020-10-13 12:58:49,144:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:49,144:INFO:Checking exceptions
2020-10-13 12:58:49,144:INFO:Preloading libraries
2020-10-13 12:58:49,149:INFO:Copying training dataset
2020-10-13 12:58:49,150:INFO:Copying test dataset
2020-10-13 12:58:49,150:INFO:Plot type: residuals
2020-10-13 12:58:49,180:INFO:Fitting Model
2020-10-13 12:58:49,244:INFO:Scoring test/hold-out set
2020-10-13 12:58:49,344:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:58:49,812:INFO:Visual Rendered Successfully
2020-10-13 12:58:49,967:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:49,985:INFO:Initializing plot_model()
2020-10-13 12:58:49,985:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:49,985:INFO:Checking exceptions
2020-10-13 12:58:49,985:INFO:Preloading libraries
2020-10-13 12:58:50,000:INFO:Copying training dataset
2020-10-13 12:58:50,001:INFO:Copying test dataset
2020-10-13 12:58:50,001:INFO:Plot type: error
2020-10-13 12:58:50,003:INFO:Fitting Model
2020-10-13 12:58:50,005:INFO:Scoring test/hold-out set
2020-10-13 12:58:50,049:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:58:50,233:INFO:Visual Rendered Successfully
2020-10-13 12:58:50,359:INFO:plot_model() succesfully completed......................................
2020-10-13 12:58:50,376:INFO:Initializing plot_model()
2020-10-13 12:58:50,376:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:58:50,376:INFO:Checking exceptions
2020-10-13 12:58:50,376:WARNING:Feature Importance and RFE plots not available for estimators that doesnt support coef_ or feature_importances_ attribute.
2020-10-13 12:58:50,376:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:58:50,626:INFO:create_model_container: 24
2020-10-13 12:58:50,627:INFO:master_model_container: 24
2020-10-13 12:58:50,627:INFO:display_container: 7
2020-10-13 12:58:50,638:INFO:TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1])
2020-10-13 12:58:50,638:INFO:blend_models() succesfully completed......................................
2020-10-13 12:59:04,925:INFO:Initializing stack_models()
2020-10-13 12:59:04,926:INFO:stack_models(estimator_list=[ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False), Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), LGBMRegressor(bagging_fraction=0.7, bagging_freq=3, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.4,
              importance_type='split', learning_rate=0.153, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.9,
              n_estimators=130, n_jobs=-1, num_leaves=200, objective=None,
              random_state=786, reg_alpha=0.2, reg_lambda=1, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001)], meta_model=BayesianRidge(alpha_1=0.001, alpha_2=0.2, alpha_init=None, compute_score=True,
              copy_X=True, fit_intercept=True, lambda_1=1e-06, lambda_2=0.3,
              lambda_init=None, n_iter=300, normalize=False, tol=0.001,
              verbose=False), fold=5, round=4, method=auto, restack=True, choose_better=False, optimize=RMSE, fit_kwargs=None, groups=None, verbose=True, display=None)
2020-10-13 12:59:04,926:INFO:Checking exceptions
2020-10-13 12:59:04,927:INFO:Defining meta model
2020-10-13 12:59:04,928:INFO:Preparing display monitor
2020-10-13 12:59:04,963:INFO:Copying training dataset
2020-10-13 12:59:04,974:INFO:Getting model names
2020-10-13 12:59:04,976:INFO:[('en', ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False)), ('lasso', Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False)), ('lightgbm', LGBMRegressor(bagging_fraction=0.7, bagging_freq=3, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.4,
              importance_type='split', learning_rate=0.153, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.9,
              n_estimators=130, n_jobs=-1, num_leaves=200, objective=None,
              random_state=786, reg_alpha=0.2, reg_lambda=1, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)), ('ridge', Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001))]
2020-10-13 12:59:04,987:INFO:SubProcess create_model() called ==================================
2020-10-13 12:59:04,992:INFO:Initializing create_model()
2020-10-13 12:59:04,992:INFO:create_model(estimator=StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0), fold=KFold(n_splits=5, random_state=786, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7ffc90b44250>, kwargs={})
2020-10-13 12:59:04,992:INFO:Checking exceptions
2020-10-13 12:59:04,993:INFO:Importing libraries
2020-10-13 12:59:04,993:INFO:Copying training dataset
2020-10-13 12:59:04,993:INFO:Defining folds
2020-10-13 12:59:04,994:INFO:Declaring metric variables
2020-10-13 12:59:05,000:INFO:Importing untrained model
2020-10-13 12:59:05,000:INFO:Declaring custom model
2020-10-13 12:59:05,009:INFO:Stacking Regressor Imported succesfully
2020-10-13 12:59:05,028:INFO:Starting cross validation
2020-10-13 12:59:05,029:INFO:Cross validating with n_jobs=-1
2020-10-13 12:59:05,712:INFO:Calculating mean and std
2020-10-13 12:59:05,713:INFO:Creating metrics dataframe
2020-10-13 12:59:05,728:INFO:Finalizing model
2020-10-13 12:59:05,974:INFO:Uploading results into container
2020-10-13 12:59:05,993:INFO:Uploading model into container now
2020-10-13 12:59:05,993:INFO:create_model_container: 25
2020-10-13 12:59:05,993:INFO:master_model_container: 25
2020-10-13 12:59:05,993:INFO:display_container: 8
2020-10-13 12:59:06,001:INFO:StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0)
2020-10-13 12:59:06,001:INFO:create_model() succesfully completed......................................
2020-10-13 12:59:06,478:INFO:SubProcess create_model() end ==================================
2020-10-13 12:59:06,478:INFO:Creating MLFlow logs
2020-10-13 12:59:06,612:INFO:Model: Stacking Regressor
2020-10-13 12:59:06,634:INFO:logged params: {'cv': KFold(n_splits=5, random_state=786, shuffle=False), 'final_estimator__alpha_1': 0.001, 'final_estimator__alpha_2': 0.2, 'final_estimator__alpha_init': None, 'final_estimator__compute_score': True, 'final_estimator__copy_X': True, 'final_estimator__fit_intercept': True, 'final_estimator__lambda_1': 1e-06, 'final_estimator__lambda_2': 0.3, 'final_estimator__lambda_init': None, 'final_estimator__n_iter': 300, 'final_estimator__normalize': False, 'final_estimator__tol': 0.001, 'final_estimator__verbose': False, 'n_jobs': -1, 'passthrough': True, 'verbose': 0, 'en': ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False), 'lasso': Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), 'ridge': Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), 'en__alpha': 0.14, 'en__copy_X': True, 'en__fit_intercept': True, 'en__l1_ratio': 0.788999999999999, 'en__max_iter': 1000, 'en__normalize': False, 'en__positive': False, 'en__precompute': False, 'en__random_state': 786, 'en__selection': 'cyclic', 'en__tol': 0.0001, 'en__warm_start': False, 'lasso__alpha': 0.33, 'lasso__copy_X': True, 'lasso__fit_intercept': True, 'lasso__max_iter': 1000, 'lasso__normalize': False, 'lasso__positive': False, 'lasso__precompute': False, 'lasso__random_state': 786, 'lasso__selection': 'cyclic', 'lasso__tol': 0.0001, 'lasso__warm_start': False, 'lightgbm__boosting_type': 'gbdt', 'lightgbm__class_weight': None, 'lightgbm__colsample_bytree': 1.0, 'lightgbm__importance_type': 'split', 'lightgbm__learning_rate': 0.153, 'lightgbm__max_depth': -1, 'lightgbm__min_child_samples': 20, 'lightgbm__min_child_weight': 0.001, 'lightgbm__min_split_gain': 0.9, 'lightgbm__n_estimators': 130, 'lightgbm__n_jobs': -1, 'lightgbm__num_leaves': 200, 'lightgbm__objective': None, 'lightgbm__random_state': 786, 'lightgbm__reg_alpha': 0.2, 'lightgbm__reg_lambda': 1, 'lightgbm__silent': True, 'lightgbm__subsample': 1.0, 'lightgbm__subsample_for_bin': 200000, 'lightgbm__subsample_freq': 0, 'lightgbm__feature_fraction': 0.4, 'lightgbm__bagging_freq': 3, 'lightgbm__bagging_fraction': 0.7, 'ridge__alpha': 9.3, 'ridge__copy_X': True, 'ridge__fit_intercept': True, 'ridge__max_iter': None, 'ridge__normalize': False, 'ridge__random_state': 786, 'ridge__solver': 'auto', 'ridge__tol': 0.001}
2020-10-13 12:59:06,711:INFO:Initializing predict_model()
2020-10-13 12:59:06,711:INFO:predict_model(estimator=StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:59:06,711:INFO:Checking exceptions
2020-10-13 12:59:06,711:INFO:Preloading libraries
2020-10-13 12:59:06,899:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:59:06,906:INFO:Initializing plot_model()
2020-10-13 12:59:06,906:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:59:06,906:INFO:Checking exceptions
2020-10-13 12:59:06,906:INFO:Preloading libraries
2020-10-13 12:59:06,910:INFO:Copying training dataset
2020-10-13 12:59:06,911:INFO:Copying test dataset
2020-10-13 12:59:06,911:INFO:Plot type: residuals
2020-10-13 12:59:06,938:INFO:Fitting Model
2020-10-13 12:59:06,989:INFO:Scoring test/hold-out set
2020-10-13 12:59:07,051:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:59:07,507:INFO:Visual Rendered Successfully
2020-10-13 12:59:07,636:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:07,668:INFO:Initializing plot_model()
2020-10-13 12:59:07,668:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:59:07,668:INFO:Checking exceptions
2020-10-13 12:59:07,669:INFO:Preloading libraries
2020-10-13 12:59:07,686:INFO:Copying training dataset
2020-10-13 12:59:07,687:INFO:Copying test dataset
2020-10-13 12:59:07,688:INFO:Plot type: error
2020-10-13 12:59:07,690:INFO:Fitting Model
2020-10-13 12:59:07,691:INFO:Scoring test/hold-out set
2020-10-13 12:59:07,732:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:59:07,957:INFO:Visual Rendered Successfully
2020-10-13 12:59:08,141:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:08,163:INFO:Initializing plot_model()
2020-10-13 12:59:08,163:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:59:08,163:INFO:Checking exceptions
2020-10-13 12:59:08,164:WARNING:Feature Importance and RFE plots not available for estimators that doesnt support coef_ or feature_importances_ attribute.
2020-10-13 12:59:08,164:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:59:08,438:INFO:create_model_container: 25
2020-10-13 12:59:08,438:INFO:master_model_container: 25
2020-10-13 12:59:08,438:INFO:display_container: 8
2020-10-13 12:59:08,450:INFO:StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0)
2020-10-13 12:59:08,450:INFO:stack_models() succesfully completed......................................
2020-10-13 12:59:16,811:INFO:Initializing plot_model()
2020-10-13 12:59:16,812:INFO:plot_model(plot=cooks, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-10-13 12:59:16,812:INFO:Checking exceptions
2020-10-13 12:59:16,812:INFO:Preloading libraries
2020-10-13 12:59:16,817:INFO:Copying training dataset
2020-10-13 12:59:16,818:INFO:Copying test dataset
2020-10-13 12:59:16,818:INFO:Plot type: cooks
2020-10-13 12:59:16,821:INFO:Fitting Model
2020-10-13 12:59:16,920:INFO:Saving 'Cooks Distance.png' in current active directory
2020-10-13 12:59:17,246:INFO:Visual Rendered Successfully
2020-10-13 12:59:17,540:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:17,557:INFO:Initializing plot_model()
2020-10-13 12:59:17,557:INFO:plot_model(plot=manifold, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-10-13 12:59:17,557:INFO:Checking exceptions
2020-10-13 12:59:17,557:INFO:Preloading libraries
2020-10-13 12:59:17,560:INFO:Copying training dataset
2020-10-13 12:59:17,561:INFO:Copying test dataset
2020-10-13 12:59:17,561:INFO:Plot type: manifold
2020-10-13 12:59:17,597:INFO:Fitting & Transforming Model
2020-10-13 12:59:18,456:INFO:Saving 'Manifold Learning.png' in current active directory
2020-10-13 12:59:18,598:INFO:Visual Rendered Successfully
2020-10-13 12:59:18,691:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:18,919:INFO:Initializing plot_model()
2020-10-13 12:59:18,919:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-10-13 12:59:18,919:INFO:Checking exceptions
2020-10-13 12:59:18,919:INFO:Preloading libraries
2020-10-13 12:59:18,923:INFO:Copying training dataset
2020-10-13 12:59:18,924:INFO:Copying test dataset
2020-10-13 12:59:18,924:INFO:Plot type: residuals
2020-10-13 12:59:18,942:INFO:Fitting Model
2020-10-13 12:59:18,996:INFO:Scoring test/hold-out set
2020-10-13 12:59:19,047:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:59:19,419:INFO:Visual Rendered Successfully
2020-10-13 12:59:19,505:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:19,518:INFO:Initializing plot_model()
2020-10-13 12:59:19,518:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-10-13 12:59:19,518:INFO:Checking exceptions
2020-10-13 12:59:19,518:INFO:Preloading libraries
2020-10-13 12:59:19,520:INFO:Copying training dataset
2020-10-13 12:59:19,521:INFO:Copying test dataset
2020-10-13 12:59:19,521:INFO:Plot type: residuals
2020-10-13 12:59:19,547:INFO:Fitting Model
2020-10-13 12:59:19,597:INFO:Scoring test/hold-out set
2020-10-13 12:59:19,652:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:59:19,934:INFO:Visual Rendered Successfully
2020-10-13 12:59:20,025:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:20,039:INFO:Initializing plot_model()
2020-10-13 12:59:20,039:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-10-13 12:59:20,039:INFO:Checking exceptions
2020-10-13 12:59:20,039:INFO:Preloading libraries
2020-10-13 12:59:20,041:INFO:Copying training dataset
2020-10-13 12:59:20,042:INFO:Copying test dataset
2020-10-13 12:59:20,043:INFO:Plot type: error
2020-10-13 12:59:20,044:INFO:Fitting Model
2020-10-13 12:59:20,045:INFO:Scoring test/hold-out set
2020-10-13 12:59:20,078:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:59:20,211:INFO:Visual Rendered Successfully
2020-10-13 12:59:20,306:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:20,322:INFO:Initializing plot_model()
2020-10-13 12:59:20,322:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-10-13 12:59:20,322:INFO:Checking exceptions
2020-10-13 12:59:20,322:INFO:Preloading libraries
2020-10-13 12:59:20,325:INFO:Copying training dataset
2020-10-13 12:59:20,326:INFO:Copying test dataset
2020-10-13 12:59:20,326:INFO:Plot type: error
2020-10-13 12:59:20,328:INFO:Fitting Model
2020-10-13 12:59:20,328:INFO:Scoring test/hold-out set
2020-10-13 12:59:20,361:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:59:20,506:INFO:Visual Rendered Successfully
2020-10-13 12:59:20,606:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:20,622:INFO:Initializing plot_model()
2020-10-13 12:59:20,622:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-10-13 12:59:20,622:INFO:Checking exceptions
2020-10-13 12:59:20,623:INFO:Preloading libraries
2020-10-13 12:59:20,625:INFO:Copying training dataset
2020-10-13 12:59:20,626:INFO:Copying test dataset
2020-10-13 12:59:20,626:INFO:Plot type: learning
2020-10-13 12:59:20,639:INFO:Fitting Model
2020-10-13 12:59:22,507:INFO:Saving 'Learning Curve.png' in current active directory
2020-10-13 12:59:22,658:INFO:Visual Rendered Successfully
2020-10-13 12:59:22,767:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:22,787:INFO:Initializing plot_model()
2020-10-13 12:59:22,787:INFO:plot_model(plot=learning, fold=None, verbose=False, display=None, estimator=StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-10-13 12:59:22,787:INFO:Checking exceptions
2020-10-13 12:59:22,787:INFO:Preloading libraries
2020-10-13 12:59:22,790:INFO:Copying training dataset
2020-10-13 12:59:22,790:INFO:Copying test dataset
2020-10-13 12:59:22,791:INFO:Plot type: learning
2020-10-13 12:59:22,808:INFO:Fitting Model
2020-10-13 12:59:27,895:INFO:Saving 'Learning Curve.png' in current active directory
2020-10-13 12:59:28,043:INFO:Visual Rendered Successfully
2020-10-13 12:59:28,156:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:28,371:INFO:Initializing predict_model()
2020-10-13 12:59:28,372:INFO:predict_model(estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-13 12:59:28,372:INFO:Checking exceptions
2020-10-13 12:59:28,372:INFO:Preloading libraries
2020-10-13 12:59:28,372:INFO:Preparing display monitor
2020-10-13 12:59:28,526:INFO:Initializing predict_model()
2020-10-13 12:59:28,526:INFO:predict_model(estimator=StackingRegressor(cv=KFold(n_splits=5, random_state=786, shuffle=False),
                  estimators=[('en',
                               ElasticNet(alpha=0.14, copy_X=True,
                                          fit_intercept=True,
                                          l1_ratio=0.788999999999999,
                                          max_iter=1000, normalize=False,
                                          positive=False, precompute=False,
                                          random_state=786, selection='cyclic',
                                          tol=0.0001, warm_start=False)),
                              ('lasso',
                               Lasso(alpha=0.33, copy_X=True,
                                     fit_intercept=Tr...
                               Ridge(alpha=9.3, copy_X=True, fit_intercept=True,
                                     max_iter=None, normalize=False,
                                     random_state=786, solver='auto',
                                     tol=0.001))],
                  final_estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                alpha_init=None,
                                                compute_score=True, copy_X=True,
                                                fit_intercept=True,
                                                lambda_1=1e-06, lambda_2=0.3,
                                                lambda_init=None, n_iter=300,
                                                normalize=False, tol=0.001,
                                                verbose=False),
                  n_jobs=-1, passthrough=True, verbose=0), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-13 12:59:28,526:INFO:Checking exceptions
2020-10-13 12:59:28,526:INFO:Preloading libraries
2020-10-13 12:59:28,526:INFO:Preparing display monitor
2020-10-13 12:59:43,172:INFO:Initializing finalize_model()
2020-10-13 12:59:43,173:INFO:finalize_model(estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), fit_kwargs=None, groups=None, display=None)
2020-10-13 12:59:43,184:INFO:Finalizing TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1])
2020-10-13 12:59:43,189:INFO:Initializing create_model()
2020-10-13 12:59:43,189:INFO:create_model(estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-13 12:59:43,189:INFO:Checking exceptions
2020-10-13 12:59:43,191:INFO:Importing libraries
2020-10-13 12:59:43,192:INFO:Copying training dataset
2020-10-13 12:59:43,197:INFO:Defining folds
2020-10-13 12:59:43,197:INFO:Declaring metric variables
2020-10-13 12:59:43,197:INFO:Importing untrained model
2020-10-13 12:59:43,197:INFO:Declaring custom model
2020-10-13 12:59:43,200:INFO:Voting Regressor Imported succesfully
2020-10-13 12:59:43,200:INFO:Starting cross validation
2020-10-13 12:59:43,202:INFO:Cross validating with n_jobs=-1
2020-10-13 12:59:43,636:INFO:Calculating mean and std
2020-10-13 12:59:43,637:INFO:Creating metrics dataframe
2020-10-13 12:59:43,651:INFO:Finalizing model
2020-10-13 12:59:43,703:INFO:Uploading results into container
2020-10-13 12:59:43,704:INFO:Uploading model into container now
2020-10-13 12:59:43,704:INFO:create_model_container: 26
2020-10-13 12:59:43,704:INFO:master_model_container: 26
2020-10-13 12:59:43,704:INFO:display_container: 11
2020-10-13 12:59:43,711:INFO:TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1])
2020-10-13 12:59:43,711:INFO:create_model() succesfully completed......................................
2020-10-13 12:59:44,116:INFO:Creating MLFlow logs
2020-10-13 12:59:44,172:INFO:Model: Voting Regressor
2020-10-13 12:59:44,184:INFO:logged params: {'n_jobs': -1, 'verbose': False, 'weights': [1, 1, 1, 1, 1], 'en': ElasticNet(alpha=0.14, copy_X=True, fit_intercept=True,
           l1_ratio=0.788999999999999, max_iter=1000, normalize=False,
           positive=False, precompute=False, random_state=786,
           selection='cyclic', tol=0.0001, warm_start=False), 'lasso': Lasso(alpha=0.33, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False), 'ridge': Ridge(alpha=9.3, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001), 'br__alpha_1': 0.001, 'br__alpha_2': 0.2, 'br__alpha_init': None, 'br__compute_score': True, 'br__copy_X': True, 'br__fit_intercept': True, 'br__lambda_1': 1e-06, 'br__lambda_2': 0.3, 'br__lambda_init': None, 'br__n_iter': 300, 'br__normalize': False, 'br__tol': 0.001, 'br__verbose': False, 'en__alpha': 0.14, 'en__copy_X': True, 'en__fit_intercept': True, 'en__l1_ratio': 0.788999999999999, 'en__max_iter': 1000, 'en__normalize': False, 'en__positive': False, 'en__precompute': False, 'en__random_state': 786, 'en__selection': 'cyclic', 'en__tol': 0.0001, 'en__warm_start': False, 'lasso__alpha': 0.33, 'lasso__copy_X': True, 'lasso__fit_intercept': True, 'lasso__max_iter': 1000, 'lasso__normalize': False, 'lasso__positive': False, 'lasso__precompute': False, 'lasso__random_state': 786, 'lasso__selection': 'cyclic', 'lasso__tol': 0.0001, 'lasso__warm_start': False, 'lightgbm__boosting_type': 'gbdt', 'lightgbm__class_weight': None, 'lightgbm__colsample_bytree': 1.0, 'lightgbm__importance_type': 'split', 'lightgbm__learning_rate': 0.153, 'lightgbm__max_depth': -1, 'lightgbm__min_child_samples': 20, 'lightgbm__min_child_weight': 0.001, 'lightgbm__min_split_gain': 0.9, 'lightgbm__n_estimators': 130, 'lightgbm__n_jobs': -1, 'lightgbm__num_leaves': 200, 'lightgbm__objective': None, 'lightgbm__random_state': 786, 'lightgbm__reg_alpha': 0.2, 'lightgbm__reg_lambda': 1, 'lightgbm__silent': True, 'lightgbm__subsample': 1.0, 'lightgbm__subsample_for_bin': 200000, 'lightgbm__subsample_freq': 0, 'lightgbm__feature_fraction': 0.4, 'lightgbm__bagging_freq': 3, 'lightgbm__bagging_fraction': 0.7, 'ridge__alpha': 9.3, 'ridge__copy_X': True, 'ridge__fit_intercept': True, 'ridge__max_iter': None, 'ridge__normalize': False, 'ridge__random_state': 786, 'ridge__solver': 'auto', 'ridge__tol': 0.001, 'weight_0': 1, 'weight_1': 1, 'weight_2': 1, 'weight_3': 1, 'weight_4': 1}
2020-10-13 12:59:44,246:INFO:Initializing predict_model()
2020-10-13 12:59:44,246:INFO:predict_model(estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-13 12:59:44,246:INFO:Checking exceptions
2020-10-13 12:59:44,246:INFO:Preloading libraries
2020-10-13 12:59:44,394:INFO:SubProcess plot_model() called ==================================
2020-10-13 12:59:44,402:INFO:Initializing plot_model()
2020-10-13 12:59:44,402:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:59:44,403:INFO:Checking exceptions
2020-10-13 12:59:44,403:INFO:Preloading libraries
2020-10-13 12:59:44,409:INFO:Copying training dataset
2020-10-13 12:59:44,412:INFO:Copying test dataset
2020-10-13 12:59:44,413:INFO:Plot type: residuals
2020-10-13 12:59:44,456:INFO:Fitting Model
2020-10-13 12:59:44,522:INFO:Scoring test/hold-out set
2020-10-13 12:59:44,586:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:59:44,878:INFO:Visual Rendered Successfully
2020-10-13 12:59:44,974:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:44,988:INFO:Initializing plot_model()
2020-10-13 12:59:44,988:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:59:44,988:INFO:Checking exceptions
2020-10-13 12:59:44,988:INFO:Preloading libraries
2020-10-13 12:59:44,991:INFO:Copying training dataset
2020-10-13 12:59:44,992:INFO:Copying test dataset
2020-10-13 12:59:44,992:INFO:Plot type: error
2020-10-13 12:59:44,994:INFO:Fitting Model
2020-10-13 12:59:44,995:INFO:Scoring test/hold-out set
2020-10-13 12:59:45,030:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:59:45,157:INFO:Visual Rendered Successfully
2020-10-13 12:59:45,280:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:45,298:INFO:Initializing plot_model()
2020-10-13 12:59:45,298:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-13 12:59:45,298:INFO:Checking exceptions
2020-10-13 12:59:45,298:WARNING:Feature Importance and RFE plots not available for estimators that doesnt support coef_ or feature_importances_ attribute.
2020-10-13 12:59:45,299:INFO:SubProcess plot_model() end ==================================
2020-10-13 12:59:45,441:INFO:create_model_container: 26
2020-10-13 12:59:45,441:INFO:master_model_container: 26
2020-10-13 12:59:45,441:INFO:display_container: 10
2020-10-13 12:59:45,449:INFO:TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1])
2020-10-13 12:59:45,449:INFO:finalize_model() succesfully completed......................................
2020-10-13 12:59:47,642:INFO:Initializing predict_model()
2020-10-13 12:59:47,642:INFO:predict_model(estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-13 12:59:47,643:INFO:Checking exceptions
2020-10-13 12:59:47,643:INFO:Preloading libraries
2020-10-13 12:59:47,643:INFO:Preparing display monitor
2020-10-13 12:59:48,152:INFO:Initializing plot_model()
2020-10-13 12:59:48,152:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-10-13 12:59:48,152:INFO:Checking exceptions
2020-10-13 12:59:48,153:INFO:Preloading libraries
2020-10-13 12:59:48,155:INFO:Copying training dataset
2020-10-13 12:59:48,156:INFO:Copying test dataset
2020-10-13 12:59:48,157:INFO:Plot type: residuals
2020-10-13 12:59:48,170:INFO:Fitting Model
2020-10-13 12:59:48,223:INFO:Scoring test/hold-out set
2020-10-13 12:59:48,281:INFO:Saving 'Residuals.png' in current active directory
2020-10-13 12:59:48,556:INFO:Visual Rendered Successfully
2020-10-13 12:59:48,666:INFO:plot_model() succesfully completed......................................
2020-10-13 12:59:48,682:INFO:Initializing plot_model()
2020-10-13 12:59:48,682:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=TunableVotingRegressor(estimators=[('br',
                                    BayesianRidge(alpha_1=0.001, alpha_2=0.2,
                                                  alpha_init=None,
                                                  compute_score=True,
                                                  copy_X=True,
                                                  fit_intercept=True,
                                                  lambda_1=1e-06, lambda_2=0.3,
                                                  lambda_init=None, n_iter=300,
                                                  normalize=False, tol=0.001,
                                                  verbose=False)),
                                   ('en',
                                    ElasticNet(alpha=0.14, copy_X=True,
                                               fit_intercept=True,
                                               l1_ratio=0.788999999999999,
                                               max_iter=1000, norma...
                                                  objective=None,
                                                  random_state=786,
                                                  reg_alpha=0.2, reg_lambda=1,
                                                  silent=True, subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0)),
                                   ('ridge',
                                    Ridge(alpha=9.3, copy_X=True,
                                          fit_intercept=True, max_iter=None,
                                          normalize=False, random_state=786,
                                          solver='auto', tol=0.001))],
                       n_jobs=-1, verbose=False, weight_0=1, weight_1=1,
                       weight_2=1, weight_3=1, weight_4=1,
                       weights=[1, 1, 1, 1, 1]), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1.1, system=True)
2020-10-13 12:59:48,682:INFO:Checking exceptions
2020-10-13 12:59:48,683:INFO:Preloading libraries
2020-10-13 12:59:48,685:INFO:Copying training dataset
2020-10-13 12:59:48,686:INFO:Copying test dataset
2020-10-13 12:59:48,686:INFO:Plot type: error
2020-10-13 12:59:48,688:INFO:Fitting Model
2020-10-13 12:59:48,688:INFO:Scoring test/hold-out set
2020-10-13 12:59:48,720:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-13 12:59:48,859:INFO:Visual Rendered Successfully
2020-10-13 12:59:48,972:INFO:plot_model() succesfully completed......................................
2020-10-13 16:08:50,910:INFO:PyCaret Supervised Module
2020-10-13 16:08:50,911:INFO:ML Usecase: regression
2020-10-13 16:08:50,912:INFO:version 2.2
2020-10-13 16:08:50,912:INFO:Initializing setup()
2020-10-13 16:08:50,912:INFO:setup(target=Actual Value, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'Total number of calls', 'CSat', 'total coaching', 'total coaching improved', 'FCR Week before'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['Agent_ID'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-13 16:08:50,912:INFO:Checking environment
2020-10-13 16:08:50,912:INFO:python_version: 3.8.3
2020-10-13 16:08:50,912:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-13 16:08:50,912:INFO:machine: x86_64
2020-10-13 16:08:50,937:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-13 16:08:50,937:INFO:Memory: svmem(total=8589934592, available=925995008, percent=89.2, used=3256365056, free=16236544, active=914169856, inactive=861863936, wired=2342195200)
2020-10-13 16:08:50,937:INFO:Physical Core: 4
2020-10-13 16:08:50,937:INFO:Logical Core: 8
2020-10-13 16:08:50,937:INFO:Checking libraries
2020-10-13 16:08:50,937:INFO:pd==1.0.5
2020-10-13 16:08:50,938:INFO:numpy==1.18.5
2020-10-13 16:08:50,938:INFO:sklearn==0.23.2
2020-10-13 16:08:51,526:INFO:xgboost==1.2.0
2020-10-13 16:08:51,526:INFO:lightgbm==2.3.1
2020-10-13 16:08:51,609:INFO:catboost==0.24.1
2020-10-13 16:08:52,311:INFO:mlflow==1.11.0
2020-10-13 16:08:52,311:INFO:Checking Exceptions
2020-10-13 16:08:52,312:INFO:Declaring global variables
2020-10-13 16:08:52,312:INFO:USI: 9e4e
2020-10-13 16:08:52,312:INFO:pycaret_globals: {'gpu_param', 'fold_generator', 'experiment__', '_gpu_n_jobs_param', 'y_test', 'USI', 'seed', 'n_jobs_param', '_all_models', 'X_test', 'transform_target_method_param', 'log_plots_param', 'imputation_regressor', 'y', 'pycaret_globals', '_ml_usecase', 'stratify_param', 'create_model_container', 'display_container', 'fix_imbalance_method_param', 'fold_shuffle_param', 'html_param', 'prep_pipe', 'X_train', 'exp_name_log', 'data_before_preprocess', 'imputation_classifier', 'X', 'master_model_container', 'fix_imbalance_param', 'y_train', 'fold_param', 'target_param', 'iterative_imputation_iters_param', 'fold_groups_param', 'transform_target_param', '_internal_pipeline', '_all_metrics', 'logging_param', '_all_models_internal'}
2020-10-13 16:08:52,312:INFO:Preparing display monitor
2020-10-13 16:08:52,312:INFO:Preparing display monitor
2020-10-13 16:08:52,341:INFO:Importing libraries
2020-10-13 16:08:52,341:INFO:Copying data for preprocessing
2020-10-13 16:08:52,356:INFO:Declaring preprocessing parameters
2020-10-13 16:08:52,360:INFO:Creating preprocessing pipeline
2020-10-13 16:08:52,391:INFO:Preprocessing pipeline created successfully
2020-10-13 16:08:52,391:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-13 16:08:52,391:INFO:Creating global containers
2020-10-13 16:08:52,392:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-13 16:08:56,915:INFO:Creating grid variables
2020-10-13 16:08:56,990:INFO:Logging experiment in MLFlow
2020-10-13 16:08:57,159:INFO:SubProcess save_model() called ==================================
2020-10-13 16:08:57,187:INFO:Initializing save_model()
2020-10-13 16:08:57,187:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False), verbose=False)
2020-10-13 16:08:57,187:INFO:Adding model into prep_pipe
2020-10-13 16:08:57,283:INFO:Transformation Pipeline.pkl saved in current working directory
2020-10-13 16:08:57,344:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                                        threshold=0.9)),
                                 ('dfs',
                                  DFS_Classic(interactions=['multiply'],
                                              ml_usecase='regression',
                                              random_state=786,
                                              subclass='binary',
                                              target='Actual Value',
                                              top_features_to_pick_percentage=None)),
                                 ('pca',
                                  Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                                        random_state=786,
                                                                        target='Actual '
                                                                               'Value',
                                                                        variance_retained_or_number_of_components=None))],
                          verbose=False)]],
         verbose=False)
2020-10-13 16:08:57,344:INFO:save_model() succesfully completed......................................
2020-10-13 16:08:57,344:INFO:SubProcess save_model() end ==================================
2020-10-13 16:08:57,366:INFO:create_model_container: 0
2020-10-13 16:08:57,366:INFO:master_model_container: 0
2020-10-13 16:08:57,366:INFO:display_container: 0
2020-10-13 16:08:57,379:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False)
2020-10-13 16:08:57,379:INFO:setup() succesfully completed......................................
2020-10-28 09:37:11,189:INFO:PyCaret Supervised Module
2020-10-28 09:37:11,191:INFO:ML Usecase: regression
2020-10-28 09:37:11,191:INFO:version 2.2
2020-10-28 09:37:11,192:INFO:Initializing setup()
2020-10-28 09:37:11,192:INFO:setup(target=Actual Value, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'Total number of calls', 'CSat', 'total coaching', 'total coaching improved', 'FCR Week before'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['Agent_ID'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 09:37:11,192:INFO:Checking environment
2020-10-28 09:37:11,192:INFO:python_version: 3.8.3
2020-10-28 09:37:11,192:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 09:37:11,192:INFO:machine: x86_64
2020-10-28 09:37:11,240:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 09:37:11,242:INFO:Memory: svmem(total=8589934592, available=1045385216, percent=87.8, used=3070795776, free=86478848, active=962949120, inactive=913465344, wired=2107846656)
2020-10-28 09:37:11,242:INFO:Physical Core: 4
2020-10-28 09:37:11,242:INFO:Logical Core: 8
2020-10-28 09:37:11,242:INFO:Checking libraries
2020-10-28 09:37:11,243:INFO:pd==1.0.5
2020-10-28 09:37:11,243:INFO:numpy==1.18.5
2020-10-28 09:37:11,243:INFO:sklearn==0.23.2
2020-10-28 09:37:12,252:INFO:xgboost==1.2.0
2020-10-28 09:37:12,252:INFO:lightgbm==2.3.1
2020-10-28 09:37:12,321:INFO:catboost==0.24.1
2020-10-28 09:37:12,959:INFO:mlflow==1.11.0
2020-10-28 09:37:12,959:INFO:Checking Exceptions
2020-10-28 09:37:12,960:INFO:Declaring global variables
2020-10-28 09:37:12,960:INFO:USI: 27f5
2020-10-28 09:37:12,960:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 09:37:12,960:INFO:Preparing display monitor
2020-10-28 09:37:12,961:INFO:Preparing display monitor
2020-10-28 09:37:12,988:INFO:Importing libraries
2020-10-28 09:37:12,988:INFO:Copying data for preprocessing
2020-10-28 09:37:13,000:INFO:Declaring preprocessing parameters
2020-10-28 09:37:13,002:INFO:Creating preprocessing pipeline
2020-10-28 09:37:13,013:INFO:Preprocessing pipeline created successfully
2020-10-28 09:37:13,014:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 09:37:13,014:INFO:Creating global containers
2020-10-28 09:37:13,015:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 09:37:17,157:INFO:Creating grid variables
2020-10-28 09:37:17,215:INFO:Logging experiment in MLFlow
2020-10-28 09:37:17,223:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 09:37:17,230:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 09:37:17,435:INFO:SubProcess save_model() called ==================================
2020-10-28 09:37:17,465:INFO:Initializing save_model()
2020-10-28 09:37:17,465:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False), verbose=False)
2020-10-28 09:37:17,465:INFO:Adding model into prep_pipe
2020-10-28 09:37:17,470:WARNING:Only Model saved as it was a pipeline.
2020-10-28 09:37:17,503:INFO:Transformation Pipeline.pkl saved in current working directory
2020-10-28 09:37:17,511:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False)
2020-10-28 09:37:17,511:INFO:save_model() succesfully completed......................................
2020-10-28 09:37:17,512:INFO:SubProcess save_model() end ==================================
2020-10-28 09:37:17,524:INFO:create_model_container: 0
2020-10-28 09:37:17,524:INFO:master_model_container: 0
2020-10-28 09:37:17,524:INFO:display_container: 0
2020-10-28 09:37:17,533:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['Agent_ID'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'Total number of '
                                                          'calls',
                                                          'CSat',
                                                          'total coaching',
                                                          'total coaching '
                                                          'improved',
                                                          'FCR Week before'),
                                      t...
                                       target_variable='Actual Value',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='Actual Value',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='Actual Value',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False)
2020-10-28 09:37:17,533:INFO:setup() succesfully completed......................................
2020-10-28 11:08:33,924:INFO:PyCaret Supervised Module
2020-10-28 11:08:33,927:INFO:ML Usecase: regression
2020-10-28 11:08:33,927:INFO:version 2.2
2020-10-28 11:08:33,927:INFO:Initializing setup()
2020-10-28 11:08:33,927:INFO:setup(target=Actual Value, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'Total number of calls', 'CSat', 'total coaching', 'total coaching improved', 'FCR Week before'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['Agent_ID'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:08:33,927:INFO:Checking environment
2020-10-28 11:08:33,927:INFO:python_version: 3.8.3
2020-10-28 11:08:33,927:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:08:33,927:INFO:machine: x86_64
2020-10-28 11:08:33,927:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:08:33,928:INFO:Memory: svmem(total=8589934592, available=1992523776, percent=76.8, used=3960909824, free=35192832, active=1950793728, inactive=1952063488, wired=2010116096)
2020-10-28 11:08:33,929:INFO:Physical Core: 4
2020-10-28 11:08:33,929:INFO:Logical Core: 8
2020-10-28 11:08:33,929:INFO:Checking libraries
2020-10-28 11:08:33,929:INFO:pd==1.0.5
2020-10-28 11:08:33,929:INFO:numpy==1.18.5
2020-10-28 11:08:33,929:INFO:sklearn==0.23.2
2020-10-28 11:08:33,929:INFO:xgboost==1.2.0
2020-10-28 11:08:33,929:INFO:lightgbm==2.3.1
2020-10-28 11:08:33,929:INFO:catboost==0.24.1
2020-10-28 11:08:33,929:INFO:mlflow==1.11.0
2020-10-28 11:08:33,929:INFO:Checking Exceptions
2020-10-28 11:09:25,703:INFO:PyCaret Supervised Module
2020-10-28 11:09:25,704:INFO:ML Usecase: regression
2020-10-28 11:09:25,704:INFO:version 2.2
2020-10-28 11:09:25,704:INFO:Initializing setup()
2020-10-28 11:09:25,704:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'Total number of calls', 'CSat', 'total coaching', 'total coaching improved', 'FCR Week before'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:09:25,704:INFO:Checking environment
2020-10-28 11:09:25,704:INFO:python_version: 3.8.3
2020-10-28 11:09:25,704:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:09:25,704:INFO:machine: x86_64
2020-10-28 11:09:25,704:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:09:25,704:INFO:Memory: svmem(total=8589934592, available=2099433472, percent=75.6, used=4119900160, free=19329024, active=2084872192, inactive=2023972864, wired=2035027968)
2020-10-28 11:09:25,704:INFO:Physical Core: 4
2020-10-28 11:09:25,705:INFO:Logical Core: 8
2020-10-28 11:09:25,705:INFO:Checking libraries
2020-10-28 11:09:25,705:INFO:pd==1.0.5
2020-10-28 11:09:25,705:INFO:numpy==1.18.5
2020-10-28 11:09:25,705:INFO:sklearn==0.23.2
2020-10-28 11:09:25,705:INFO:xgboost==1.2.0
2020-10-28 11:09:25,705:INFO:lightgbm==2.3.1
2020-10-28 11:09:25,705:INFO:catboost==0.24.1
2020-10-28 11:09:25,705:INFO:mlflow==1.11.0
2020-10-28 11:09:25,705:INFO:Checking Exceptions
2020-10-28 11:10:21,943:INFO:PyCaret Supervised Module
2020-10-28 11:10:21,944:INFO:ML Usecase: regression
2020-10-28 11:10:21,944:INFO:version 2.2
2020-10-28 11:10:21,944:INFO:Initializing setup()
2020-10-28 11:10:21,944:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'Total number of calls', 'CSat', 'total coaching', 'total coaching improved', 'FCR Week before'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', '0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:10:21,944:INFO:Checking environment
2020-10-28 11:10:21,944:INFO:python_version: 3.8.3
2020-10-28 11:10:21,944:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:10:21,944:INFO:machine: x86_64
2020-10-28 11:10:21,944:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:10:21,944:INFO:Memory: svmem(total=8589934592, available=2179338240, percent=74.6, used=4390129664, free=28852224, active=2154123264, inactive=2119520256, wired=2236006400)
2020-10-28 11:10:21,944:INFO:Physical Core: 4
2020-10-28 11:10:21,945:INFO:Logical Core: 8
2020-10-28 11:10:21,945:INFO:Checking libraries
2020-10-28 11:10:21,945:INFO:pd==1.0.5
2020-10-28 11:10:21,945:INFO:numpy==1.18.5
2020-10-28 11:10:21,945:INFO:sklearn==0.23.2
2020-10-28 11:10:21,945:INFO:xgboost==1.2.0
2020-10-28 11:10:21,945:INFO:lightgbm==2.3.1
2020-10-28 11:10:21,945:INFO:catboost==0.24.1
2020-10-28 11:10:21,946:INFO:mlflow==1.11.0
2020-10-28 11:10:21,946:INFO:Checking Exceptions
2020-10-28 11:11:05,536:INFO:PyCaret Supervised Module
2020-10-28 11:11:05,537:INFO:ML Usecase: regression
2020-10-28 11:11:05,537:INFO:version 2.2
2020-10-28 11:11:05,537:INFO:Initializing setup()
2020-10-28 11:11:05,537:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', '0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:11:05,537:INFO:Checking environment
2020-10-28 11:11:05,537:INFO:python_version: 3.8.3
2020-10-28 11:11:05,537:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:11:05,537:INFO:machine: x86_64
2020-10-28 11:11:05,537:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:11:05,537:INFO:Memory: svmem(total=8589934592, available=2308538368, percent=73.1, used=4292997120, free=21164032, active=2292076544, inactive=2252779520, wired=2000920576)
2020-10-28 11:11:05,537:INFO:Physical Core: 4
2020-10-28 11:11:05,537:INFO:Logical Core: 8
2020-10-28 11:11:05,537:INFO:Checking libraries
2020-10-28 11:11:05,537:INFO:pd==1.0.5
2020-10-28 11:11:05,537:INFO:numpy==1.18.5
2020-10-28 11:11:05,537:INFO:sklearn==0.23.2
2020-10-28 11:11:05,538:INFO:xgboost==1.2.0
2020-10-28 11:11:05,538:INFO:lightgbm==2.3.1
2020-10-28 11:11:05,538:INFO:catboost==0.24.1
2020-10-28 11:11:05,538:INFO:mlflow==1.11.0
2020-10-28 11:11:05,538:INFO:Checking Exceptions
2020-10-28 11:11:22,085:INFO:PyCaret Supervised Module
2020-10-28 11:11:22,085:INFO:ML Usecase: regression
2020-10-28 11:11:22,085:INFO:version 2.2
2020-10-28 11:11:22,085:INFO:Initializing setup()
2020-10-28 11:11:22,085:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 0], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:11:22,085:INFO:Checking environment
2020-10-28 11:11:22,085:INFO:python_version: 3.8.3
2020-10-28 11:11:22,085:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:11:22,085:INFO:machine: x86_64
2020-10-28 11:11:22,085:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:11:22,086:INFO:Memory: svmem(total=8589934592, available=2287820800, percent=73.4, used=4282662912, free=16113664, active=2276438016, inactive=2230550528, wired=2006224896)
2020-10-28 11:11:22,086:INFO:Physical Core: 4
2020-10-28 11:11:22,086:INFO:Logical Core: 8
2020-10-28 11:11:22,086:INFO:Checking libraries
2020-10-28 11:11:22,086:INFO:pd==1.0.5
2020-10-28 11:11:22,086:INFO:numpy==1.18.5
2020-10-28 11:11:22,086:INFO:sklearn==0.23.2
2020-10-28 11:11:22,086:INFO:xgboost==1.2.0
2020-10-28 11:11:22,086:INFO:lightgbm==2.3.1
2020-10-28 11:11:22,086:INFO:catboost==0.24.1
2020-10-28 11:11:22,086:INFO:mlflow==1.11.0
2020-10-28 11:11:22,086:INFO:Checking Exceptions
2020-10-28 11:12:25,094:INFO:PyCaret Supervised Module
2020-10-28 11:12:25,095:INFO:ML Usecase: regression
2020-10-28 11:12:25,095:INFO:version 2.2
2020-10-28 11:12:25,095:INFO:Initializing setup()
2020-10-28 11:12:25,095:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:12:25,095:INFO:Checking environment
2020-10-28 11:12:25,095:INFO:python_version: 3.8.3
2020-10-28 11:12:25,095:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:12:25,096:INFO:machine: x86_64
2020-10-28 11:12:25,096:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:12:25,096:INFO:Memory: svmem(total=8589934592, available=2454933504, percent=71.4, used=4560801792, free=17485824, active=2438807552, inactive=2424344576, wired=2121994240)
2020-10-28 11:12:25,096:INFO:Physical Core: 4
2020-10-28 11:12:25,096:INFO:Logical Core: 8
2020-10-28 11:12:25,096:INFO:Checking libraries
2020-10-28 11:12:25,096:INFO:pd==1.0.5
2020-10-28 11:12:25,096:INFO:numpy==1.18.5
2020-10-28 11:12:25,096:INFO:sklearn==0.23.2
2020-10-28 11:12:25,096:INFO:xgboost==1.2.0
2020-10-28 11:12:25,096:INFO:lightgbm==2.3.1
2020-10-28 11:12:25,097:INFO:catboost==0.24.1
2020-10-28 11:12:25,097:INFO:mlflow==1.11.0
2020-10-28 11:12:25,097:INFO:Checking Exceptions
2020-10-28 11:12:25,097:INFO:Declaring global variables
2020-10-28 11:12:25,100:INFO:USI: c366
2020-10-28 11:12:25,100:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:12:25,100:INFO:Preparing display monitor
2020-10-28 11:12:25,102:INFO:Preparing display monitor
2020-10-28 11:12:25,146:INFO:Importing libraries
2020-10-28 11:12:25,146:INFO:Copying data for preprocessing
2020-10-28 11:12:25,160:INFO:Declaring preprocessing parameters
2020-10-28 11:12:25,163:INFO:Creating preprocessing pipeline
2020-10-28 11:12:25,183:INFO:Preprocessing pipeline created successfully
2020-10-28 11:12:25,183:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:12:25,183:INFO:Creating global containers
2020-10-28 11:12:25,185:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:12:34,833:INFO:PyCaret Supervised Module
2020-10-28 11:12:34,834:INFO:ML Usecase: regression
2020-10-28 11:12:34,834:INFO:version 2.2
2020-10-28 11:12:34,834:INFO:Initializing setup()
2020-10-28 11:12:34,834:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:12:34,834:INFO:Checking environment
2020-10-28 11:12:34,834:INFO:python_version: 3.8.3
2020-10-28 11:12:34,834:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:12:34,835:INFO:machine: x86_64
2020-10-28 11:12:34,835:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:12:34,835:INFO:Memory: svmem(total=8589934592, available=2312024064, percent=73.1, used=4371103744, free=14041088, active=2296446976, inactive=2274709504, wired=2074656768)
2020-10-28 11:12:34,835:INFO:Physical Core: 4
2020-10-28 11:12:34,835:INFO:Logical Core: 8
2020-10-28 11:12:34,835:INFO:Checking libraries
2020-10-28 11:12:34,835:INFO:pd==1.0.5
2020-10-28 11:12:34,835:INFO:numpy==1.18.5
2020-10-28 11:12:34,835:INFO:sklearn==0.23.2
2020-10-28 11:12:34,835:INFO:xgboost==1.2.0
2020-10-28 11:12:34,835:INFO:lightgbm==2.3.1
2020-10-28 11:12:34,835:INFO:catboost==0.24.1
2020-10-28 11:12:34,835:INFO:mlflow==1.11.0
2020-10-28 11:12:34,835:INFO:Checking Exceptions
2020-10-28 11:12:34,836:INFO:Declaring global variables
2020-10-28 11:12:34,836:INFO:USI: 2900
2020-10-28 11:12:34,836:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:12:34,836:INFO:Preparing display monitor
2020-10-28 11:12:34,836:INFO:Preparing display monitor
2020-10-28 11:12:34,849:INFO:Importing libraries
2020-10-28 11:12:34,850:INFO:Copying data for preprocessing
2020-10-28 11:12:34,856:INFO:Declaring preprocessing parameters
2020-10-28 11:12:34,858:INFO:Creating preprocessing pipeline
2020-10-28 11:12:34,862:INFO:Preprocessing pipeline created successfully
2020-10-28 11:12:34,863:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:12:34,863:INFO:Creating global containers
2020-10-28 11:12:34,863:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:13:25,992:INFO:PyCaret Supervised Module
2020-10-28 11:13:25,993:INFO:ML Usecase: regression
2020-10-28 11:13:25,993:INFO:version 2.2
2020-10-28 11:13:25,993:INFO:Initializing setup()
2020-10-28 11:13:25,993:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=True, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:13:25,993:INFO:Checking environment
2020-10-28 11:13:25,993:INFO:python_version: 3.8.3
2020-10-28 11:13:25,993:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:13:25,993:INFO:machine: x86_64
2020-10-28 11:13:25,993:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:13:25,993:INFO:Memory: svmem(total=8589934592, available=2353233920, percent=72.6, used=4347166720, free=15859712, active=2342768640, inactive=2263179264, wired=2004398080)
2020-10-28 11:13:25,993:INFO:Physical Core: 4
2020-10-28 11:13:25,994:INFO:Logical Core: 8
2020-10-28 11:13:25,994:INFO:Checking libraries
2020-10-28 11:13:25,994:INFO:pd==1.0.5
2020-10-28 11:13:25,994:INFO:numpy==1.18.5
2020-10-28 11:13:25,994:INFO:sklearn==0.23.2
2020-10-28 11:13:25,994:INFO:xgboost==1.2.0
2020-10-28 11:13:25,994:INFO:lightgbm==2.3.1
2020-10-28 11:13:25,994:INFO:catboost==0.24.1
2020-10-28 11:13:25,994:INFO:mlflow==1.11.0
2020-10-28 11:13:25,994:INFO:Checking Exceptions
2020-10-28 11:13:25,994:INFO:Declaring global variables
2020-10-28 11:13:25,994:INFO:USI: 496c
2020-10-28 11:13:25,994:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:13:25,994:INFO:Preparing display monitor
2020-10-28 11:13:25,994:INFO:Preparing display monitor
2020-10-28 11:13:26,005:INFO:Importing libraries
2020-10-28 11:13:26,005:INFO:Copying data for preprocessing
2020-10-28 11:13:26,011:INFO:Declaring preprocessing parameters
2020-10-28 11:13:26,012:INFO:Creating preprocessing pipeline
2020-10-28 11:13:26,019:INFO:Preprocessing pipeline created successfully
2020-10-28 11:13:26,019:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:13:26,019:INFO:Creating global containers
2020-10-28 11:13:26,019:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:13:29,434:INFO:Creating grid variables
2020-10-28 11:13:29,471:INFO:Logging experiment in MLFlow
2020-10-28 11:13:29,549:INFO:SubProcess save_model() called ==================================
2020-10-28 11:13:29,567:INFO:Initializing save_model()
2020-10-28 11:13:29,567:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='actualvalue',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='actualvalue',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False), verbose=False)
2020-10-28 11:13:29,567:INFO:Adding model into prep_pipe
2020-10-28 11:13:29,570:WARNING:Only Model saved as it was a pipeline.
2020-10-28 11:13:29,595:INFO:Transformation Pipeline.pkl saved in current working directory
2020-10-28 11:13:29,602:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='actualvalue',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False)
2020-10-28 11:13:29,602:INFO:save_model() succesfully completed......................................
2020-10-28 11:13:29,602:INFO:SubProcess save_model() end ==================================
2020-10-28 11:13:29,616:INFO:create_model_container: 0
2020-10-28 11:13:29,616:INFO:master_model_container: 0
2020-10-28 11:13:29,616:INFO:display_container: 0
2020-10-28 11:13:29,625:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca',
                 Reduce_Dimensions_For_Supervised_Path(method='pca_liner',
                                                       random_state=786,
                                                       target='actualvalue',
                                                       variance_retained_or_number_of_components=None))],
         verbose=False)
2020-10-28 11:13:29,625:INFO:setup() succesfully completed......................................
2020-10-28 11:23:02,497:INFO:PyCaret Supervised Module
2020-10-28 11:23:02,498:INFO:ML Usecase: regression
2020-10-28 11:23:02,498:INFO:version 2.2
2020-10-28 11:23:02,498:INFO:Initializing setup()
2020-10-28 11:23:02,498:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=20, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=True, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:23:02,498:INFO:Checking environment
2020-10-28 11:23:02,499:INFO:python_version: 3.8.3
2020-10-28 11:23:02,499:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:23:02,499:INFO:machine: x86_64
2020-10-28 11:23:02,499:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:23:02,499:INFO:Memory: svmem(total=8589934592, available=2303713280, percent=73.2, used=4041465856, free=472375296, active=1852440576, inactive=1824579584, wired=2189025280)
2020-10-28 11:23:02,500:INFO:Physical Core: 4
2020-10-28 11:23:02,500:INFO:Logical Core: 8
2020-10-28 11:23:02,500:INFO:Checking libraries
2020-10-28 11:23:02,500:INFO:pd==1.0.5
2020-10-28 11:23:02,500:INFO:numpy==1.18.5
2020-10-28 11:23:02,500:INFO:sklearn==0.23.2
2020-10-28 11:23:02,500:INFO:xgboost==1.2.0
2020-10-28 11:23:02,501:INFO:lightgbm==2.3.1
2020-10-28 11:23:02,501:INFO:catboost==0.24.1
2020-10-28 11:23:02,501:INFO:mlflow==1.11.0
2020-10-28 11:23:02,501:INFO:Checking Exceptions
2020-10-28 11:23:02,501:INFO:Declaring global variables
2020-10-28 11:23:02,501:INFO:USI: f08e
2020-10-28 11:23:02,502:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:23:02,502:INFO:Preparing display monitor
2020-10-28 11:23:02,502:INFO:Preparing display monitor
2020-10-28 11:23:02,517:INFO:Importing libraries
2020-10-28 11:23:02,517:INFO:Copying data for preprocessing
2020-10-28 11:23:02,523:INFO:Declaring preprocessing parameters
2020-10-28 11:23:02,525:INFO:Setting up iterative imputation
2020-10-28 11:23:02,874:INFO:Creating preprocessing pipeline
2020-10-28 11:23:02,881:INFO:Preprocessing pipeline created successfully
2020-10-28 11:23:02,881:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:23:02,882:INFO:Creating global containers
2020-10-28 11:23:02,882:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:23:21,253:INFO:PyCaret Supervised Module
2020-10-28 11:23:21,253:INFO:ML Usecase: regression
2020-10-28 11:23:21,253:INFO:version 2.2
2020-10-28 11:23:21,253:INFO:Initializing setup()
2020-10-28 11:23:21,253:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=20, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:23:21,254:INFO:Checking environment
2020-10-28 11:23:21,254:INFO:python_version: 3.8.3
2020-10-28 11:23:21,254:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:23:21,254:INFO:machine: x86_64
2020-10-28 11:23:21,254:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:23:21,254:INFO:Memory: svmem(total=8589934592, available=2265272320, percent=73.6, used=4067729408, free=165707776, active=2051739648, inactive=2018930688, wired=2015989760)
2020-10-28 11:23:21,254:INFO:Physical Core: 4
2020-10-28 11:23:21,254:INFO:Logical Core: 8
2020-10-28 11:23:21,254:INFO:Checking libraries
2020-10-28 11:23:21,254:INFO:pd==1.0.5
2020-10-28 11:23:21,254:INFO:numpy==1.18.5
2020-10-28 11:23:21,254:INFO:sklearn==0.23.2
2020-10-28 11:23:21,254:INFO:xgboost==1.2.0
2020-10-28 11:23:21,254:INFO:lightgbm==2.3.1
2020-10-28 11:23:21,254:INFO:catboost==0.24.1
2020-10-28 11:23:21,254:INFO:mlflow==1.11.0
2020-10-28 11:23:21,254:INFO:Checking Exceptions
2020-10-28 11:23:21,255:INFO:Declaring global variables
2020-10-28 11:23:21,255:INFO:USI: 36af
2020-10-28 11:23:21,255:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:23:21,255:INFO:Preparing display monitor
2020-10-28 11:23:21,255:INFO:Preparing display monitor
2020-10-28 11:23:21,270:INFO:Importing libraries
2020-10-28 11:23:21,270:INFO:Copying data for preprocessing
2020-10-28 11:23:21,278:INFO:Declaring preprocessing parameters
2020-10-28 11:23:21,279:INFO:Setting up iterative imputation
2020-10-28 11:23:21,540:INFO:Creating preprocessing pipeline
2020-10-28 11:23:21,544:INFO:Preprocessing pipeline created successfully
2020-10-28 11:23:21,544:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:23:21,544:INFO:Creating global containers
2020-10-28 11:23:21,545:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:23:23,739:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:23:23,797:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:23:23,844:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:23:23,874:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:23:23,912:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:23:23,941:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:23:23,965:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:23:23,990:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:23:24,017:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:23:24,041:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:23:24,064:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:23:24,108:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:23:24,161:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:23:24,217:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:23:24,261:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:23:24,287:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:23:24,310:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:23:24,335:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:23:24,362:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:23:24,385:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:23:24,406:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:23:24,435:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:23:24,461:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:23:24,490:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:23:24,514:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:23:24,540:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:23:24,564:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:23:24,590:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:23:24,613:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:23:24,637:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:23:24,657:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:23:24,686:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:23:24,713:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:23:24,742:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:23:24,767:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:23:24,792:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:23:24,815:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:23:24,841:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:23:24,865:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:23:24,889:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:23:24,910:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:23:24,941:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:23:24,967:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:23:24,994:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:23:25,018:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:23:25,043:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:23:25,066:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:23:25,091:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:23:25,114:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:23:25,138:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:23:25,158:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:23:25,187:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:23:25,214:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:23:25,243:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:23:25,268:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:23:25,293:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:23:25,316:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:23:25,341:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:23:25,364:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:23:25,388:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:23:25,408:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:23:25,437:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:23:25,464:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:23:25,492:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:23:25,516:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:23:25,542:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:23:25,565:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:23:25,591:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:23:25,614:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:23:25,638:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:23:25,658:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:23:25,686:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:23:25,712:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:23:25,742:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:23:25,766:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:23:25,792:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:23:25,815:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:23:25,843:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:23:25,867:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:23:25,892:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:23:25,923:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:23:25,979:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:23:26,045:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:23:26,081:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:23:26,108:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:23:26,134:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:23:26,156:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:23:26,183:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:23:26,209:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:23:26,261:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:23:26,284:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:23:26,358:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:23:26,407:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:23:26,435:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:23:26,460:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:23:26,485:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:23:26,509:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:23:26,536:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:23:26,561:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:23:26,585:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:23:26,606:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:23:26,638:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:23:26,667:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:23:26,699:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:23:26,727:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:23:26,752:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:23:26,775:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:23:26,800:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:23:26,822:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:23:26,845:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:23:26,867:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:23:26,899:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:23:26,993:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:23:27,030:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:23:27,062:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:23:27,095:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:23:27,121:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:23:27,152:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:23:27,178:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:23:27,206:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:23:27,235:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:23:27,269:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:23:27,302:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:23:27,332:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:23:27,361:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:23:27,392:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:23:27,418:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:23:27,446:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:23:27,474:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:23:27,497:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:23:27,522:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:23:27,555:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:23:27,587:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:23:27,618:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:23:27,649:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:23:27,678:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:23:27,705:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:23:27,730:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:23:27,757:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:23:27,779:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:23:27,801:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:23:27,830:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:23:27,860:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:23:27,890:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:23:27,915:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:23:27,942:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:23:27,964:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:23:27,991:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:23:28,014:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:23:28,038:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:23:28,058:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:23:28,087:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:23:28,113:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:23:28,143:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:23:28,167:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:23:28,195:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:23:28,218:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:23:28,244:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:23:28,267:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:23:28,292:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:23:28,316:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:23:28,347:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:23:28,378:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:23:28,406:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:23:28,432:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:23:28,457:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:23:28,481:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:23:28,506:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:23:28,529:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:23:28,550:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:23:28,571:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:23:28,602:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:23:28,630:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:23:28,658:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:23:28,685:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:23:28,709:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:23:28,732:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:23:28,756:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:23:28,778:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:23:28,800:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:23:28,821:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:23:28,850:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:23:28,877:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:23:28,903:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:23:28,926:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:23:28,951:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:23:28,973:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:23:28,998:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:23:29,020:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:23:29,043:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:23:29,064:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:23:29,093:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:23:29,120:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:23:29,147:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:23:29,171:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:23:29,198:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:23:29,237:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:23:29,261:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:23:29,288:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:23:29,310:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:23:30,170:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:23:30,176:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:23:30,183:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:23:30,190:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:23:30,197:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:23:30,203:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:23:30,209:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:23:30,215:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:23:30,222:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:23:30,228:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:23:30,235:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:23:30,241:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:23:30,247:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:23:30,252:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:23:30,258:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:23:30,264:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:23:30,269:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:23:30,275:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:23:30,281:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:23:30,287:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:23:30,293:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:23:30,299:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:23:30,304:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:23:30,310:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:23:30,316:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:23:30,321:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:23:30,327:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:23:30,333:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:23:30,339:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:23:30,345:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:23:30,350:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:23:30,355:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:23:30,361:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:23:30,366:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:23:30,372:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:23:30,378:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:23:30,384:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:23:30,389:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:23:30,395:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:23:30,400:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:23:30,405:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:23:30,411:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:23:30,416:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:23:30,422:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:23:30,427:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:23:30,433:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:23:30,440:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:23:30,490:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:23:30,497:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:23:30,504:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:23:30,510:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:23:30,515:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:23:30,521:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:23:30,527:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:23:30,533:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:23:30,539:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:23:30,545:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:23:30,551:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:23:30,557:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:23:30,562:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:23:30,568:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:23:30,574:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:23:30,580:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:23:30,586:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:23:30,592:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:23:30,597:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:23:30,603:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:23:30,609:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:23:30,615:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:23:30,621:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:23:30,626:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:23:30,632:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:23:30,638:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:23:30,644:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:23:30,650:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:23:30,656:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:23:30,661:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:23:30,667:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:23:30,673:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:23:30,679:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:23:30,684:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:23:30,690:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:23:30,696:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:23:30,702:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:23:30,708:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:23:30,714:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:23:30,720:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:23:30,725:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:23:30,731:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:23:30,739:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:23:30,744:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:23:30,750:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:23:30,756:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:23:30,762:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:23:30,767:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:23:30,773:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:23:30,779:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:23:30,785:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:23:30,791:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:23:30,796:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:23:30,802:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:23:30,807:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:23:30,813:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:23:30,818:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:23:30,824:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:23:30,829:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:23:30,835:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:23:30,841:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:23:30,846:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:23:30,853:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:23:30,858:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:23:30,864:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:23:30,869:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:23:30,875:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:23:30,880:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:23:30,886:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:23:30,891:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:23:30,897:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:23:30,903:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:23:30,908:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:23:30,914:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:23:30,919:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:23:30,924:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:23:30,930:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:23:30,936:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:23:30,942:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:23:30,948:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:23:30,953:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:23:30,959:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:23:30,965:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:23:30,970:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:23:30,975:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:23:30,981:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:23:30,986:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:23:30,992:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:23:30,998:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:23:31,003:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:23:31,009:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:23:31,014:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:23:31,020:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:23:31,025:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:23:31,030:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:23:31,036:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:23:31,042:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:23:31,047:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:23:31,053:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:23:31,058:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:23:31,064:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:23:31,070:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:23:31,075:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:23:31,080:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:23:31,087:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:23:31,093:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:23:31,134:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:23:31,142:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:23:31,150:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:23:31,157:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:23:31,162:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:23:31,168:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:23:31,174:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:23:31,181:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:23:31,188:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:23:31,193:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:23:31,199:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:23:31,205:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:23:31,211:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:23:31,216:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:23:31,222:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:23:31,228:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:23:31,234:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:23:31,240:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:23:31,246:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:23:31,252:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:23:31,258:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:23:31,263:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:23:31,269:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:23:31,275:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:23:31,280:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:23:31,287:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:23:31,292:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:23:31,298:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:23:31,304:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:23:31,310:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:23:31,316:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:23:31,321:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:23:31,327:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:23:31,332:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:23:31,338:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:23:31,343:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:23:31,349:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:23:31,355:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:23:31,360:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:23:31,365:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:23:31,371:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:23:31,376:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:23:31,381:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:23:31,387:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:23:31,393:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:23:31,398:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:23:31,404:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:23:31,507:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:23:31,513:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:23:31,519:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:23:31,526:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:23:31,532:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:23:31,539:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:23:31,545:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:23:31,551:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:23:31,558:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:23:31,564:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:23:31,571:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:23:31,577:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:23:31,582:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:23:31,589:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:23:31,595:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:23:31,601:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:23:31,607:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:23:31,612:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:23:31,618:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:23:31,624:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:23:31,630:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:23:31,637:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:23:31,643:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:23:31,649:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:23:31,655:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:23:31,660:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:23:31,666:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:23:31,672:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:23:31,678:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:23:31,684:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:23:31,690:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:23:31,696:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:23:31,702:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:23:31,708:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:23:31,714:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:23:31,720:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:23:31,725:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:23:31,731:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:23:31,738:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:23:31,744:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:23:31,750:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:23:31,756:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:23:31,762:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:23:31,768:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:23:31,774:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:23:31,779:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:23:31,786:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:23:31,791:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:23:31,797:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:23:31,803:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:23:31,809:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:23:31,815:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:23:31,820:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:23:31,826:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:23:31,831:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:23:31,837:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:23:31,843:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:23:31,848:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:23:31,854:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:23:31,859:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:23:31,865:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:23:31,870:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:23:31,875:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:23:31,881:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:23:31,887:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:23:31,892:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:23:31,898:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:23:31,904:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:23:31,909:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:23:31,915:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:23:31,920:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:23:31,926:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:23:31,931:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:23:31,937:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:23:31,943:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:23:31,948:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:23:31,954:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:23:31,959:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:23:31,964:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:23:31,970:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:23:31,975:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:23:31,981:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:23:31,986:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:23:31,992:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:23:31,998:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:23:32,003:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:23:32,009:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:23:32,015:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:23:32,020:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:23:32,026:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:23:32,032:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:23:32,038:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:23:32,043:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:23:32,049:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:23:32,055:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:23:32,060:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:23:32,066:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:23:32,072:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:23:32,078:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:23:32,084:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:23:32,091:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:23:32,097:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:23:32,103:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:23:32,109:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:23:32,114:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:23:32,120:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:23:32,126:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:23:32,132:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:23:32,138:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:23:32,144:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:23:32,150:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:23:32,156:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:23:32,161:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:23:32,167:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:23:32,173:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:23:32,178:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:23:32,185:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:23:32,191:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:23:32,197:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:23:32,203:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:23:32,209:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:23:32,215:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:23:32,221:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:23:32,226:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:23:32,232:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:23:32,239:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:23:32,245:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:23:32,250:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:23:32,256:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:23:32,262:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:23:32,269:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:23:32,274:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:23:32,280:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:23:32,286:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:23:32,292:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:23:32,298:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:23:32,304:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:23:32,310:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:23:32,316:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:23:32,321:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:23:32,327:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:23:32,333:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:23:32,339:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:23:32,344:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:23:32,350:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:23:32,355:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:23:32,361:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:23:32,366:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:23:32,372:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:23:32,377:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:23:32,383:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:23:32,389:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:23:32,394:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:23:32,400:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:23:32,406:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:23:32,411:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:23:32,416:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:23:32,421:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:23:32,427:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:23:32,432:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:23:32,438:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:23:32,444:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:23:32,450:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:23:32,455:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:23:32,461:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:23:32,467:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:23:32,472:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:23:32,478:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:23:32,484:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:23:32,490:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:23:32,496:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:23:32,502:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:23:32,508:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:23:32,514:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:23:32,520:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:23:32,526:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:23:32,533:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:23:32,542:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:23:32,550:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:23:32,557:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:23:32,564:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:23:32,570:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:23:32,577:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:23:32,584:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:23:32,591:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:23:32,597:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:23:32,605:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:23:32,613:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:23:32,620:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:23:32,626:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:23:32,632:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:23:32,640:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:23:32,646:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:23:32,652:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:23:32,660:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:23:32,667:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:23:32,674:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:23:32,679:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:23:32,686:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:23:32,694:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:23:33,058:INFO:Creating grid variables
2020-10-28 11:23:33,093:INFO:Logging experiment in MLFlow
2020-10-28 11:23:33,100:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:23:33,101:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:23:33,141:INFO:SubProcess save_model() called ==================================
2020-10-28 11:23:33,170:INFO:Initializing save_model()
2020-10-28 11:23:33,170:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:23:33,170:INFO:Adding model into prep_pipe
2020-10-28 11:25:54,014:INFO:PyCaret Supervised Module
2020-10-28 11:25:54,015:INFO:ML Usecase: regression
2020-10-28 11:25:54,015:INFO:version 2.2
2020-10-28 11:25:54,015:INFO:Initializing setup()
2020-10-28 11:25:54,015:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=20, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:25:54,015:INFO:Checking environment
2020-10-28 11:25:54,016:INFO:python_version: 3.8.3
2020-10-28 11:25:54,016:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:25:54,016:INFO:machine: x86_64
2020-10-28 11:25:54,016:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:25:54,016:INFO:Memory: svmem(total=8589934592, available=1983135744, percent=76.9, used=4193095680, free=16027648, active=1972273152, inactive=1934340096, wired=2220822528)
2020-10-28 11:25:54,016:INFO:Physical Core: 4
2020-10-28 11:25:54,016:INFO:Logical Core: 8
2020-10-28 11:25:54,016:INFO:Checking libraries
2020-10-28 11:25:54,016:INFO:pd==1.0.5
2020-10-28 11:25:54,016:INFO:numpy==1.18.5
2020-10-28 11:25:54,016:INFO:sklearn==0.23.2
2020-10-28 11:25:54,016:INFO:xgboost==1.2.0
2020-10-28 11:25:54,017:INFO:lightgbm==2.3.1
2020-10-28 11:25:54,017:INFO:catboost==0.24.1
2020-10-28 11:25:54,017:INFO:mlflow==1.11.0
2020-10-28 11:25:54,017:INFO:Checking Exceptions
2020-10-28 11:25:54,017:INFO:Declaring global variables
2020-10-28 11:25:54,017:INFO:USI: 0988
2020-10-28 11:25:54,017:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:25:54,017:INFO:Preparing display monitor
2020-10-28 11:25:54,017:INFO:Preparing display monitor
2020-10-28 11:25:54,031:INFO:Importing libraries
2020-10-28 11:25:54,031:INFO:Copying data for preprocessing
2020-10-28 11:25:54,038:INFO:Declaring preprocessing parameters
2020-10-28 11:25:54,040:INFO:Setting up iterative imputation
2020-10-28 11:25:54,283:INFO:Creating preprocessing pipeline
2020-10-28 11:25:54,298:INFO:Preprocessing pipeline created successfully
2020-10-28 11:25:54,298:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:25:54,298:INFO:Creating global containers
2020-10-28 11:25:54,300:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:25:55,944:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:25:56,195:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:25:56,253:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:25:56,289:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:25:56,316:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:25:56,348:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:25:56,387:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:25:56,438:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:25:56,559:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:25:56,602:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:25:56,629:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:25:56,689:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:25:56,750:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:25:56,797:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:25:56,884:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:25:56,937:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:25:57,084:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:25:57,193:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:25:57,326:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:25:57,437:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:25:57,520:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:25:57,726:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:25:57,835:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:25:57,866:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:25:57,904:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:25:57,951:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:25:57,978:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:25:58,004:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:25:58,031:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:25:58,052:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:25:58,076:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:25:58,104:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:25:58,134:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:25:58,160:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:25:58,187:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:25:58,215:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:25:58,238:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:25:58,261:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:25:58,284:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:25:58,305:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:25:58,330:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:25:58,356:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:25:58,386:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:25:58,412:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:25:58,436:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:25:58,460:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:25:58,484:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:25:58,507:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:25:58,532:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:25:58,553:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:25:58,578:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:25:58,604:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:25:58,634:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:25:58,660:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:25:58,687:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:25:58,711:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:25:58,737:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:25:58,761:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:25:58,786:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:25:58,807:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:25:58,830:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:25:58,860:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:25:58,889:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:25:58,914:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:25:58,938:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:25:58,962:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:25:58,986:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:25:59,009:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:25:59,034:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:25:59,054:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:25:59,075:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:25:59,102:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:25:59,130:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:25:59,155:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:25:59,181:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:25:59,204:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:25:59,229:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:25:59,252:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:25:59,275:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:25:59,297:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:25:59,318:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:25:59,347:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:25:59,373:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:25:59,400:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:25:59,424:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:25:59,448:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:25:59,470:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:25:59,494:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:25:59,518:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:25:59,539:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:25:59,559:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:25:59,588:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:25:59,615:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:25:59,643:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:25:59,670:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:25:59,695:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:25:59,717:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:25:59,740:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:25:59,763:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:25:59,786:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:25:59,807:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:25:59,836:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:25:59,863:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:25:59,892:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:25:59,917:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:25:59,942:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:25:59,965:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:25:59,988:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:26:00,013:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:26:00,036:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:26:00,057:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:26:00,085:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:26:00,112:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:26:00,139:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:26:00,164:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:26:00,189:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:26:00,212:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:26:00,241:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:26:00,265:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:26:00,285:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:26:00,315:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:26:00,344:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:26:00,370:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:26:00,398:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:26:00,422:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:26:00,447:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:26:00,470:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:26:00,495:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:26:00,519:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:26:00,542:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:26:00,563:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:26:00,594:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:26:00,621:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:26:00,649:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:26:00,673:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:26:00,698:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:26:00,722:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:26:00,756:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:26:00,784:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:26:00,805:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:26:00,827:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:26:00,857:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:26:00,885:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:26:00,969:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:26:01,009:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:26:01,064:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:26:01,105:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:26:01,151:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:26:01,177:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:26:01,248:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:26:01,315:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:26:01,479:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:26:01,644:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:26:01,755:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:26:01,884:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:26:01,937:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:26:02,031:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:26:02,089:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:26:02,152:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:26:02,334:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:26:02,385:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:26:02,535:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:26:02,655:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:26:02,786:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:26:02,866:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:26:02,987:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:26:03,060:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:26:03,154:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:26:03,364:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:26:03,440:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:26:03,556:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:26:03,804:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:26:03,940:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:26:03,978:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:26:04,024:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:26:04,085:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:26:04,221:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:26:04,371:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:26:04,481:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:26:04,576:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:26:04,643:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:26:04,802:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:26:04,883:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:26:05,005:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:26:05,133:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:26:05,218:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:26:05,307:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:26:05,375:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:26:05,411:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:26:05,621:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:26:05,751:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:26:05,803:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:26:05,836:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:26:05,864:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:26:05,892:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:26:05,920:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:26:05,945:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:26:06,033:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:26:06,060:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:26:06,128:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:26:06,988:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:26:06,994:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:26:07,001:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:26:07,010:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:26:07,020:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:26:07,027:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:26:07,038:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:26:07,046:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:26:07,054:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:26:07,061:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:26:07,069:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:26:07,076:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:26:07,082:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:26:07,089:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:26:07,096:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:26:07,103:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:26:07,109:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:26:07,116:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:26:07,123:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:26:07,131:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:26:07,138:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:26:07,146:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:26:07,153:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:26:07,159:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:26:07,170:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:26:07,178:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:26:07,185:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:26:07,193:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:26:07,202:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:26:07,209:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:26:07,217:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:26:07,224:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:26:07,230:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:26:07,236:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:26:07,243:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:26:07,249:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:26:07,255:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:26:07,262:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:26:07,270:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:26:07,277:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:26:07,284:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:26:07,290:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:26:07,296:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:26:07,302:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:26:07,308:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:26:07,315:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:26:07,321:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:26:07,327:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:26:07,333:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:26:07,339:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:26:07,345:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:26:07,351:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:26:07,357:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:26:07,363:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:26:07,369:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:26:07,375:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:26:07,381:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:26:07,387:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:26:07,393:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:26:07,399:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:26:07,405:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:26:07,412:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:26:07,418:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:26:07,425:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:26:07,431:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:26:07,438:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:26:07,445:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:26:07,451:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:26:07,457:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:26:07,464:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:26:07,470:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:26:07,476:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:26:07,482:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:26:07,488:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:26:07,494:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:26:07,500:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:26:07,507:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:26:07,514:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:26:07,521:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:26:07,528:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:26:07,538:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:26:07,546:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:26:07,552:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:26:07,559:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:26:07,566:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:26:07,572:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:26:07,578:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:26:07,585:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:26:07,591:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:26:07,597:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:26:07,603:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:26:07,609:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:26:07,615:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:26:07,622:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:26:07,631:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:26:07,638:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:26:07,647:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:26:07,655:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:26:07,666:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:26:07,673:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:26:07,682:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:26:07,689:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:26:07,696:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:26:07,704:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:26:07,714:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:26:07,720:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:26:07,727:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:26:07,734:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:26:07,740:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:26:07,747:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:26:07,753:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:26:07,759:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:26:07,765:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:26:07,772:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:26:07,778:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:26:07,784:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:26:07,790:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:26:07,796:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:26:07,802:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:26:07,808:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:26:07,816:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:26:07,827:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:26:07,834:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:26:07,840:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:26:07,847:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:26:07,853:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:26:07,859:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:26:07,866:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:26:07,872:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:26:07,878:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:26:07,884:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:26:07,890:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:26:07,896:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:26:07,902:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:26:07,907:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:26:07,914:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:26:07,920:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:26:07,926:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:26:07,933:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:26:07,939:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:26:07,946:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:26:07,952:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:26:07,958:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:26:07,965:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:26:07,972:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:26:07,978:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:26:07,984:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:26:07,990:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:26:07,996:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:26:08,002:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:26:08,007:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:26:08,014:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:26:08,020:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:26:08,026:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:26:08,032:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:26:08,038:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:26:08,044:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:26:08,050:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:26:08,058:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:26:08,065:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:26:08,072:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:26:08,079:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:26:08,087:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:26:08,094:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:26:08,100:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:26:08,105:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:26:08,112:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:26:08,118:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:26:08,124:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:26:08,131:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:26:08,138:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:26:08,145:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:26:08,153:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:26:08,162:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:26:08,169:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:26:08,177:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:26:08,183:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:26:08,189:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:26:08,195:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:26:08,201:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:26:08,207:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:26:08,213:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:26:08,219:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:26:08,225:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:26:08,231:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:26:08,237:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:26:08,244:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:26:08,250:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:26:08,256:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:26:08,263:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:26:08,270:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:26:08,276:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:26:08,282:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:26:08,288:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:26:08,294:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:26:08,300:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:26:08,305:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:26:08,311:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:26:08,318:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:26:08,324:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:26:08,435:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:26:08,441:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:26:08,448:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:26:08,455:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:26:08,461:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:26:08,469:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:26:08,475:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:26:08,482:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:26:08,489:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:26:08,496:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:26:08,503:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:26:08,509:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:26:08,515:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:26:08,521:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:26:08,528:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:26:08,535:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:26:08,544:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:26:08,551:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:26:08,558:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:26:08,565:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:26:08,572:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:26:08,579:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:26:08,586:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:26:08,592:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:26:08,598:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:26:08,604:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:26:08,611:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:26:08,618:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:26:08,624:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:26:08,631:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:26:08,637:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:26:08,643:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:26:08,649:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:26:08,655:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:26:08,661:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:26:08,668:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:26:08,674:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:26:08,680:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:26:08,686:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:26:08,694:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:26:08,700:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:26:08,706:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:26:08,712:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:26:08,719:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:26:08,726:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:26:08,733:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:26:08,739:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:26:08,746:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:26:08,752:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:26:08,758:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:26:08,765:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:26:08,771:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:26:08,777:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:26:08,783:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:26:08,789:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:26:08,796:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:26:08,802:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:26:08,808:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:26:08,814:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:26:08,820:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:26:08,826:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:26:08,832:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:26:08,838:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:26:08,844:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:26:08,849:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:26:08,855:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:26:08,861:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:26:08,867:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:26:08,873:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:26:08,880:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:26:08,886:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:26:08,892:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:26:08,898:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:26:08,904:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:26:08,910:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:26:08,916:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:26:08,922:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:26:08,928:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:26:08,935:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:26:08,940:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:26:08,946:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:26:08,952:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:26:08,958:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:26:08,963:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:26:08,969:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:26:08,975:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:26:08,981:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:26:08,987:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:26:08,993:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:26:08,999:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:26:09,005:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:26:09,010:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:26:09,016:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:26:09,022:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:26:09,028:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:26:09,034:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:26:09,040:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:26:09,046:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:26:09,052:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:26:09,058:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:26:09,064:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:26:09,070:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:26:09,076:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:26:09,082:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:26:09,088:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:26:09,094:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:26:09,101:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:26:09,108:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:26:09,114:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:26:09,121:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:26:09,128:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:26:09,134:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:26:09,140:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:26:09,146:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:26:09,154:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:26:09,160:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:26:09,166:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:26:09,173:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:26:09,179:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:26:09,187:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:26:09,193:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:26:09,200:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:26:09,206:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:26:09,212:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:26:09,218:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:26:09,224:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:26:09,230:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:26:09,236:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:26:09,242:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:26:09,248:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:26:09,254:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:26:09,259:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:26:09,265:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:26:09,271:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:26:09,277:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:26:09,283:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:26:09,289:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:26:09,295:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:26:09,301:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:26:09,307:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:26:09,313:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:26:09,319:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:26:09,325:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:26:09,330:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:26:09,337:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:26:09,342:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:26:09,348:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:26:09,354:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:26:09,360:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:26:09,366:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:26:09,373:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:26:09,379:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:26:09,386:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:26:09,392:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:26:09,400:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:26:09,407:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:26:09,413:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:26:09,420:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:26:09,426:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:26:09,432:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:26:09,438:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:26:09,444:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:26:09,450:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:26:09,456:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:26:09,462:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:26:09,467:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:26:09,474:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:26:09,480:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:26:09,486:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:26:09,493:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:26:09,500:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:26:09,507:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:26:09,514:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:26:09,522:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:26:09,528:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:26:09,535:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:26:09,541:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:26:09,548:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:26:09,554:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:26:09,561:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:26:09,566:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:26:09,573:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:26:09,579:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:26:09,585:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:26:09,591:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:26:09,597:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:26:09,603:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:26:09,609:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:26:09,615:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:26:09,621:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:26:09,627:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:26:09,633:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:26:09,640:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:26:09,645:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:26:09,651:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:26:09,657:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:26:09,663:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:26:09,669:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:26:09,675:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:26:09,681:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:26:10,037:INFO:Creating grid variables
2020-10-28 11:26:10,070:INFO:Logging experiment in MLFlow
2020-10-28 11:26:10,073:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:26:10,075:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:26:10,112:INFO:SubProcess save_model() called ==================================
2020-10-28 11:26:10,142:INFO:Initializing save_model()
2020-10-28 11:26:10,142:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:26:10,142:INFO:Adding model into prep_pipe
2020-10-28 11:26:41,156:INFO:PyCaret Supervised Module
2020-10-28 11:26:41,157:INFO:ML Usecase: regression
2020-10-28 11:26:41,158:INFO:version 2.2
2020-10-28 11:26:41,158:INFO:Initializing setup()
2020-10-28 11:26:41,158:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:26:41,158:INFO:Checking environment
2020-10-28 11:26:41,158:INFO:python_version: 3.8.3
2020-10-28 11:26:41,158:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:26:41,158:INFO:machine: x86_64
2020-10-28 11:26:41,158:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:26:41,158:INFO:Memory: svmem(total=8589934592, available=2328444928, percent=72.9, used=4519325696, free=252035072, active=2081067008, inactive=2035408896, wired=2438258688)
2020-10-28 11:26:41,158:INFO:Physical Core: 4
2020-10-28 11:26:41,158:INFO:Logical Core: 8
2020-10-28 11:26:41,158:INFO:Checking libraries
2020-10-28 11:26:41,158:INFO:pd==1.0.5
2020-10-28 11:26:41,158:INFO:numpy==1.18.5
2020-10-28 11:26:41,158:INFO:sklearn==0.23.2
2020-10-28 11:26:41,158:INFO:xgboost==1.2.0
2020-10-28 11:26:41,158:INFO:lightgbm==2.3.1
2020-10-28 11:26:41,158:INFO:catboost==0.24.1
2020-10-28 11:26:41,158:INFO:mlflow==1.11.0
2020-10-28 11:26:41,158:INFO:Checking Exceptions
2020-10-28 11:26:41,159:INFO:Declaring global variables
2020-10-28 11:26:41,159:INFO:USI: 1fef
2020-10-28 11:26:41,159:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:26:41,159:INFO:Preparing display monitor
2020-10-28 11:26:41,159:INFO:Preparing display monitor
2020-10-28 11:26:41,171:INFO:Importing libraries
2020-10-28 11:26:41,171:INFO:Copying data for preprocessing
2020-10-28 11:26:41,176:INFO:Declaring preprocessing parameters
2020-10-28 11:26:41,177:INFO:Setting up iterative imputation
2020-10-28 11:26:41,437:INFO:Creating preprocessing pipeline
2020-10-28 11:26:41,442:INFO:Preprocessing pipeline created successfully
2020-10-28 11:26:41,442:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:26:41,442:INFO:Creating global containers
2020-10-28 11:26:41,443:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:26:42,956:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:26:43,072:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:26:43,100:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:26:43,126:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:26:43,154:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:26:43,179:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:26:43,212:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:26:43,238:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:26:43,264:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:26:43,285:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:26:43,309:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:26:43,336:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:26:43,366:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:26:43,405:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:26:43,443:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:26:43,487:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:26:43,525:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:26:43,571:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:26:43,596:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:26:43,616:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:26:43,637:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:26:43,666:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:26:43,693:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:26:43,721:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:26:43,749:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:26:43,823:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:26:43,939:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:26:44,077:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:26:44,173:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:26:44,216:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:26:44,258:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:26:44,323:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:26:44,367:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:26:44,440:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:26:44,523:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:26:44,574:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:26:44,611:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:26:44,660:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:26:44,701:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:26:44,721:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:26:44,742:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:26:44,771:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:26:44,800:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:26:44,826:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:26:44,854:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:26:44,877:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:26:44,903:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:26:44,925:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:26:44,950:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:26:44,971:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:26:45,699:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:26:45,705:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:26:45,711:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:26:45,717:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:26:45,723:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:26:45,729:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:26:45,736:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:26:45,743:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:26:45,749:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:26:45,755:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:26:45,762:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:26:45,767:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:26:45,773:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:26:45,779:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:26:45,784:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:26:45,790:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:26:45,796:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:26:45,802:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:26:45,808:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:26:45,813:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:26:45,819:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:26:45,825:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:26:45,830:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:26:45,836:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:26:45,842:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:26:45,848:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:26:45,853:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:26:45,859:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:26:45,865:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:26:45,871:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:26:45,876:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:26:45,881:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:26:45,887:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:26:45,893:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:26:45,898:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:26:45,904:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:26:45,910:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:26:45,915:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:26:45,921:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:26:45,926:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:26:45,931:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:26:45,936:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:26:45,942:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:26:45,948:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:26:45,953:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:26:45,959:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:26:45,964:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:26:45,969:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:26:45,975:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:26:45,980:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:26:46,070:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:26:46,076:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:26:46,083:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:26:46,090:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:26:46,095:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:26:46,102:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:26:46,108:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:26:46,113:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:26:46,119:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:26:46,125:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:26:46,131:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:26:46,137:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:26:46,143:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:26:46,149:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:26:46,155:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:26:46,160:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:26:46,166:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:26:46,171:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:26:46,177:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:26:46,182:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:26:46,188:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:26:46,193:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:26:46,199:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:26:46,205:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:26:46,211:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:26:46,218:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:26:46,224:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:26:46,230:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:26:46,237:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:26:46,244:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:26:46,250:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:26:46,256:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:26:46,262:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:26:46,267:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:26:46,273:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:26:46,278:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:26:46,284:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:26:46,291:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:26:46,297:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:26:46,304:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:26:46,309:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:26:46,315:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:26:46,320:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:26:46,326:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:26:46,332:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:26:46,339:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:26:46,346:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:26:46,353:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:26:46,358:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:26:46,364:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:26:46,699:INFO:Creating grid variables
2020-10-28 11:26:46,732:INFO:Logging experiment in MLFlow
2020-10-28 11:26:46,735:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:26:46,735:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:26:46,769:INFO:SubProcess save_model() called ==================================
2020-10-28 11:26:46,802:INFO:Initializing save_model()
2020-10-28 11:26:46,802:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:26:46,802:INFO:Adding model into prep_pipe
2020-10-28 11:27:24,648:INFO:PyCaret Supervised Module
2020-10-28 11:27:24,649:INFO:ML Usecase: regression
2020-10-28 11:27:24,649:INFO:version 2.2
2020-10-28 11:27:24,649:INFO:Initializing setup()
2020-10-28 11:27:24,649:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=20, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:27:24,649:INFO:Checking environment
2020-10-28 11:27:24,649:INFO:python_version: 3.8.3
2020-10-28 11:27:24,649:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:27:24,649:INFO:machine: x86_64
2020-10-28 11:27:24,649:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:27:24,649:INFO:Memory: svmem(total=8589934592, available=2249060352, percent=73.8, used=4417921024, free=18919424, active=2233155584, inactive=2214055936, wired=2184765440)
2020-10-28 11:27:24,649:INFO:Physical Core: 4
2020-10-28 11:27:24,649:INFO:Logical Core: 8
2020-10-28 11:27:24,650:INFO:Checking libraries
2020-10-28 11:27:24,650:INFO:pd==1.0.5
2020-10-28 11:27:24,650:INFO:numpy==1.18.5
2020-10-28 11:27:24,650:INFO:sklearn==0.23.2
2020-10-28 11:27:24,650:INFO:xgboost==1.2.0
2020-10-28 11:27:24,650:INFO:lightgbm==2.3.1
2020-10-28 11:27:24,650:INFO:catboost==0.24.1
2020-10-28 11:27:24,650:INFO:mlflow==1.11.0
2020-10-28 11:27:24,650:INFO:Checking Exceptions
2020-10-28 11:27:24,650:INFO:Declaring global variables
2020-10-28 11:27:24,650:INFO:USI: 615d
2020-10-28 11:27:24,650:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:27:24,650:INFO:Preparing display monitor
2020-10-28 11:27:24,651:INFO:Preparing display monitor
2020-10-28 11:27:24,664:INFO:Importing libraries
2020-10-28 11:27:24,664:INFO:Copying data for preprocessing
2020-10-28 11:27:24,671:INFO:Declaring preprocessing parameters
2020-10-28 11:27:24,672:INFO:Setting up iterative imputation
2020-10-28 11:27:24,955:INFO:Creating preprocessing pipeline
2020-10-28 11:27:24,961:INFO:Preprocessing pipeline created successfully
2020-10-28 11:27:24,961:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:27:24,964:INFO:Creating global containers
2020-10-28 11:27:24,964:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:27:26,718:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:27:26,926:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:27:26,952:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:27:26,979:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:27:27,006:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:27:27,031:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:27:27,055:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:27:27,079:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:27:27,104:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:27:27,126:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:27:27,152:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:27:27,181:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:27:27,220:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:27:27,263:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:27:27,287:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:27:27,322:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:27:27,347:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:27:27,372:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:27:27,396:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:27:27,420:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:27:27,442:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:27:27,477:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:27:27,515:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:27:27,541:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:27:27,573:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:27:27,597:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:27:27,623:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:27:27,649:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:27:27,674:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:27:27,773:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:27:27,823:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:27:27,889:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:27:27,942:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:27:27,990:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:27:28,038:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:27:28,074:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:27:28,118:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:27:28,156:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:27:28,191:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:27:28,224:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:27:28,259:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:27:28,307:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:27:28,356:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:27:28,402:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:27:28,440:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:27:28,490:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:27:28,540:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:27:28,578:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:27:28,627:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:27:28,672:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:27:28,694:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:27:28,725:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:27:28,752:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:27:28,780:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:27:28,803:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:27:28,827:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:27:28,850:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:27:28,874:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:27:28,896:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:27:28,921:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:27:28,941:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:27:28,972:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:27:28,998:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:27:29,025:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:27:29,056:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:27:29,080:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:27:29,102:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:27:29,126:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:27:29,149:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:27:29,171:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:27:29,192:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:27:29,223:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:27:29,249:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:27:29,277:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:27:29,301:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:27:29,327:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:27:29,350:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:27:29,375:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:27:29,398:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:27:29,421:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:27:29,442:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:27:29,471:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:27:29,497:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:27:29,525:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:27:29,549:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:27:29,574:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:27:29,596:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:27:29,623:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:27:29,647:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:27:29,671:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:27:29,691:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:27:29,721:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:27:29,748:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:27:29,777:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:27:29,801:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:27:29,827:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:27:29,850:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:27:29,873:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:27:29,897:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:27:29,921:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:27:29,942:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:27:29,972:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:27:29,998:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:27:30,026:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:27:30,051:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:27:30,075:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:27:30,099:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:27:30,123:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:27:30,146:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:27:30,170:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:27:30,191:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:27:30,221:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:27:30,250:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:27:30,279:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:27:30,307:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:27:30,331:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:27:30,353:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:27:30,377:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:27:30,400:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:27:30,423:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:27:30,444:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:27:30,474:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:27:30,500:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:27:30,528:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:27:30,551:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:27:30,576:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:27:30,598:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:27:30,624:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:27:30,647:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:27:30,672:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:27:30,692:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:27:30,721:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:27:30,747:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:27:30,777:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:27:30,802:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:27:30,850:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:27:30,886:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:27:30,934:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:27:30,957:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:27:30,979:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:27:30,999:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:27:31,028:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:27:31,054:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:27:31,081:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:27:31,105:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:27:31,129:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:27:31,158:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:27:31,181:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:27:31,211:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:27:31,233:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:27:31,254:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:27:31,284:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:27:31,310:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:27:31,340:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:27:31,364:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:27:31,388:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:27:31,410:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:27:31,436:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:27:31,460:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:27:31,482:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:27:31,503:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:27:31,534:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:27:31,561:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:27:31,588:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:27:31,612:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:27:31,638:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:27:31,660:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:27:31,685:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:27:31,707:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:27:31,729:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:27:31,749:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:27:31,777:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:27:31,804:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:27:31,833:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:27:31,856:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:27:31,881:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:27:31,903:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:27:31,928:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:27:31,951:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:27:31,973:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:27:31,994:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:27:32,022:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:27:32,048:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:27:32,077:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:27:32,101:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:27:32,127:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:27:32,150:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:27:32,175:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:27:32,200:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:27:32,234:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:27:32,270:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:27:32,312:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:27:32,341:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:27:32,376:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:27:32,425:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:27:32,465:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:27:32,490:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:27:32,523:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:27:32,548:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:27:32,572:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:27:33,364:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:27:33,369:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:27:33,375:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:27:33,382:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:27:33,388:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:27:33,396:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:27:33,402:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:27:33,409:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:27:33,415:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:27:33,421:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:27:33,428:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:27:33,434:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:27:33,440:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:27:33,446:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:27:33,452:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:27:33,457:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:27:33,463:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:27:33,469:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:27:33,475:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:27:33,481:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:27:33,486:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:27:33,492:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:27:33,498:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:27:33,504:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:27:33,509:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:27:33,515:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:27:33,521:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:27:33,527:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:27:33,533:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:27:33,539:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:27:33,545:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:27:33,551:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:27:33,557:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:27:33,562:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:27:33,568:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:27:33,573:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:27:33,578:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:27:33,584:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:27:33,589:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:27:33,595:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:27:33,601:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:27:33,606:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:27:33,612:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:27:33,617:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:27:33,623:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:27:33,629:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:27:33,634:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:27:33,640:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:27:33,645:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:27:33,651:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:27:33,657:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:27:33,662:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:27:33,668:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:27:33,673:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:27:33,679:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:27:33,684:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:27:33,689:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:27:33,695:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:27:33,701:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:27:33,707:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:27:33,713:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:27:33,719:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:27:33,724:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:27:33,730:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:27:33,736:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:27:33,742:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:27:33,748:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:27:33,755:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:27:33,761:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:27:33,767:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:27:33,772:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:27:33,778:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:27:33,783:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:27:33,789:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:27:33,794:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:27:33,800:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:27:33,805:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:27:33,810:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:27:33,816:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:27:33,822:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:27:33,827:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:27:33,833:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:27:33,838:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:27:33,844:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:27:33,849:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:27:33,854:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:27:33,860:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:27:33,866:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:27:33,871:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:27:33,877:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:27:33,882:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:27:33,888:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:27:33,893:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:27:33,898:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:27:33,904:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:27:33,909:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:27:33,915:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:27:33,920:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:27:33,926:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:27:33,931:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:27:33,937:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:27:33,942:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:27:33,947:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:27:33,953:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:27:33,958:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:27:33,964:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:27:33,970:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:27:33,975:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:27:33,981:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:27:33,986:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:27:33,992:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:27:33,997:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:27:34,003:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:27:34,009:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:27:34,015:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:27:34,021:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:27:34,027:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:27:34,033:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:27:34,039:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:27:34,044:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:27:34,050:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:27:34,056:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:27:34,061:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:27:34,067:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:27:34,073:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:27:34,079:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:27:34,086:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:27:34,094:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:27:34,101:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:27:34,107:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:27:34,114:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:27:34,121:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:27:34,127:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:27:34,133:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:27:34,138:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:27:34,143:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:27:34,149:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:27:34,154:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:27:34,159:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:27:34,165:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:27:34,170:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:27:34,176:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:27:34,181:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:27:34,186:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:27:34,192:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:27:34,197:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:27:34,202:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:27:34,208:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:27:34,213:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:27:34,219:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:27:34,224:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:27:34,230:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:27:34,235:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:27:34,241:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:27:34,246:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:27:34,251:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:27:34,256:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:27:34,262:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:27:34,268:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:27:34,273:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:27:34,279:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:27:34,284:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:27:34,289:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:27:34,295:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:27:34,301:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:27:34,306:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:27:34,311:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:27:34,317:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:27:34,323:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:27:34,328:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:27:34,334:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:27:34,339:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:27:34,345:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:27:34,350:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:27:34,355:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:27:34,360:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:27:34,366:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:27:34,372:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:27:34,377:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:27:34,383:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:27:34,388:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:27:34,394:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:27:34,399:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:27:34,405:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:27:34,410:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:27:34,416:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:27:34,421:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:27:34,427:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:27:34,432:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:27:34,438:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:27:34,443:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:27:34,449:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:27:34,454:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:27:34,459:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:27:34,465:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:27:34,471:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:27:34,477:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:27:34,483:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:27:34,488:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:27:34,494:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:27:34,593:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:27:34,598:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:27:34,605:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:27:34,612:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:27:34,618:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:27:34,624:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:27:34,630:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:27:34,636:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:27:34,643:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:27:34,649:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:27:34,655:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:27:34,661:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:27:34,667:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:27:34,672:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:27:34,678:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:27:34,684:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:27:34,689:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:27:34,695:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:27:34,701:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:27:34,706:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:27:34,712:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:27:34,719:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:27:34,726:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:27:34,733:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:27:34,740:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:27:34,746:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:27:34,752:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:27:34,757:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:27:34,763:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:27:34,769:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:27:34,774:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:27:34,780:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:27:34,786:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:27:34,791:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:27:34,796:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:27:34,802:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:27:34,807:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:27:34,812:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:27:34,818:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:27:34,824:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:27:34,830:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:27:34,835:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:27:34,841:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:27:34,846:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:27:34,852:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:27:34,857:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:27:34,863:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:27:34,869:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:27:34,875:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:27:34,881:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:27:34,886:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:27:34,891:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:27:34,897:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:27:34,903:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:27:34,908:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:27:34,913:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:27:34,919:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:27:34,925:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:27:34,930:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:27:34,936:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:27:34,941:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:27:34,947:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:27:34,953:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:27:34,958:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:27:34,964:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:27:34,970:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:27:34,976:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:27:34,982:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:27:34,987:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:27:34,993:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:27:34,999:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:27:35,004:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:27:35,009:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:27:35,015:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:27:35,021:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:27:35,026:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:27:35,032:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:27:35,038:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:27:35,043:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:27:35,049:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:27:35,055:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:27:35,060:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:27:35,066:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:27:35,072:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:27:35,078:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:27:35,083:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:27:35,089:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:27:35,094:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:27:35,100:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:27:35,106:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:27:35,111:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:27:35,117:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:27:35,122:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:27:35,128:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:27:35,133:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:27:35,139:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:27:35,145:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:27:35,150:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:27:35,156:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:27:35,161:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:27:35,167:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:27:35,173:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:27:35,178:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:27:35,184:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:27:35,190:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:27:35,195:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:27:35,201:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:27:35,206:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:27:35,211:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:27:35,217:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:27:35,223:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:27:35,228:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:27:35,234:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:27:35,239:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:27:35,245:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:27:35,250:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:27:35,256:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:27:35,261:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:27:35,267:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:27:35,272:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:27:35,278:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:27:35,284:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:27:35,289:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:27:35,294:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:27:35,300:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:27:35,305:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:27:35,311:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:27:35,316:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:27:35,322:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:27:35,328:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:27:35,333:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:27:35,339:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:27:35,344:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:27:35,350:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:27:35,355:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:27:35,361:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:27:35,366:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:27:35,373:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:27:35,379:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:27:35,385:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:27:35,391:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:27:35,396:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:27:35,401:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:27:35,407:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:27:35,412:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:27:35,418:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:27:35,424:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:27:35,429:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:27:35,435:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:27:35,441:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:27:35,447:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:27:35,452:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:27:35,458:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:27:35,463:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:27:35,469:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:27:35,474:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:27:35,480:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:27:35,486:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:27:35,491:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:27:35,497:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:27:35,502:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:27:35,508:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:27:35,513:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:27:35,519:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:27:35,525:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:27:35,531:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:27:35,536:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:27:35,542:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:27:35,547:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:27:35,553:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:27:35,558:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:27:35,564:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:27:35,570:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:27:35,575:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:27:35,581:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:27:35,586:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:27:35,592:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:27:35,598:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:27:35,603:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:27:35,609:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:27:35,614:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:27:35,620:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:27:35,626:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:27:35,632:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:27:35,638:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:27:35,643:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:27:35,649:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:27:35,654:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:27:35,660:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:27:35,666:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:27:35,672:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:27:35,677:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:27:35,683:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:27:35,688:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:27:35,694:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:27:35,699:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:27:35,705:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:27:35,710:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:27:35,716:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:27:35,722:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:27:36,061:INFO:Creating grid variables
2020-10-28 11:27:36,094:INFO:Logging experiment in MLFlow
2020-10-28 11:27:36,097:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:27:36,097:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:27:36,129:INFO:SubProcess save_model() called ==================================
2020-10-28 11:27:36,158:INFO:Initializing save_model()
2020-10-28 11:27:36,158:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:27:36,158:INFO:Adding model into prep_pipe
2020-10-28 11:27:51,880:INFO:PyCaret Supervised Module
2020-10-28 11:27:51,880:INFO:ML Usecase: regression
2020-10-28 11:27:51,880:INFO:version 2.2
2020-10-28 11:27:51,880:INFO:Initializing setup()
2020-10-28 11:27:51,880:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:27:51,880:INFO:Checking environment
2020-10-28 11:27:51,880:INFO:python_version: 3.8.3
2020-10-28 11:27:51,880:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:27:51,880:INFO:machine: x86_64
2020-10-28 11:27:51,880:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:27:51,881:INFO:Memory: svmem(total=8589934592, available=2210091008, percent=74.3, used=4413251584, free=16437248, active=2199470080, inactive=2098708480, wired=2213781504)
2020-10-28 11:27:51,881:INFO:Physical Core: 4
2020-10-28 11:27:51,881:INFO:Logical Core: 8
2020-10-28 11:27:51,881:INFO:Checking libraries
2020-10-28 11:27:51,881:INFO:pd==1.0.5
2020-10-28 11:27:51,881:INFO:numpy==1.18.5
2020-10-28 11:27:51,881:INFO:sklearn==0.23.2
2020-10-28 11:27:51,881:INFO:xgboost==1.2.0
2020-10-28 11:27:51,881:INFO:lightgbm==2.3.1
2020-10-28 11:27:51,881:INFO:catboost==0.24.1
2020-10-28 11:27:51,881:INFO:mlflow==1.11.0
2020-10-28 11:27:51,881:INFO:Checking Exceptions
2020-10-28 11:27:51,882:INFO:Declaring global variables
2020-10-28 11:27:51,882:INFO:USI: 9bf7
2020-10-28 11:27:51,882:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:27:51,882:INFO:Preparing display monitor
2020-10-28 11:27:51,882:INFO:Preparing display monitor
2020-10-28 11:27:51,894:INFO:Importing libraries
2020-10-28 11:27:51,894:INFO:Copying data for preprocessing
2020-10-28 11:27:51,901:INFO:Declaring preprocessing parameters
2020-10-28 11:27:51,902:INFO:Creating preprocessing pipeline
2020-10-28 11:27:51,907:INFO:Preprocessing pipeline created successfully
2020-10-28 11:27:51,907:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:27:51,908:INFO:Creating global containers
2020-10-28 11:27:51,908:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:27:55,110:INFO:Creating grid variables
2020-10-28 11:27:55,143:INFO:create_model_container: 0
2020-10-28 11:27:55,143:INFO:master_model_container: 0
2020-10-28 11:27:55,143:INFO:display_container: 0
2020-10-28 11:27:55,150:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:27:55,150:INFO:setup() succesfully completed......................................
2020-10-28 11:28:11,972:INFO:PyCaret Supervised Module
2020-10-28 11:28:11,972:INFO:ML Usecase: regression
2020-10-28 11:28:11,972:INFO:version 2.2
2020-10-28 11:28:11,972:INFO:Initializing setup()
2020-10-28 11:28:11,972:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:28:11,972:INFO:Checking environment
2020-10-28 11:28:11,972:INFO:python_version: 3.8.3
2020-10-28 11:28:11,973:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:28:11,973:INFO:machine: x86_64
2020-10-28 11:28:11,973:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:28:11,973:INFO:Memory: svmem(total=8589934592, available=2248515584, percent=73.8, used=4409782272, free=74510336, active=2178613248, inactive=2159898624, wired=2231169024)
2020-10-28 11:28:11,973:INFO:Physical Core: 4
2020-10-28 11:28:11,973:INFO:Logical Core: 8
2020-10-28 11:28:11,973:INFO:Checking libraries
2020-10-28 11:28:11,973:INFO:pd==1.0.5
2020-10-28 11:28:11,973:INFO:numpy==1.18.5
2020-10-28 11:28:11,973:INFO:sklearn==0.23.2
2020-10-28 11:28:11,973:INFO:xgboost==1.2.0
2020-10-28 11:28:11,973:INFO:lightgbm==2.3.1
2020-10-28 11:28:11,973:INFO:catboost==0.24.1
2020-10-28 11:28:11,973:INFO:mlflow==1.11.0
2020-10-28 11:28:11,973:INFO:Checking Exceptions
2020-10-28 11:28:11,973:INFO:Declaring global variables
2020-10-28 11:28:11,973:INFO:USI: a24b
2020-10-28 11:28:11,974:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:28:11,974:INFO:Preparing display monitor
2020-10-28 11:28:11,974:INFO:Preparing display monitor
2020-10-28 11:28:11,985:INFO:Importing libraries
2020-10-28 11:28:11,985:INFO:Copying data for preprocessing
2020-10-28 11:28:11,993:INFO:Declaring preprocessing parameters
2020-10-28 11:28:11,994:INFO:Creating preprocessing pipeline
2020-10-28 11:28:12,001:INFO:Preprocessing pipeline created successfully
2020-10-28 11:28:12,001:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:28:12,001:INFO:Creating global containers
2020-10-28 11:28:12,002:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:28:29,019:INFO:PyCaret Supervised Module
2020-10-28 11:28:29,020:INFO:ML Usecase: regression
2020-10-28 11:28:29,020:INFO:version 2.2
2020-10-28 11:28:29,020:INFO:Initializing setup()
2020-10-28 11:28:29,020:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:28:29,020:INFO:Checking environment
2020-10-28 11:28:29,020:INFO:python_version: 3.8.3
2020-10-28 11:28:29,020:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:28:29,020:INFO:machine: x86_64
2020-10-28 11:28:29,020:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:28:29,020:INFO:Memory: svmem(total=8589934592, available=2297618432, percent=73.3, used=4340764672, free=140718080, active=2158452736, inactive=2144927744, wired=2182311936)
2020-10-28 11:28:29,020:INFO:Physical Core: 4
2020-10-28 11:28:29,021:INFO:Logical Core: 8
2020-10-28 11:28:29,021:INFO:Checking libraries
2020-10-28 11:28:29,021:INFO:pd==1.0.5
2020-10-28 11:28:29,021:INFO:numpy==1.18.5
2020-10-28 11:28:29,021:INFO:sklearn==0.23.2
2020-10-28 11:28:29,021:INFO:xgboost==1.2.0
2020-10-28 11:28:29,021:INFO:lightgbm==2.3.1
2020-10-28 11:28:29,021:INFO:catboost==0.24.1
2020-10-28 11:28:29,021:INFO:mlflow==1.11.0
2020-10-28 11:28:29,021:INFO:Checking Exceptions
2020-10-28 11:28:29,021:INFO:Declaring global variables
2020-10-28 11:28:29,021:INFO:USI: db15
2020-10-28 11:28:29,021:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:28:29,021:INFO:Preparing display monitor
2020-10-28 11:28:29,021:INFO:Preparing display monitor
2020-10-28 11:28:29,033:INFO:Importing libraries
2020-10-28 11:28:29,034:INFO:Copying data for preprocessing
2020-10-28 11:28:29,041:INFO:Declaring preprocessing parameters
2020-10-28 11:28:29,043:INFO:Creating preprocessing pipeline
2020-10-28 11:28:29,048:INFO:Preprocessing pipeline created successfully
2020-10-28 11:28:29,049:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:28:29,049:INFO:Creating global containers
2020-10-28 11:28:29,050:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:29:01,793:INFO:PyCaret Supervised Module
2020-10-28 11:29:01,794:INFO:ML Usecase: regression
2020-10-28 11:29:01,794:INFO:version 2.2
2020-10-28 11:29:01,794:INFO:Initializing setup()
2020-10-28 11:29:01,794:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=20, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:29:01,794:INFO:Checking environment
2020-10-28 11:29:01,795:INFO:python_version: 3.8.3
2020-10-28 11:29:01,795:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:29:01,795:INFO:machine: x86_64
2020-10-28 11:29:01,795:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:29:01,795:INFO:Memory: svmem(total=8589934592, available=2242875392, percent=73.9, used=4371439616, free=94879744, active=2152648704, inactive=2118791168, wired=2218790912)
2020-10-28 11:29:01,795:INFO:Physical Core: 4
2020-10-28 11:29:01,795:INFO:Logical Core: 8
2020-10-28 11:29:01,795:INFO:Checking libraries
2020-10-28 11:29:01,796:INFO:pd==1.0.5
2020-10-28 11:29:01,796:INFO:numpy==1.18.5
2020-10-28 11:29:01,796:INFO:sklearn==0.23.2
2020-10-28 11:29:01,796:INFO:xgboost==1.2.0
2020-10-28 11:29:01,796:INFO:lightgbm==2.3.1
2020-10-28 11:29:01,796:INFO:catboost==0.24.1
2020-10-28 11:29:01,796:INFO:mlflow==1.11.0
2020-10-28 11:29:01,796:INFO:Checking Exceptions
2020-10-28 11:29:01,796:INFO:Declaring global variables
2020-10-28 11:29:01,796:INFO:USI: ae3b
2020-10-28 11:29:01,797:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:29:01,797:INFO:Preparing display monitor
2020-10-28 11:29:01,797:INFO:Preparing display monitor
2020-10-28 11:29:01,810:INFO:Importing libraries
2020-10-28 11:29:01,810:INFO:Copying data for preprocessing
2020-10-28 11:29:01,817:INFO:Declaring preprocessing parameters
2020-10-28 11:29:01,818:INFO:Setting up iterative imputation
2020-10-28 11:29:02,030:INFO:Creating preprocessing pipeline
2020-10-28 11:29:02,036:INFO:Preprocessing pipeline created successfully
2020-10-28 11:29:02,036:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:29:02,036:INFO:Creating global containers
2020-10-28 11:29:02,039:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:29:04,805:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:29:04,837:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:29:04,867:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:29:04,899:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:29:04,931:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:29:04,959:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:29:04,985:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:29:05,014:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:29:05,042:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:29:05,068:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:29:05,093:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:29:05,126:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:29:05,157:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:29:05,188:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:29:05,234:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:29:05,322:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:29:05,375:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:29:05,402:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:29:05,427:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:29:05,452:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:29:05,473:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:29:05,505:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:29:05,536:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:29:05,566:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:29:05,593:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:29:05,620:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:29:05,645:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:29:05,671:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:29:05,695:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:29:05,719:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:29:05,741:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:29:05,775:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:29:05,860:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:29:05,926:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:29:05,981:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:29:06,009:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:29:06,036:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:29:06,061:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:29:06,094:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:29:06,129:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:29:06,179:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:29:06,259:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:29:06,302:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:29:06,332:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:29:06,360:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:29:06,387:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:29:06,412:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:29:06,440:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:29:06,494:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:29:06,537:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:29:06,593:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:29:06,640:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:29:06,670:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:29:06,700:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:29:06,728:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:29:06,756:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:29:06,801:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:29:06,861:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:29:06,930:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:29:06,958:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:29:06,988:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:29:07,022:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:29:07,053:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:29:07,083:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:29:07,112:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:29:07,164:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:29:07,213:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:29:07,262:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:29:07,311:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:29:07,361:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:29:07,397:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:29:07,461:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:29:07,560:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:29:07,612:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:29:07,660:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:29:07,687:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:29:07,711:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:29:07,737:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:29:07,769:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:29:07,794:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:29:07,928:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:29:07,961:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:29:08,013:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:29:08,043:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:29:08,071:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:29:08,096:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:29:08,121:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:29:08,146:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:29:08,173:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:29:08,195:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:29:08,220:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:29:08,260:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:29:08,291:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:29:08,322:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:29:08,352:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:29:08,379:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:29:08,405:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:29:08,430:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:29:08,456:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:29:08,479:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:29:08,503:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:29:08,531:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:29:08,562:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:29:08,591:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:29:08,620:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:29:08,646:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:29:08,671:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:29:08,696:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:29:08,729:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:29:08,764:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:29:08,788:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:29:08,819:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:29:08,851:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:29:09,122:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:29:09,362:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:29:09,572:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:29:09,622:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:29:09,671:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:29:09,801:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:29:09,928:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:29:09,963:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:29:09,999:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:29:10,029:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:29:10,060:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:29:10,089:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:29:10,118:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:29:10,146:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:29:10,203:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:29:10,230:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:29:10,253:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:29:10,278:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:29:10,308:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:29:10,344:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:29:10,373:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:29:10,399:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:29:10,429:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:29:10,454:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:29:10,480:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:29:10,506:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:29:10,529:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:29:10,552:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:29:10,587:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:29:10,657:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:29:10,713:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:29:10,761:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:29:10,816:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:29:10,882:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:29:10,933:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:29:10,982:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:29:11,024:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:29:11,065:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:29:11,127:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:29:11,200:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:29:11,282:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:29:11,347:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:29:11,394:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:29:11,481:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:29:11,532:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:29:11,586:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:29:11,664:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:29:11,706:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:29:11,782:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:29:11,849:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:29:11,881:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:29:11,939:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:29:11,993:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:29:12,042:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:29:12,104:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:29:12,130:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:29:12,150:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:29:12,171:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:29:12,198:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:29:12,226:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:29:12,252:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:29:12,277:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:29:12,303:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:29:12,328:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:29:12,351:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:29:12,376:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:29:12,397:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:29:12,419:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:29:12,445:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:29:12,475:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:29:12,504:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:29:12,530:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:29:12,554:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:29:12,579:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:29:12,602:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:29:12,627:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:29:12,649:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:29:12,670:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:29:12,697:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:29:12,726:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:29:12,751:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:29:12,777:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:29:12,801:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:29:12,826:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:29:12,849:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:29:12,875:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:29:12,897:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:29:13,498:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:29:13,505:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:29:13,511:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:29:13,517:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:29:13,524:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:29:13,530:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:29:13,537:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:29:13,544:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:29:13,551:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:29:13,557:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:29:13,564:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:29:13,570:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:29:13,576:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:29:13,582:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:29:13,588:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:29:13,594:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:29:13,601:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:29:13,607:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:29:13,613:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:29:13,619:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:29:13,625:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:29:13,631:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:29:13,637:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:29:13,644:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:29:13,650:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:29:13,656:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:29:13,662:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:29:13,667:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:29:13,673:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:29:13,679:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:29:13,684:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:29:13,690:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:29:13,696:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:29:13,702:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:29:13,708:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:29:13,714:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:29:13,719:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:29:13,725:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:29:13,730:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:29:13,736:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:29:13,742:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:29:13,748:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:29:13,754:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:29:13,760:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:29:13,765:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:29:13,771:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:29:13,777:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:29:13,782:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:29:13,789:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:29:13,796:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:29:13,802:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:29:13,808:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:29:13,814:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:29:13,821:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:29:13,827:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:29:13,833:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:29:13,840:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:29:13,846:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:29:13,853:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:29:13,859:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:29:13,866:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:29:13,872:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:29:13,878:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:29:13,885:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:29:13,892:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:29:13,898:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:29:13,905:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:29:13,911:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:29:13,918:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:29:13,925:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:29:13,931:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:29:13,938:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:29:13,944:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:29:13,950:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:29:13,956:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:29:13,963:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:29:13,969:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:29:13,976:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:29:13,982:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:29:13,989:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:29:13,995:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:29:14,002:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:29:14,009:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:29:14,014:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:29:14,020:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:29:14,026:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:29:14,032:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:29:14,038:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:29:14,044:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:29:14,050:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:29:14,056:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:29:14,061:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:29:14,067:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:29:14,073:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:29:14,079:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:29:14,084:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:29:14,091:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:29:14,096:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:29:14,103:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:29:14,108:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:29:14,114:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:29:14,120:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:29:14,125:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:29:14,131:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:29:14,137:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:29:14,143:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:29:14,149:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:29:14,155:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:29:14,160:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:29:14,166:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:29:14,171:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:29:14,177:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:29:14,183:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:29:14,189:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:29:14,195:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:29:14,201:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:29:14,206:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:29:14,212:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:29:14,218:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:29:14,223:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:29:14,229:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:29:14,234:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:29:14,240:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:29:14,246:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:29:14,252:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:29:14,258:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:29:14,263:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:29:14,269:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:29:14,275:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:29:14,280:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:29:14,286:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:29:14,292:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:29:14,298:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:29:14,304:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:29:14,310:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:29:14,315:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:29:14,321:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:29:14,326:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:29:14,332:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:29:14,338:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:29:14,344:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:29:14,350:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:29:14,356:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:29:14,361:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:29:14,367:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:29:14,373:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:29:14,378:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:29:14,383:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:29:14,390:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:29:14,395:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:29:14,401:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:29:14,407:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:29:14,413:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:29:14,419:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:29:14,424:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:29:14,430:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:29:14,435:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:29:14,441:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:29:14,447:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:29:14,453:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:29:14,459:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:29:14,465:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:29:14,470:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:29:14,476:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:29:14,481:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:29:14,487:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:29:14,493:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:29:14,499:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:29:14,505:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:29:14,511:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:29:14,516:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:29:14,522:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:29:14,527:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:29:14,533:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:29:14,539:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:29:14,545:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:29:14,551:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:29:14,557:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:29:14,562:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:29:14,568:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:29:14,574:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:29:14,580:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:29:14,585:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:29:14,592:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:29:14,597:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:29:14,603:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:29:14,609:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:29:14,615:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:29:14,621:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:29:14,626:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:29:14,632:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:29:14,638:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:29:14,644:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:29:14,650:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:29:14,656:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:29:14,661:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:29:14,667:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:29:14,673:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:29:14,678:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:29:14,684:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:29:14,747:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:29:14,753:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:29:14,759:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:29:14,766:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:29:14,772:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:29:14,779:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:29:14,785:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:29:14,792:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:29:14,799:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:29:14,806:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:29:14,812:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:29:14,818:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:29:14,824:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:29:14,829:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:29:14,835:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:29:14,841:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:29:14,847:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:29:14,853:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:29:14,859:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:29:14,865:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:29:14,871:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:29:14,877:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:29:14,882:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:29:14,889:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:29:14,895:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:29:14,901:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:29:14,907:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:29:14,912:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:29:14,918:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:29:14,924:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:29:14,930:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:29:14,936:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:29:14,942:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:29:14,948:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:29:14,954:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:29:14,960:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:29:14,965:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:29:14,971:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:29:14,977:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:29:14,983:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:29:14,989:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:29:14,995:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:29:15,001:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:29:15,007:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:29:15,012:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:29:15,018:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:29:15,024:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:29:15,029:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:29:15,036:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:29:15,042:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:29:15,048:INFO:Iterative Imputation: 6 cycle | weekbefore
2020-10-28 11:29:15,054:INFO:Iterative Imputation: 6 cycle | Tuesday
2020-10-28 11:29:15,060:INFO:Iterative Imputation: 6 cycle | Friday
2020-10-28 11:29:15,066:INFO:Iterative Imputation: 6 cycle | Monday
2020-10-28 11:29:15,072:INFO:Iterative Imputation: 6 cycle | Wednesday
2020-10-28 11:29:15,077:INFO:Iterative Imputation: 6 cycle | Saturday
2020-10-28 11:29:15,083:INFO:Iterative Imputation: 6 cycle | ncoachingid
2020-10-28 11:29:15,089:INFO:Iterative Imputation: 6 cycle | Thursday
2020-10-28 11:29:15,095:INFO:Iterative Imputation: 6 cycle | Sunday
2020-10-28 11:29:15,102:INFO:Iterative Imputation: 6 cycle | total coaching improved
2020-10-28 11:29:15,108:INFO:Iterative Imputation: 7 cycle | weekbefore
2020-10-28 11:29:15,113:INFO:Iterative Imputation: 7 cycle | Tuesday
2020-10-28 11:29:15,119:INFO:Iterative Imputation: 7 cycle | Friday
2020-10-28 11:29:15,125:INFO:Iterative Imputation: 7 cycle | Monday
2020-10-28 11:29:15,131:INFO:Iterative Imputation: 7 cycle | Wednesday
2020-10-28 11:29:15,137:INFO:Iterative Imputation: 7 cycle | Saturday
2020-10-28 11:29:15,143:INFO:Iterative Imputation: 7 cycle | ncoachingid
2020-10-28 11:29:15,149:INFO:Iterative Imputation: 7 cycle | Thursday
2020-10-28 11:29:15,155:INFO:Iterative Imputation: 7 cycle | Sunday
2020-10-28 11:29:15,161:INFO:Iterative Imputation: 7 cycle | total coaching improved
2020-10-28 11:29:15,167:INFO:Iterative Imputation: 8 cycle | weekbefore
2020-10-28 11:29:15,173:INFO:Iterative Imputation: 8 cycle | Tuesday
2020-10-28 11:29:15,178:INFO:Iterative Imputation: 8 cycle | Friday
2020-10-28 11:29:15,184:INFO:Iterative Imputation: 8 cycle | Monday
2020-10-28 11:29:15,190:INFO:Iterative Imputation: 8 cycle | Wednesday
2020-10-28 11:29:15,196:INFO:Iterative Imputation: 8 cycle | Saturday
2020-10-28 11:29:15,202:INFO:Iterative Imputation: 8 cycle | ncoachingid
2020-10-28 11:29:15,208:INFO:Iterative Imputation: 8 cycle | Thursday
2020-10-28 11:29:15,214:INFO:Iterative Imputation: 8 cycle | Sunday
2020-10-28 11:29:15,220:INFO:Iterative Imputation: 8 cycle | total coaching improved
2020-10-28 11:29:15,226:INFO:Iterative Imputation: 9 cycle | weekbefore
2020-10-28 11:29:15,232:INFO:Iterative Imputation: 9 cycle | Tuesday
2020-10-28 11:29:15,237:INFO:Iterative Imputation: 9 cycle | Friday
2020-10-28 11:29:15,244:INFO:Iterative Imputation: 9 cycle | Monday
2020-10-28 11:29:15,250:INFO:Iterative Imputation: 9 cycle | Wednesday
2020-10-28 11:29:15,256:INFO:Iterative Imputation: 9 cycle | Saturday
2020-10-28 11:29:15,262:INFO:Iterative Imputation: 9 cycle | ncoachingid
2020-10-28 11:29:15,267:INFO:Iterative Imputation: 9 cycle | Thursday
2020-10-28 11:29:15,273:INFO:Iterative Imputation: 9 cycle | Sunday
2020-10-28 11:29:15,279:INFO:Iterative Imputation: 9 cycle | total coaching improved
2020-10-28 11:29:15,285:INFO:Iterative Imputation: 10 cycle | weekbefore
2020-10-28 11:29:15,291:INFO:Iterative Imputation: 10 cycle | Tuesday
2020-10-28 11:29:15,297:INFO:Iterative Imputation: 10 cycle | Friday
2020-10-28 11:29:15,303:INFO:Iterative Imputation: 10 cycle | Monday
2020-10-28 11:29:15,309:INFO:Iterative Imputation: 10 cycle | Wednesday
2020-10-28 11:29:15,314:INFO:Iterative Imputation: 10 cycle | Saturday
2020-10-28 11:29:15,320:INFO:Iterative Imputation: 10 cycle | ncoachingid
2020-10-28 11:29:15,326:INFO:Iterative Imputation: 10 cycle | Thursday
2020-10-28 11:29:15,332:INFO:Iterative Imputation: 10 cycle | Sunday
2020-10-28 11:29:15,338:INFO:Iterative Imputation: 10 cycle | total coaching improved
2020-10-28 11:29:15,344:INFO:Iterative Imputation: 11 cycle | weekbefore
2020-10-28 11:29:15,350:INFO:Iterative Imputation: 11 cycle | Tuesday
2020-10-28 11:29:15,356:INFO:Iterative Imputation: 11 cycle | Friday
2020-10-28 11:29:15,362:INFO:Iterative Imputation: 11 cycle | Monday
2020-10-28 11:29:15,367:INFO:Iterative Imputation: 11 cycle | Wednesday
2020-10-28 11:29:15,373:INFO:Iterative Imputation: 11 cycle | Saturday
2020-10-28 11:29:15,379:INFO:Iterative Imputation: 11 cycle | ncoachingid
2020-10-28 11:29:15,385:INFO:Iterative Imputation: 11 cycle | Thursday
2020-10-28 11:29:15,391:INFO:Iterative Imputation: 11 cycle | Sunday
2020-10-28 11:29:15,397:INFO:Iterative Imputation: 11 cycle | total coaching improved
2020-10-28 11:29:15,403:INFO:Iterative Imputation: 12 cycle | weekbefore
2020-10-28 11:29:15,409:INFO:Iterative Imputation: 12 cycle | Tuesday
2020-10-28 11:29:15,414:INFO:Iterative Imputation: 12 cycle | Friday
2020-10-28 11:29:15,420:INFO:Iterative Imputation: 12 cycle | Monday
2020-10-28 11:29:15,426:INFO:Iterative Imputation: 12 cycle | Wednesday
2020-10-28 11:29:15,432:INFO:Iterative Imputation: 12 cycle | Saturday
2020-10-28 11:29:15,437:INFO:Iterative Imputation: 12 cycle | ncoachingid
2020-10-28 11:29:15,444:INFO:Iterative Imputation: 12 cycle | Thursday
2020-10-28 11:29:15,450:INFO:Iterative Imputation: 12 cycle | Sunday
2020-10-28 11:29:15,456:INFO:Iterative Imputation: 12 cycle | total coaching improved
2020-10-28 11:29:15,462:INFO:Iterative Imputation: 13 cycle | weekbefore
2020-10-28 11:29:15,467:INFO:Iterative Imputation: 13 cycle | Tuesday
2020-10-28 11:29:15,473:INFO:Iterative Imputation: 13 cycle | Friday
2020-10-28 11:29:15,479:INFO:Iterative Imputation: 13 cycle | Monday
2020-10-28 11:29:15,484:INFO:Iterative Imputation: 13 cycle | Wednesday
2020-10-28 11:29:15,491:INFO:Iterative Imputation: 13 cycle | Saturday
2020-10-28 11:29:15,497:INFO:Iterative Imputation: 13 cycle | ncoachingid
2020-10-28 11:29:15,503:INFO:Iterative Imputation: 13 cycle | Thursday
2020-10-28 11:29:15,509:INFO:Iterative Imputation: 13 cycle | Sunday
2020-10-28 11:29:15,514:INFO:Iterative Imputation: 13 cycle | total coaching improved
2020-10-28 11:29:15,520:INFO:Iterative Imputation: 14 cycle | weekbefore
2020-10-28 11:29:15,526:INFO:Iterative Imputation: 14 cycle | Tuesday
2020-10-28 11:29:15,531:INFO:Iterative Imputation: 14 cycle | Friday
2020-10-28 11:29:15,537:INFO:Iterative Imputation: 14 cycle | Monday
2020-10-28 11:29:15,543:INFO:Iterative Imputation: 14 cycle | Wednesday
2020-10-28 11:29:15,549:INFO:Iterative Imputation: 14 cycle | Saturday
2020-10-28 11:29:15,555:INFO:Iterative Imputation: 14 cycle | ncoachingid
2020-10-28 11:29:15,561:INFO:Iterative Imputation: 14 cycle | Thursday
2020-10-28 11:29:15,567:INFO:Iterative Imputation: 14 cycle | Sunday
2020-10-28 11:29:15,573:INFO:Iterative Imputation: 14 cycle | total coaching improved
2020-10-28 11:29:15,578:INFO:Iterative Imputation: 15 cycle | weekbefore
2020-10-28 11:29:15,584:INFO:Iterative Imputation: 15 cycle | Tuesday
2020-10-28 11:29:15,590:INFO:Iterative Imputation: 15 cycle | Friday
2020-10-28 11:29:15,596:INFO:Iterative Imputation: 15 cycle | Monday
2020-10-28 11:29:15,602:INFO:Iterative Imputation: 15 cycle | Wednesday
2020-10-28 11:29:15,608:INFO:Iterative Imputation: 15 cycle | Saturday
2020-10-28 11:29:15,614:INFO:Iterative Imputation: 15 cycle | ncoachingid
2020-10-28 11:29:15,620:INFO:Iterative Imputation: 15 cycle | Thursday
2020-10-28 11:29:15,625:INFO:Iterative Imputation: 15 cycle | Sunday
2020-10-28 11:29:15,631:INFO:Iterative Imputation: 15 cycle | total coaching improved
2020-10-28 11:29:15,637:INFO:Iterative Imputation: 16 cycle | weekbefore
2020-10-28 11:29:15,643:INFO:Iterative Imputation: 16 cycle | Tuesday
2020-10-28 11:29:15,649:INFO:Iterative Imputation: 16 cycle | Friday
2020-10-28 11:29:15,655:INFO:Iterative Imputation: 16 cycle | Monday
2020-10-28 11:29:15,661:INFO:Iterative Imputation: 16 cycle | Wednesday
2020-10-28 11:29:15,666:INFO:Iterative Imputation: 16 cycle | Saturday
2020-10-28 11:29:15,672:INFO:Iterative Imputation: 16 cycle | ncoachingid
2020-10-28 11:29:15,678:INFO:Iterative Imputation: 16 cycle | Thursday
2020-10-28 11:29:15,683:INFO:Iterative Imputation: 16 cycle | Sunday
2020-10-28 11:29:15,690:INFO:Iterative Imputation: 16 cycle | total coaching improved
2020-10-28 11:29:15,696:INFO:Iterative Imputation: 17 cycle | weekbefore
2020-10-28 11:29:15,702:INFO:Iterative Imputation: 17 cycle | Tuesday
2020-10-28 11:29:15,708:INFO:Iterative Imputation: 17 cycle | Friday
2020-10-28 11:29:15,714:INFO:Iterative Imputation: 17 cycle | Monday
2020-10-28 11:29:15,719:INFO:Iterative Imputation: 17 cycle | Wednesday
2020-10-28 11:29:15,725:INFO:Iterative Imputation: 17 cycle | Saturday
2020-10-28 11:29:15,731:INFO:Iterative Imputation: 17 cycle | ncoachingid
2020-10-28 11:29:15,737:INFO:Iterative Imputation: 17 cycle | Thursday
2020-10-28 11:29:15,743:INFO:Iterative Imputation: 17 cycle | Sunday
2020-10-28 11:29:15,749:INFO:Iterative Imputation: 17 cycle | total coaching improved
2020-10-28 11:29:15,755:INFO:Iterative Imputation: 18 cycle | weekbefore
2020-10-28 11:29:15,761:INFO:Iterative Imputation: 18 cycle | Tuesday
2020-10-28 11:29:15,766:INFO:Iterative Imputation: 18 cycle | Friday
2020-10-28 11:29:15,772:INFO:Iterative Imputation: 18 cycle | Monday
2020-10-28 11:29:15,778:INFO:Iterative Imputation: 18 cycle | Wednesday
2020-10-28 11:29:15,784:INFO:Iterative Imputation: 18 cycle | Saturday
2020-10-28 11:29:15,790:INFO:Iterative Imputation: 18 cycle | ncoachingid
2020-10-28 11:29:15,796:INFO:Iterative Imputation: 18 cycle | Thursday
2020-10-28 11:29:15,802:INFO:Iterative Imputation: 18 cycle | Sunday
2020-10-28 11:29:15,808:INFO:Iterative Imputation: 18 cycle | total coaching improved
2020-10-28 11:29:15,814:INFO:Iterative Imputation: 19 cycle | weekbefore
2020-10-28 11:29:15,820:INFO:Iterative Imputation: 19 cycle | Tuesday
2020-10-28 11:29:15,826:INFO:Iterative Imputation: 19 cycle | Friday
2020-10-28 11:29:15,832:INFO:Iterative Imputation: 19 cycle | Monday
2020-10-28 11:29:15,838:INFO:Iterative Imputation: 19 cycle | Wednesday
2020-10-28 11:29:15,844:INFO:Iterative Imputation: 19 cycle | Saturday
2020-10-28 11:29:15,851:INFO:Iterative Imputation: 19 cycle | ncoachingid
2020-10-28 11:29:15,857:INFO:Iterative Imputation: 19 cycle | Thursday
2020-10-28 11:29:15,863:INFO:Iterative Imputation: 19 cycle | Sunday
2020-10-28 11:29:15,868:INFO:Iterative Imputation: 19 cycle | total coaching improved
2020-10-28 11:29:15,874:INFO:Iterative Imputation: 20 cycle | weekbefore
2020-10-28 11:29:15,880:INFO:Iterative Imputation: 20 cycle | Tuesday
2020-10-28 11:29:15,886:INFO:Iterative Imputation: 20 cycle | Friday
2020-10-28 11:29:15,892:INFO:Iterative Imputation: 20 cycle | Monday
2020-10-28 11:29:15,898:INFO:Iterative Imputation: 20 cycle | Wednesday
2020-10-28 11:29:15,904:INFO:Iterative Imputation: 20 cycle | Saturday
2020-10-28 11:29:15,910:INFO:Iterative Imputation: 20 cycle | ncoachingid
2020-10-28 11:29:15,915:INFO:Iterative Imputation: 20 cycle | Thursday
2020-10-28 11:29:15,921:INFO:Iterative Imputation: 20 cycle | Sunday
2020-10-28 11:29:15,927:INFO:Iterative Imputation: 20 cycle | total coaching improved
2020-10-28 11:29:16,255:INFO:Creating grid variables
2020-10-28 11:29:16,287:INFO:Logging experiment in MLFlow
2020-10-28 11:29:16,290:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:29:16,292:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:29:16,323:INFO:SubProcess save_model() called ==================================
2020-10-28 11:29:16,355:INFO:Initializing save_model()
2020-10-28 11:29:16,355:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:29:16,355:INFO:Adding model into prep_pipe
2020-10-28 11:29:33,056:INFO:PyCaret Supervised Module
2020-10-28 11:29:33,057:INFO:ML Usecase: regression
2020-10-28 11:29:33,057:INFO:version 2.2
2020-10-28 11:29:33,057:INFO:Initializing setup()
2020-10-28 11:29:33,057:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:29:33,057:INFO:Checking environment
2020-10-28 11:29:33,057:INFO:python_version: 3.8.3
2020-10-28 11:29:33,057:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:29:33,057:INFO:machine: x86_64
2020-10-28 11:29:33,057:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:29:33,057:INFO:Memory: svmem(total=8589934592, available=2238779392, percent=73.9, used=4381315072, free=54956032, active=2188247040, inactive=2173034496, wired=2193068032)
2020-10-28 11:29:33,058:INFO:Physical Core: 4
2020-10-28 11:29:33,058:INFO:Logical Core: 8
2020-10-28 11:29:33,058:INFO:Checking libraries
2020-10-28 11:29:33,058:INFO:pd==1.0.5
2020-10-28 11:29:33,058:INFO:numpy==1.18.5
2020-10-28 11:29:33,058:INFO:sklearn==0.23.2
2020-10-28 11:29:33,058:INFO:xgboost==1.2.0
2020-10-28 11:29:33,058:INFO:lightgbm==2.3.1
2020-10-28 11:29:33,058:INFO:catboost==0.24.1
2020-10-28 11:29:33,058:INFO:mlflow==1.11.0
2020-10-28 11:29:33,058:INFO:Checking Exceptions
2020-10-28 11:29:33,058:INFO:Declaring global variables
2020-10-28 11:29:33,059:INFO:USI: 6180
2020-10-28 11:29:33,059:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:29:33,059:INFO:Preparing display monitor
2020-10-28 11:29:33,059:INFO:Preparing display monitor
2020-10-28 11:29:33,074:INFO:Importing libraries
2020-10-28 11:29:33,074:INFO:Copying data for preprocessing
2020-10-28 11:29:33,082:INFO:Declaring preprocessing parameters
2020-10-28 11:29:33,084:INFO:Creating preprocessing pipeline
2020-10-28 11:29:33,090:INFO:Preprocessing pipeline created successfully
2020-10-28 11:29:33,090:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:29:33,090:INFO:Creating global containers
2020-10-28 11:29:33,090:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:29:34,979:INFO:Creating grid variables
2020-10-28 11:29:35,063:INFO:create_model_container: 0
2020-10-28 11:29:35,063:INFO:master_model_container: 0
2020-10-28 11:29:35,064:INFO:display_container: 0
2020-10-28 11:29:35,092:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:29:35,108:INFO:setup() succesfully completed......................................
2020-10-28 11:29:49,878:INFO:PyCaret Supervised Module
2020-10-28 11:29:49,878:INFO:ML Usecase: regression
2020-10-28 11:29:49,879:INFO:version 2.2
2020-10-28 11:29:49,879:INFO:Initializing setup()
2020-10-28 11:29:49,879:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:29:49,879:INFO:Checking environment
2020-10-28 11:29:49,879:INFO:python_version: 3.8.3
2020-10-28 11:29:49,879:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:29:49,879:INFO:machine: x86_64
2020-10-28 11:29:49,879:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:29:49,879:INFO:Memory: svmem(total=8589934592, available=2008104960, percent=76.6, used=4204589056, free=18292736, active=1995132928, inactive=1986740224, wired=2209456128)
2020-10-28 11:29:49,880:INFO:Physical Core: 4
2020-10-28 11:29:49,880:INFO:Logical Core: 8
2020-10-28 11:29:49,880:INFO:Checking libraries
2020-10-28 11:29:49,880:INFO:pd==1.0.5
2020-10-28 11:29:49,880:INFO:numpy==1.18.5
2020-10-28 11:29:49,880:INFO:sklearn==0.23.2
2020-10-28 11:29:49,880:INFO:xgboost==1.2.0
2020-10-28 11:29:49,880:INFO:lightgbm==2.3.1
2020-10-28 11:29:49,880:INFO:catboost==0.24.1
2020-10-28 11:29:49,880:INFO:mlflow==1.11.0
2020-10-28 11:29:49,880:INFO:Checking Exceptions
2020-10-28 11:29:49,880:INFO:Declaring global variables
2020-10-28 11:29:49,880:INFO:USI: 9622
2020-10-28 11:29:49,881:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:29:49,881:INFO:Preparing display monitor
2020-10-28 11:29:49,881:INFO:Preparing display monitor
2020-10-28 11:29:49,893:INFO:Importing libraries
2020-10-28 11:29:49,893:INFO:Copying data for preprocessing
2020-10-28 11:29:49,902:INFO:Declaring preprocessing parameters
2020-10-28 11:29:49,903:INFO:Creating preprocessing pipeline
2020-10-28 11:29:49,909:INFO:Preprocessing pipeline created successfully
2020-10-28 11:29:49,909:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:29:49,909:INFO:Creating global containers
2020-10-28 11:29:49,910:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:29:52,988:INFO:Creating grid variables
2020-10-28 11:29:53,034:INFO:create_model_container: 0
2020-10-28 11:29:53,034:INFO:master_model_container: 0
2020-10-28 11:29:53,034:INFO:display_container: 0
2020-10-28 11:29:53,041:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:29:53,041:INFO:setup() succesfully completed......................................
2020-10-28 11:30:28,964:INFO:PyCaret Supervised Module
2020-10-28 11:30:28,964:INFO:ML Usecase: regression
2020-10-28 11:30:28,964:INFO:version 2.2
2020-10-28 11:30:28,965:INFO:Initializing setup()
2020-10-28 11:30:28,965:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:30:28,965:INFO:Checking environment
2020-10-28 11:30:28,965:INFO:python_version: 3.8.3
2020-10-28 11:30:28,965:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:30:28,965:INFO:machine: x86_64
2020-10-28 11:30:28,965:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:30:28,965:INFO:Memory: svmem(total=8589934592, available=2333020160, percent=72.8, used=4614000640, free=63217664, active=2274566144, inactive=2256318464, wired=2339434496)
2020-10-28 11:30:28,965:INFO:Physical Core: 4
2020-10-28 11:30:28,965:INFO:Logical Core: 8
2020-10-28 11:30:28,966:INFO:Checking libraries
2020-10-28 11:30:28,966:INFO:pd==1.0.5
2020-10-28 11:30:28,966:INFO:numpy==1.18.5
2020-10-28 11:30:28,966:INFO:sklearn==0.23.2
2020-10-28 11:30:28,966:INFO:xgboost==1.2.0
2020-10-28 11:30:28,966:INFO:lightgbm==2.3.1
2020-10-28 11:30:28,966:INFO:catboost==0.24.1
2020-10-28 11:30:28,966:INFO:mlflow==1.11.0
2020-10-28 11:30:28,966:INFO:Checking Exceptions
2020-10-28 11:30:28,966:INFO:Declaring global variables
2020-10-28 11:30:28,966:INFO:USI: 376a
2020-10-28 11:30:28,966:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:30:28,966:INFO:Preparing display monitor
2020-10-28 11:30:28,966:INFO:Preparing display monitor
2020-10-28 11:30:28,979:INFO:Importing libraries
2020-10-28 11:30:28,979:INFO:Copying data for preprocessing
2020-10-28 11:30:28,985:INFO:Declaring preprocessing parameters
2020-10-28 11:30:28,986:INFO:Creating preprocessing pipeline
2020-10-28 11:30:28,991:INFO:Preprocessing pipeline created successfully
2020-10-28 11:30:28,991:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:30:28,991:INFO:Creating global containers
2020-10-28 11:30:28,992:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:30:31,481:INFO:Creating grid variables
2020-10-28 11:30:31,520:INFO:create_model_container: 0
2020-10-28 11:30:31,520:INFO:master_model_container: 0
2020-10-28 11:30:31,520:INFO:display_container: 0
2020-10-28 11:30:31,529:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:30:31,529:INFO:setup() succesfully completed......................................
2020-10-28 11:30:37,230:INFO:PyCaret Supervised Module
2020-10-28 11:30:37,230:INFO:ML Usecase: regression
2020-10-28 11:30:37,230:INFO:version 2.2
2020-10-28 11:30:37,230:INFO:Initializing setup()
2020-10-28 11:30:37,230:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:30:37,230:INFO:Checking environment
2020-10-28 11:30:37,230:INFO:python_version: 3.8.3
2020-10-28 11:30:37,230:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:30:37,230:INFO:machine: x86_64
2020-10-28 11:30:37,231:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:30:37,231:INFO:Memory: svmem(total=8589934592, available=2427990016, percent=71.7, used=4473266176, free=155844608, active=2274713600, inactive=2269966336, wired=2198552576)
2020-10-28 11:30:37,231:INFO:Physical Core: 4
2020-10-28 11:30:37,231:INFO:Logical Core: 8
2020-10-28 11:30:37,231:INFO:Checking libraries
2020-10-28 11:30:37,231:INFO:pd==1.0.5
2020-10-28 11:30:37,231:INFO:numpy==1.18.5
2020-10-28 11:30:37,231:INFO:sklearn==0.23.2
2020-10-28 11:30:37,231:INFO:xgboost==1.2.0
2020-10-28 11:30:37,231:INFO:lightgbm==2.3.1
2020-10-28 11:30:37,231:INFO:catboost==0.24.1
2020-10-28 11:30:37,231:INFO:mlflow==1.11.0
2020-10-28 11:30:37,231:INFO:Checking Exceptions
2020-10-28 11:30:37,232:INFO:Declaring global variables
2020-10-28 11:30:37,232:INFO:USI: b192
2020-10-28 11:30:37,232:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:30:37,232:INFO:Preparing display monitor
2020-10-28 11:30:37,232:INFO:Preparing display monitor
2020-10-28 11:30:37,250:INFO:Importing libraries
2020-10-28 11:30:37,251:INFO:Copying data for preprocessing
2020-10-28 11:30:37,259:INFO:Declaring preprocessing parameters
2020-10-28 11:30:37,260:INFO:Creating preprocessing pipeline
2020-10-28 11:30:37,264:INFO:Preprocessing pipeline created successfully
2020-10-28 11:30:37,264:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:30:37,265:INFO:Creating global containers
2020-10-28 11:30:37,265:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:30:41,328:INFO:Creating grid variables
2020-10-28 11:30:41,360:INFO:create_model_container: 0
2020-10-28 11:30:41,361:INFO:master_model_container: 0
2020-10-28 11:30:41,361:INFO:display_container: 0
2020-10-28 11:30:41,369:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:30:41,369:INFO:setup() succesfully completed......................................
2020-10-28 11:31:04,204:INFO:PyCaret Supervised Module
2020-10-28 11:31:04,204:INFO:ML Usecase: regression
2020-10-28 11:31:04,204:INFO:version 2.2
2020-10-28 11:31:04,204:INFO:Initializing setup()
2020-10-28 11:31:04,204:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:31:04,205:INFO:Checking environment
2020-10-28 11:31:04,205:INFO:python_version: 3.8.3
2020-10-28 11:31:04,205:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:31:04,205:INFO:machine: x86_64
2020-10-28 11:31:04,205:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:31:04,205:INFO:Memory: svmem(total=8589934592, available=2365317120, percent=72.5, used=4419506176, free=182448128, active=2186276864, inactive=2163531776, wired=2233229312)
2020-10-28 11:31:04,205:INFO:Physical Core: 4
2020-10-28 11:31:04,205:INFO:Logical Core: 8
2020-10-28 11:31:04,205:INFO:Checking libraries
2020-10-28 11:31:04,205:INFO:pd==1.0.5
2020-10-28 11:31:04,205:INFO:numpy==1.18.5
2020-10-28 11:31:04,206:INFO:sklearn==0.23.2
2020-10-28 11:31:04,206:INFO:xgboost==1.2.0
2020-10-28 11:31:04,206:INFO:lightgbm==2.3.1
2020-10-28 11:31:04,206:INFO:catboost==0.24.1
2020-10-28 11:31:04,206:INFO:mlflow==1.11.0
2020-10-28 11:31:04,206:INFO:Checking Exceptions
2020-10-28 11:31:04,206:INFO:Declaring global variables
2020-10-28 11:31:04,206:INFO:USI: f7b8
2020-10-28 11:31:04,206:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:31:04,206:INFO:Preparing display monitor
2020-10-28 11:31:04,206:INFO:Preparing display monitor
2020-10-28 11:31:04,219:INFO:Importing libraries
2020-10-28 11:31:04,219:INFO:Copying data for preprocessing
2020-10-28 11:31:04,228:INFO:Declaring preprocessing parameters
2020-10-28 11:31:04,229:INFO:Creating preprocessing pipeline
2020-10-28 11:31:04,233:INFO:Preprocessing pipeline created successfully
2020-10-28 11:31:04,233:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:31:04,234:INFO:Creating global containers
2020-10-28 11:31:04,234:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:31:08,502:INFO:Creating grid variables
2020-10-28 11:31:08,535:INFO:Logging experiment in MLFlow
2020-10-28 11:31:08,537:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:31:08,537:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:31:08,572:INFO:SubProcess save_model() called ==================================
2020-10-28 11:31:08,585:INFO:Initializing save_model()
2020-10-28 11:31:08,585:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:31:08,585:INFO:Adding model into prep_pipe
2020-10-28 11:31:08,588:WARNING:Only Model saved as it was a pipeline.
2020-10-28 11:31:08,609:INFO:Transformation Pipeline.pkl saved in current working directory
2020-10-28 11:31:08,615:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:31:08,615:INFO:save_model() succesfully completed......................................
2020-10-28 11:31:08,615:INFO:SubProcess save_model() end ==================================
2020-10-28 11:31:08,624:INFO:create_model_container: 0
2020-10-28 11:31:08,624:INFO:master_model_container: 0
2020-10-28 11:31:08,625:INFO:display_container: 0
2020-10-28 11:31:08,632:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:31:08,632:INFO:setup() succesfully completed......................................
2020-10-28 11:31:38,810:INFO:PyCaret Supervised Module
2020-10-28 11:31:38,810:INFO:ML Usecase: regression
2020-10-28 11:31:38,810:INFO:version 2.2
2020-10-28 11:31:38,810:INFO:Initializing setup()
2020-10-28 11:31:38,810:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:31:38,810:INFO:Checking environment
2020-10-28 11:31:38,810:INFO:python_version: 3.8.3
2020-10-28 11:31:38,810:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:31:38,810:INFO:machine: x86_64
2020-10-28 11:31:38,810:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:31:38,811:INFO:Memory: svmem(total=8589934592, available=2337599488, percent=72.8, used=4383604736, free=162525184, active=2180251648, inactive=2170806272, wired=2203353088)
2020-10-28 11:31:38,811:INFO:Physical Core: 4
2020-10-28 11:31:38,811:INFO:Logical Core: 8
2020-10-28 11:31:38,811:INFO:Checking libraries
2020-10-28 11:31:38,811:INFO:pd==1.0.5
2020-10-28 11:31:38,811:INFO:numpy==1.18.5
2020-10-28 11:31:38,811:INFO:sklearn==0.23.2
2020-10-28 11:31:38,811:INFO:xgboost==1.2.0
2020-10-28 11:31:38,811:INFO:lightgbm==2.3.1
2020-10-28 11:31:38,811:INFO:catboost==0.24.1
2020-10-28 11:31:38,811:INFO:mlflow==1.11.0
2020-10-28 11:31:38,811:INFO:Checking Exceptions
2020-10-28 11:31:38,811:INFO:Declaring global variables
2020-10-28 11:31:38,811:INFO:USI: 2eb4
2020-10-28 11:31:38,812:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:31:38,812:INFO:Preparing display monitor
2020-10-28 11:31:38,812:INFO:Preparing display monitor
2020-10-28 11:31:38,823:INFO:Importing libraries
2020-10-28 11:31:38,823:INFO:Copying data for preprocessing
2020-10-28 11:31:38,829:INFO:Declaring preprocessing parameters
2020-10-28 11:31:38,830:INFO:Setting up iterative imputation
2020-10-28 11:31:39,029:INFO:Creating preprocessing pipeline
2020-10-28 11:31:39,034:INFO:Preprocessing pipeline created successfully
2020-10-28 11:31:39,034:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:31:39,034:INFO:Creating global containers
2020-10-28 11:31:39,034:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:31:39,086:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:31:39,794:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:31:40,249:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:31:40,914:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:31:41,359:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:31:41,672:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:31:41,892:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:31:42,149:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:31:42,177:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:31:42,203:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:31:42,228:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:31:42,271:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:31:42,309:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:31:42,424:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:31:42,451:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:31:42,479:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:31:42,505:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:31:42,531:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:31:42,556:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:31:42,580:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:31:42,614:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:31:42,646:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:31:42,725:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:31:42,775:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:31:42,802:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:31:42,829:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:31:42,855:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:31:42,881:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:31:42,909:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:31:42,932:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:31:42,956:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:31:42,988:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:31:43,018:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:31:43,048:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:31:43,075:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:31:43,101:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:31:43,128:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:31:43,161:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:31:43,188:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:31:43,213:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:31:43,235:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:31:43,266:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:31:43,298:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:31:43,327:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:31:43,355:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:31:43,382:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:31:43,407:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:31:43,439:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:31:43,465:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:31:43,488:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:31:45,357:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:31:45,364:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:31:45,371:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:31:45,378:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:31:45,385:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:31:45,392:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:31:45,400:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:31:45,407:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:31:45,414:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:31:45,421:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:31:45,428:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:31:45,435:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:31:45,441:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:31:45,448:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:31:45,454:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:31:45,461:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:31:45,467:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:31:45,473:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:31:45,480:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:31:45,487:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:31:45,493:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:31:45,499:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:31:45,505:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:31:45,511:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:31:45,517:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:31:45,523:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:31:45,530:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:31:45,537:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:31:45,543:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:31:45,549:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:31:45,555:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:31:45,561:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:31:45,567:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:31:45,573:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:31:45,579:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:31:45,586:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:31:45,592:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:31:45,597:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:31:45,603:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:31:45,608:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:31:45,613:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:31:45,619:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:31:45,625:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:31:45,630:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:31:45,636:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:31:45,641:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:31:45,647:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:31:45,652:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:31:45,658:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:31:45,663:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:31:45,725:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:31:45,731:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:31:45,738:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:31:45,744:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:31:45,750:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:31:45,757:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:31:45,764:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:31:45,772:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:31:45,779:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:31:45,786:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:31:45,793:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:31:45,800:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:31:45,807:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:31:45,814:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:31:45,821:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:31:45,829:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:31:45,837:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:31:45,843:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:31:45,849:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:31:45,856:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:31:45,863:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:31:45,869:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:31:45,875:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:31:45,882:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:31:45,889:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:31:45,897:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:31:45,903:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:31:45,910:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:31:45,916:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:31:45,924:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:31:45,929:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:31:45,935:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:31:45,941:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:31:45,949:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:31:45,956:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:31:45,962:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:31:45,969:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:31:45,975:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:31:45,982:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:31:45,990:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:31:45,996:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:31:46,003:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:31:46,009:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:31:46,016:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:31:46,023:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:31:46,030:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:31:46,037:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:31:46,044:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:31:46,051:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:31:46,057:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:31:46,397:INFO:Creating grid variables
2020-10-28 11:31:46,430:INFO:Logging experiment in MLFlow
2020-10-28 11:31:46,432:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:31:46,432:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:31:46,465:INFO:SubProcess save_model() called ==================================
2020-10-28 11:31:46,494:INFO:Initializing save_model()
2020-10-28 11:31:46,494:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:31:46,494:INFO:Adding model into prep_pipe
2020-10-28 11:32:08,155:INFO:PyCaret Supervised Module
2020-10-28 11:32:08,155:INFO:ML Usecase: regression
2020-10-28 11:32:08,156:INFO:version 2.2
2020-10-28 11:32:08,156:INFO:Initializing setup()
2020-10-28 11:32:08,156:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:32:08,156:INFO:Checking environment
2020-10-28 11:32:08,156:INFO:python_version: 3.8.3
2020-10-28 11:32:08,156:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:32:08,156:INFO:machine: x86_64
2020-10-28 11:32:08,156:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:32:08,156:INFO:Memory: svmem(total=8589934592, available=2248335360, percent=73.8, used=4446425088, free=47460352, active=2203754496, inactive=2099666944, wired=2242670592)
2020-10-28 11:32:08,156:INFO:Physical Core: 4
2020-10-28 11:32:08,156:INFO:Logical Core: 8
2020-10-28 11:32:08,156:INFO:Checking libraries
2020-10-28 11:32:08,156:INFO:pd==1.0.5
2020-10-28 11:32:08,156:INFO:numpy==1.18.5
2020-10-28 11:32:08,156:INFO:sklearn==0.23.2
2020-10-28 11:32:08,157:INFO:xgboost==1.2.0
2020-10-28 11:32:08,157:INFO:lightgbm==2.3.1
2020-10-28 11:32:08,157:INFO:catboost==0.24.1
2020-10-28 11:32:08,157:INFO:mlflow==1.11.0
2020-10-28 11:32:08,157:INFO:Checking Exceptions
2020-10-28 11:32:08,157:INFO:Declaring global variables
2020-10-28 11:32:08,157:INFO:USI: c743
2020-10-28 11:32:08,157:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:32:08,157:INFO:Preparing display monitor
2020-10-28 11:32:08,157:INFO:Preparing display monitor
2020-10-28 11:32:08,168:INFO:Importing libraries
2020-10-28 11:32:08,168:INFO:Copying data for preprocessing
2020-10-28 11:32:08,175:INFO:Declaring preprocessing parameters
2020-10-28 11:32:08,176:INFO:Creating preprocessing pipeline
2020-10-28 11:32:08,180:INFO:Preprocessing pipeline created successfully
2020-10-28 11:32:08,180:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:32:08,181:INFO:Creating global containers
2020-10-28 11:32:08,181:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:32:13,034:INFO:Creating grid variables
2020-10-28 11:32:13,068:INFO:Logging experiment in MLFlow
2020-10-28 11:32:13,070:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:32:13,071:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:32:13,108:INFO:SubProcess save_model() called ==================================
2020-10-28 11:32:13,125:INFO:Initializing save_model()
2020-10-28 11:32:13,125:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:32:13,125:INFO:Adding model into prep_pipe
2020-10-28 11:32:13,128:WARNING:Only Model saved as it was a pipeline.
2020-10-28 11:32:13,146:INFO:Transformation Pipeline.pkl saved in current working directory
2020-10-28 11:32:13,154:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:32:13,155:INFO:save_model() succesfully completed......................................
2020-10-28 11:32:13,155:INFO:SubProcess save_model() end ==================================
2020-10-28 11:32:13,163:INFO:create_model_container: 0
2020-10-28 11:32:13,163:INFO:master_model_container: 0
2020-10-28 11:32:13,163:INFO:display_container: 0
2020-10-28 11:32:13,171:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:32:13,171:INFO:setup() succesfully completed......................................
2020-10-28 11:32:27,026:INFO:PyCaret Supervised Module
2020-10-28 11:32:27,027:INFO:ML Usecase: regression
2020-10-28 11:32:27,027:INFO:version 2.2
2020-10-28 11:32:27,027:INFO:Initializing setup()
2020-10-28 11:32:27,027:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:32:27,027:INFO:Checking environment
2020-10-28 11:32:27,027:INFO:python_version: 3.8.3
2020-10-28 11:32:27,027:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:32:27,027:INFO:machine: x86_64
2020-10-28 11:32:27,027:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:32:27,027:INFO:Memory: svmem(total=8589934592, available=2174795776, percent=74.7, used=4327923712, free=89763840, active=2086653952, inactive=2033627136, wired=2241269760)
2020-10-28 11:32:27,027:INFO:Physical Core: 4
2020-10-28 11:32:27,027:INFO:Logical Core: 8
2020-10-28 11:32:27,027:INFO:Checking libraries
2020-10-28 11:32:27,028:INFO:pd==1.0.5
2020-10-28 11:32:27,028:INFO:numpy==1.18.5
2020-10-28 11:32:27,028:INFO:sklearn==0.23.2
2020-10-28 11:32:27,028:INFO:xgboost==1.2.0
2020-10-28 11:32:27,028:INFO:lightgbm==2.3.1
2020-10-28 11:32:27,028:INFO:catboost==0.24.1
2020-10-28 11:32:27,028:INFO:mlflow==1.11.0
2020-10-28 11:32:27,028:INFO:Checking Exceptions
2020-10-28 11:32:27,028:INFO:Declaring global variables
2020-10-28 11:32:27,028:INFO:USI: ef2e
2020-10-28 11:32:27,028:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:32:27,028:INFO:Preparing display monitor
2020-10-28 11:32:27,028:INFO:Preparing display monitor
2020-10-28 11:32:27,040:INFO:Importing libraries
2020-10-28 11:32:27,040:INFO:Copying data for preprocessing
2020-10-28 11:32:27,047:INFO:Declaring preprocessing parameters
2020-10-28 11:32:27,048:INFO:Setting up iterative imputation
2020-10-28 11:32:27,261:INFO:Creating preprocessing pipeline
2020-10-28 11:32:27,266:INFO:Preprocessing pipeline created successfully
2020-10-28 11:32:27,266:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:32:27,266:INFO:Creating global containers
2020-10-28 11:32:27,266:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:32:27,312:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:32:27,779:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:32:28,436:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:32:28,829:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:32:29,138:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:32:29,467:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:32:30,043:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:32:30,533:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:32:30,870:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:32:31,069:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:32:31,145:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:32:31,503:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:32:31,534:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:32:31,564:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:32:31,723:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:32:31,786:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:32:31,813:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:32:31,841:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:32:31,865:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:32:31,889:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:32:31,909:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:32:31,947:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:32:31,975:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:32:32,036:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:32:32,198:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:32:32,274:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:32:32,330:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:32:32,441:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:32:32,618:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:32:32,658:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:32:32,715:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:32:32,765:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:32:32,797:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:32:32,824:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:32:32,850:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:32:32,874:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:32:32,899:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:32:32,925:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:32:32,952:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:32:32,983:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:32:33,006:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:32:33,037:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:32:33,068:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:32:33,098:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:32:33,122:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:32:33,148:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:32:33,172:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:32:33,198:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:32:33,224:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:32:33,247:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:32:34,528:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:32:34,534:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:32:34,541:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:32:34,548:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:32:34,554:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:32:34,561:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:32:34,567:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:32:34,574:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:32:34,581:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:32:34,588:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:32:34,595:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:32:34,601:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:32:34,607:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:32:34,613:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:32:34,619:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:32:34,625:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:32:34,631:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:32:34,637:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:32:34,643:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:32:34,649:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:32:34,655:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:32:34,661:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:32:34,667:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:32:34,673:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:32:34,679:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:32:34,685:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:32:34,691:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:32:34,697:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:32:34,703:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:32:34,708:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:32:34,714:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:32:34,719:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:32:34,726:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:32:34,732:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:32:34,737:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:32:34,743:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:32:34,749:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:32:34,754:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:32:34,760:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:32:34,765:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:32:34,771:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:32:34,777:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:32:34,783:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:32:34,789:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:32:34,794:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:32:34,800:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:32:34,805:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:32:34,811:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:32:34,816:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:32:34,823:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:32:34,885:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:32:34,892:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:32:34,898:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:32:34,904:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:32:34,910:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:32:34,916:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:32:34,923:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:32:34,930:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:32:34,936:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:32:34,943:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:32:34,949:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:32:34,955:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:32:34,960:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:32:34,966:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:32:34,971:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:32:34,977:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:32:34,983:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:32:34,990:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:32:34,996:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:32:35,001:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:32:35,007:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:32:35,012:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:32:35,018:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:32:35,024:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:32:35,030:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:32:35,035:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:32:35,041:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:32:35,047:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:32:35,052:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:32:35,058:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:32:35,064:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:32:35,070:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:32:35,076:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:32:35,082:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:32:35,088:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:32:35,094:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:32:35,099:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:32:35,105:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:32:35,110:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:32:35,116:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:32:35,121:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:32:35,128:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:32:35,133:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:32:35,139:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:32:35,144:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:32:35,150:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:32:35,156:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:32:35,161:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:32:35,167:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:32:35,173:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:32:35,481:INFO:Creating grid variables
2020-10-28 11:32:35,513:INFO:Logging experiment in MLFlow
2020-10-28 11:32:35,516:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:32:35,516:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:32:35,565:INFO:SubProcess save_model() called ==================================
2020-10-28 11:32:35,588:INFO:Initializing save_model()
2020-10-28 11:32:35,588:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:32:35,588:INFO:Adding model into prep_pipe
2020-10-28 11:33:24,202:INFO:PyCaret Supervised Module
2020-10-28 11:33:24,203:INFO:ML Usecase: regression
2020-10-28 11:33:24,203:INFO:version 2.2
2020-10-28 11:33:24,203:INFO:Initializing setup()
2020-10-28 11:33:24,203:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:33:24,203:INFO:Checking environment
2020-10-28 11:33:24,203:INFO:python_version: 3.8.3
2020-10-28 11:33:24,203:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:33:24,203:INFO:machine: x86_64
2020-10-28 11:33:24,203:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:33:24,203:INFO:Memory: svmem(total=8589934592, available=1899687936, percent=77.9, used=4114354176, free=116457472, active=1755586560, inactive=1775665152, wired=2358767616)
2020-10-28 11:33:24,203:INFO:Physical Core: 4
2020-10-28 11:33:24,203:INFO:Logical Core: 8
2020-10-28 11:33:24,203:INFO:Checking libraries
2020-10-28 11:33:24,204:INFO:pd==1.0.5
2020-10-28 11:33:24,204:INFO:numpy==1.18.5
2020-10-28 11:33:24,204:INFO:sklearn==0.23.2
2020-10-28 11:33:24,204:INFO:xgboost==1.2.0
2020-10-28 11:33:24,204:INFO:lightgbm==2.3.1
2020-10-28 11:33:24,204:INFO:catboost==0.24.1
2020-10-28 11:33:24,204:INFO:mlflow==1.11.0
2020-10-28 11:33:24,204:INFO:Checking Exceptions
2020-10-28 11:33:24,204:INFO:Declaring global variables
2020-10-28 11:33:24,204:INFO:USI: e6a4
2020-10-28 11:33:24,204:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:33:24,204:INFO:Preparing display monitor
2020-10-28 11:33:24,204:INFO:Preparing display monitor
2020-10-28 11:33:24,216:INFO:Importing libraries
2020-10-28 11:33:24,217:INFO:Copying data for preprocessing
2020-10-28 11:33:24,223:INFO:Declaring preprocessing parameters
2020-10-28 11:33:24,224:INFO:Creating preprocessing pipeline
2020-10-28 11:33:24,229:INFO:Preprocessing pipeline created successfully
2020-10-28 11:33:24,229:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:33:24,229:INFO:Creating global containers
2020-10-28 11:33:24,230:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:33:29,407:INFO:Creating grid variables
2020-10-28 11:33:29,463:INFO:Logging experiment in MLFlow
2020-10-28 11:33:29,467:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:33:29,467:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:33:29,502:INFO:SubProcess save_model() called ==================================
2020-10-28 11:33:29,516:INFO:Initializing save_model()
2020-10-28 11:33:29,516:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:33:29,516:INFO:Adding model into prep_pipe
2020-10-28 11:33:29,519:WARNING:Only Model saved as it was a pipeline.
2020-10-28 11:33:29,537:INFO:Transformation Pipeline.pkl saved in current working directory
2020-10-28 11:33:29,544:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:33:29,545:INFO:save_model() succesfully completed......................................
2020-10-28 11:33:29,545:INFO:SubProcess save_model() end ==================================
2020-10-28 11:33:29,556:INFO:create_model_container: 0
2020-10-28 11:33:29,556:INFO:master_model_container: 0
2020-10-28 11:33:29,556:INFO:display_container: 0
2020-10-28 11:33:29,565:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:33:29,565:INFO:setup() succesfully completed......................................
2020-10-28 11:33:45,379:INFO:PyCaret Supervised Module
2020-10-28 11:33:45,380:INFO:ML Usecase: regression
2020-10-28 11:33:45,380:INFO:version 2.2
2020-10-28 11:33:45,380:INFO:Initializing setup()
2020-10-28 11:33:45,380:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:33:45,380:INFO:Checking environment
2020-10-28 11:33:45,380:INFO:python_version: 3.8.3
2020-10-28 11:33:45,380:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:33:45,380:INFO:machine: x86_64
2020-10-28 11:33:45,381:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:33:45,381:INFO:Memory: svmem(total=8589934592, available=2623754240, percent=69.5, used=4276981760, free=618242048, active=2008756224, inactive=1994514432, wired=2268225536)
2020-10-28 11:33:45,381:INFO:Physical Core: 4
2020-10-28 11:33:45,381:INFO:Logical Core: 8
2020-10-28 11:33:45,381:INFO:Checking libraries
2020-10-28 11:33:45,381:INFO:pd==1.0.5
2020-10-28 11:33:45,381:INFO:numpy==1.18.5
2020-10-28 11:33:45,381:INFO:sklearn==0.23.2
2020-10-28 11:33:45,381:INFO:xgboost==1.2.0
2020-10-28 11:33:45,381:INFO:lightgbm==2.3.1
2020-10-28 11:33:45,381:INFO:catboost==0.24.1
2020-10-28 11:33:45,381:INFO:mlflow==1.11.0
2020-10-28 11:33:45,381:INFO:Checking Exceptions
2020-10-28 11:33:45,381:INFO:Declaring global variables
2020-10-28 11:33:45,382:INFO:USI: 8cf7
2020-10-28 11:33:45,382:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:33:45,382:INFO:Preparing display monitor
2020-10-28 11:33:45,382:INFO:Preparing display monitor
2020-10-28 11:33:45,393:INFO:Importing libraries
2020-10-28 11:33:45,393:INFO:Copying data for preprocessing
2020-10-28 11:33:45,399:INFO:Declaring preprocessing parameters
2020-10-28 11:33:45,400:INFO:Creating preprocessing pipeline
2020-10-28 11:33:45,405:INFO:Preprocessing pipeline created successfully
2020-10-28 11:33:45,405:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:33:45,405:INFO:Creating global containers
2020-10-28 11:33:45,405:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:33:50,331:INFO:Creating grid variables
2020-10-28 11:33:50,379:INFO:Logging experiment in MLFlow
2020-10-28 11:33:50,382:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:33:50,382:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:33:50,460:INFO:SubProcess save_model() called ==================================
2020-10-28 11:33:50,479:INFO:Initializing save_model()
2020-10-28 11:33:50,479:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:33:50,479:INFO:Adding model into prep_pipe
2020-10-28 11:33:50,482:WARNING:Only Model saved as it was a pipeline.
2020-10-28 11:33:50,504:INFO:Transformation Pipeline.pkl saved in current working directory
2020-10-28 11:33:50,513:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:33:50,513:INFO:save_model() succesfully completed......................................
2020-10-28 11:33:50,514:INFO:SubProcess save_model() end ==================================
2020-10-28 11:33:50,522:INFO:create_model_container: 0
2020-10-28 11:33:50,522:INFO:master_model_container: 0
2020-10-28 11:33:50,522:INFO:display_container: 0
2020-10-28 11:33:50,530:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:33:50,531:INFO:setup() succesfully completed......................................
2020-10-28 11:35:35,805:INFO:PyCaret Supervised Module
2020-10-28 11:35:35,806:INFO:ML Usecase: regression
2020-10-28 11:35:35,806:INFO:version 2.2
2020-10-28 11:35:35,806:INFO:Initializing setup()
2020-10-28 11:35:35,806:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:35:35,807:INFO:Checking environment
2020-10-28 11:35:35,807:INFO:python_version: 3.8.3
2020-10-28 11:35:35,807:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:35:35,807:INFO:machine: x86_64
2020-10-28 11:35:35,807:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:35:35,809:INFO:Memory: svmem(total=8589934592, available=1503551488, percent=82.5, used=3675725824, free=19202048, active=1488596992, inactive=1461387264, wired=2187128832)
2020-10-28 11:35:35,809:INFO:Physical Core: 4
2020-10-28 11:35:35,809:INFO:Logical Core: 8
2020-10-28 11:35:35,809:INFO:Checking libraries
2020-10-28 11:35:35,809:INFO:pd==1.0.5
2020-10-28 11:35:35,809:INFO:numpy==1.18.5
2020-10-28 11:35:35,809:INFO:sklearn==0.23.2
2020-10-28 11:35:35,810:INFO:xgboost==1.2.0
2020-10-28 11:35:35,810:INFO:lightgbm==2.3.1
2020-10-28 11:35:35,810:INFO:catboost==0.24.1
2020-10-28 11:35:35,810:INFO:mlflow==1.11.0
2020-10-28 11:35:35,810:INFO:Checking Exceptions
2020-10-28 11:35:35,812:INFO:Declaring global variables
2020-10-28 11:35:35,813:INFO:USI: 7f1e
2020-10-28 11:35:35,813:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:35:35,813:INFO:Preparing display monitor
2020-10-28 11:35:35,814:INFO:Preparing display monitor
2020-10-28 11:35:35,846:INFO:Importing libraries
2020-10-28 11:35:35,847:INFO:Copying data for preprocessing
2020-10-28 11:35:35,859:INFO:Declaring preprocessing parameters
2020-10-28 11:35:35,862:INFO:Setting up iterative imputation
2020-10-28 11:35:36,114:INFO:Creating preprocessing pipeline
2020-10-28 11:35:36,129:INFO:Preprocessing pipeline created successfully
2020-10-28 11:35:36,129:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:35:36,129:INFO:Creating global containers
2020-10-28 11:35:36,130:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:35:36,219:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:35:36,977:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:35:37,268:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:35:37,561:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:35:37,982:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:35:38,305:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:35:38,838:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:35:39,033:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:35:39,240:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:35:39,699:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:35:40,041:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:35:40,306:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:35:40,403:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:35:40,509:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:35:40,634:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:35:40,676:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:35:40,745:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:35:40,778:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:35:40,817:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:35:40,841:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:35:40,869:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:35:40,898:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:35:40,926:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:35:40,957:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:35:40,982:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:35:41,010:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:35:41,035:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:35:41,061:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:35:41,088:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:35:41,111:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:35:41,132:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:35:41,184:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:35:41,213:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:35:41,273:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:35:41,300:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:35:41,324:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:35:41,350:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:35:41,374:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:35:41,400:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:35:41,423:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:35:41,447:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:35:41,475:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:35:41,506:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:35:41,534:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:35:41,562:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:35:41,592:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:35:41,615:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:35:41,639:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:35:41,664:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:35:41,686:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:35:42,959:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:35:42,965:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:35:42,971:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:35:42,978:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:35:42,985:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:35:42,992:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:35:42,999:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:35:43,007:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:35:43,015:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:35:43,023:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:35:43,048:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:35:43,063:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:35:43,072:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:35:43,079:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:35:43,086:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:35:43,092:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:35:43,099:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:35:43,105:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:35:43,111:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:35:43,118:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:35:43,124:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:35:43,130:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:35:43,136:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:35:43,142:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:35:43,148:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:35:43,154:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:35:43,160:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:35:43,166:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:35:43,172:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:35:43,177:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:35:43,183:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:35:43,189:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:35:43,195:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:35:43,201:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:35:43,207:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:35:43,213:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:35:43,219:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:35:43,225:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:35:43,232:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:35:43,238:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:35:43,244:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:35:43,251:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:35:43,257:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:35:43,263:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:35:43,269:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:35:43,275:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:35:43,281:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:35:43,289:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:35:43,296:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:35:43,302:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:35:43,370:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:35:43,376:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:35:43,384:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:35:43,391:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:35:43,398:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:35:43,405:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:35:43,412:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:35:43,419:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:35:43,426:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:35:43,433:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:35:43,440:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:35:43,445:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:35:43,451:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:35:43,457:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:35:43,463:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:35:43,469:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:35:43,475:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:35:43,480:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:35:43,486:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:35:43,493:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:35:43,500:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:35:43,506:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:35:43,512:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:35:43,517:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:35:43,525:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:35:43,532:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:35:43,540:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:35:43,548:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:35:43,555:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:35:43,563:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:35:43,570:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:35:43,578:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:35:43,585:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:35:43,593:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:35:43,601:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:35:43,608:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:35:43,615:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:35:43,621:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:35:43,628:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:35:43,634:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:35:43,642:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:35:43,648:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:35:43,654:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:35:43,661:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:35:43,668:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:35:43,674:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:35:43,680:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:35:43,687:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:35:43,694:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:35:43,701:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:35:44,024:INFO:Creating grid variables
2020-10-28 11:35:44,087:INFO:Logging experiment in MLFlow
2020-10-28 11:35:44,103:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:35:44,103:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:35:44,149:INFO:SubProcess save_model() called ==================================
2020-10-28 11:35:44,176:INFO:Initializing save_model()
2020-10-28 11:35:44,176:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:35:44,176:INFO:Adding model into prep_pipe
2020-10-28 11:36:58,582:INFO:PyCaret Supervised Module
2020-10-28 11:36:58,583:INFO:ML Usecase: regression
2020-10-28 11:36:58,584:INFO:version 2.2
2020-10-28 11:36:58,584:INFO:Initializing setup()
2020-10-28 11:36:58,584:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:36:58,584:INFO:Checking environment
2020-10-28 11:36:58,584:INFO:python_version: 3.8.3
2020-10-28 11:36:58,584:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:36:58,584:INFO:machine: x86_64
2020-10-28 11:36:58,584:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:36:58,585:INFO:Memory: svmem(total=8589934592, available=1579659264, percent=81.6, used=3998531584, free=29093888, active=1553215488, inactive=1545142272, wired=2445316096)
2020-10-28 11:36:58,585:INFO:Physical Core: 4
2020-10-28 11:36:58,585:INFO:Logical Core: 8
2020-10-28 11:36:58,585:INFO:Checking libraries
2020-10-28 11:36:58,585:INFO:pd==1.0.5
2020-10-28 11:36:58,586:INFO:numpy==1.18.5
2020-10-28 11:36:58,586:INFO:sklearn==0.23.2
2020-10-28 11:36:58,586:INFO:xgboost==1.2.0
2020-10-28 11:36:58,586:INFO:lightgbm==2.3.1
2020-10-28 11:36:58,586:INFO:catboost==0.24.1
2020-10-28 11:36:58,586:INFO:mlflow==1.11.0
2020-10-28 11:36:58,586:INFO:Checking Exceptions
2020-10-28 11:36:58,588:INFO:Declaring global variables
2020-10-28 11:36:58,588:INFO:USI: fc7e
2020-10-28 11:36:58,588:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:36:58,588:INFO:Preparing display monitor
2020-10-28 11:36:58,589:INFO:Preparing display monitor
2020-10-28 11:36:58,617:INFO:Importing libraries
2020-10-28 11:36:58,617:INFO:Copying data for preprocessing
2020-10-28 11:36:58,630:INFO:Declaring preprocessing parameters
2020-10-28 11:36:58,634:INFO:Creating preprocessing pipeline
2020-10-28 11:36:58,666:INFO:Preprocessing pipeline created successfully
2020-10-28 11:36:58,666:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:36:58,666:INFO:Creating global containers
2020-10-28 11:36:58,668:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:37:06,363:INFO:Creating grid variables
2020-10-28 11:37:06,411:INFO:Logging experiment in MLFlow
2020-10-28 11:37:06,784:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:37:06,784:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:37:06,820:INFO:SubProcess save_model() called ==================================
2020-10-28 11:37:06,835:INFO:Initializing save_model()
2020-10-28 11:37:06,835:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:37:06,835:INFO:Adding model into prep_pipe
2020-10-28 11:37:06,838:WARNING:Only Model saved as it was a pipeline.
2020-10-28 11:37:06,861:INFO:Transformation Pipeline.pkl saved in current working directory
2020-10-28 11:37:06,867:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:37:06,867:INFO:save_model() succesfully completed......................................
2020-10-28 11:37:06,868:INFO:SubProcess save_model() end ==================================
2020-10-28 11:37:06,878:INFO:create_model_container: 0
2020-10-28 11:37:06,878:INFO:master_model_container: 0
2020-10-28 11:37:06,878:INFO:display_container: 0
2020-10-28 11:37:06,884:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:37:06,884:INFO:setup() succesfully completed......................................
2020-10-28 11:42:22,774:INFO:PyCaret Supervised Module
2020-10-28 11:42:22,778:INFO:ML Usecase: regression
2020-10-28 11:42:22,778:INFO:version 2.2
2020-10-28 11:42:22,778:INFO:Initializing setup()
2020-10-28 11:42:22,778:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:42:22,778:INFO:Checking environment
2020-10-28 11:42:22,778:INFO:python_version: 3.8.3
2020-10-28 11:42:22,778:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:42:22,779:INFO:machine: x86_64
2020-10-28 11:42:22,779:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:42:22,780:INFO:Memory: svmem(total=8589934592, available=972054528, percent=88.7, used=3393941504, free=74170368, active=901906432, inactive=877580288, wired=2492035072)
2020-10-28 11:42:22,780:INFO:Physical Core: 4
2020-10-28 11:42:22,780:INFO:Logical Core: 8
2020-10-28 11:42:22,780:INFO:Checking libraries
2020-10-28 11:42:22,780:INFO:pd==1.0.5
2020-10-28 11:42:22,780:INFO:numpy==1.18.5
2020-10-28 11:42:22,780:INFO:sklearn==0.23.2
2020-10-28 11:42:22,781:INFO:xgboost==1.2.0
2020-10-28 11:42:22,781:INFO:lightgbm==2.3.1
2020-10-28 11:42:22,781:INFO:catboost==0.24.1
2020-10-28 11:42:22,781:INFO:mlflow==1.11.0
2020-10-28 11:42:22,782:INFO:Checking Exceptions
2020-10-28 11:42:22,788:INFO:Declaring global variables
2020-10-28 11:42:22,789:INFO:USI: f159
2020-10-28 11:42:22,789:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:42:22,789:INFO:Preparing display monitor
2020-10-28 11:42:22,790:INFO:Preparing display monitor
2020-10-28 11:42:22,901:INFO:Importing libraries
2020-10-28 11:42:22,901:INFO:Copying data for preprocessing
2020-10-28 11:42:22,916:INFO:Declaring preprocessing parameters
2020-10-28 11:42:22,929:INFO:Setting up iterative imputation
2020-10-28 11:42:23,348:INFO:Creating preprocessing pipeline
2020-10-28 11:42:23,447:INFO:Preprocessing pipeline created successfully
2020-10-28 11:42:23,448:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:42:23,448:INFO:Creating global containers
2020-10-28 11:42:23,450:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:42:23,556:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:42:24,810:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:42:25,334:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:42:25,711:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:42:26,151:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:42:26,591:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:42:27,294:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:42:27,530:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:42:27,841:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:42:28,198:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:42:28,438:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:42:28,566:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:42:28,609:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:42:28,647:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:42:28,690:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:42:28,931:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:42:28,987:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:42:29,031:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:42:29,083:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:42:29,254:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:42:29,444:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:42:29,545:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:42:29,718:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:42:29,845:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:42:29,901:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:42:29,958:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:42:30,002:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:42:30,055:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:42:30,106:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:42:30,153:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:42:30,244:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:42:30,451:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:42:30,545:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:42:30,596:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:42:30,649:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:42:30,702:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:42:30,753:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:42:30,805:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:42:30,850:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:42:30,900:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:42:30,944:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:42:31,110:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:42:31,263:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:42:31,347:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:42:31,428:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:42:31,496:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:42:31,544:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:42:31,594:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:42:31,695:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:42:31,888:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:42:34,578:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:42:34,584:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:42:34,591:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:42:34,598:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:42:34,605:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:42:34,652:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:42:34,660:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:42:34,668:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:42:34,676:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:42:34,684:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:42:34,692:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:42:34,700:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:42:34,708:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:42:34,715:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:42:34,723:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:42:34,730:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:42:34,737:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:42:34,744:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:42:34,751:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:42:34,760:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:42:34,767:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:42:34,775:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:42:34,782:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:42:34,789:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:42:34,796:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:42:34,803:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:42:34,810:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:42:34,817:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:42:34,824:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:42:34,832:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:42:34,839:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:42:34,845:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:42:34,853:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:42:34,860:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:42:34,867:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:42:34,874:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:42:34,881:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:42:34,888:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:42:34,895:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:42:34,901:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:42:34,908:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:42:34,915:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:42:34,921:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:42:34,928:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:42:34,934:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:42:34,940:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:42:34,947:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:42:34,953:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:42:34,960:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:42:34,966:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:42:35,041:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:42:35,048:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:42:35,055:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:42:35,063:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:42:35,071:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:42:35,079:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:42:35,087:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:42:35,096:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:42:35,104:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:42:35,111:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:42:35,119:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:42:35,125:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:42:35,132:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:42:35,138:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:42:35,144:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:42:35,152:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:42:35,159:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:42:35,166:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:42:35,173:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:42:35,179:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:42:35,185:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:42:35,191:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:42:35,198:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:42:35,204:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:42:35,211:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:42:35,217:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:42:35,224:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:42:35,230:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:42:35,236:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:42:35,243:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:42:35,249:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:42:35,256:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:42:35,262:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:42:35,269:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:42:35,275:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:42:35,282:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:42:35,288:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:42:35,295:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:42:35,302:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:42:35,309:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:42:35,318:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:42:35,324:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:42:35,331:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:42:35,338:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:42:35,345:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:42:35,352:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:42:35,361:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:42:35,370:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:42:35,378:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:42:35,385:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:42:35,795:INFO:Creating grid variables
2020-10-28 11:42:35,853:INFO:Logging experiment in MLFlow
2020-10-28 11:42:36,037:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:42:36,045:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:42:36,110:INFO:SubProcess save_model() called ==================================
2020-10-28 11:42:36,138:INFO:Initializing save_model()
2020-10-28 11:42:36,138:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:42:36,138:INFO:Adding model into prep_pipe
2020-10-28 11:43:29,074:INFO:PyCaret Supervised Module
2020-10-28 11:43:29,075:INFO:ML Usecase: regression
2020-10-28 11:43:29,075:INFO:version 2.2
2020-10-28 11:43:29,075:INFO:Initializing setup()
2020-10-28 11:43:29,075:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:43:29,075:INFO:Checking environment
2020-10-28 11:43:29,075:INFO:python_version: 3.8.3
2020-10-28 11:43:29,075:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:43:29,076:INFO:machine: x86_64
2020-10-28 11:43:29,076:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:43:29,076:INFO:Memory: svmem(total=8589934592, available=953921536, percent=88.9, used=3153670144, free=17039360, active=939327488, inactive=932999168, wired=2214342656)
2020-10-28 11:43:29,076:INFO:Physical Core: 4
2020-10-28 11:43:29,076:INFO:Logical Core: 8
2020-10-28 11:43:29,077:INFO:Checking libraries
2020-10-28 11:43:29,077:INFO:pd==1.0.5
2020-10-28 11:43:29,077:INFO:numpy==1.18.5
2020-10-28 11:43:29,077:INFO:sklearn==0.23.2
2020-10-28 11:43:29,077:INFO:xgboost==1.2.0
2020-10-28 11:43:29,077:INFO:lightgbm==2.3.1
2020-10-28 11:43:29,077:INFO:catboost==0.24.1
2020-10-28 11:43:29,077:INFO:mlflow==1.11.0
2020-10-28 11:43:29,077:INFO:Checking Exceptions
2020-10-28 11:43:29,079:INFO:Declaring global variables
2020-10-28 11:43:29,079:INFO:USI: 1e9a
2020-10-28 11:43:29,079:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:43:29,080:INFO:Preparing display monitor
2020-10-28 11:43:29,080:INFO:Preparing display monitor
2020-10-28 11:43:29,135:INFO:Importing libraries
2020-10-28 11:43:29,135:INFO:Copying data for preprocessing
2020-10-28 11:43:29,150:INFO:Declaring preprocessing parameters
2020-10-28 11:43:29,152:INFO:Creating preprocessing pipeline
2020-10-28 11:43:29,175:INFO:Preprocessing pipeline created successfully
2020-10-28 11:43:29,175:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:43:29,175:INFO:Creating global containers
2020-10-28 11:43:29,176:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:43:38,805:INFO:Creating grid variables
2020-10-28 11:43:38,854:INFO:Logging experiment in MLFlow
2020-10-28 11:43:38,861:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:43:38,862:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:43:38,904:INFO:SubProcess save_model() called ==================================
2020-10-28 11:43:38,922:INFO:Initializing save_model()
2020-10-28 11:43:38,923:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:43:38,923:INFO:Adding model into prep_pipe
2020-10-28 11:43:38,927:WARNING:Only Model saved as it was a pipeline.
2020-10-28 11:43:38,959:INFO:Transformation Pipeline.pkl saved in current working directory
2020-10-28 11:43:38,968:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:43:38,969:INFO:save_model() succesfully completed......................................
2020-10-28 11:43:38,969:INFO:SubProcess save_model() end ==================================
2020-10-28 11:43:39,008:INFO:create_model_container: 0
2020-10-28 11:43:39,008:INFO:master_model_container: 0
2020-10-28 11:43:39,008:INFO:display_container: 0
2020-10-28 11:43:39,020:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:43:39,020:INFO:setup() succesfully completed......................................
2020-10-28 11:43:48,293:INFO:Initializing compare_models()
2020-10-28 11:43:48,294:INFO:compare_models(include=None, fold=5, round=4, cross_validation=True, sort=RMSE, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=['ransac', 'knn'])
2020-10-28 11:43:48,294:INFO:Checking exceptions
2020-10-28 11:43:48,298:INFO:Preparing display monitor
2020-10-28 11:43:48,299:INFO:Preparing display monitor
2020-10-28 11:43:48,359:INFO:Initializing Linear Regression
2020-10-28 11:43:48,359:INFO:Total runtime is 4.514058430989583e-06 minutes
2020-10-28 11:43:48,381:INFO:SubProcess create_model() called ==================================
2020-10-28 11:43:48,384:INFO:Initializing create_model()
2020-10-28 11:43:48,384:INFO:create_model(estimator=lr, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:43:48,384:INFO:Checking exceptions
2020-10-28 11:43:48,384:INFO:Importing libraries
2020-10-28 11:43:48,385:INFO:Copying training dataset
2020-10-28 11:43:48,387:INFO:Defining folds
2020-10-28 11:43:48,387:INFO:Declaring metric variables
2020-10-28 11:43:48,401:INFO:Importing untrained model
2020-10-28 11:43:48,428:INFO:Linear Regression Imported succesfully
2020-10-28 11:43:48,486:INFO:Starting cross validation
2020-10-28 11:43:48,487:INFO:Cross validating with n_jobs=-1
2020-10-28 11:43:54,566:INFO:Calculating mean and std
2020-10-28 11:43:54,581:INFO:Creating metrics dataframe
2020-10-28 11:43:54,610:INFO:Uploading results into container
2020-10-28 11:43:54,611:INFO:Uploading model into container now
2020-10-28 11:43:54,612:INFO:create_model_container: 1
2020-10-28 11:43:54,612:INFO:master_model_container: 1
2020-10-28 11:43:54,612:INFO:display_container: 1
2020-10-28 11:43:54,615:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-28 11:43:54,615:INFO:create_model() succesfully completed......................................
2020-10-28 11:43:55,619:INFO:SubProcess create_model() end ==================================
2020-10-28 11:43:55,620:INFO:Creating metrics dataframe
2020-10-28 11:43:55,656:INFO:Initializing Lasso Regression
2020-10-28 11:43:55,657:INFO:Total runtime is 0.12163323163986206 minutes
2020-10-28 11:43:55,697:INFO:SubProcess create_model() called ==================================
2020-10-28 11:43:55,697:INFO:Initializing create_model()
2020-10-28 11:43:55,697:INFO:create_model(estimator=lasso, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:43:55,697:INFO:Checking exceptions
2020-10-28 11:43:55,698:INFO:Importing libraries
2020-10-28 11:43:55,698:INFO:Copying training dataset
2020-10-28 11:43:55,699:INFO:Defining folds
2020-10-28 11:43:55,702:INFO:Declaring metric variables
2020-10-28 11:43:55,713:INFO:Importing untrained model
2020-10-28 11:43:55,732:INFO:Lasso Regression Imported succesfully
2020-10-28 11:43:55,759:INFO:Starting cross validation
2020-10-28 11:43:55,760:INFO:Cross validating with n_jobs=-1
2020-10-28 11:43:58,869:INFO:Calculating mean and std
2020-10-28 11:43:58,879:INFO:Creating metrics dataframe
2020-10-28 11:43:58,902:INFO:Uploading results into container
2020-10-28 11:43:58,903:INFO:Uploading model into container now
2020-10-28 11:43:58,903:INFO:create_model_container: 2
2020-10-28 11:43:58,903:INFO:master_model_container: 2
2020-10-28 11:43:58,903:INFO:display_container: 1
2020-10-28 11:43:58,906:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False)
2020-10-28 11:43:58,906:INFO:create_model() succesfully completed......................................
2020-10-28 11:43:59,903:INFO:SubProcess create_model() end ==================================
2020-10-28 11:43:59,906:INFO:Creating metrics dataframe
2020-10-28 11:43:59,956:INFO:Initializing Ridge Regression
2020-10-28 11:43:59,957:INFO:Total runtime is 0.19330449899037677 minutes
2020-10-28 11:43:59,972:INFO:SubProcess create_model() called ==================================
2020-10-28 11:43:59,974:INFO:Initializing create_model()
2020-10-28 11:43:59,975:INFO:create_model(estimator=ridge, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:43:59,975:INFO:Checking exceptions
2020-10-28 11:43:59,975:INFO:Importing libraries
2020-10-28 11:43:59,975:INFO:Copying training dataset
2020-10-28 11:43:59,977:INFO:Defining folds
2020-10-28 11:43:59,977:INFO:Declaring metric variables
2020-10-28 11:43:59,991:INFO:Importing untrained model
2020-10-28 11:44:00,004:INFO:Ridge Regression Imported succesfully
2020-10-28 11:44:00,035:INFO:Starting cross validation
2020-10-28 11:44:00,036:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:02,780:INFO:Calculating mean and std
2020-10-28 11:44:02,790:INFO:Creating metrics dataframe
2020-10-28 11:44:02,813:INFO:Uploading results into container
2020-10-28 11:44:02,813:INFO:Uploading model into container now
2020-10-28 11:44:02,815:INFO:create_model_container: 3
2020-10-28 11:44:02,816:INFO:master_model_container: 3
2020-10-28 11:44:02,816:INFO:display_container: 1
2020-10-28 11:44:02,819:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001)
2020-10-28 11:44:02,819:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:03,160:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:03,160:INFO:Creating metrics dataframe
2020-10-28 11:44:03,185:INFO:Initializing Elastic Net
2020-10-28 11:44:03,185:INFO:Total runtime is 0.24710663159688312 minutes
2020-10-28 11:44:03,196:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:03,197:INFO:Initializing create_model()
2020-10-28 11:44:03,197:INFO:create_model(estimator=en, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:03,197:INFO:Checking exceptions
2020-10-28 11:44:03,197:INFO:Importing libraries
2020-10-28 11:44:03,198:INFO:Copying training dataset
2020-10-28 11:44:03,199:INFO:Defining folds
2020-10-28 11:44:03,200:INFO:Declaring metric variables
2020-10-28 11:44:03,209:INFO:Importing untrained model
2020-10-28 11:44:03,218:INFO:Elastic Net Imported succesfully
2020-10-28 11:44:03,237:INFO:Starting cross validation
2020-10-28 11:44:03,237:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:03,350:INFO:Calculating mean and std
2020-10-28 11:44:03,351:INFO:Creating metrics dataframe
2020-10-28 11:44:03,355:INFO:Uploading results into container
2020-10-28 11:44:03,355:INFO:Uploading model into container now
2020-10-28 11:44:03,356:INFO:create_model_container: 4
2020-10-28 11:44:03,356:INFO:master_model_container: 4
2020-10-28 11:44:03,356:INFO:display_container: 1
2020-10-28 11:44:03,356:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False)
2020-10-28 11:44:03,356:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:03,563:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:03,564:INFO:Creating metrics dataframe
2020-10-28 11:44:03,601:INFO:Initializing Least Angle Regression
2020-10-28 11:44:03,601:INFO:Total runtime is 0.2540386478106181 minutes
2020-10-28 11:44:03,612:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:03,612:INFO:Initializing create_model()
2020-10-28 11:44:03,612:INFO:create_model(estimator=lar, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:03,612:INFO:Checking exceptions
2020-10-28 11:44:03,612:INFO:Importing libraries
2020-10-28 11:44:03,613:INFO:Copying training dataset
2020-10-28 11:44:03,614:INFO:Defining folds
2020-10-28 11:44:03,614:INFO:Declaring metric variables
2020-10-28 11:44:03,626:INFO:Importing untrained model
2020-10-28 11:44:03,637:INFO:Least Angle Regression Imported succesfully
2020-10-28 11:44:03,659:INFO:Starting cross validation
2020-10-28 11:44:03,659:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:03,744:INFO:Calculating mean and std
2020-10-28 11:44:03,745:INFO:Creating metrics dataframe
2020-10-28 11:44:03,751:INFO:Uploading results into container
2020-10-28 11:44:03,751:INFO:Uploading model into container now
2020-10-28 11:44:03,751:INFO:create_model_container: 5
2020-10-28 11:44:03,752:INFO:master_model_container: 5
2020-10-28 11:44:03,752:INFO:display_container: 1
2020-10-28 11:44:03,753:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=786, verbose=False)
2020-10-28 11:44:03,753:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:03,959:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:03,959:INFO:Creating metrics dataframe
2020-10-28 11:44:03,991:INFO:Initializing Lasso Least Angle Regression
2020-10-28 11:44:03,991:INFO:Total runtime is 0.26054126421610513 minutes
2020-10-28 11:44:04,000:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:04,001:INFO:Initializing create_model()
2020-10-28 11:44:04,001:INFO:create_model(estimator=llar, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:04,001:INFO:Checking exceptions
2020-10-28 11:44:04,001:INFO:Importing libraries
2020-10-28 11:44:04,001:INFO:Copying training dataset
2020-10-28 11:44:04,002:INFO:Defining folds
2020-10-28 11:44:04,002:INFO:Declaring metric variables
2020-10-28 11:44:04,009:INFO:Importing untrained model
2020-10-28 11:44:04,019:INFO:Lasso Least Angle Regression Imported succesfully
2020-10-28 11:44:04,042:INFO:Starting cross validation
2020-10-28 11:44:04,042:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:04,098:INFO:Calculating mean and std
2020-10-28 11:44:04,099:INFO:Creating metrics dataframe
2020-10-28 11:44:04,104:INFO:Uploading results into container
2020-10-28 11:44:04,104:INFO:Uploading model into container now
2020-10-28 11:44:04,104:INFO:create_model_container: 6
2020-10-28 11:44:04,104:INFO:master_model_container: 6
2020-10-28 11:44:04,105:INFO:display_container: 1
2020-10-28 11:44:04,105:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=786, verbose=False)
2020-10-28 11:44:04,105:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:04,304:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:04,305:INFO:Creating metrics dataframe
2020-10-28 11:44:04,334:INFO:Initializing Orthogonal Matching Pursuit
2020-10-28 11:44:04,335:INFO:Total runtime is 0.26626448233922323 minutes
2020-10-28 11:44:04,343:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:04,344:INFO:Initializing create_model()
2020-10-28 11:44:04,344:INFO:create_model(estimator=omp, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:04,344:INFO:Checking exceptions
2020-10-28 11:44:04,344:INFO:Importing libraries
2020-10-28 11:44:04,344:INFO:Copying training dataset
2020-10-28 11:44:04,345:INFO:Defining folds
2020-10-28 11:44:04,345:INFO:Declaring metric variables
2020-10-28 11:44:04,355:INFO:Importing untrained model
2020-10-28 11:44:04,365:INFO:Orthogonal Matching Pursuit Imported succesfully
2020-10-28 11:44:04,388:INFO:Starting cross validation
2020-10-28 11:44:04,389:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:04,435:INFO:Calculating mean and std
2020-10-28 11:44:04,436:INFO:Creating metrics dataframe
2020-10-28 11:44:04,443:INFO:Uploading results into container
2020-10-28 11:44:04,443:INFO:Uploading model into container now
2020-10-28 11:44:04,443:INFO:create_model_container: 7
2020-10-28 11:44:04,443:INFO:master_model_container: 7
2020-10-28 11:44:04,443:INFO:display_container: 1
2020-10-28 11:44:04,444:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2020-10-28 11:44:04,444:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:04,651:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:04,651:INFO:Creating metrics dataframe
2020-10-28 11:44:04,682:INFO:Initializing Bayesian Ridge
2020-10-28 11:44:04,682:INFO:Total runtime is 0.2720580458641052 minutes
2020-10-28 11:44:04,691:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:04,692:INFO:Initializing create_model()
2020-10-28 11:44:04,692:INFO:create_model(estimator=br, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:04,692:INFO:Checking exceptions
2020-10-28 11:44:04,692:INFO:Importing libraries
2020-10-28 11:44:04,692:INFO:Copying training dataset
2020-10-28 11:44:04,693:INFO:Defining folds
2020-10-28 11:44:04,693:INFO:Declaring metric variables
2020-10-28 11:44:04,701:INFO:Importing untrained model
2020-10-28 11:44:04,708:INFO:Bayesian Ridge Imported succesfully
2020-10-28 11:44:04,726:INFO:Starting cross validation
2020-10-28 11:44:04,726:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:04,772:INFO:Calculating mean and std
2020-10-28 11:44:04,773:INFO:Creating metrics dataframe
2020-10-28 11:44:04,777:INFO:Uploading results into container
2020-10-28 11:44:04,777:INFO:Uploading model into container now
2020-10-28 11:44:04,777:INFO:create_model_container: 8
2020-10-28 11:44:04,778:INFO:master_model_container: 8
2020-10-28 11:44:04,778:INFO:display_container: 1
2020-10-28 11:44:04,778:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2020-10-28 11:44:04,778:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:04,986:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:04,987:INFO:Creating metrics dataframe
2020-10-28 11:44:05,145:INFO:Initializing Passive Aggressive Regressor
2020-10-28 11:44:05,145:INFO:Total runtime is 0.27977529764175413 minutes
2020-10-28 11:44:05,160:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:05,160:INFO:Initializing create_model()
2020-10-28 11:44:05,161:INFO:create_model(estimator=par, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:05,161:INFO:Checking exceptions
2020-10-28 11:44:05,161:INFO:Importing libraries
2020-10-28 11:44:05,161:INFO:Copying training dataset
2020-10-28 11:44:05,162:INFO:Defining folds
2020-10-28 11:44:05,162:INFO:Declaring metric variables
2020-10-28 11:44:05,175:INFO:Importing untrained model
2020-10-28 11:44:05,188:INFO:Passive Aggressive Regressor Imported succesfully
2020-10-28 11:44:05,211:INFO:Starting cross validation
2020-10-28 11:44:05,212:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:05,293:INFO:Calculating mean and std
2020-10-28 11:44:05,294:INFO:Creating metrics dataframe
2020-10-28 11:44:05,299:INFO:Uploading results into container
2020-10-28 11:44:05,299:INFO:Uploading model into container now
2020-10-28 11:44:05,299:INFO:create_model_container: 9
2020-10-28 11:44:05,299:INFO:master_model_container: 9
2020-10-28 11:44:05,299:INFO:display_container: 1
2020-10-28 11:44:05,300:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=786, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-28 11:44:05,300:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:05,536:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:05,536:INFO:Creating metrics dataframe
2020-10-28 11:44:05,570:INFO:Initializing Huber Regressor
2020-10-28 11:44:05,570:INFO:Total runtime is 0.28685714801152545 minutes
2020-10-28 11:44:05,578:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:05,579:INFO:Initializing create_model()
2020-10-28 11:44:05,579:INFO:create_model(estimator=huber, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:05,579:INFO:Checking exceptions
2020-10-28 11:44:05,579:INFO:Importing libraries
2020-10-28 11:44:05,579:INFO:Copying training dataset
2020-10-28 11:44:05,580:INFO:Defining folds
2020-10-28 11:44:05,580:INFO:Declaring metric variables
2020-10-28 11:44:05,589:INFO:Importing untrained model
2020-10-28 11:44:05,596:INFO:Huber Regressor Imported succesfully
2020-10-28 11:44:05,616:INFO:Starting cross validation
2020-10-28 11:44:05,624:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:05,679:INFO:Calculating mean and std
2020-10-28 11:44:05,680:INFO:Creating metrics dataframe
2020-10-28 11:44:05,686:INFO:Uploading results into container
2020-10-28 11:44:05,686:INFO:Uploading model into container now
2020-10-28 11:44:05,686:INFO:create_model_container: 10
2020-10-28 11:44:05,686:INFO:master_model_container: 10
2020-10-28 11:44:05,686:INFO:display_container: 1
2020-10-28 11:44:05,687:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2020-10-28 11:44:05,687:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:05,996:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:05,996:INFO:Creating metrics dataframe
2020-10-28 11:44:06,060:INFO:Initializing Decision Tree Regressor
2020-10-28 11:44:06,060:INFO:Total runtime is 0.29501844644546504 minutes
2020-10-28 11:44:06,074:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:06,075:INFO:Initializing create_model()
2020-10-28 11:44:06,075:INFO:create_model(estimator=dt, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:06,076:INFO:Checking exceptions
2020-10-28 11:44:06,076:INFO:Importing libraries
2020-10-28 11:44:06,076:INFO:Copying training dataset
2020-10-28 11:44:06,077:INFO:Defining folds
2020-10-28 11:44:06,077:INFO:Declaring metric variables
2020-10-28 11:44:06,090:INFO:Importing untrained model
2020-10-28 11:44:06,100:INFO:Decision Tree Regressor Imported succesfully
2020-10-28 11:44:06,123:INFO:Starting cross validation
2020-10-28 11:44:06,124:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:06,165:INFO:Calculating mean and std
2020-10-28 11:44:06,167:INFO:Creating metrics dataframe
2020-10-28 11:44:06,173:INFO:Uploading results into container
2020-10-28 11:44:06,173:INFO:Uploading model into container now
2020-10-28 11:44:06,173:INFO:create_model_container: 11
2020-10-28 11:44:06,173:INFO:master_model_container: 11
2020-10-28 11:44:06,173:INFO:display_container: 1
2020-10-28 11:44:06,174:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=786, splitter='best')
2020-10-28 11:44:06,174:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:06,366:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:06,366:INFO:Creating metrics dataframe
2020-10-28 11:44:06,407:INFO:Initializing Random Forest Regressor
2020-10-28 11:44:06,407:INFO:Total runtime is 0.30080229838689165 minutes
2020-10-28 11:44:06,414:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:06,415:INFO:Initializing create_model()
2020-10-28 11:44:06,415:INFO:create_model(estimator=rf, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:06,415:INFO:Checking exceptions
2020-10-28 11:44:06,415:INFO:Importing libraries
2020-10-28 11:44:06,416:INFO:Copying training dataset
2020-10-28 11:44:06,417:INFO:Defining folds
2020-10-28 11:44:06,417:INFO:Declaring metric variables
2020-10-28 11:44:06,426:INFO:Importing untrained model
2020-10-28 11:44:06,435:INFO:Random Forest Regressor Imported succesfully
2020-10-28 11:44:06,452:INFO:Starting cross validation
2020-10-28 11:44:06,452:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:07,013:INFO:Calculating mean and std
2020-10-28 11:44:07,014:INFO:Creating metrics dataframe
2020-10-28 11:44:07,020:INFO:Uploading results into container
2020-10-28 11:44:07,020:INFO:Uploading model into container now
2020-10-28 11:44:07,020:INFO:create_model_container: 12
2020-10-28 11:44:07,021:INFO:master_model_container: 12
2020-10-28 11:44:07,021:INFO:display_container: 1
2020-10-28 11:44:07,021:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False)
2020-10-28 11:44:07,021:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:07,210:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:07,210:INFO:Creating metrics dataframe
2020-10-28 11:44:07,253:INFO:Initializing Extra Trees Regressor
2020-10-28 11:44:07,253:INFO:Total runtime is 0.314911146958669 minutes
2020-10-28 11:44:07,262:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:07,262:INFO:Initializing create_model()
2020-10-28 11:44:07,262:INFO:create_model(estimator=et, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:07,263:INFO:Checking exceptions
2020-10-28 11:44:07,263:INFO:Importing libraries
2020-10-28 11:44:07,263:INFO:Copying training dataset
2020-10-28 11:44:07,264:INFO:Defining folds
2020-10-28 11:44:07,264:INFO:Declaring metric variables
2020-10-28 11:44:07,273:INFO:Importing untrained model
2020-10-28 11:44:07,282:INFO:Extra Trees Regressor Imported succesfully
2020-10-28 11:44:07,299:INFO:Starting cross validation
2020-10-28 11:44:07,299:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:07,694:INFO:Calculating mean and std
2020-10-28 11:44:07,696:INFO:Creating metrics dataframe
2020-10-28 11:44:07,701:INFO:Uploading results into container
2020-10-28 11:44:07,702:INFO:Uploading model into container now
2020-10-28 11:44:07,702:INFO:create_model_container: 13
2020-10-28 11:44:07,702:INFO:master_model_container: 13
2020-10-28 11:44:07,702:INFO:display_container: 1
2020-10-28 11:44:07,703:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False)
2020-10-28 11:44:07,703:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:07,946:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:07,946:INFO:Creating metrics dataframe
2020-10-28 11:44:08,099:INFO:Initializing AdaBoost Regressor
2020-10-28 11:44:08,100:INFO:Total runtime is 0.32901521523793537 minutes
2020-10-28 11:44:08,132:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:08,136:INFO:Initializing create_model()
2020-10-28 11:44:08,138:INFO:create_model(estimator=ada, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:08,140:INFO:Checking exceptions
2020-10-28 11:44:08,140:INFO:Importing libraries
2020-10-28 11:44:08,142:INFO:Copying training dataset
2020-10-28 11:44:08,146:INFO:Defining folds
2020-10-28 11:44:08,147:INFO:Declaring metric variables
2020-10-28 11:44:08,166:INFO:Importing untrained model
2020-10-28 11:44:08,186:INFO:AdaBoost Regressor Imported succesfully
2020-10-28 11:44:08,262:INFO:Starting cross validation
2020-10-28 11:44:08,264:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:08,647:INFO:Calculating mean and std
2020-10-28 11:44:08,648:INFO:Creating metrics dataframe
2020-10-28 11:44:08,658:INFO:Uploading results into container
2020-10-28 11:44:08,659:INFO:Uploading model into container now
2020-10-28 11:44:08,659:INFO:create_model_container: 14
2020-10-28 11:44:08,659:INFO:master_model_container: 14
2020-10-28 11:44:08,659:INFO:display_container: 1
2020-10-28 11:44:08,660:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=786)
2020-10-28 11:44:08,660:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:09,096:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:09,096:INFO:Creating metrics dataframe
2020-10-28 11:44:09,428:INFO:Initializing Gradient Boosting Regressor
2020-10-28 11:44:09,428:INFO:Total runtime is 0.3511607805887858 minutes
2020-10-28 11:44:09,459:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:09,460:INFO:Initializing create_model()
2020-10-28 11:44:09,460:INFO:create_model(estimator=gbr, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:09,461:INFO:Checking exceptions
2020-10-28 11:44:09,462:INFO:Importing libraries
2020-10-28 11:44:09,463:INFO:Copying training dataset
2020-10-28 11:44:09,465:INFO:Defining folds
2020-10-28 11:44:09,465:INFO:Declaring metric variables
2020-10-28 11:44:09,496:INFO:Importing untrained model
2020-10-28 11:44:09,523:INFO:Gradient Boosting Regressor Imported succesfully
2020-10-28 11:44:09,807:INFO:Starting cross validation
2020-10-28 11:44:09,808:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:10,429:INFO:Calculating mean and std
2020-10-28 11:44:10,430:INFO:Creating metrics dataframe
2020-10-28 11:44:10,440:INFO:Uploading results into container
2020-10-28 11:44:10,440:INFO:Uploading model into container now
2020-10-28 11:44:10,441:INFO:create_model_container: 15
2020-10-28 11:44:10,441:INFO:master_model_container: 15
2020-10-28 11:44:10,442:INFO:display_container: 1
2020-10-28 11:44:10,442:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-28 11:44:10,443:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:10,912:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:10,912:INFO:Creating metrics dataframe
2020-10-28 11:44:11,004:INFO:Initializing Extreme Gradient Boosting
2020-10-28 11:44:11,005:INFO:Total runtime is 0.3774419665336609 minutes
2020-10-28 11:44:11,022:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:11,023:INFO:Initializing create_model()
2020-10-28 11:44:11,024:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:11,024:INFO:Checking exceptions
2020-10-28 11:44:11,024:INFO:Importing libraries
2020-10-28 11:44:11,024:INFO:Copying training dataset
2020-10-28 11:44:11,026:INFO:Defining folds
2020-10-28 11:44:11,027:INFO:Declaring metric variables
2020-10-28 11:44:11,042:INFO:Importing untrained model
2020-10-28 11:44:11,059:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-28 11:44:11,090:INFO:Starting cross validation
2020-10-28 11:44:11,093:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:13,479:INFO:Calculating mean and std
2020-10-28 11:44:13,480:INFO:Creating metrics dataframe
2020-10-28 11:44:13,485:INFO:Uploading results into container
2020-10-28 11:44:13,486:INFO:Uploading model into container now
2020-10-28 11:44:13,486:INFO:create_model_container: 16
2020-10-28 11:44:13,486:INFO:master_model_container: 16
2020-10-28 11:44:13,486:INFO:display_container: 1
2020-10-28 11:44:13,487:INFO:XGBRegressor(base_score=None, booster='gbtree', colsample_bylevel=None,
             colsample_bynode=None, colsample_bytree=None, gamma=None,
             gpu_id=None, importance_type='gain', interaction_constraints=None,
             learning_rate=None, max_delta_step=None, max_depth=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             objective='reg:squarederror', random_state=786, reg_alpha=None,
             reg_lambda=None, scale_pos_weight=None, subsample=None,
             tree_method='auto', validate_parameters=None, verbosity=0)
2020-10-28 11:44:13,487:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:13,690:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:13,690:INFO:Creating metrics dataframe
2020-10-28 11:44:13,748:INFO:Initializing Light Gradient Boosting Machine
2020-10-28 11:44:13,748:INFO:Total runtime is 0.42315983374913535 minutes
2020-10-28 11:44:13,760:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:13,761:INFO:Initializing create_model()
2020-10-28 11:44:13,761:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:13,761:INFO:Checking exceptions
2020-10-28 11:44:13,761:INFO:Importing libraries
2020-10-28 11:44:13,762:INFO:Copying training dataset
2020-10-28 11:44:13,763:INFO:Defining folds
2020-10-28 11:44:13,763:INFO:Declaring metric variables
2020-10-28 11:44:13,772:INFO:Importing untrained model
2020-10-28 11:44:13,783:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-28 11:44:13,806:INFO:Starting cross validation
2020-10-28 11:44:13,807:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:13,942:INFO:Calculating mean and std
2020-10-28 11:44:13,943:INFO:Creating metrics dataframe
2020-10-28 11:44:13,949:INFO:Uploading results into container
2020-10-28 11:44:13,949:INFO:Uploading model into container now
2020-10-28 11:44:13,949:INFO:create_model_container: 17
2020-10-28 11:44:13,949:INFO:master_model_container: 17
2020-10-28 11:44:13,949:INFO:display_container: 1
2020-10-28 11:44:13,950:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-28 11:44:13,950:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:14,168:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:14,169:INFO:Creating metrics dataframe
2020-10-28 11:44:14,236:INFO:Initializing CatBoost Regressor
2020-10-28 11:44:14,237:INFO:Total runtime is 0.431298299630483 minutes
2020-10-28 11:44:14,257:INFO:SubProcess create_model() called ==================================
2020-10-28 11:44:14,258:INFO:Initializing create_model()
2020-10-28 11:44:14,258:INFO:create_model(estimator=catboost, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7fd19224f6d0>, kwargs={})
2020-10-28 11:44:14,258:INFO:Checking exceptions
2020-10-28 11:44:14,258:INFO:Importing libraries
2020-10-28 11:44:14,258:INFO:Copying training dataset
2020-10-28 11:44:14,260:INFO:Defining folds
2020-10-28 11:44:14,260:INFO:Declaring metric variables
2020-10-28 11:44:14,273:INFO:Importing untrained model
2020-10-28 11:44:14,284:INFO:CatBoost Regressor Imported succesfully
2020-10-28 11:44:14,316:INFO:Starting cross validation
2020-10-28 11:44:14,323:INFO:Cross validating with n_jobs=-1
2020-10-28 11:44:34,052:INFO:Calculating mean and std
2020-10-28 11:44:34,057:INFO:Creating metrics dataframe
2020-10-28 11:44:34,079:INFO:Uploading results into container
2020-10-28 11:44:34,080:INFO:Uploading model into container now
2020-10-28 11:44:34,080:INFO:create_model_container: 18
2020-10-28 11:44:34,080:INFO:master_model_container: 18
2020-10-28 11:44:34,080:INFO:display_container: 1
2020-10-28 11:44:34,080:INFO:<catboost.core.CatBoostRegressor object at 0x7fd19269f910>
2020-10-28 11:44:34,081:INFO:create_model() succesfully completed......................................
2020-10-28 11:44:34,888:INFO:SubProcess create_model() end ==================================
2020-10-28 11:44:34,888:INFO:Creating metrics dataframe
2020-10-28 11:44:35,091:INFO:Initializing create_model()
2020-10-28 11:44:35,092:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x7fd19269f910>, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-28 11:44:35,092:INFO:Checking exceptions
2020-10-28 11:44:35,092:INFO:Importing libraries
2020-10-28 11:44:35,092:INFO:Copying training dataset
2020-10-28 11:44:35,093:INFO:Defining folds
2020-10-28 11:44:35,093:INFO:Declaring metric variables
2020-10-28 11:44:35,093:INFO:Importing untrained model
2020-10-28 11:44:35,093:INFO:Declaring custom model
2020-10-28 11:44:35,094:INFO:CatBoost Regressor Imported succesfully
2020-10-28 11:44:35,094:INFO:Cross validation set to False
2020-10-28 11:44:35,094:INFO:Fitting Model
2020-10-28 11:44:43,317:INFO:<catboost.core.CatBoostRegressor object at 0x7fd19269feb0>
2020-10-28 11:44:43,320:INFO:create_models() succesfully completed......................................
2020-10-28 11:44:44,151:INFO:Creating MLFlow logs
2020-10-28 11:44:44,247:INFO:Model: CatBoost Regressor
2020-10-28 11:44:44,288:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 1000, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'l2_leaf_reg': 3, 'random_strength': 1, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 786, 'depth': 6, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.03144500032067299, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 64}
2020-10-28 11:44:44,336:INFO:Initializing predict_model()
2020-10-28 11:44:44,336:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x7fd19269feb0>, probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-28 11:44:44,336:INFO:Checking exceptions
2020-10-28 11:44:44,336:INFO:Preloading libraries
2020-10-28 11:44:44,890:INFO:SubProcess plot_model() called ==================================
2020-10-28 11:44:44,891:INFO:Initializing plot_model()
2020-10-28 11:44:44,891:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=<catboost.core.CatBoostRegressor object at 0x7fd19269feb0>, feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:44:44,891:INFO:Checking exceptions
2020-10-28 11:44:44,891:INFO:Preloading libraries
2020-10-28 11:44:44,899:INFO:Copying training dataset
2020-10-28 11:44:44,900:INFO:Copying test dataset
2020-10-28 11:44:44,900:INFO:Plot type: residuals
2020-10-28 11:44:45,672:INFO:Fitting Model
2020-10-28 11:44:45,838:INFO:Scoring test/hold-out set
2020-10-28 11:44:45,902:INFO:Saving 'Residuals.png' in current active directory
2020-10-28 11:44:46,698:INFO:Visual Rendered Successfully
2020-10-28 11:44:46,956:INFO:plot_model() succesfully completed......................................
2020-10-28 11:44:46,987:INFO:Initializing plot_model()
2020-10-28 11:44:46,987:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=<catboost.core.CatBoostRegressor object at 0x7fd19269feb0>, feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:44:46,988:INFO:Checking exceptions
2020-10-28 11:44:46,988:INFO:Preloading libraries
2020-10-28 11:44:46,994:INFO:Copying training dataset
2020-10-28 11:44:46,995:INFO:Copying test dataset
2020-10-28 11:44:46,995:INFO:Plot type: error
2020-10-28 11:44:47,002:INFO:Fitting Model
2020-10-28 11:44:47,021:INFO:Scoring test/hold-out set
2020-10-28 11:44:47,064:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-28 11:44:47,370:INFO:Visual Rendered Successfully
2020-10-28 11:44:47,744:INFO:plot_model() succesfully completed......................................
2020-10-28 11:44:47,757:INFO:Initializing plot_model()
2020-10-28 11:44:47,758:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=<catboost.core.CatBoostRegressor object at 0x7fd19269feb0>, feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:44:47,758:INFO:Checking exceptions
2020-10-28 11:44:47,758:INFO:Preloading libraries
2020-10-28 11:44:47,761:INFO:Copying training dataset
2020-10-28 11:44:47,762:INFO:Copying test dataset
2020-10-28 11:44:47,763:INFO:Plot type: feature
2020-10-28 11:44:47,765:WARNING:No coef_ found. Trying feature_importances_
2020-10-28 11:44:47,799:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-28 11:44:47,943:INFO:Visual Rendered Successfully
2020-10-28 11:44:48,198:INFO:plot_model() succesfully completed......................................
2020-10-28 11:44:48,221:INFO:SubProcess plot_model() end ==================================
2020-10-28 11:44:48,704:INFO:Initializing create_model()
2020-10-28 11:44:48,704:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-28 11:44:48,704:INFO:Checking exceptions
2020-10-28 11:44:48,705:INFO:Importing libraries
2020-10-28 11:44:48,705:INFO:Copying training dataset
2020-10-28 11:44:48,705:INFO:Defining folds
2020-10-28 11:44:48,705:INFO:Declaring metric variables
2020-10-28 11:44:48,705:INFO:Importing untrained model
2020-10-28 11:44:48,706:INFO:Declaring custom model
2020-10-28 11:44:48,706:INFO:Extra Trees Regressor Imported succesfully
2020-10-28 11:44:48,707:INFO:Cross validation set to False
2020-10-28 11:44:48,707:INFO:Fitting Model
2020-10-28 11:44:48,942:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False)
2020-10-28 11:44:48,942:INFO:create_models() succesfully completed......................................
2020-10-28 11:44:49,166:INFO:Creating MLFlow logs
2020-10-28 11:44:49,183:INFO:Model: Extra Trees Regressor
2020-10-28 11:44:49,197:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2020-10-28 11:44:49,232:INFO:Initializing predict_model()
2020-10-28 11:44:49,232:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-28 11:44:49,232:INFO:Checking exceptions
2020-10-28 11:44:49,232:INFO:Preloading libraries
2020-10-28 11:44:49,516:INFO:SubProcess plot_model() called ==================================
2020-10-28 11:44:49,516:INFO:Initializing plot_model()
2020-10-28 11:44:49,517:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:44:49,517:INFO:Checking exceptions
2020-10-28 11:44:49,532:INFO:Preloading libraries
2020-10-28 11:44:49,579:INFO:Copying training dataset
2020-10-28 11:44:49,580:INFO:Copying test dataset
2020-10-28 11:44:49,580:INFO:Plot type: residuals
2020-10-28 11:44:49,661:INFO:Fitting Model
2020-10-28 11:44:49,750:INFO:Scoring test/hold-out set
2020-10-28 11:44:50,068:INFO:Saving 'Residuals.png' in current active directory
2020-10-28 11:44:50,663:INFO:Visual Rendered Successfully
2020-10-28 11:44:51,111:INFO:plot_model() succesfully completed......................................
2020-10-28 11:44:51,120:INFO:Initializing plot_model()
2020-10-28 11:44:51,120:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:44:51,120:INFO:Checking exceptions
2020-10-28 11:44:51,138:INFO:Preloading libraries
2020-10-28 11:44:51,166:INFO:Copying training dataset
2020-10-28 11:44:51,178:INFO:Copying test dataset
2020-10-28 11:44:51,178:INFO:Plot type: error
2020-10-28 11:44:51,289:INFO:Fitting Model
2020-10-28 11:44:51,290:INFO:Scoring test/hold-out set
2020-10-28 11:44:51,436:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-28 11:44:51,744:INFO:Visual Rendered Successfully
2020-10-28 11:44:52,111:INFO:plot_model() succesfully completed......................................
2020-10-28 11:44:52,120:INFO:Initializing plot_model()
2020-10-28 11:44:52,120:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:44:52,120:INFO:Checking exceptions
2020-10-28 11:44:52,141:INFO:Preloading libraries
2020-10-28 11:44:52,153:INFO:Copying training dataset
2020-10-28 11:44:52,154:INFO:Copying test dataset
2020-10-28 11:44:52,154:INFO:Plot type: feature
2020-10-28 11:44:52,188:WARNING:No coef_ found. Trying feature_importances_
2020-10-28 11:44:52,227:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-28 11:44:52,417:INFO:Visual Rendered Successfully
2020-10-28 11:44:52,673:INFO:plot_model() succesfully completed......................................
2020-10-28 11:44:52,684:INFO:SubProcess plot_model() end ==================================
2020-10-28 11:44:53,279:INFO:Initializing create_model()
2020-10-28 11:44:53,279:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-28 11:44:53,279:INFO:Checking exceptions
2020-10-28 11:44:53,280:INFO:Importing libraries
2020-10-28 11:44:53,280:INFO:Copying training dataset
2020-10-28 11:44:53,280:INFO:Defining folds
2020-10-28 11:44:53,281:INFO:Declaring metric variables
2020-10-28 11:44:53,281:INFO:Importing untrained model
2020-10-28 11:44:53,281:INFO:Declaring custom model
2020-10-28 11:44:53,282:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-28 11:44:53,282:INFO:Cross validation set to False
2020-10-28 11:44:53,282:INFO:Fitting Model
2020-10-28 11:44:56,043:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-28 11:44:56,044:INFO:create_models() succesfully completed......................................
2020-10-28 11:44:58,041:INFO:Creating MLFlow logs
2020-10-28 11:44:58,069:INFO:Model: Light Gradient Boosting Machine
2020-10-28 11:44:58,093:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2020-10-28 11:44:58,140:INFO:Initializing predict_model()
2020-10-28 11:44:58,140:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-28 11:44:58,140:INFO:Checking exceptions
2020-10-28 11:44:58,140:INFO:Preloading libraries
2020-10-28 11:44:58,526:INFO:SubProcess plot_model() called ==================================
2020-10-28 11:44:58,527:INFO:Initializing plot_model()
2020-10-28 11:44:58,527:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:44:58,527:INFO:Checking exceptions
2020-10-28 11:44:58,527:INFO:Preloading libraries
2020-10-28 11:44:58,534:INFO:Copying training dataset
2020-10-28 11:44:58,535:INFO:Copying test dataset
2020-10-28 11:44:58,536:INFO:Plot type: residuals
2020-10-28 11:44:58,599:INFO:Fitting Model
2020-10-28 11:44:58,691:INFO:Scoring test/hold-out set
2020-10-28 11:44:58,888:INFO:Saving 'Residuals.png' in current active directory
2020-10-28 11:44:59,598:INFO:Visual Rendered Successfully
2020-10-28 11:45:00,567:INFO:plot_model() succesfully completed......................................
2020-10-28 11:45:00,576:INFO:Initializing plot_model()
2020-10-28 11:45:00,576:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:45:00,576:INFO:Checking exceptions
2020-10-28 11:45:00,576:INFO:Preloading libraries
2020-10-28 11:45:00,587:INFO:Copying training dataset
2020-10-28 11:45:00,589:INFO:Copying test dataset
2020-10-28 11:45:00,589:INFO:Plot type: error
2020-10-28 11:45:00,592:INFO:Fitting Model
2020-10-28 11:45:00,592:INFO:Scoring test/hold-out set
2020-10-28 11:45:00,643:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-28 11:45:01,159:INFO:Visual Rendered Successfully
2020-10-28 11:45:01,410:INFO:plot_model() succesfully completed......................................
2020-10-28 11:45:01,422:INFO:Initializing plot_model()
2020-10-28 11:45:01,422:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:45:01,422:INFO:Checking exceptions
2020-10-28 11:45:01,423:INFO:Preloading libraries
2020-10-28 11:45:01,443:INFO:Copying training dataset
2020-10-28 11:45:01,445:INFO:Copying test dataset
2020-10-28 11:45:01,445:INFO:Plot type: feature
2020-10-28 11:45:01,446:WARNING:No coef_ found. Trying feature_importances_
2020-10-28 11:45:01,538:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-28 11:45:01,798:INFO:Visual Rendered Successfully
2020-10-28 11:45:02,076:INFO:plot_model() succesfully completed......................................
2020-10-28 11:45:02,083:INFO:SubProcess plot_model() end ==================================
2020-10-28 11:45:02,397:INFO:Initializing create_model()
2020-10-28 11:45:02,398:INFO:create_model(estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-28 11:45:02,398:INFO:Checking exceptions
2020-10-28 11:45:02,398:INFO:Importing libraries
2020-10-28 11:45:02,398:INFO:Copying training dataset
2020-10-28 11:45:02,398:INFO:Defining folds
2020-10-28 11:45:02,398:INFO:Declaring metric variables
2020-10-28 11:45:02,398:INFO:Importing untrained model
2020-10-28 11:45:02,399:INFO:Declaring custom model
2020-10-28 11:45:02,399:INFO:Random Forest Regressor Imported succesfully
2020-10-28 11:45:02,400:INFO:Cross validation set to False
2020-10-28 11:45:02,401:INFO:Fitting Model
2020-10-28 11:45:02,746:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False)
2020-10-28 11:45:02,746:INFO:create_models() succesfully completed......................................
2020-10-28 11:45:03,202:INFO:Creating MLFlow logs
2020-10-28 11:45:03,229:INFO:Model: Random Forest Regressor
2020-10-28 11:45:03,278:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2020-10-28 11:45:03,346:INFO:Initializing predict_model()
2020-10-28 11:45:03,346:INFO:predict_model(estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-28 11:45:03,346:INFO:Checking exceptions
2020-10-28 11:45:03,346:INFO:Preloading libraries
2020-10-28 11:45:03,737:INFO:SubProcess plot_model() called ==================================
2020-10-28 11:45:03,738:INFO:Initializing plot_model()
2020-10-28 11:45:03,738:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:45:03,738:INFO:Checking exceptions
2020-10-28 11:45:03,757:INFO:Preloading libraries
2020-10-28 11:45:03,781:INFO:Copying training dataset
2020-10-28 11:45:03,782:INFO:Copying test dataset
2020-10-28 11:45:03,782:INFO:Plot type: residuals
2020-10-28 11:45:03,862:INFO:Fitting Model
2020-10-28 11:45:03,995:INFO:Scoring test/hold-out set
2020-10-28 11:45:04,119:INFO:Saving 'Residuals.png' in current active directory
2020-10-28 11:45:04,486:INFO:Visual Rendered Successfully
2020-10-28 11:45:04,721:INFO:plot_model() succesfully completed......................................
2020-10-28 11:45:04,728:INFO:Initializing plot_model()
2020-10-28 11:45:04,729:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:45:04,729:INFO:Checking exceptions
2020-10-28 11:45:04,744:INFO:Preloading libraries
2020-10-28 11:45:04,760:INFO:Copying training dataset
2020-10-28 11:45:04,761:INFO:Copying test dataset
2020-10-28 11:45:04,761:INFO:Plot type: error
2020-10-28 11:45:04,800:INFO:Fitting Model
2020-10-28 11:45:04,800:INFO:Scoring test/hold-out set
2020-10-28 11:45:04,879:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-28 11:45:05,124:INFO:Visual Rendered Successfully
2020-10-28 11:45:05,435:INFO:plot_model() succesfully completed......................................
2020-10-28 11:45:05,450:INFO:Initializing plot_model()
2020-10-28 11:45:05,450:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:45:05,450:INFO:Checking exceptions
2020-10-28 11:45:05,482:INFO:Preloading libraries
2020-10-28 11:45:05,507:INFO:Copying training dataset
2020-10-28 11:45:05,510:INFO:Copying test dataset
2020-10-28 11:45:05,511:INFO:Plot type: feature
2020-10-28 11:45:05,554:WARNING:No coef_ found. Trying feature_importances_
2020-10-28 11:45:05,607:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-28 11:45:05,767:INFO:Visual Rendered Successfully
2020-10-28 11:45:06,177:INFO:plot_model() succesfully completed......................................
2020-10-28 11:45:06,190:INFO:SubProcess plot_model() end ==================================
2020-10-28 11:45:06,602:INFO:Initializing create_model()
2020-10-28 11:45:06,602:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-28 11:45:06,602:INFO:Checking exceptions
2020-10-28 11:45:06,602:INFO:Importing libraries
2020-10-28 11:45:06,602:INFO:Copying training dataset
2020-10-28 11:45:06,603:INFO:Defining folds
2020-10-28 11:45:06,603:INFO:Declaring metric variables
2020-10-28 11:45:06,604:INFO:Importing untrained model
2020-10-28 11:45:06,604:INFO:Declaring custom model
2020-10-28 11:45:06,605:INFO:Gradient Boosting Regressor Imported succesfully
2020-10-28 11:45:06,605:INFO:Cross validation set to False
2020-10-28 11:45:06,605:INFO:Fitting Model
2020-10-28 11:45:06,713:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-28 11:45:06,713:INFO:create_models() succesfully completed......................................
2020-10-28 11:45:06,964:INFO:Creating MLFlow logs
2020-10-28 11:45:06,979:INFO:Model: Gradient Boosting Regressor
2020-10-28 11:45:06,995:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2020-10-28 11:45:07,030:INFO:Initializing predict_model()
2020-10-28 11:45:07,030:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, round=4, verbose=False, ml_usecase=None, display=None)
2020-10-28 11:45:07,030:INFO:Checking exceptions
2020-10-28 11:45:07,030:INFO:Preloading libraries
2020-10-28 11:45:07,321:INFO:SubProcess plot_model() called ==================================
2020-10-28 11:45:07,322:INFO:Initializing plot_model()
2020-10-28 11:45:07,322:INFO:plot_model(plot=residuals, fold=None, verbose=False, display=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:45:07,322:INFO:Checking exceptions
2020-10-28 11:45:07,323:INFO:Preloading libraries
2020-10-28 11:45:07,342:INFO:Copying training dataset
2020-10-28 11:45:07,343:INFO:Copying test dataset
2020-10-28 11:45:07,344:INFO:Plot type: residuals
2020-10-28 11:45:07,381:INFO:Fitting Model
2020-10-28 11:45:07,457:INFO:Scoring test/hold-out set
2020-10-28 11:45:07,508:INFO:Saving 'Residuals.png' in current active directory
2020-10-28 11:45:07,947:INFO:Visual Rendered Successfully
2020-10-28 11:45:08,334:INFO:plot_model() succesfully completed......................................
2020-10-28 11:45:08,367:INFO:Initializing plot_model()
2020-10-28 11:45:08,367:INFO:plot_model(plot=error, fold=None, verbose=False, display=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:45:08,368:INFO:Checking exceptions
2020-10-28 11:45:08,369:INFO:Preloading libraries
2020-10-28 11:45:08,389:INFO:Copying training dataset
2020-10-28 11:45:08,389:INFO:Copying test dataset
2020-10-28 11:45:08,390:INFO:Plot type: error
2020-10-28 11:45:08,410:INFO:Fitting Model
2020-10-28 11:45:08,417:INFO:Scoring test/hold-out set
2020-10-28 11:45:08,499:INFO:Saving 'Prediction Error.png' in current active directory
2020-10-28 11:45:08,892:INFO:Visual Rendered Successfully
2020-10-28 11:45:09,661:INFO:plot_model() succesfully completed......................................
2020-10-28 11:45:09,671:INFO:Initializing plot_model()
2020-10-28 11:45:09,671:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=True, scale=1, system=False)
2020-10-28 11:45:09,671:INFO:Checking exceptions
2020-10-28 11:45:09,672:INFO:Preloading libraries
2020-10-28 11:45:09,682:INFO:Copying training dataset
2020-10-28 11:45:09,683:INFO:Copying test dataset
2020-10-28 11:45:09,684:INFO:Plot type: feature
2020-10-28 11:45:09,686:WARNING:No coef_ found. Trying feature_importances_
2020-10-28 11:45:09,715:INFO:Saving 'Feature Importance.png' in current active directory
2020-10-28 11:45:09,878:INFO:Visual Rendered Successfully
2020-10-28 11:45:10,178:INFO:plot_model() succesfully completed......................................
2020-10-28 11:45:10,187:INFO:SubProcess plot_model() end ==================================
2020-10-28 11:45:10,603:INFO:Creating MLFlow logs
2020-10-28 11:45:10,621:INFO:Model: Extreme Gradient Boosting
2020-10-28 11:45:10,636:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2020-10-28 11:45:10,936:INFO:Creating MLFlow logs
2020-10-28 11:45:10,950:INFO:Model: Decision Tree Regressor
2020-10-28 11:45:10,972:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2020-10-28 11:45:11,377:INFO:Creating MLFlow logs
2020-10-28 11:45:11,393:INFO:Model: AdaBoost Regressor
2020-10-28 11:45:11,410:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2020-10-28 11:45:11,721:INFO:Creating MLFlow logs
2020-10-28 11:45:11,740:INFO:Model: Elastic Net
2020-10-28 11:45:11,759:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2020-10-28 11:45:12,068:INFO:Creating MLFlow logs
2020-10-28 11:45:12,090:INFO:Model: Lasso Regression
2020-10-28 11:45:12,102:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2020-10-28 11:45:12,392:INFO:Creating MLFlow logs
2020-10-28 11:45:12,406:INFO:Model: Least Angle Regression
2020-10-28 11:45:12,428:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2020-10-28 11:45:12,761:INFO:Creating MLFlow logs
2020-10-28 11:45:12,774:INFO:Model: Bayesian Ridge
2020-10-28 11:45:12,787:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2020-10-28 11:45:13,251:INFO:Creating MLFlow logs
2020-10-28 11:45:13,268:INFO:Model: Orthogonal Matching Pursuit
2020-10-28 11:45:13,282:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2020-10-28 11:45:13,554:INFO:Creating MLFlow logs
2020-10-28 11:45:13,571:INFO:Model: Huber Regressor
2020-10-28 11:45:13,596:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2020-10-28 11:45:14,116:INFO:Creating MLFlow logs
2020-10-28 11:45:14,135:INFO:Model: Ridge Regression
2020-10-28 11:45:14,156:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2020-10-28 11:45:14,442:INFO:Creating MLFlow logs
2020-10-28 11:45:14,451:INFO:Model: Linear Regression
2020-10-28 11:45:14,472:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2020-10-28 11:45:14,746:INFO:Creating MLFlow logs
2020-10-28 11:45:14,757:INFO:Model: Least Angle Regression
2020-10-28 11:45:14,773:INFO:logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'normalize': True, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2020-10-28 11:45:15,079:INFO:Creating MLFlow logs
2020-10-28 11:45:15,096:INFO:Model: Passive Aggressive Regressor
2020-10-28 11:45:15,117:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2020-10-28 11:45:15,699:INFO:create_model_container: 18
2020-10-28 11:45:15,699:INFO:master_model_container: 18
2020-10-28 11:45:15,699:INFO:display_container: 1
2020-10-28 11:45:15,701:INFO:[<catboost.core.CatBoostRegressor object at 0x7fd19269feb0>, ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False), GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)]
2020-10-28 11:45:15,702:INFO:compare_models() succesfully completed......................................
2020-10-28 11:47:59,892:INFO:PyCaret Supervised Module
2020-10-28 11:47:59,895:INFO:ML Usecase: regression
2020-10-28 11:47:59,895:INFO:version 2.2
2020-10-28 11:47:59,895:INFO:Initializing setup()
2020-10-28 11:47:59,896:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:47:59,896:INFO:Checking environment
2020-10-28 11:47:59,897:INFO:python_version: 3.8.3
2020-10-28 11:47:59,897:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:47:59,899:INFO:machine: x86_64
2020-10-28 11:47:59,900:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:47:59,907:INFO:Memory: svmem(total=8589934592, available=1019019264, percent=88.1, used=3214073856, free=113963008, active=909676544, inactive=901038080, wired=2304397312)
2020-10-28 11:47:59,908:INFO:Physical Core: 4
2020-10-28 11:47:59,908:INFO:Logical Core: 8
2020-10-28 11:47:59,908:INFO:Checking libraries
2020-10-28 11:47:59,909:INFO:pd==1.0.5
2020-10-28 11:47:59,910:INFO:numpy==1.18.5
2020-10-28 11:47:59,911:INFO:sklearn==0.23.2
2020-10-28 11:47:59,912:INFO:xgboost==1.2.0
2020-10-28 11:47:59,912:INFO:lightgbm==2.3.1
2020-10-28 11:47:59,914:INFO:catboost==0.24.1
2020-10-28 11:47:59,915:INFO:mlflow==1.11.0
2020-10-28 11:47:59,915:INFO:Checking Exceptions
2020-10-28 11:47:59,935:INFO:Declaring global variables
2020-10-28 11:47:59,936:INFO:USI: f797
2020-10-28 11:47:59,936:INFO:pycaret_globals: {'_internal_pipeline', '_all_models', 'exp_name_log', 'transform_target_param', 'master_model_container', '_all_metrics', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', 'pycaret_globals', 'fold_param', 'X', 'target_param', 'transform_target_method_param', 'y_test', 'gpu_param', 'y_train', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'X_test', 'stratify_param', 'y', 'USI', 'display_container', 'logging_param', 'create_model_container', 'imputation_classifier', 'X_train', 'n_jobs_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'fold_groups_param', 'html_param', 'experiment__', 'fold_shuffle_param', 'fix_imbalance_method_param', '_all_models_internal', 'data_before_preprocess', 'seed'}
2020-10-28 11:47:59,936:INFO:Preparing display monitor
2020-10-28 11:47:59,946:INFO:Preparing display monitor
2020-10-28 11:48:00,130:INFO:Importing libraries
2020-10-28 11:48:00,130:INFO:Copying data for preprocessing
2020-10-28 11:48:00,184:INFO:Declaring preprocessing parameters
2020-10-28 11:48:00,191:INFO:Setting up iterative imputation
2020-10-28 11:48:00,710:INFO:Creating preprocessing pipeline
2020-10-28 11:48:00,730:INFO:Preprocessing pipeline created successfully
2020-10-28 11:48:00,731:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:48:00,731:INFO:Creating global containers
2020-10-28 11:48:00,732:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:48:00,869:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:48:01,344:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:48:02,429:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:48:04,796:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:48:05,331:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:48:05,937:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:48:06,653:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:48:07,780:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:48:08,289:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:48:10,764:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:48:13,157:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:48:14,255:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:48:15,377:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:48:17,027:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:48:18,853:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:48:19,765:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:48:20,547:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:48:26,420:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:48:29,205:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:48:32,293:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:48:33,448:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:48:35,644:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:48:37,149:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:48:38,773:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:48:39,696:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:48:40,975:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:48:41,567:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:48:42,337:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:48:43,481:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:48:44,153:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:48:45,682:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:48:46,549:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:48:47,634:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:48:48,734:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:48:49,419:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:48:50,195:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:48:51,531:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:48:52,971:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:48:54,214:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:48:54,845:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:48:55,462:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:48:58,346:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:48:59,443:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:49:00,509:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:49:02,448:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:49:04,125:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:49:04,941:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:49:07,269:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:49:07,826:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:49:08,259:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:49:45,887:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:49:45,908:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:49:45,920:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:49:45,934:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:49:45,962:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:49:45,981:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:49:45,998:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:49:46,010:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:49:46,021:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:49:46,032:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:49:46,048:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:49:46,059:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:49:46,068:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:49:46,084:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:49:46,099:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:49:46,109:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:49:46,118:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:49:46,132:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:49:46,141:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:49:46,151:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:49:46,163:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:49:46,172:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:49:46,184:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:49:46,196:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:49:46,206:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:49:46,217:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:49:46,230:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:49:46,241:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:49:46,252:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:49:46,263:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:49:46,274:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:49:46,283:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:49:46,296:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:49:46,305:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:49:46,316:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:49:46,325:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:49:46,334:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:49:46,345:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:49:46,355:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:49:46,365:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:49:46,376:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:49:46,390:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:49:46,401:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:49:46,415:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:49:46,431:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:49:46,439:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:49:46,455:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:49:46,466:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:49:46,478:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:49:46,492:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:52:52,361:INFO:PyCaret Supervised Module
2020-10-28 11:52:52,363:INFO:ML Usecase: regression
2020-10-28 11:52:52,363:INFO:version 2.2
2020-10-28 11:52:52,363:INFO:Initializing setup()
2020-10-28 11:52:52,363:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:52:52,363:INFO:Checking environment
2020-10-28 11:52:52,364:INFO:python_version: 3.8.3
2020-10-28 11:52:52,364:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:52:52,364:INFO:machine: x86_64
2020-10-28 11:52:52,390:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:52:52,391:INFO:Memory: svmem(total=8589934592, available=1088921600, percent=87.3, used=3130593280, free=88440832, active=1003409408, inactive=955305984, wired=2127183872)
2020-10-28 11:52:52,391:INFO:Physical Core: 4
2020-10-28 11:52:52,391:INFO:Logical Core: 8
2020-10-28 11:52:52,391:INFO:Checking libraries
2020-10-28 11:52:52,391:INFO:pd==1.0.5
2020-10-28 11:52:52,392:INFO:numpy==1.18.5
2020-10-28 11:52:52,392:INFO:sklearn==0.23.2
2020-10-28 11:52:53,166:INFO:xgboost==1.2.0
2020-10-28 11:52:53,166:INFO:lightgbm==2.3.1
2020-10-28 11:52:53,262:INFO:catboost==0.24.1
2020-10-28 11:52:54,506:INFO:mlflow==1.11.0
2020-10-28 11:52:54,507:INFO:Checking Exceptions
2020-10-28 11:52:54,507:INFO:Declaring global variables
2020-10-28 11:52:54,507:INFO:USI: 832c
2020-10-28 11:52:54,507:INFO:pycaret_globals: {'master_model_container', 'y_train', '_all_models_internal', 'X_train', 'fold_shuffle_param', 'pycaret_globals', 'html_param', 'imputation_classifier', 'create_model_container', 'X', 'iterative_imputation_iters_param', 'X_test', 'stratify_param', 'experiment__', 'transform_target_param', 'log_plots_param', 'transform_target_method_param', '_ml_usecase', 'data_before_preprocess', 'fix_imbalance_param', 'prep_pipe', 'fold_param', 'logging_param', 'exp_name_log', '_all_models', 'target_param', 'n_jobs_param', '_internal_pipeline', 'gpu_param', 'seed', '_gpu_n_jobs_param', 'fold_groups_param', '_all_metrics', 'fix_imbalance_method_param', 'USI', 'y_test', 'y', 'fold_generator', 'imputation_regressor', 'display_container'}
2020-10-28 11:52:54,507:INFO:Preparing display monitor
2020-10-28 11:52:54,507:INFO:Preparing display monitor
2020-10-28 11:52:54,533:INFO:Importing libraries
2020-10-28 11:52:54,534:INFO:Copying data for preprocessing
2020-10-28 11:52:54,551:INFO:Declaring preprocessing parameters
2020-10-28 11:52:54,556:INFO:Setting up iterative imputation
2020-10-28 11:52:55,121:INFO:Creating preprocessing pipeline
2020-10-28 11:52:55,132:INFO:Preprocessing pipeline created successfully
2020-10-28 11:52:55,133:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:52:55,133:INFO:Creating global containers
2020-10-28 11:52:55,134:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:52:55,288:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:52:56,829:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:52:57,655:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:52:57,986:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:52:58,313:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:52:58,528:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:52:58,911:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:52:59,301:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:52:59,596:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:52:59,997:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:53:00,295:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:53:00,861:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:53:01,446:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:53:01,922:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:53:02,448:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:53:02,773:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:53:03,214:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:53:03,603:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:53:03,982:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:53:04,342:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:53:04,660:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:53:05,252:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:53:05,832:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:53:06,516:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:53:07,174:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:53:07,682:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:53:08,058:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:53:08,565:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:53:08,945:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:53:09,378:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:53:09,747:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:53:10,485:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:53:11,873:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:53:12,384:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:53:13,017:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:53:13,281:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:53:13,649:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:53:13,934:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:53:14,071:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:53:14,197:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:53:14,342:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:53:14,735:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:53:14,835:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:53:14,959:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:53:15,183:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:53:15,487:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:53:15,678:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:53:15,817:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:53:15,920:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:53:16,128:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:53:20,866:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:53:20,874:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:53:20,883:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:53:20,894:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:53:20,903:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:53:20,912:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:53:20,921:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:53:20,930:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:53:20,939:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:53:20,948:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:53:20,957:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:53:20,965:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:53:20,974:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:53:20,982:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:53:20,990:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:53:20,998:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:53:21,006:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:53:21,014:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:53:21,022:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:53:21,033:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:53:21,042:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:53:21,050:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:53:21,058:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:53:21,066:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:53:21,073:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:53:21,081:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:53:21,089:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:53:21,098:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:53:21,105:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:53:21,113:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:53:21,121:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:53:21,130:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:53:21,137:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:53:21,146:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:53:21,154:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:53:21,162:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:53:21,170:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:53:21,178:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:53:21,186:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:53:21,195:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:53:21,202:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:53:21,211:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:53:21,218:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:53:21,227:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:53:21,235:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:53:21,244:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:53:21,252:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:53:21,260:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:53:21,268:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:53:21,276:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:53:21,368:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:53:21,377:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:53:21,385:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:53:21,396:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:53:21,407:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:53:21,418:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:53:21,427:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:53:21,437:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:53:21,447:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:53:21,455:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:53:21,465:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:53:21,474:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:53:21,482:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:53:21,490:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:53:21,498:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:53:21,505:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:53:21,514:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:53:21,522:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:53:21,530:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:53:21,538:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:53:21,548:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:53:21,556:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:53:21,564:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:53:21,573:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:53:21,583:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:53:21,592:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:53:21,601:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:53:21,609:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:53:21,617:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:53:21,625:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:53:21,634:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:53:21,643:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:53:21,651:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:53:21,660:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:53:21,667:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:53:21,676:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:53:21,685:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:53:21,695:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:53:21,704:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:53:21,715:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:53:21,729:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:53:21,737:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:53:21,747:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:53:21,755:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:53:21,766:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:53:21,775:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:53:21,785:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:53:21,795:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:53:21,803:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:53:21,814:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:53:22,257:INFO:Creating grid variables
2020-10-28 11:53:22,331:INFO:Logging experiment in MLFlow
2020-10-28 11:53:22,344:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:53:22,351:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:53:22,528:INFO:SubProcess save_model() called ==================================
2020-10-28 11:53:22,563:INFO:Initializing save_model()
2020-10-28 11:53:22,563:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:53:22,563:INFO:Adding model into prep_pipe
2020-10-28 11:57:17,253:INFO:PyCaret Supervised Module
2020-10-28 11:57:17,254:INFO:ML Usecase: regression
2020-10-28 11:57:17,254:INFO:version 2.2
2020-10-28 11:57:17,254:INFO:Initializing setup()
2020-10-28 11:57:17,255:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=catboost, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=catboost, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:57:17,255:INFO:Checking environment
2020-10-28 11:57:17,255:INFO:python_version: 3.8.3
2020-10-28 11:57:17,255:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:57:17,255:INFO:machine: x86_64
2020-10-28 11:57:17,255:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:57:17,257:INFO:Memory: svmem(total=8589934592, available=2994348032, percent=65.1, used=3992842240, free=1136869376, active=1861222400, inactive=1556504576, wired=2131619840)
2020-10-28 11:57:17,258:INFO:Physical Core: 4
2020-10-28 11:57:17,258:INFO:Logical Core: 8
2020-10-28 11:57:17,258:INFO:Checking libraries
2020-10-28 11:57:17,258:INFO:pd==1.0.5
2020-10-28 11:57:17,258:INFO:numpy==1.18.5
2020-10-28 11:57:17,258:INFO:sklearn==0.23.2
2020-10-28 11:57:17,258:INFO:xgboost==1.2.0
2020-10-28 11:57:17,259:INFO:lightgbm==2.3.1
2020-10-28 11:57:17,259:INFO:catboost==0.24.1
2020-10-28 11:57:17,259:INFO:mlflow==1.11.0
2020-10-28 11:57:17,259:INFO:Checking Exceptions
2020-10-28 11:57:17,265:INFO:Declaring global variables
2020-10-28 11:57:17,266:INFO:USI: a157
2020-10-28 11:57:17,266:INFO:pycaret_globals: {'master_model_container', 'y_train', '_all_models_internal', 'X_train', 'fold_shuffle_param', 'pycaret_globals', 'html_param', 'imputation_classifier', 'create_model_container', 'X', 'iterative_imputation_iters_param', 'X_test', 'stratify_param', 'experiment__', 'transform_target_param', 'log_plots_param', 'transform_target_method_param', '_ml_usecase', 'data_before_preprocess', 'fix_imbalance_param', 'prep_pipe', 'fold_param', 'logging_param', 'exp_name_log', '_all_models', 'target_param', 'n_jobs_param', '_internal_pipeline', 'gpu_param', 'seed', '_gpu_n_jobs_param', 'fold_groups_param', '_all_metrics', 'fix_imbalance_method_param', 'USI', 'y_test', 'y', 'fold_generator', 'imputation_regressor', 'display_container'}
2020-10-28 11:57:17,266:INFO:Preparing display monitor
2020-10-28 11:57:17,266:INFO:Preparing display monitor
2020-10-28 11:57:17,327:INFO:Importing libraries
2020-10-28 11:57:17,328:INFO:Copying data for preprocessing
2020-10-28 11:57:17,340:INFO:Declaring preprocessing parameters
2020-10-28 11:57:17,343:INFO:Setting up iterative imputation
2020-10-28 11:57:17,725:INFO:Creating preprocessing pipeline
2020-10-28 11:57:17,737:INFO:Preprocessing pipeline created successfully
2020-10-28 11:57:17,737:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:57:17,737:INFO:Creating global containers
2020-10-28 11:57:17,738:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:57:17,810:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:57:19,742:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:57:20,806:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:57:21,791:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:57:22,759:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:57:23,741:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:57:24,698:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:57:25,688:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:57:26,645:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:57:27,585:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:57:28,436:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:57:29,550:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:57:30,748:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:57:31,878:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:57:33,016:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:57:34,332:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:57:35,968:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:57:37,116:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:57:38,293:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:57:39,595:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:57:40,731:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:57:41,977:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:57:43,154:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:57:44,608:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:57:45,949:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:57:47,891:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:57:49,739:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:57:51,039:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:57:52,151:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:57:53,293:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:57:54,391:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:57:55,522:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:57:56,581:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:57:57,631:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:57:58,689:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:57:59,822:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:58:00,871:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:58:01,921:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:58:02,976:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:58:04,044:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:58:05,066:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:58:06,240:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:58:07,366:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:58:08,637:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:58:09,694:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:58:10,877:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:58:11,903:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:58:12,903:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:58:13,879:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:58:14,804:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:58:17,438:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:58:17,444:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:58:17,451:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:58:17,458:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:58:17,465:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:58:17,472:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:58:17,479:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:58:17,486:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:58:17,493:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:58:17,500:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:58:17,506:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:58:17,513:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:58:17,519:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:58:17,525:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:58:17,532:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:58:17,539:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:58:17,545:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:58:17,551:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:58:17,557:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:58:17,564:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:58:17,570:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:58:17,577:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:58:17,583:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:58:17,589:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:58:17,596:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:58:17,602:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:58:17,608:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:58:17,613:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:58:17,618:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:58:17,623:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:58:17,628:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:58:17,633:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:58:17,637:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:58:17,642:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:58:17,647:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:58:17,652:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:58:17,657:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:58:17,662:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:58:17,667:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:58:17,671:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:58:17,676:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:58:17,681:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:58:17,686:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:58:17,691:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:58:17,696:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:58:17,701:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:58:17,706:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:58:17,711:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:58:17,716:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:58:17,720:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:58:17,773:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:58:17,778:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:58:17,784:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:58:17,789:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:58:17,795:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:58:17,800:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:58:17,805:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:58:17,811:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:58:17,816:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:58:17,821:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:58:17,827:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:58:17,832:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:58:17,837:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:58:17,842:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:58:17,847:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:58:17,852:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:58:17,856:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:58:17,861:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:58:17,866:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:58:17,871:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:58:17,876:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:58:17,881:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:58:17,886:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:58:17,891:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:58:17,896:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:58:17,900:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:58:17,905:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:58:17,910:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:58:17,916:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:58:17,921:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:58:17,925:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:58:17,930:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:58:17,935:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:58:17,940:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:58:17,945:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:58:17,950:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:58:17,955:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:58:17,959:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:58:17,965:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:58:17,970:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:58:17,974:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:58:17,979:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:58:17,984:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:58:17,989:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:58:17,994:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:58:17,998:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:58:18,003:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:58:18,008:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:58:18,013:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:58:18,018:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:58:18,276:INFO:Creating grid variables
2020-10-28 11:58:18,312:INFO:Logging experiment in MLFlow
2020-10-28 11:58:18,318:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:58:18,319:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:58:18,357:INFO:SubProcess save_model() called ==================================
2020-10-28 11:58:18,371:INFO:Initializing save_model()
2020-10-28 11:58:18,371:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:58:18,371:INFO:Adding model into prep_pipe
2020-10-28 11:58:53,354:INFO:PyCaret Supervised Module
2020-10-28 11:58:53,355:INFO:ML Usecase: regression
2020-10-28 11:58:53,355:INFO:version 2.2
2020-10-28 11:58:53,355:INFO:Initializing setup()
2020-10-28 11:58:53,355:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=knn, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=knn, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:58:53,355:INFO:Checking environment
2020-10-28 11:58:53,355:INFO:python_version: 3.8.3
2020-10-28 11:58:53,355:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:58:53,355:INFO:machine: x86_64
2020-10-28 11:58:53,355:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:58:53,355:INFO:Memory: svmem(total=8589934592, available=2519535616, percent=70.7, used=4696014848, free=35225600, active=2528493568, inactive=2064662528, wired=2167521280)
2020-10-28 11:58:53,355:INFO:Physical Core: 4
2020-10-28 11:58:53,355:INFO:Logical Core: 8
2020-10-28 11:58:53,355:INFO:Checking libraries
2020-10-28 11:58:53,355:INFO:pd==1.0.5
2020-10-28 11:58:53,355:INFO:numpy==1.18.5
2020-10-28 11:58:53,355:INFO:sklearn==0.23.2
2020-10-28 11:58:53,356:INFO:xgboost==1.2.0
2020-10-28 11:58:53,356:INFO:lightgbm==2.3.1
2020-10-28 11:58:53,356:INFO:catboost==0.24.1
2020-10-28 11:58:53,356:INFO:mlflow==1.11.0
2020-10-28 11:58:53,356:INFO:Checking Exceptions
2020-10-28 11:58:53,356:INFO:Declaring global variables
2020-10-28 11:58:53,356:INFO:USI: b142
2020-10-28 11:58:53,356:INFO:pycaret_globals: {'master_model_container', 'y_train', '_all_models_internal', 'X_train', 'fold_shuffle_param', 'pycaret_globals', 'html_param', 'imputation_classifier', 'create_model_container', 'X', 'iterative_imputation_iters_param', 'X_test', 'stratify_param', 'experiment__', 'transform_target_param', 'log_plots_param', 'transform_target_method_param', '_ml_usecase', 'data_before_preprocess', 'fix_imbalance_param', 'prep_pipe', 'fold_param', 'logging_param', 'exp_name_log', '_all_models', 'target_param', 'n_jobs_param', '_internal_pipeline', 'gpu_param', 'seed', '_gpu_n_jobs_param', 'fold_groups_param', '_all_metrics', 'fix_imbalance_method_param', 'USI', 'y_test', 'y', 'fold_generator', 'imputation_regressor', 'display_container'}
2020-10-28 11:58:53,356:INFO:Preparing display monitor
2020-10-28 11:58:53,356:INFO:Preparing display monitor
2020-10-28 11:58:53,367:INFO:Importing libraries
2020-10-28 11:58:53,367:INFO:Copying data for preprocessing
2020-10-28 11:58:53,373:INFO:Declaring preprocessing parameters
2020-10-28 11:58:53,374:INFO:Setting up iterative imputation
2020-10-28 11:58:53,622:INFO:Creating preprocessing pipeline
2020-10-28 11:58:53,628:INFO:Preprocessing pipeline created successfully
2020-10-28 11:58:53,628:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:58:53,629:INFO:Creating global containers
2020-10-28 11:58:53,629:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:58:53,687:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:58:53,704:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:58:53,716:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:58:53,730:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:58:53,742:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:58:53,756:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:58:53,767:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:58:53,779:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:58:53,791:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:58:53,804:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:58:53,816:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:58:53,829:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:58:53,845:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:58:53,865:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:58:53,905:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:58:53,919:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:58:53,935:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:58:53,948:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:58:53,965:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:58:53,981:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:58:53,999:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:58:54,013:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:58:54,026:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:58:54,037:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:58:54,048:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:58:54,060:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:58:54,072:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:58:54,083:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:58:54,094:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:58:54,106:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:58:54,117:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:58:54,127:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:58:54,138:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:58:54,148:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:58:54,160:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:58:54,172:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:58:54,183:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:58:54,194:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:58:54,207:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:58:54,219:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:58:54,232:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:58:54,245:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:58:54,257:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:58:54,269:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:58:54,298:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:58:54,333:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:58:54,354:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:58:54,374:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:58:54,390:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:58:54,406:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:58:57,434:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:58:57,443:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:58:57,452:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:58:57,462:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:58:57,471:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:58:57,481:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:58:57,491:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:58:57,500:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:58:57,510:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:58:57,520:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:58:57,530:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:58:57,538:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:58:57,547:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:58:57,557:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:58:57,567:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:58:57,577:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:58:57,586:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:58:57,596:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:58:57,605:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:58:57,615:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:58:57,623:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:58:57,631:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:58:57,639:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:58:57,647:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:58:57,655:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:58:57,662:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:58:57,670:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:58:57,678:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:58:57,685:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:58:57,693:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:58:57,702:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:58:57,708:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:58:57,716:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:58:57,724:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:58:57,732:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:58:57,740:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:58:57,748:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:58:57,755:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:58:57,764:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:58:57,772:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:58:57,780:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:58:57,786:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:58:57,793:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:58:57,802:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:58:57,809:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:58:57,818:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:58:57,825:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:58:57,833:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:58:57,842:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:58:57,850:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:58:57,900:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:58:57,907:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:58:57,915:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:58:57,923:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:58:57,931:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:58:57,939:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:58:57,947:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:58:57,955:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:58:57,963:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:58:57,971:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:58:57,979:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:58:57,985:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:58:57,994:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:58:58,002:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:58:58,010:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:58:58,017:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:58:58,025:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:58:58,033:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:58:58,041:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:58:58,049:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:58:58,058:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:58:58,064:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:58:58,073:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:58:58,080:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:58:58,088:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:58:58,095:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:58:58,104:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:58:58,111:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:58:58,119:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:58:58,127:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:58:58,135:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:58:58,142:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:58:58,150:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:58:58,158:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:58:58,166:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:58:58,174:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:58:58,182:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:58:58,191:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:58:58,199:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:58:58,208:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:58:58,215:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:58:58,224:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:58:58,231:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:58:58,239:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:58:58,246:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:58:58,254:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:58:58,261:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:58:58,269:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:58:58,277:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:58:58,285:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:58:58,551:INFO:Creating grid variables
2020-10-28 11:58:58,587:INFO:Logging experiment in MLFlow
2020-10-28 11:58:58,589:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:58:58,589:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:58:58,624:INFO:SubProcess save_model() called ==================================
2020-10-28 11:58:58,647:INFO:Initializing save_model()
2020-10-28 11:58:58,647:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:58:58,647:INFO:Adding model into prep_pipe
2020-10-28 11:59:27,873:INFO:PyCaret Supervised Module
2020-10-28 11:59:27,873:INFO:ML Usecase: regression
2020-10-28 11:59:27,873:INFO:version 2.2
2020-10-28 11:59:27,873:INFO:Initializing setup()
2020-10-28 11:59:27,874:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=knn, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=knn, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, display=None)
2020-10-28 11:59:27,874:INFO:Checking environment
2020-10-28 11:59:27,874:INFO:python_version: 3.8.3
2020-10-28 11:59:27,874:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:59:27,874:INFO:machine: x86_64
2020-10-28 11:59:27,874:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:59:27,874:INFO:Memory: svmem(total=8589934592, available=2563092480, percent=70.2, used=4680273920, free=30466048, active=2537865216, inactive=2174496768, wired=2142408704)
2020-10-28 11:59:27,874:INFO:Physical Core: 4
2020-10-28 11:59:27,874:INFO:Logical Core: 8
2020-10-28 11:59:27,874:INFO:Checking libraries
2020-10-28 11:59:27,874:INFO:pd==1.0.5
2020-10-28 11:59:27,874:INFO:numpy==1.18.5
2020-10-28 11:59:27,874:INFO:sklearn==0.23.2
2020-10-28 11:59:27,875:INFO:xgboost==1.2.0
2020-10-28 11:59:27,875:INFO:lightgbm==2.3.1
2020-10-28 11:59:27,875:INFO:catboost==0.24.1
2020-10-28 11:59:27,875:INFO:mlflow==1.11.0
2020-10-28 11:59:27,876:INFO:Checking Exceptions
2020-10-28 11:59:27,876:INFO:Declaring global variables
2020-10-28 11:59:27,876:INFO:USI: 0128
2020-10-28 11:59:27,876:INFO:pycaret_globals: {'master_model_container', 'y_train', '_all_models_internal', 'X_train', 'fold_shuffle_param', 'pycaret_globals', 'html_param', 'imputation_classifier', 'create_model_container', 'X', 'iterative_imputation_iters_param', 'X_test', 'stratify_param', 'experiment__', 'transform_target_param', 'log_plots_param', 'transform_target_method_param', '_ml_usecase', 'data_before_preprocess', 'fix_imbalance_param', 'prep_pipe', 'fold_param', 'logging_param', 'exp_name_log', '_all_models', 'target_param', 'n_jobs_param', '_internal_pipeline', 'gpu_param', 'seed', '_gpu_n_jobs_param', 'fold_groups_param', '_all_metrics', 'fix_imbalance_method_param', 'USI', 'y_test', 'y', 'fold_generator', 'imputation_regressor', 'display_container'}
2020-10-28 11:59:27,876:INFO:Preparing display monitor
2020-10-28 11:59:27,876:INFO:Preparing display monitor
2020-10-28 11:59:27,888:INFO:Importing libraries
2020-10-28 11:59:27,888:INFO:Copying data for preprocessing
2020-10-28 11:59:27,894:INFO:Declaring preprocessing parameters
2020-10-28 11:59:27,895:INFO:Setting up iterative imputation
2020-10-28 11:59:28,139:INFO:Creating preprocessing pipeline
2020-10-28 11:59:28,145:INFO:Preprocessing pipeline created successfully
2020-10-28 11:59:28,145:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:59:28,145:INFO:Creating global containers
2020-10-28 11:59:28,146:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:59:29,994:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:59:30,005:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:59:30,017:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:59:30,029:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:59:30,040:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:59:30,051:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:59:30,064:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:59:30,075:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:59:30,086:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:59:30,098:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:59:30,110:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:59:30,120:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:59:30,131:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:59:30,142:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:59:30,153:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:59:30,164:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:59:30,175:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:59:30,187:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:59:30,198:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:59:30,209:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:59:30,220:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:59:30,231:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:59:30,243:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:59:30,255:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:59:30,266:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:59:30,278:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:59:30,289:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:59:30,299:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:59:30,311:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:59:30,322:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:59:30,334:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:59:30,344:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:59:30,355:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:59:30,365:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:59:30,377:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:59:30,388:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:59:30,399:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:59:30,411:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:59:30,422:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:59:30,434:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:59:30,445:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:59:30,455:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:59:30,466:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:59:30,477:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:59:30,489:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:59:30,501:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:59:30,513:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:59:30,524:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:59:30,537:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:59:30,548:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:59:30,633:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:59:30,640:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:59:30,649:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:59:30,658:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:59:30,668:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:59:30,678:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:59:30,688:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:59:30,697:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:59:30,707:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:59:30,716:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:59:30,725:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:59:30,734:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:59:30,743:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:59:30,752:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:59:30,761:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:59:30,770:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:59:30,778:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:59:30,787:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:59:30,795:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:59:30,804:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:59:30,813:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:59:30,819:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:59:30,826:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:59:30,834:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:59:30,842:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:59:30,850:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:59:30,857:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:59:30,866:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:59:30,874:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:59:30,882:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:59:30,890:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:59:30,896:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:59:30,904:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:59:30,911:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:59:30,919:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:59:30,926:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:59:30,934:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:59:30,942:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:59:30,950:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:59:30,958:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:59:30,965:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:59:30,972:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:59:30,979:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:59:30,987:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:59:30,994:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:59:31,002:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:59:31,009:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:59:31,018:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:59:31,025:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:59:31,033:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:59:31,068:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:59:31,076:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:59:31,083:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:59:31,091:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:59:31,099:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:59:31,107:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:59:31,115:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:59:31,123:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:59:31,131:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:59:31,139:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:59:31,147:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:59:31,154:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:59:31,161:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:59:31,169:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:59:31,177:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:59:31,185:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:59:31,192:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:59:31,201:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:59:31,209:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:59:31,217:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:59:31,225:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:59:31,232:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:59:31,240:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:59:31,249:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:59:31,257:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:59:31,267:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:59:31,274:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:59:31,283:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:59:31,291:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:59:31,299:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:59:31,308:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:59:31,316:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:59:31,325:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:59:31,335:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:59:31,343:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:59:31,352:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:59:31,360:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:59:31,369:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:59:31,377:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:59:31,386:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:59:31,394:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:59:31,401:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:59:31,409:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:59:31,418:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:59:31,426:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:59:31,434:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:59:31,442:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:59:31,451:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:59:31,458:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:59:31,467:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:59:31,716:INFO:Creating grid variables
2020-10-28 11:59:31,750:INFO:create_model_container: 0
2020-10-28 11:59:31,750:INFO:master_model_container: 0
2020-10-28 11:59:31,750:INFO:display_container: 0
2020-10-28 11:59:31,757:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actualv...
                                                  target='actualvalue')),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='actualvalue')),
                ('fix_perfect', Remove_100(target='actualvalue')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-28 11:59:31,758:INFO:setup() succesfully completed......................................
2020-10-28 11:59:48,193:INFO:PyCaret Supervised Module
2020-10-28 11:59:48,193:INFO:ML Usecase: regression
2020-10-28 11:59:48,193:INFO:version 2.2
2020-10-28 11:59:48,193:INFO:Initializing setup()
2020-10-28 11:59:48,194:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=reg_fcr_experiments, log_plots=['residuals', 'error', 'feature'], log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 11:59:48,194:INFO:Checking environment
2020-10-28 11:59:48,194:INFO:python_version: 3.8.3
2020-10-28 11:59:48,194:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 11:59:48,194:INFO:machine: x86_64
2020-10-28 11:59:48,194:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 11:59:48,194:INFO:Memory: svmem(total=8589934592, available=2579365888, percent=70.0, used=4680216576, free=15360000, active=2566320128, inactive=2292035584, wired=2113896448)
2020-10-28 11:59:48,194:INFO:Physical Core: 4
2020-10-28 11:59:48,194:INFO:Logical Core: 8
2020-10-28 11:59:48,194:INFO:Checking libraries
2020-10-28 11:59:48,194:INFO:pd==1.0.5
2020-10-28 11:59:48,194:INFO:numpy==1.18.5
2020-10-28 11:59:48,194:INFO:sklearn==0.23.2
2020-10-28 11:59:48,194:INFO:xgboost==1.2.0
2020-10-28 11:59:48,194:INFO:lightgbm==2.3.1
2020-10-28 11:59:48,195:INFO:catboost==0.24.1
2020-10-28 11:59:48,195:INFO:mlflow==1.11.0
2020-10-28 11:59:48,195:INFO:Checking Exceptions
2020-10-28 11:59:48,195:INFO:Declaring global variables
2020-10-28 11:59:48,195:INFO:USI: 32fe
2020-10-28 11:59:48,195:INFO:pycaret_globals: {'master_model_container', 'y_train', '_all_models_internal', 'X_train', 'fold_shuffle_param', 'pycaret_globals', 'html_param', 'imputation_classifier', 'create_model_container', 'X', 'iterative_imputation_iters_param', 'X_test', 'stratify_param', 'experiment__', 'transform_target_param', 'log_plots_param', 'transform_target_method_param', '_ml_usecase', 'data_before_preprocess', 'fix_imbalance_param', 'prep_pipe', 'fold_param', 'logging_param', 'exp_name_log', '_all_models', 'target_param', 'n_jobs_param', '_internal_pipeline', 'gpu_param', 'seed', '_gpu_n_jobs_param', 'fold_groups_param', '_all_metrics', 'fix_imbalance_method_param', 'USI', 'y_test', 'y', 'fold_generator', 'imputation_regressor', 'display_container'}
2020-10-28 11:59:48,195:INFO:Preparing display monitor
2020-10-28 11:59:48,195:INFO:Preparing display monitor
2020-10-28 11:59:48,206:INFO:Importing libraries
2020-10-28 11:59:48,207:INFO:Copying data for preprocessing
2020-10-28 11:59:48,213:INFO:Declaring preprocessing parameters
2020-10-28 11:59:48,214:INFO:Setting up iterative imputation
2020-10-28 11:59:48,475:INFO:Creating preprocessing pipeline
2020-10-28 11:59:48,481:INFO:Preprocessing pipeline created successfully
2020-10-28 11:59:48,481:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 11:59:48,481:INFO:Creating global containers
2020-10-28 11:59:48,482:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 11:59:48,542:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:59:49,057:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:59:49,417:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:59:49,919:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:59:50,060:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:59:50,085:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:59:50,110:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:59:50,133:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:59:50,157:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:59:50,180:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:59:50,201:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:59:50,232:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:59:50,275:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:59:50,301:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:59:50,326:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:59:50,353:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:59:50,377:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:59:50,399:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:59:50,424:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:59:50,445:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:59:50,467:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:59:50,495:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:59:50,528:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:59:50,555:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:59:50,581:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:59:50,604:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:59:50,628:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:59:50,651:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:59:50,676:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:59:50,698:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:59:50,719:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:59:50,746:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:59:50,774:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:59:50,800:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:59:50,826:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:59:50,850:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:59:50,874:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:59:50,898:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:59:50,920:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:59:50,942:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:59:50,965:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:59:50,992:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:59:51,022:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:59:51,069:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:59:51,119:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:59:51,150:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:59:51,175:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:59:51,199:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:59:51,224:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:59:51,245:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:59:52,414:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:59:52,420:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:59:52,426:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:59:52,432:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:59:52,438:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:59:52,444:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:59:52,450:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:59:52,457:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:59:52,463:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:59:52,470:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:59:52,476:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:59:52,482:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:59:52,487:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:59:52,493:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:59:52,499:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:59:52,505:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:59:52,510:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:59:52,516:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:59:52,522:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:59:52,528:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:59:52,533:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:59:52,539:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:59:52,545:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:59:52,550:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:59:52,557:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:59:52,562:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:59:52,568:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:59:52,574:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:59:52,579:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:59:52,585:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:59:52,590:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:59:52,596:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:59:52,601:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:59:52,607:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:59:52,612:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:59:52,618:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:59:52,623:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:59:52,629:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:59:52,634:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:59:52,639:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:59:52,645:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:59:52,650:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:59:52,656:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:59:52,661:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:59:52,667:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:59:52,672:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:59:52,678:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:59:52,683:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:59:52,688:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:59:52,694:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:59:52,754:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 11:59:52,760:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 11:59:52,767:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 11:59:52,773:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 11:59:52,779:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 11:59:52,785:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 11:59:52,791:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 11:59:52,797:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 11:59:52,804:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 11:59:52,810:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 11:59:52,817:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 11:59:52,823:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 11:59:52,828:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 11:59:52,833:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 11:59:52,839:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 11:59:52,844:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 11:59:52,850:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 11:59:52,856:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 11:59:52,861:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 11:59:52,867:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 11:59:52,873:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 11:59:52,878:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 11:59:52,883:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 11:59:52,889:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 11:59:52,894:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 11:59:52,900:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 11:59:52,906:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 11:59:52,911:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 11:59:52,917:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 11:59:52,923:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 11:59:52,928:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 11:59:52,933:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 11:59:52,939:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 11:59:52,944:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 11:59:52,949:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 11:59:52,955:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 11:59:52,961:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 11:59:52,967:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 11:59:52,972:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 11:59:52,978:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 11:59:52,983:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 11:59:52,989:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 11:59:52,994:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 11:59:53,000:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 11:59:53,006:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 11:59:53,011:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 11:59:53,017:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 11:59:53,023:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 11:59:53,028:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 11:59:53,034:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 11:59:53,339:INFO:Creating grid variables
2020-10-28 11:59:53,393:INFO:Logging experiment in MLFlow
2020-10-28 11:59:53,395:WARNING:Couldn't create mlflow experiment. Exception:
2020-10-28 11:59:53,396:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 1663, in setup
    mlflow.create_experiment(exp_name_log)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/fluent.py", line 365, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/client.py", line 184, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/tracking/_tracking_service/client.py", line 142, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 288, in create_experiment
    self._validate_experiment_name(name)
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/mlflow/store/tracking/file_store.py", line 281, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'reg_fcr_experiments' already exists.

2020-10-28 11:59:53,428:INFO:SubProcess save_model() called ==================================
2020-10-28 11:59:53,455:INFO:Initializing save_model()
2020-10-28 11:59:53,455:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=False)
2020-10-28 11:59:53,455:INFO:Adding model into prep_pipe
2020-10-28 12:00:11,044:INFO:PyCaret Supervised Module
2020-10-28 12:00:11,044:INFO:ML Usecase: regression
2020-10-28 12:00:11,045:INFO:version 2.2
2020-10-28 12:00:11,045:INFO:Initializing setup()
2020-10-28 12:00:11,045:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 12:00:11,045:INFO:Checking environment
2020-10-28 12:00:11,045:INFO:python_version: 3.8.3
2020-10-28 12:00:11,045:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 12:00:11,045:INFO:machine: x86_64
2020-10-28 12:00:11,045:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 12:00:11,045:INFO:Memory: svmem(total=8589934592, available=2586222592, percent=69.9, used=4673609728, free=22454272, active=2568114176, inactive=2371891200, wired=2105495552)
2020-10-28 12:00:11,045:INFO:Physical Core: 4
2020-10-28 12:00:11,046:INFO:Logical Core: 8
2020-10-28 12:00:11,046:INFO:Checking libraries
2020-10-28 12:00:11,046:INFO:pd==1.0.5
2020-10-28 12:00:11,046:INFO:numpy==1.18.5
2020-10-28 12:00:11,046:INFO:sklearn==0.23.2
2020-10-28 12:00:11,046:INFO:xgboost==1.2.0
2020-10-28 12:00:11,046:INFO:lightgbm==2.3.1
2020-10-28 12:00:11,046:INFO:catboost==0.24.1
2020-10-28 12:00:11,046:INFO:mlflow==1.11.0
2020-10-28 12:00:11,047:INFO:Checking Exceptions
2020-10-28 12:00:11,047:INFO:Declaring global variables
2020-10-28 12:00:11,047:INFO:USI: 64df
2020-10-28 12:00:11,047:INFO:pycaret_globals: {'master_model_container', 'y_train', '_all_models_internal', 'X_train', 'fold_shuffle_param', 'pycaret_globals', 'html_param', 'imputation_classifier', 'create_model_container', 'X', 'iterative_imputation_iters_param', 'X_test', 'stratify_param', 'experiment__', 'transform_target_param', 'log_plots_param', 'transform_target_method_param', '_ml_usecase', 'data_before_preprocess', 'fix_imbalance_param', 'prep_pipe', 'fold_param', 'logging_param', 'exp_name_log', '_all_models', 'target_param', 'n_jobs_param', '_internal_pipeline', 'gpu_param', 'seed', '_gpu_n_jobs_param', 'fold_groups_param', '_all_metrics', 'fix_imbalance_method_param', 'USI', 'y_test', 'y', 'fold_generator', 'imputation_regressor', 'display_container'}
2020-10-28 12:00:11,047:INFO:Preparing display monitor
2020-10-28 12:00:11,047:INFO:Preparing display monitor
2020-10-28 12:00:11,059:INFO:Importing libraries
2020-10-28 12:00:11,060:INFO:Copying data for preprocessing
2020-10-28 12:00:11,067:INFO:Declaring preprocessing parameters
2020-10-28 12:00:11,068:INFO:Setting up iterative imputation
2020-10-28 12:00:11,348:INFO:Creating preprocessing pipeline
2020-10-28 12:00:11,355:INFO:Preprocessing pipeline created successfully
2020-10-28 12:00:11,356:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 12:00:11,356:INFO:Creating global containers
2020-10-28 12:00:11,356:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 12:00:11,412:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 12:00:11,740:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 12:00:12,270:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 12:00:12,401:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 12:00:12,468:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 12:00:12,498:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 12:00:12,649:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 12:00:12,919:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 12:00:12,985:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 12:00:13,037:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 12:00:13,078:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 12:00:13,136:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 12:00:13,216:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 12:00:13,302:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 12:00:13,334:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 12:00:13,361:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 12:00:13,385:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 12:00:13,412:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 12:00:13,437:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 12:00:13,463:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 12:00:13,485:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 12:00:13,518:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 12:00:13,552:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 12:00:13,636:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 12:00:13,717:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 12:00:13,763:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 12:00:13,789:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 12:00:13,817:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 12:00:13,844:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 12:00:13,867:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 12:00:13,893:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 12:00:13,927:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 12:00:13,959:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 12:00:13,991:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 12:00:14,021:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 12:00:14,048:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 12:00:14,073:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 12:00:14,100:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 12:00:14,126:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 12:00:14,151:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 12:00:14,176:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 12:00:14,207:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 12:00:14,238:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 12:00:14,268:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 12:00:14,297:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 12:00:14,324:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 12:00:14,351:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 12:00:14,411:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 12:00:14,471:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 12:00:14,520:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 12:00:16,280:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 12:00:16,286:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 12:00:16,292:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 12:00:16,299:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 12:00:16,305:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 12:00:16,312:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 12:00:16,319:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 12:00:16,325:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 12:00:16,331:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 12:00:16,338:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 12:00:16,345:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 12:00:16,351:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 12:00:16,357:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 12:00:16,363:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 12:00:16,370:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 12:00:16,376:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 12:00:16,382:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 12:00:16,388:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 12:00:16,394:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 12:00:16,400:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 12:00:16,406:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 12:00:16,412:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 12:00:16,418:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 12:00:16,424:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 12:00:16,430:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 12:00:16,436:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 12:00:16,442:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 12:00:16,448:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 12:00:16,455:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 12:00:16,462:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 12:00:16,468:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 12:00:16,474:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 12:00:16,480:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 12:00:16,486:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 12:00:16,493:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 12:00:16,499:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 12:00:16,506:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 12:00:16,512:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 12:00:16,518:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 12:00:16,525:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 12:00:16,531:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 12:00:16,537:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 12:00:16,544:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 12:00:16,551:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 12:00:16,557:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 12:00:16,564:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 12:00:16,570:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 12:00:16,576:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 12:00:16,583:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 12:00:16,589:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 12:00:16,658:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 12:00:16,665:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 12:00:16,672:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 12:00:16,678:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 12:00:16,685:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 12:00:16,692:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 12:00:16,699:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 12:00:16,706:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 12:00:16,714:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 12:00:16,721:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 12:00:16,728:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 12:00:16,735:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 12:00:16,742:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 12:00:16,748:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 12:00:16,754:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 12:00:16,761:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 12:00:16,768:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 12:00:16,774:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 12:00:16,781:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 12:00:16,787:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 12:00:16,794:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 12:00:16,800:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 12:00:16,807:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 12:00:16,814:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 12:00:16,820:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 12:00:16,827:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 12:00:16,833:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 12:00:16,839:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 12:00:16,846:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 12:00:16,852:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 12:00:16,859:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 12:00:16,866:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 12:00:16,872:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 12:00:16,879:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 12:00:16,885:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 12:00:16,891:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 12:00:16,897:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 12:00:16,903:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 12:00:16,909:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 12:00:16,915:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 12:00:16,921:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 12:00:16,927:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 12:00:16,933:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 12:00:16,939:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 12:00:16,944:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 12:00:16,950:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 12:00:16,956:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 12:00:16,962:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 12:00:16,968:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 12:00:16,975:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 12:00:17,293:INFO:Creating grid variables
2020-10-28 12:00:17,326:INFO:create_model_container: 0
2020-10-28 12:00:17,326:INFO:master_model_container: 0
2020-10-28 12:00:17,326:INFO:display_container: 0
2020-10-28 12:00:17,337:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 12:00:17,338:INFO:setup() succesfully completed......................................
2020-10-28 12:01:20,843:INFO:PyCaret Supervised Module
2020-10-28 12:01:20,844:INFO:ML Usecase: regression
2020-10-28 12:01:20,844:INFO:version 2.2
2020-10-28 12:01:20,844:INFO:Initializing setup()
2020-10-28 12:01:20,844:INFO:setup(target=actualvalue, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.75, test_data=None, preprocess=True, imputation_type=iterative, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=mode, categorical_iterative_imputer=rf, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=('Sunday', 'Monday', 'Saturday', 'Thursday', 'Tuesday', 'Wednesday', 'Friday', 'ncoachingid', 'csat', 'total coaching improved', 'weekbefore'), numeric_imputation=mean, numeric_iterative_imputer=rf, date_features=None, ignore_features=['employeeid', 'Unnamed: 0'], normalize=False, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=5, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=True, feature_selection_threshold=0.4, feature_selection_method=boruta, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=False, experiment_name=reg_fcr_experiments, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, display=None)
2020-10-28 12:01:20,844:INFO:Checking environment
2020-10-28 12:01:20,844:INFO:python_version: 3.8.3
2020-10-28 12:01:20,844:INFO:python_build: ('default', 'Jul  2 2020 11:26:31')
2020-10-28 12:01:20,844:INFO:machine: x86_64
2020-10-28 12:01:20,844:INFO:platform: macOS-10.15.7-x86_64-i386-64bit
2020-10-28 12:01:20,844:INFO:Memory: svmem(total=8589934592, available=2605346816, percent=69.7, used=4712693760, free=15056896, active=2594070528, inactive=2562211840, wired=2118623232)
2020-10-28 12:01:20,844:INFO:Physical Core: 4
2020-10-28 12:01:20,844:INFO:Logical Core: 8
2020-10-28 12:01:20,844:INFO:Checking libraries
2020-10-28 12:01:20,844:INFO:pd==1.0.5
2020-10-28 12:01:20,844:INFO:numpy==1.18.5
2020-10-28 12:01:20,844:INFO:sklearn==0.23.2
2020-10-28 12:01:20,844:INFO:xgboost==1.2.0
2020-10-28 12:01:20,844:INFO:lightgbm==2.3.1
2020-10-28 12:01:20,844:INFO:catboost==0.24.1
2020-10-28 12:01:20,844:INFO:mlflow==1.11.0
2020-10-28 12:01:20,845:INFO:Checking Exceptions
2020-10-28 12:01:20,845:INFO:Declaring global variables
2020-10-28 12:01:20,845:INFO:USI: 6e6c
2020-10-28 12:01:20,845:INFO:pycaret_globals: {'master_model_container', 'y_train', '_all_models_internal', 'X_train', 'fold_shuffle_param', 'pycaret_globals', 'html_param', 'imputation_classifier', 'create_model_container', 'X', 'iterative_imputation_iters_param', 'X_test', 'stratify_param', 'experiment__', 'transform_target_param', 'log_plots_param', 'transform_target_method_param', '_ml_usecase', 'data_before_preprocess', 'fix_imbalance_param', 'prep_pipe', 'fold_param', 'logging_param', 'exp_name_log', '_all_models', 'target_param', 'n_jobs_param', '_internal_pipeline', 'gpu_param', 'seed', '_gpu_n_jobs_param', 'fold_groups_param', '_all_metrics', 'fix_imbalance_method_param', 'USI', 'y_test', 'y', 'fold_generator', 'imputation_regressor', 'display_container'}
2020-10-28 12:01:20,845:INFO:Preparing display monitor
2020-10-28 12:01:20,845:INFO:Preparing display monitor
2020-10-28 12:01:20,856:INFO:Importing libraries
2020-10-28 12:01:20,856:INFO:Copying data for preprocessing
2020-10-28 12:01:20,862:INFO:Declaring preprocessing parameters
2020-10-28 12:01:20,863:INFO:Setting up iterative imputation
2020-10-28 12:01:21,079:INFO:Creating preprocessing pipeline
2020-10-28 12:01:21,085:INFO:Preprocessing pipeline created successfully
2020-10-28 12:01:21,085:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-28 12:01:21,085:INFO:Creating global containers
2020-10-28 12:01:21,085:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-28 12:01:21,175:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 12:01:21,345:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 12:01:21,523:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 12:01:21,697:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 12:01:21,864:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 12:01:22,026:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 12:01:22,292:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 12:01:22,486:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 12:01:22,673:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 12:01:22,802:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 12:01:22,977:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 12:01:23,131:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 12:01:23,276:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 12:01:23,408:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 12:01:23,540:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 12:01:23,670:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 12:01:23,798:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 12:01:23,926:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 12:01:24,055:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 12:01:24,183:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 12:01:24,313:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 12:01:24,443:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 12:01:24,605:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 12:01:24,754:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 12:01:24,896:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 12:01:25,042:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 12:01:25,184:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 12:01:25,321:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 12:01:25,453:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 12:01:25,581:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 12:01:25,709:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 12:01:25,840:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 12:01:25,974:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 12:01:26,105:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 12:01:26,236:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 12:01:26,372:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 12:01:26,501:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 12:01:26,629:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 12:01:26,760:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 12:01:26,889:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 12:01:27,020:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 12:01:27,149:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 12:01:27,281:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 12:01:27,416:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 12:01:27,545:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 12:01:27,677:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 12:01:27,806:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 12:01:27,932:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 12:01:28,062:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 12:01:28,190:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 12:01:29,528:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 12:01:29,545:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 12:01:29,563:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 12:01:29,581:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 12:01:29,600:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 12:01:29,619:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 12:01:29,639:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 12:01:29,657:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 12:01:29,677:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 12:01:29,696:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 12:01:29,713:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 12:01:29,726:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 12:01:29,739:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 12:01:29,754:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 12:01:29,767:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 12:01:29,782:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 12:01:29,796:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 12:01:29,810:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 12:01:29,824:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 12:01:29,838:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 12:01:29,852:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 12:01:29,865:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 12:01:29,878:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 12:01:29,892:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 12:01:29,907:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 12:01:29,922:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 12:01:29,936:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 12:01:29,950:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 12:01:29,964:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 12:01:29,979:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 12:01:29,992:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 12:01:30,006:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 12:01:30,019:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 12:01:30,034:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 12:01:30,048:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 12:01:30,062:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 12:01:30,076:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 12:01:30,092:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 12:01:30,116:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 12:01:30,132:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 12:01:30,147:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 12:01:30,159:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 12:01:30,173:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 12:01:30,187:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 12:01:30,201:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 12:01:30,222:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 12:01:30,244:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 12:01:30,262:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 12:01:30,276:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 12:01:30,291:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 12:01:30,356:INFO:Iterative Imputation: 1 cycle | weekbefore
2020-10-28 12:01:30,369:INFO:Iterative Imputation: 1 cycle | Tuesday
2020-10-28 12:01:30,384:INFO:Iterative Imputation: 1 cycle | Friday
2020-10-28 12:01:30,399:INFO:Iterative Imputation: 1 cycle | Monday
2020-10-28 12:01:30,414:INFO:Iterative Imputation: 1 cycle | Wednesday
2020-10-28 12:01:30,429:INFO:Iterative Imputation: 1 cycle | Saturday
2020-10-28 12:01:30,444:INFO:Iterative Imputation: 1 cycle | ncoachingid
2020-10-28 12:01:30,458:INFO:Iterative Imputation: 1 cycle | Thursday
2020-10-28 12:01:30,474:INFO:Iterative Imputation: 1 cycle | Sunday
2020-10-28 12:01:30,491:INFO:Iterative Imputation: 1 cycle | total coaching improved
2020-10-28 12:01:30,507:INFO:Iterative Imputation: 2 cycle | weekbefore
2020-10-28 12:01:30,521:INFO:Iterative Imputation: 2 cycle | Tuesday
2020-10-28 12:01:30,535:INFO:Iterative Imputation: 2 cycle | Friday
2020-10-28 12:01:30,549:INFO:Iterative Imputation: 2 cycle | Monday
2020-10-28 12:01:30,563:INFO:Iterative Imputation: 2 cycle | Wednesday
2020-10-28 12:01:30,577:INFO:Iterative Imputation: 2 cycle | Saturday
2020-10-28 12:01:30,591:INFO:Iterative Imputation: 2 cycle | ncoachingid
2020-10-28 12:01:30,606:INFO:Iterative Imputation: 2 cycle | Thursday
2020-10-28 12:01:30,621:INFO:Iterative Imputation: 2 cycle | Sunday
2020-10-28 12:01:30,636:INFO:Iterative Imputation: 2 cycle | total coaching improved
2020-10-28 12:01:30,650:INFO:Iterative Imputation: 3 cycle | weekbefore
2020-10-28 12:01:30,664:INFO:Iterative Imputation: 3 cycle | Tuesday
2020-10-28 12:01:30,677:INFO:Iterative Imputation: 3 cycle | Friday
2020-10-28 12:01:30,691:INFO:Iterative Imputation: 3 cycle | Monday
2020-10-28 12:01:30,705:INFO:Iterative Imputation: 3 cycle | Wednesday
2020-10-28 12:01:30,722:INFO:Iterative Imputation: 3 cycle | Saturday
2020-10-28 12:01:30,741:INFO:Iterative Imputation: 3 cycle | ncoachingid
2020-10-28 12:01:30,758:INFO:Iterative Imputation: 3 cycle | Thursday
2020-10-28 12:01:30,772:INFO:Iterative Imputation: 3 cycle | Sunday
2020-10-28 12:01:30,786:INFO:Iterative Imputation: 3 cycle | total coaching improved
2020-10-28 12:01:30,800:INFO:Iterative Imputation: 4 cycle | weekbefore
2020-10-28 12:01:30,814:INFO:Iterative Imputation: 4 cycle | Tuesday
2020-10-28 12:01:30,828:INFO:Iterative Imputation: 4 cycle | Friday
2020-10-28 12:01:30,842:INFO:Iterative Imputation: 4 cycle | Monday
2020-10-28 12:01:30,866:INFO:Iterative Imputation: 4 cycle | Wednesday
2020-10-28 12:01:30,885:INFO:Iterative Imputation: 4 cycle | Saturday
2020-10-28 12:01:30,901:INFO:Iterative Imputation: 4 cycle | ncoachingid
2020-10-28 12:01:30,915:INFO:Iterative Imputation: 4 cycle | Thursday
2020-10-28 12:01:30,929:INFO:Iterative Imputation: 4 cycle | Sunday
2020-10-28 12:01:30,943:INFO:Iterative Imputation: 4 cycle | total coaching improved
2020-10-28 12:01:30,959:INFO:Iterative Imputation: 5 cycle | weekbefore
2020-10-28 12:01:30,972:INFO:Iterative Imputation: 5 cycle | Tuesday
2020-10-28 12:01:30,986:INFO:Iterative Imputation: 5 cycle | Friday
2020-10-28 12:01:31,000:INFO:Iterative Imputation: 5 cycle | Monday
2020-10-28 12:01:31,015:INFO:Iterative Imputation: 5 cycle | Wednesday
2020-10-28 12:01:31,029:INFO:Iterative Imputation: 5 cycle | Saturday
2020-10-28 12:01:31,043:INFO:Iterative Imputation: 5 cycle | ncoachingid
2020-10-28 12:01:31,058:INFO:Iterative Imputation: 5 cycle | Thursday
2020-10-28 12:01:31,072:INFO:Iterative Imputation: 5 cycle | Sunday
2020-10-28 12:01:31,087:INFO:Iterative Imputation: 5 cycle | total coaching improved
2020-10-28 12:01:31,363:INFO:Creating grid variables
2020-10-28 12:01:31,394:INFO:create_model_container: 0
2020-10-28 12:01:31,394:INFO:master_model_container: 0
2020-10-28 12:01:31,394:INFO:display_container: 0
2020-10-28 12:01:31,406:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False,
                                      features_todrop=['employeeid',
                                                       'Unnamed: 0'],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=('Sunday', 'Monday',
                                                          'Saturday',
                                                          'Thursday', 'Tuesday',
                                                          'Wednesday', 'Friday',
                                                          'ncoachingid', 'csat',
                                                          'total coaching '
                                                          'improved',
                                                          'weekbefore'),
                                      target='actual...
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='actualvalue',
                                       threshold=0.9)),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             random_state=786, subclass='binary',
                             target='actualvalue',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2020-10-28 12:01:31,406:INFO:setup() succesfully completed......................................
2020-10-28 12:01:57,378:INFO:Initializing compare_models()
2020-10-28 12:01:57,378:INFO:compare_models(include=None, fold=5, round=4, cross_validation=True, sort=RMSE, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=['ransac', 'knn'])
2020-10-28 12:01:57,378:INFO:Checking exceptions
2020-10-28 12:01:57,379:INFO:Preparing display monitor
2020-10-28 12:01:57,379:INFO:Preparing display monitor
2020-10-28 12:01:57,404:INFO:Initializing Linear Regression
2020-10-28 12:01:57,404:INFO:Total runtime is 3.226598103841146e-06 minutes
2020-10-28 12:01:57,411:INFO:SubProcess create_model() called ==================================
2020-10-28 12:01:57,412:INFO:Initializing create_model()
2020-10-28 12:01:57,412:INFO:create_model(estimator=lr, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:01:57,412:INFO:Checking exceptions
2020-10-28 12:01:57,412:INFO:Importing libraries
2020-10-28 12:01:57,412:INFO:Copying training dataset
2020-10-28 12:01:57,413:INFO:Defining folds
2020-10-28 12:01:57,413:INFO:Declaring metric variables
2020-10-28 12:01:57,421:INFO:Importing untrained model
2020-10-28 12:01:57,431:INFO:Linear Regression Imported succesfully
2020-10-28 12:01:57,447:INFO:Starting cross validation
2020-10-28 12:01:57,447:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:01,758:INFO:Calculating mean and std
2020-10-28 12:02:01,762:INFO:Creating metrics dataframe
2020-10-28 12:02:01,770:INFO:Uploading results into container
2020-10-28 12:02:01,771:INFO:Uploading model into container now
2020-10-28 12:02:01,771:INFO:create_model_container: 1
2020-10-28 12:02:01,771:INFO:master_model_container: 1
2020-10-28 12:02:01,771:INFO:display_container: 1
2020-10-28 12:02:01,772:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-28 12:02:01,772:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:01,975:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:01,975:INFO:Creating metrics dataframe
2020-10-28 12:02:01,990:INFO:Initializing Lasso Regression
2020-10-28 12:02:01,991:INFO:Total runtime is 0.07644216219584148 minutes
2020-10-28 12:02:02,001:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:02,002:INFO:Initializing create_model()
2020-10-28 12:02:02,002:INFO:create_model(estimator=lasso, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:02,002:INFO:Checking exceptions
2020-10-28 12:02:02,002:INFO:Importing libraries
2020-10-28 12:02:02,002:INFO:Copying training dataset
2020-10-28 12:02:02,003:INFO:Defining folds
2020-10-28 12:02:02,003:INFO:Declaring metric variables
2020-10-28 12:02:02,013:INFO:Importing untrained model
2020-10-28 12:02:02,020:INFO:Lasso Regression Imported succesfully
2020-10-28 12:02:02,038:INFO:Starting cross validation
2020-10-28 12:02:02,039:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:04,329:INFO:Calculating mean and std
2020-10-28 12:02:04,330:INFO:Creating metrics dataframe
2020-10-28 12:02:04,336:INFO:Uploading results into container
2020-10-28 12:02:04,336:INFO:Uploading model into container now
2020-10-28 12:02:04,336:INFO:create_model_container: 2
2020-10-28 12:02:04,336:INFO:master_model_container: 2
2020-10-28 12:02:04,336:INFO:display_container: 1
2020-10-28 12:02:04,337:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=786,
      selection='cyclic', tol=0.0001, warm_start=False)
2020-10-28 12:02:04,337:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:04,493:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:04,493:INFO:Creating metrics dataframe
2020-10-28 12:02:04,509:INFO:Initializing Ridge Regression
2020-10-28 12:02:04,509:INFO:Total runtime is 0.11842192808787028 minutes
2020-10-28 12:02:04,516:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:04,517:INFO:Initializing create_model()
2020-10-28 12:02:04,517:INFO:create_model(estimator=ridge, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:04,517:INFO:Checking exceptions
2020-10-28 12:02:04,517:INFO:Importing libraries
2020-10-28 12:02:04,517:INFO:Copying training dataset
2020-10-28 12:02:04,518:INFO:Defining folds
2020-10-28 12:02:04,518:INFO:Declaring metric variables
2020-10-28 12:02:04,528:INFO:Importing untrained model
2020-10-28 12:02:04,536:INFO:Ridge Regression Imported succesfully
2020-10-28 12:02:04,554:INFO:Starting cross validation
2020-10-28 12:02:04,554:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:04,588:INFO:Calculating mean and std
2020-10-28 12:02:04,589:INFO:Creating metrics dataframe
2020-10-28 12:02:04,593:INFO:Uploading results into container
2020-10-28 12:02:04,593:INFO:Uploading model into container now
2020-10-28 12:02:04,593:INFO:create_model_container: 3
2020-10-28 12:02:04,594:INFO:master_model_container: 3
2020-10-28 12:02:04,594:INFO:display_container: 1
2020-10-28 12:02:04,594:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=786, solver='auto', tol=0.001)
2020-10-28 12:02:04,594:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:04,705:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:04,706:INFO:Creating metrics dataframe
2020-10-28 12:02:04,728:INFO:Initializing Elastic Net
2020-10-28 12:02:04,729:INFO:Total runtime is 0.12207576036453247 minutes
2020-10-28 12:02:04,737:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:04,738:INFO:Initializing create_model()
2020-10-28 12:02:04,738:INFO:create_model(estimator=en, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:04,738:INFO:Checking exceptions
2020-10-28 12:02:04,738:INFO:Importing libraries
2020-10-28 12:02:04,738:INFO:Copying training dataset
2020-10-28 12:02:04,740:INFO:Defining folds
2020-10-28 12:02:04,740:INFO:Declaring metric variables
2020-10-28 12:02:04,747:INFO:Importing untrained model
2020-10-28 12:02:04,759:INFO:Elastic Net Imported succesfully
2020-10-28 12:02:04,782:INFO:Starting cross validation
2020-10-28 12:02:04,783:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:04,816:INFO:Calculating mean and std
2020-10-28 12:02:04,817:INFO:Creating metrics dataframe
2020-10-28 12:02:04,822:INFO:Uploading results into container
2020-10-28 12:02:04,822:INFO:Uploading model into container now
2020-10-28 12:02:04,822:INFO:create_model_container: 4
2020-10-28 12:02:04,822:INFO:master_model_container: 4
2020-10-28 12:02:04,822:INFO:display_container: 1
2020-10-28 12:02:04,822:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=786, selection='cyclic', tol=0.0001, warm_start=False)
2020-10-28 12:02:04,823:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:04,993:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:04,993:INFO:Creating metrics dataframe
2020-10-28 12:02:05,051:INFO:Initializing Least Angle Regression
2020-10-28 12:02:05,051:INFO:Total runtime is 0.12745024760564166 minutes
2020-10-28 12:02:05,063:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:05,063:INFO:Initializing create_model()
2020-10-28 12:02:05,063:INFO:create_model(estimator=lar, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:05,064:INFO:Checking exceptions
2020-10-28 12:02:05,064:INFO:Importing libraries
2020-10-28 12:02:05,064:INFO:Copying training dataset
2020-10-28 12:02:05,065:INFO:Defining folds
2020-10-28 12:02:05,065:INFO:Declaring metric variables
2020-10-28 12:02:05,079:INFO:Importing untrained model
2020-10-28 12:02:05,092:INFO:Least Angle Regression Imported succesfully
2020-10-28 12:02:05,113:INFO:Starting cross validation
2020-10-28 12:02:05,114:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:05,158:INFO:Calculating mean and std
2020-10-28 12:02:05,160:INFO:Creating metrics dataframe
2020-10-28 12:02:05,168:INFO:Uploading results into container
2020-10-28 12:02:05,169:INFO:Uploading model into container now
2020-10-28 12:02:05,170:INFO:create_model_container: 5
2020-10-28 12:02:05,170:INFO:master_model_container: 5
2020-10-28 12:02:05,170:INFO:display_container: 1
2020-10-28 12:02:05,171:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=786, verbose=False)
2020-10-28 12:02:05,171:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:05,313:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:05,313:INFO:Creating metrics dataframe
2020-10-28 12:02:05,343:INFO:Initializing Lasso Least Angle Regression
2020-10-28 12:02:05,343:INFO:Total runtime is 0.13231716553370157 minutes
2020-10-28 12:02:05,357:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:05,357:INFO:Initializing create_model()
2020-10-28 12:02:05,357:INFO:create_model(estimator=llar, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:05,357:INFO:Checking exceptions
2020-10-28 12:02:05,357:INFO:Importing libraries
2020-10-28 12:02:05,357:INFO:Copying training dataset
2020-10-28 12:02:05,358:INFO:Defining folds
2020-10-28 12:02:05,358:INFO:Declaring metric variables
2020-10-28 12:02:05,366:INFO:Importing untrained model
2020-10-28 12:02:05,374:INFO:Lasso Least Angle Regression Imported succesfully
2020-10-28 12:02:05,391:INFO:Starting cross validation
2020-10-28 12:02:05,392:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:05,427:INFO:Calculating mean and std
2020-10-28 12:02:05,428:INFO:Creating metrics dataframe
2020-10-28 12:02:05,437:INFO:Uploading results into container
2020-10-28 12:02:05,437:INFO:Uploading model into container now
2020-10-28 12:02:05,437:INFO:create_model_container: 6
2020-10-28 12:02:05,437:INFO:master_model_container: 6
2020-10-28 12:02:05,437:INFO:display_container: 1
2020-10-28 12:02:05,438:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=786, verbose=False)
2020-10-28 12:02:05,438:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:05,568:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:05,568:INFO:Creating metrics dataframe
2020-10-28 12:02:05,600:INFO:Initializing Orthogonal Matching Pursuit
2020-10-28 12:02:05,600:INFO:Total runtime is 0.13660682837168375 minutes
2020-10-28 12:02:05,609:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:05,610:INFO:Initializing create_model()
2020-10-28 12:02:05,610:INFO:create_model(estimator=omp, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:05,610:INFO:Checking exceptions
2020-10-28 12:02:05,610:INFO:Importing libraries
2020-10-28 12:02:05,610:INFO:Copying training dataset
2020-10-28 12:02:05,612:INFO:Defining folds
2020-10-28 12:02:05,612:INFO:Declaring metric variables
2020-10-28 12:02:05,622:INFO:Importing untrained model
2020-10-28 12:02:05,632:INFO:Orthogonal Matching Pursuit Imported succesfully
2020-10-28 12:02:05,652:INFO:Starting cross validation
2020-10-28 12:02:05,653:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:05,683:INFO:Calculating mean and std
2020-10-28 12:02:05,685:INFO:Creating metrics dataframe
2020-10-28 12:02:05,691:INFO:Uploading results into container
2020-10-28 12:02:05,692:INFO:Uploading model into container now
2020-10-28 12:02:05,692:INFO:create_model_container: 7
2020-10-28 12:02:05,692:INFO:master_model_container: 7
2020-10-28 12:02:05,692:INFO:display_container: 1
2020-10-28 12:02:05,692:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2020-10-28 12:02:05,692:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:05,848:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:05,848:INFO:Creating metrics dataframe
2020-10-28 12:02:05,879:INFO:Initializing Bayesian Ridge
2020-10-28 12:02:05,879:INFO:Total runtime is 0.14125041166941324 minutes
2020-10-28 12:02:05,888:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:05,888:INFO:Initializing create_model()
2020-10-28 12:02:05,888:INFO:create_model(estimator=br, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:05,888:INFO:Checking exceptions
2020-10-28 12:02:05,889:INFO:Importing libraries
2020-10-28 12:02:05,889:INFO:Copying training dataset
2020-10-28 12:02:05,889:INFO:Defining folds
2020-10-28 12:02:05,890:INFO:Declaring metric variables
2020-10-28 12:02:05,897:INFO:Importing untrained model
2020-10-28 12:02:05,905:INFO:Bayesian Ridge Imported succesfully
2020-10-28 12:02:05,923:INFO:Starting cross validation
2020-10-28 12:02:05,924:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:05,963:INFO:Calculating mean and std
2020-10-28 12:02:05,964:INFO:Creating metrics dataframe
2020-10-28 12:02:05,968:INFO:Uploading results into container
2020-10-28 12:02:05,968:INFO:Uploading model into container now
2020-10-28 12:02:05,969:INFO:create_model_container: 8
2020-10-28 12:02:05,969:INFO:master_model_container: 8
2020-10-28 12:02:05,969:INFO:display_container: 1
2020-10-28 12:02:05,969:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2020-10-28 12:02:05,969:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:06,078:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:06,078:INFO:Creating metrics dataframe
2020-10-28 12:02:06,110:INFO:Initializing Passive Aggressive Regressor
2020-10-28 12:02:06,110:INFO:Total runtime is 0.14510741233825683 minutes
2020-10-28 12:02:06,119:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:06,119:INFO:Initializing create_model()
2020-10-28 12:02:06,119:INFO:create_model(estimator=par, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:06,119:INFO:Checking exceptions
2020-10-28 12:02:06,120:INFO:Importing libraries
2020-10-28 12:02:06,120:INFO:Copying training dataset
2020-10-28 12:02:06,121:INFO:Defining folds
2020-10-28 12:02:06,121:INFO:Declaring metric variables
2020-10-28 12:02:06,129:INFO:Importing untrained model
2020-10-28 12:02:06,137:INFO:Passive Aggressive Regressor Imported succesfully
2020-10-28 12:02:06,153:INFO:Starting cross validation
2020-10-28 12:02:06,153:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:06,186:INFO:Calculating mean and std
2020-10-28 12:02:06,187:INFO:Creating metrics dataframe
2020-10-28 12:02:06,191:INFO:Uploading results into container
2020-10-28 12:02:06,191:INFO:Uploading model into container now
2020-10-28 12:02:06,191:INFO:create_model_container: 9
2020-10-28 12:02:06,191:INFO:master_model_container: 9
2020-10-28 12:02:06,192:INFO:display_container: 1
2020-10-28 12:02:06,192:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=786, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2020-10-28 12:02:06,192:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:06,303:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:06,303:INFO:Creating metrics dataframe
2020-10-28 12:02:06,338:INFO:Initializing Huber Regressor
2020-10-28 12:02:06,338:INFO:Total runtime is 0.14889516433080036 minutes
2020-10-28 12:02:06,352:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:06,352:INFO:Initializing create_model()
2020-10-28 12:02:06,353:INFO:create_model(estimator=huber, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:06,353:INFO:Checking exceptions
2020-10-28 12:02:06,353:INFO:Importing libraries
2020-10-28 12:02:06,353:INFO:Copying training dataset
2020-10-28 12:02:06,354:INFO:Defining folds
2020-10-28 12:02:06,354:INFO:Declaring metric variables
2020-10-28 12:02:06,371:INFO:Importing untrained model
2020-10-28 12:02:06,380:INFO:Huber Regressor Imported succesfully
2020-10-28 12:02:06,400:INFO:Starting cross validation
2020-10-28 12:02:06,401:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:06,501:INFO:Calculating mean and std
2020-10-28 12:02:06,503:INFO:Creating metrics dataframe
2020-10-28 12:02:06,508:INFO:Uploading results into container
2020-10-28 12:02:06,509:INFO:Uploading model into container now
2020-10-28 12:02:06,509:INFO:create_model_container: 10
2020-10-28 12:02:06,509:INFO:master_model_container: 10
2020-10-28 12:02:06,509:INFO:display_container: 1
2020-10-28 12:02:06,509:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2020-10-28 12:02:06,509:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:06,653:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:06,653:INFO:Creating metrics dataframe
2020-10-28 12:02:06,701:INFO:Initializing Decision Tree Regressor
2020-10-28 12:02:06,701:INFO:Total runtime is 0.15495498180389403 minutes
2020-10-28 12:02:06,715:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:06,715:INFO:Initializing create_model()
2020-10-28 12:02:06,715:INFO:create_model(estimator=dt, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:06,716:INFO:Checking exceptions
2020-10-28 12:02:06,716:INFO:Importing libraries
2020-10-28 12:02:06,716:INFO:Copying training dataset
2020-10-28 12:02:06,717:INFO:Defining folds
2020-10-28 12:02:06,717:INFO:Declaring metric variables
2020-10-28 12:02:06,730:INFO:Importing untrained model
2020-10-28 12:02:06,738:INFO:Decision Tree Regressor Imported succesfully
2020-10-28 12:02:06,758:INFO:Starting cross validation
2020-10-28 12:02:06,759:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:06,791:INFO:Calculating mean and std
2020-10-28 12:02:06,792:INFO:Creating metrics dataframe
2020-10-28 12:02:06,796:INFO:Uploading results into container
2020-10-28 12:02:06,796:INFO:Uploading model into container now
2020-10-28 12:02:06,796:INFO:create_model_container: 11
2020-10-28 12:02:06,796:INFO:master_model_container: 11
2020-10-28 12:02:06,796:INFO:display_container: 1
2020-10-28 12:02:06,796:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=786, splitter='best')
2020-10-28 12:02:06,796:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:06,906:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:06,906:INFO:Creating metrics dataframe
2020-10-28 12:02:06,947:INFO:Initializing Random Forest Regressor
2020-10-28 12:02:06,947:INFO:Total runtime is 0.15905406077702838 minutes
2020-10-28 12:02:06,961:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:06,962:INFO:Initializing create_model()
2020-10-28 12:02:06,962:INFO:create_model(estimator=rf, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:06,962:INFO:Checking exceptions
2020-10-28 12:02:06,962:INFO:Importing libraries
2020-10-28 12:02:06,962:INFO:Copying training dataset
2020-10-28 12:02:06,963:INFO:Defining folds
2020-10-28 12:02:06,963:INFO:Declaring metric variables
2020-10-28 12:02:06,971:INFO:Importing untrained model
2020-10-28 12:02:06,979:INFO:Random Forest Regressor Imported succesfully
2020-10-28 12:02:06,994:INFO:Starting cross validation
2020-10-28 12:02:06,995:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:07,443:INFO:Calculating mean and std
2020-10-28 12:02:07,444:INFO:Creating metrics dataframe
2020-10-28 12:02:07,449:INFO:Uploading results into container
2020-10-28 12:02:07,449:INFO:Uploading model into container now
2020-10-28 12:02:07,449:INFO:create_model_container: 12
2020-10-28 12:02:07,449:INFO:master_model_container: 12
2020-10-28 12:02:07,449:INFO:display_container: 1
2020-10-28 12:02:07,450:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False)
2020-10-28 12:02:07,450:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:07,598:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:07,599:INFO:Creating metrics dataframe
2020-10-28 12:02:07,658:INFO:Initializing Extra Trees Regressor
2020-10-28 12:02:07,658:INFO:Total runtime is 0.17090494632720946 minutes
2020-10-28 12:02:07,671:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:07,672:INFO:Initializing create_model()
2020-10-28 12:02:07,672:INFO:create_model(estimator=et, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:07,672:INFO:Checking exceptions
2020-10-28 12:02:07,672:INFO:Importing libraries
2020-10-28 12:02:07,672:INFO:Copying training dataset
2020-10-28 12:02:07,674:INFO:Defining folds
2020-10-28 12:02:07,674:INFO:Declaring metric variables
2020-10-28 12:02:07,686:INFO:Importing untrained model
2020-10-28 12:02:07,697:INFO:Extra Trees Regressor Imported succesfully
2020-10-28 12:02:07,716:INFO:Starting cross validation
2020-10-28 12:02:07,717:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:08,019:INFO:Calculating mean and std
2020-10-28 12:02:08,020:INFO:Creating metrics dataframe
2020-10-28 12:02:08,026:INFO:Uploading results into container
2020-10-28 12:02:08,027:INFO:Uploading model into container now
2020-10-28 12:02:08,027:INFO:create_model_container: 13
2020-10-28 12:02:08,027:INFO:master_model_container: 13
2020-10-28 12:02:08,027:INFO:display_container: 1
2020-10-28 12:02:08,027:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False)
2020-10-28 12:02:08,027:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:08,188:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:08,188:INFO:Creating metrics dataframe
2020-10-28 12:02:08,250:INFO:Initializing AdaBoost Regressor
2020-10-28 12:02:08,250:INFO:Total runtime is 0.1807734966278076 minutes
2020-10-28 12:02:08,261:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:08,262:INFO:Initializing create_model()
2020-10-28 12:02:08,262:INFO:create_model(estimator=ada, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:08,262:INFO:Checking exceptions
2020-10-28 12:02:08,262:INFO:Importing libraries
2020-10-28 12:02:08,262:INFO:Copying training dataset
2020-10-28 12:02:08,263:INFO:Defining folds
2020-10-28 12:02:08,263:INFO:Declaring metric variables
2020-10-28 12:02:08,275:INFO:Importing untrained model
2020-10-28 12:02:08,286:INFO:AdaBoost Regressor Imported succesfully
2020-10-28 12:02:08,305:INFO:Starting cross validation
2020-10-28 12:02:08,306:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:08,589:INFO:Calculating mean and std
2020-10-28 12:02:08,591:INFO:Creating metrics dataframe
2020-10-28 12:02:08,599:INFO:Uploading results into container
2020-10-28 12:02:08,599:INFO:Uploading model into container now
2020-10-28 12:02:08,599:INFO:create_model_container: 14
2020-10-28 12:02:08,599:INFO:master_model_container: 14
2020-10-28 12:02:08,599:INFO:display_container: 1
2020-10-28 12:02:08,600:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=786)
2020-10-28 12:02:08,600:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:08,727:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:08,727:INFO:Creating metrics dataframe
2020-10-28 12:02:08,800:INFO:Initializing Gradient Boosting Regressor
2020-10-28 12:02:08,800:INFO:Total runtime is 0.189931579430898 minutes
2020-10-28 12:02:08,815:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:08,815:INFO:Initializing create_model()
2020-10-28 12:02:08,815:INFO:create_model(estimator=gbr, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:08,816:INFO:Checking exceptions
2020-10-28 12:02:08,816:INFO:Importing libraries
2020-10-28 12:02:08,816:INFO:Copying training dataset
2020-10-28 12:02:08,817:INFO:Defining folds
2020-10-28 12:02:08,817:INFO:Declaring metric variables
2020-10-28 12:02:08,829:INFO:Importing untrained model
2020-10-28 12:02:08,838:INFO:Gradient Boosting Regressor Imported succesfully
2020-10-28 12:02:08,858:INFO:Starting cross validation
2020-10-28 12:02:08,859:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:08,989:INFO:Calculating mean and std
2020-10-28 12:02:08,990:INFO:Creating metrics dataframe
2020-10-28 12:02:08,995:INFO:Uploading results into container
2020-10-28 12:02:08,995:INFO:Uploading model into container now
2020-10-28 12:02:08,995:INFO:create_model_container: 15
2020-10-28 12:02:08,995:INFO:master_model_container: 15
2020-10-28 12:02:08,996:INFO:display_container: 1
2020-10-28 12:02:08,996:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-28 12:02:08,996:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:09,105:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:09,106:INFO:Creating metrics dataframe
2020-10-28 12:02:09,158:INFO:Initializing Extreme Gradient Boosting
2020-10-28 12:02:09,158:INFO:Total runtime is 0.19590262969334918 minutes
2020-10-28 12:02:09,169:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:09,169:INFO:Initializing create_model()
2020-10-28 12:02:09,169:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:09,169:INFO:Checking exceptions
2020-10-28 12:02:09,170:INFO:Importing libraries
2020-10-28 12:02:09,170:INFO:Copying training dataset
2020-10-28 12:02:09,171:INFO:Defining folds
2020-10-28 12:02:09,171:INFO:Declaring metric variables
2020-10-28 12:02:09,181:INFO:Importing untrained model
2020-10-28 12:02:09,190:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-28 12:02:09,208:INFO:Starting cross validation
2020-10-28 12:02:09,210:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:11,156:INFO:Calculating mean and std
2020-10-28 12:02:11,157:INFO:Creating metrics dataframe
2020-10-28 12:02:11,161:INFO:Uploading results into container
2020-10-28 12:02:11,161:INFO:Uploading model into container now
2020-10-28 12:02:11,162:INFO:create_model_container: 16
2020-10-28 12:02:11,162:INFO:master_model_container: 16
2020-10-28 12:02:11,162:INFO:display_container: 1
2020-10-28 12:02:11,163:INFO:XGBRegressor(base_score=None, booster='gbtree', colsample_bylevel=None,
             colsample_bynode=None, colsample_bytree=None, gamma=None,
             gpu_id=None, importance_type='gain', interaction_constraints=None,
             learning_rate=None, max_delta_step=None, max_depth=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             objective='reg:squarederror', random_state=786, reg_alpha=None,
             reg_lambda=None, scale_pos_weight=None, subsample=None,
             tree_method='auto', validate_parameters=None, verbosity=0)
2020-10-28 12:02:11,163:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:11,286:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:11,286:INFO:Creating metrics dataframe
2020-10-28 12:02:11,338:INFO:Initializing Light Gradient Boosting Machine
2020-10-28 12:02:11,338:INFO:Total runtime is 0.2322305123011271 minutes
2020-10-28 12:02:11,347:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:11,347:INFO:Initializing create_model()
2020-10-28 12:02:11,347:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:11,347:INFO:Checking exceptions
2020-10-28 12:02:11,348:INFO:Importing libraries
2020-10-28 12:02:11,348:INFO:Copying training dataset
2020-10-28 12:02:11,349:INFO:Defining folds
2020-10-28 12:02:11,349:INFO:Declaring metric variables
2020-10-28 12:02:11,356:INFO:Importing untrained model
2020-10-28 12:02:11,364:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-28 12:02:11,380:INFO:Starting cross validation
2020-10-28 12:02:11,381:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:11,504:INFO:Calculating mean and std
2020-10-28 12:02:11,505:INFO:Creating metrics dataframe
2020-10-28 12:02:11,514:INFO:Uploading results into container
2020-10-28 12:02:11,514:INFO:Uploading model into container now
2020-10-28 12:02:11,514:INFO:create_model_container: 17
2020-10-28 12:02:11,514:INFO:master_model_container: 17
2020-10-28 12:02:11,514:INFO:display_container: 1
2020-10-28 12:02:11,515:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=786, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-28 12:02:11,515:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:11,729:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:11,729:INFO:Creating metrics dataframe
2020-10-28 12:02:11,918:INFO:Initializing CatBoost Regressor
2020-10-28 12:02:11,919:INFO:Total runtime is 0.24190871318181353 minutes
2020-10-28 12:02:11,945:INFO:SubProcess create_model() called ==================================
2020-10-28 12:02:11,945:INFO:Initializing create_model()
2020-10-28 12:02:11,945:INFO:create_model(estimator=catboost, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f846c55e9d0>, kwargs={})
2020-10-28 12:02:11,945:INFO:Checking exceptions
2020-10-28 12:02:11,946:INFO:Importing libraries
2020-10-28 12:02:11,946:INFO:Copying training dataset
2020-10-28 12:02:11,949:INFO:Defining folds
2020-10-28 12:02:11,949:INFO:Declaring metric variables
2020-10-28 12:02:12,024:INFO:Importing untrained model
2020-10-28 12:02:12,038:INFO:CatBoost Regressor Imported succesfully
2020-10-28 12:02:12,062:INFO:Starting cross validation
2020-10-28 12:02:12,063:INFO:Cross validating with n_jobs=-1
2020-10-28 12:02:20,074:INFO:Calculating mean and std
2020-10-28 12:02:20,074:INFO:Creating metrics dataframe
2020-10-28 12:02:20,078:INFO:Uploading results into container
2020-10-28 12:02:20,078:INFO:Uploading model into container now
2020-10-28 12:02:20,078:INFO:create_model_container: 18
2020-10-28 12:02:20,078:INFO:master_model_container: 18
2020-10-28 12:02:20,078:INFO:display_container: 1
2020-10-28 12:02:20,078:INFO:<catboost.core.CatBoostRegressor object at 0x7f846d0f9310>
2020-10-28 12:02:20,078:INFO:create_model() succesfully completed......................................
2020-10-28 12:02:20,185:INFO:SubProcess create_model() end ==================================
2020-10-28 12:02:20,185:INFO:Creating metrics dataframe
2020-10-28 12:02:20,261:INFO:Initializing create_model()
2020-10-28 12:02:20,261:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-28 12:02:20,261:INFO:Checking exceptions
2020-10-28 12:02:20,261:INFO:Importing libraries
2020-10-28 12:02:20,261:INFO:Copying training dataset
2020-10-28 12:02:20,262:INFO:Defining folds
2020-10-28 12:02:20,262:INFO:Declaring metric variables
2020-10-28 12:02:20,262:INFO:Importing untrained model
2020-10-28 12:02:20,262:INFO:Declaring custom model
2020-10-28 12:02:20,263:INFO:Extra Trees Regressor Imported succesfully
2020-10-28 12:02:20,264:INFO:Cross validation set to False
2020-10-28 12:02:20,264:INFO:Fitting Model
2020-10-28 12:02:20,462:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False)
2020-10-28 12:02:20,462:INFO:create_models() succesfully completed......................................
2020-10-28 12:02:20,588:INFO:Initializing create_model()
2020-10-28 12:02:20,588:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f846d0f9310>, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-28 12:02:20,589:INFO:Checking exceptions
2020-10-28 12:02:20,590:INFO:Importing libraries
2020-10-28 12:02:20,590:INFO:Copying training dataset
2020-10-28 12:02:20,591:INFO:Defining folds
2020-10-28 12:02:20,591:INFO:Declaring metric variables
2020-10-28 12:02:20,591:INFO:Importing untrained model
2020-10-28 12:02:20,591:INFO:Declaring custom model
2020-10-28 12:02:20,592:INFO:CatBoost Regressor Imported succesfully
2020-10-28 12:02:20,592:INFO:Cross validation set to False
2020-10-28 12:02:20,592:INFO:Fitting Model
2020-10-28 12:02:23,835:INFO:<catboost.core.CatBoostRegressor object at 0x7f846d100760>
2020-10-28 12:02:23,835:INFO:create_models() succesfully completed......................................
2020-10-28 12:02:23,993:INFO:Initializing create_model()
2020-10-28 12:02:23,994:INFO:create_model(estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-28 12:02:23,994:INFO:Checking exceptions
2020-10-28 12:02:23,994:INFO:Importing libraries
2020-10-28 12:02:23,994:INFO:Copying training dataset
2020-10-28 12:02:23,994:INFO:Defining folds
2020-10-28 12:02:23,995:INFO:Declaring metric variables
2020-10-28 12:02:23,995:INFO:Importing untrained model
2020-10-28 12:02:23,995:INFO:Declaring custom model
2020-10-28 12:02:23,995:INFO:Random Forest Regressor Imported succesfully
2020-10-28 12:02:23,996:INFO:Cross validation set to False
2020-10-28 12:02:23,996:INFO:Fitting Model
2020-10-28 12:02:24,204:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False)
2020-10-28 12:02:24,204:INFO:create_models() succesfully completed......................................
2020-10-28 12:02:24,334:INFO:Initializing create_model()
2020-10-28 12:02:24,334:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-28 12:02:24,335:INFO:Checking exceptions
2020-10-28 12:02:24,335:INFO:Importing libraries
2020-10-28 12:02:24,335:INFO:Copying training dataset
2020-10-28 12:02:24,335:INFO:Defining folds
2020-10-28 12:02:24,336:INFO:Declaring metric variables
2020-10-28 12:02:24,336:INFO:Importing untrained model
2020-10-28 12:02:24,336:INFO:Declaring custom model
2020-10-28 12:02:24,336:INFO:Gradient Boosting Regressor Imported succesfully
2020-10-28 12:02:24,337:INFO:Cross validation set to False
2020-10-28 12:02:24,337:INFO:Fitting Model
2020-10-28 12:02:24,461:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-28 12:02:24,462:INFO:create_models() succesfully completed......................................
2020-10-28 12:02:24,605:INFO:Initializing create_model()
2020-10-28 12:02:24,605:INFO:create_model(estimator=XGBRegressor(base_score=None, booster='gbtree', colsample_bylevel=None,
             colsample_bynode=None, colsample_bytree=None, gamma=None,
             gpu_id=None, importance_type='gain', interaction_constraints=None,
             learning_rate=None, max_delta_step=None, max_depth=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             objective='reg:squarederror', random_state=786, reg_alpha=None,
             reg_lambda=None, scale_pos_weight=None, subsample=None,
             tree_method='auto', validate_parameters=None, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-28 12:02:24,605:INFO:Checking exceptions
2020-10-28 12:02:24,605:INFO:Importing libraries
2020-10-28 12:02:24,606:INFO:Copying training dataset
2020-10-28 12:02:24,606:INFO:Defining folds
2020-10-28 12:02:24,606:INFO:Declaring metric variables
2020-10-28 12:02:24,606:INFO:Importing untrained model
2020-10-28 12:02:24,607:INFO:Declaring custom model
2020-10-28 12:02:24,608:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-28 12:02:24,609:INFO:Cross validation set to False
2020-10-28 12:02:24,609:INFO:Fitting Model
2020-10-28 12:02:25,091:INFO:XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
             importance_type='gain', interaction_constraints='',
             learning_rate=0.300000012, max_delta_step=0, max_depth=6,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=-1, num_parallel_tree=1,
             objective='reg:squarederror', random_state=786, reg_alpha=0,
             reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
             validate_parameters=1, verbosity=0)
2020-10-28 12:02:25,092:INFO:create_models() succesfully completed......................................
2020-10-28 12:02:25,549:INFO:create_model_container: 18
2020-10-28 12:02:25,549:INFO:master_model_container: 18
2020-10-28 12:02:25,550:INFO:display_container: 1
2020-10-28 12:02:25,553:INFO:[ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), <catboost.core.CatBoostRegressor object at 0x7f846d100760>, RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False), GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
             importance_type='gain', interaction_constraints='',
             learning_rate=0.300000012, max_delta_step=0, max_depth=6,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=-1, num_parallel_tree=1,
             objective='reg:squarederror', random_state=786, reg_alpha=0,
             reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
             validate_parameters=1, verbosity=0)]
2020-10-28 12:02:25,553:INFO:compare_models() succesfully completed......................................
2020-10-28 12:08:48,240:INFO:Initializing tune_model()
2020-10-28 12:08:48,241:INFO:tune_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-28 12:08:48,242:INFO:Checking exceptions
2020-10-28 12:09:04,909:INFO:Initializing tune_model()
2020-10-28 12:09:04,909:INFO:tune_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-28 12:09:04,909:INFO:Checking exceptions
2020-10-28 12:10:02,092:INFO:Initializing tune_model()
2020-10-28 12:10:02,092:INFO:tune_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-28 12:10:02,093:INFO:Checking exceptions
2020-10-28 12:10:02,496:INFO:Preparing display monitor
2020-10-28 12:10:02,546:INFO:Copying training dataset
2020-10-28 12:10:02,548:INFO:Checking base model
2020-10-28 12:10:02,550:INFO:Base model : Extra Trees Regressor
2020-10-28 12:10:02,560:INFO:Declaring metric variables
2020-10-28 12:10:02,569:INFO:Defining Hyperparameters
2020-10-28 12:10:03,240:INFO:Tuning with n_jobs=-1
2020-10-28 12:10:03,242:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-28 12:16:21,212:INFO:best_params: {'actual_estimator__n_estimators': 229, 'actual_estimator__max_depth': 11, 'actual_estimator__min_samples_split': 3, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__max_features': 0.9396292741308205, 'actual_estimator__min_impurity_decrease': 2.3157474996111053e-08, 'actual_estimator__criterion': 'mse', 'actual_estimator__bootstrap': False}
2020-10-28 12:16:21,212:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-28 12:16:21,213:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-28 12:16:21,213:INFO:Random search completed
2020-10-28 12:16:21,213:INFO:SubProcess create_model() called ==================================
2020-10-28 12:16:21,214:INFO:Initializing create_model()
2020-10-28 12:16:21,214:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8469c59430>, kwargs={'n_estimators': 229, 'max_depth': 11, 'min_samples_split': 3, 'min_samples_leaf': 1, 'max_features': 0.9396292741308205, 'min_impurity_decrease': 2.3157474996111053e-08, 'criterion': 'mse', 'bootstrap': False})
2020-10-28 12:16:21,214:INFO:Checking exceptions
2020-10-28 12:16:21,214:INFO:Importing libraries
2020-10-28 12:16:21,214:INFO:Copying training dataset
2020-10-28 12:16:21,215:INFO:Defining folds
2020-10-28 12:16:21,215:INFO:Declaring metric variables
2020-10-28 12:16:21,222:INFO:Importing untrained model
2020-10-28 12:16:21,222:INFO:Declaring custom model
2020-10-28 12:16:21,229:INFO:Extra Trees Regressor Imported succesfully
2020-10-28 12:16:21,241:INFO:Starting cross validation
2020-10-28 12:16:21,242:INFO:Cross validating with n_jobs=-1
2020-10-28 12:16:27,272:INFO:Calculating mean and std
2020-10-28 12:16:27,277:INFO:Creating metrics dataframe
2020-10-28 12:16:27,307:INFO:Finalizing model
2020-10-28 12:16:27,828:INFO:Uploading results into container
2020-10-28 12:16:27,829:INFO:Uploading model into container now
2020-10-28 12:16:27,829:INFO:create_model_container: 19
2020-10-28 12:16:27,829:INFO:master_model_container: 19
2020-10-28 12:16:27,829:INFO:display_container: 2
2020-10-28 12:16:27,830:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=11, max_features=0.9396292741308205,
                    max_leaf_nodes=None, max_samples=None,
                    min_impurity_decrease=2.3157474996111053e-08,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=3, min_weight_fraction_leaf=0.0,
                    n_estimators=229, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False)
2020-10-28 12:16:27,830:INFO:create_model() succesfully completed......................................
2020-10-28 12:16:28,209:INFO:SubProcess create_model() end ==================================
2020-10-28 12:16:28,240:INFO:create_model_container: 19
2020-10-28 12:16:28,240:INFO:master_model_container: 19
2020-10-28 12:16:28,240:INFO:display_container: 2
2020-10-28 12:16:28,241:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=11, max_features=0.9396292741308205,
                    max_leaf_nodes=None, max_samples=None,
                    min_impurity_decrease=2.3157474996111053e-08,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=3, min_weight_fraction_leaf=0.0,
                    n_estimators=229, n_jobs=-1, oob_score=False,
                    random_state=786, verbose=0, warm_start=False)
2020-10-28 12:16:28,241:INFO:tune_model() succesfully completed......................................
2020-10-28 12:16:28,390:INFO:Initializing tune_model()
2020-10-28 12:16:28,390:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f846d100760>, fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-28 12:16:28,390:INFO:Checking exceptions
2020-10-28 12:16:28,391:INFO:Preparing display monitor
2020-10-28 12:16:28,414:INFO:Copying training dataset
2020-10-28 12:16:28,415:INFO:Checking base model
2020-10-28 12:16:28,416:INFO:Base model : CatBoost Regressor
2020-10-28 12:16:28,428:INFO:Declaring metric variables
2020-10-28 12:16:28,437:INFO:Defining Hyperparameters
2020-10-28 12:16:28,556:INFO:Tuning with n_jobs=-1
2020-10-28 12:16:28,558:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-28 12:36:15,854:INFO:best_params: {'actual_estimator__depth': 11, 'actual_estimator__n_estimators': 259, 'actual_estimator__random_strength': 0.47016464009886294, 'actual_estimator__l2_leaf_reg': 1}
2020-10-28 12:36:15,856:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-28 12:36:15,859:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-28 12:36:15,861:INFO:Random search completed
2020-10-28 12:36:15,861:INFO:SubProcess create_model() called ==================================
2020-10-28 12:36:15,862:INFO:Initializing create_model()
2020-10-28 12:36:15,863:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f8483fc11c0>, fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8483cbd1c0>, kwargs={'depth': 11, 'n_estimators': 259, 'random_strength': 0.47016464009886294, 'l2_leaf_reg': 1})
2020-10-28 12:36:15,863:INFO:Checking exceptions
2020-10-28 12:36:15,863:INFO:Importing libraries
2020-10-28 12:36:15,864:INFO:Copying training dataset
2020-10-28 12:36:15,865:INFO:Defining folds
2020-10-28 12:36:15,865:INFO:Declaring metric variables
2020-10-28 12:36:15,883:INFO:Importing untrained model
2020-10-28 12:36:15,883:INFO:Declaring custom model
2020-10-28 12:36:15,891:INFO:CatBoost Regressor Imported succesfully
2020-10-28 12:36:15,906:INFO:Starting cross validation
2020-10-28 12:36:15,907:INFO:Cross validating with n_jobs=-1
2020-10-28 12:36:47,894:INFO:Calculating mean and std
2020-10-28 12:36:47,898:INFO:Creating metrics dataframe
2020-10-28 12:36:47,923:INFO:Finalizing model
2020-10-28 12:36:57,733:INFO:Uploading results into container
2020-10-28 12:36:57,734:INFO:Uploading model into container now
2020-10-28 12:36:57,734:INFO:create_model_container: 20
2020-10-28 12:36:57,734:INFO:master_model_container: 20
2020-10-28 12:36:57,734:INFO:display_container: 3
2020-10-28 12:36:57,734:INFO:<catboost.core.CatBoostRegressor object at 0x7f8485964550>
2020-10-28 12:36:57,735:INFO:create_model() succesfully completed......................................
2020-10-28 12:36:58,106:INFO:SubProcess create_model() end ==================================
2020-10-28 12:36:58,132:INFO:create_model_container: 20
2020-10-28 12:36:58,132:INFO:master_model_container: 20
2020-10-28 12:36:58,132:INFO:display_container: 3
2020-10-28 12:36:58,132:INFO:<catboost.core.CatBoostRegressor object at 0x7f8485964550>
2020-10-28 12:36:58,133:INFO:tune_model() succesfully completed......................................
2020-10-28 12:36:58,267:INFO:Initializing tune_model()
2020-10-28 12:36:58,267:INFO:tune_model(estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-28 12:36:58,268:INFO:Checking exceptions
2020-10-28 12:36:58,268:INFO:Preparing display monitor
2020-10-28 12:36:58,290:INFO:Copying training dataset
2020-10-28 12:36:58,291:INFO:Checking base model
2020-10-28 12:36:58,292:INFO:Base model : Random Forest Regressor
2020-10-28 12:36:58,300:INFO:Declaring metric variables
2020-10-28 12:36:58,307:INFO:Defining Hyperparameters
2020-10-28 12:36:58,436:INFO:Tuning with n_jobs=-1
2020-10-28 12:36:58,441:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-28 12:41:14,730:INFO:best_params: {'actual_estimator__n_estimators': 214, 'actual_estimator__max_depth': 8, 'actual_estimator__min_impurity_decrease': 3.3926190054501776e-08, 'actual_estimator__max_features': 0.6268850361365287, 'actual_estimator__min_samples_split': 4, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__bootstrap': False, 'actual_estimator__criterion': 'mse'}
2020-10-28 12:41:14,731:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-28 12:41:14,731:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-28 12:41:14,732:INFO:Random search completed
2020-10-28 12:41:14,732:INFO:SubProcess create_model() called ==================================
2020-10-28 12:41:14,733:INFO:Initializing create_model()
2020-10-28 12:41:14,733:INFO:create_model(estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f84861de130>, kwargs={'n_estimators': 214, 'max_depth': 8, 'min_impurity_decrease': 3.3926190054501776e-08, 'max_features': 0.6268850361365287, 'min_samples_split': 4, 'min_samples_leaf': 2, 'bootstrap': False, 'criterion': 'mse'})
2020-10-28 12:41:14,734:INFO:Checking exceptions
2020-10-28 12:41:14,734:INFO:Importing libraries
2020-10-28 12:41:14,734:INFO:Copying training dataset
2020-10-28 12:41:14,735:INFO:Defining folds
2020-10-28 12:41:14,735:INFO:Declaring metric variables
2020-10-28 12:41:14,744:INFO:Importing untrained model
2020-10-28 12:41:14,745:INFO:Declaring custom model
2020-10-28 12:41:14,756:INFO:Random Forest Regressor Imported succesfully
2020-10-28 12:41:14,773:INFO:Starting cross validation
2020-10-28 12:41:14,774:INFO:Cross validating with n_jobs=-1
2020-10-28 12:41:20,510:INFO:Calculating mean and std
2020-10-28 12:41:20,518:INFO:Creating metrics dataframe
2020-10-28 12:41:20,547:INFO:Finalizing model
2020-10-28 12:41:20,913:INFO:Uploading results into container
2020-10-28 12:41:20,913:INFO:Uploading model into container now
2020-10-28 12:41:20,914:INFO:create_model_container: 21
2020-10-28 12:41:20,914:INFO:master_model_container: 21
2020-10-28 12:41:20,914:INFO:display_container: 4
2020-10-28 12:41:20,915:INFO:RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                      max_depth=8, max_features=0.6268850361365287,
                      max_leaf_nodes=None, max_samples=None,
                      min_impurity_decrease=3.3926190054501776e-08,
                      min_impurity_split=None, min_samples_leaf=2,
                      min_samples_split=4, min_weight_fraction_leaf=0.0,
                      n_estimators=214, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False)
2020-10-28 12:41:20,915:INFO:create_model() succesfully completed......................................
2020-10-28 12:41:21,121:INFO:SubProcess create_model() end ==================================
2020-10-28 12:41:21,246:INFO:create_model_container: 21
2020-10-28 12:41:21,247:INFO:master_model_container: 21
2020-10-28 12:41:21,247:INFO:display_container: 4
2020-10-28 12:41:21,247:INFO:RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                      max_depth=8, max_features=0.6268850361365287,
                      max_leaf_nodes=None, max_samples=None,
                      min_impurity_decrease=3.3926190054501776e-08,
                      min_impurity_split=None, min_samples_leaf=2,
                      min_samples_split=4, min_weight_fraction_leaf=0.0,
                      n_estimators=214, n_jobs=-1, oob_score=False,
                      random_state=786, verbose=0, warm_start=False)
2020-10-28 12:41:21,247:INFO:tune_model() succesfully completed......................................
2020-10-28 12:41:21,498:INFO:Initializing tune_model()
2020-10-28 12:41:21,498:INFO:tune_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-28 12:41:21,498:INFO:Checking exceptions
2020-10-28 12:41:21,498:INFO:Preparing display monitor
2020-10-28 12:41:21,572:INFO:Copying training dataset
2020-10-28 12:41:21,579:INFO:Checking base model
2020-10-28 12:41:21,580:INFO:Base model : Gradient Boosting Regressor
2020-10-28 12:41:21,596:INFO:Declaring metric variables
2020-10-28 12:41:21,617:INFO:Defining Hyperparameters
2020-10-28 12:41:21,799:INFO:Tuning with n_jobs=-1
2020-10-28 12:41:21,802:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-28 12:42:15,764:INFO:best_params: {'actual_estimator__n_estimators': 165, 'actual_estimator__learning_rate': 0.008341152812135749, 'actual_estimator__subsample': 0.8142412911934166, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__max_depth': 11, 'actual_estimator__max_features': 0.4867006455300885, 'actual_estimator__min_impurity_decrease': 9.014368137436963e-05}
2020-10-28 12:42:15,765:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-28 12:42:15,765:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-28 12:42:15,765:INFO:Random search completed
2020-10-28 12:42:15,765:INFO:SubProcess create_model() called ==================================
2020-10-28 12:42:15,766:INFO:Initializing create_model()
2020-10-28 12:42:15,766:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=786, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f848219ba60>, kwargs={'n_estimators': 165, 'learning_rate': 0.008341152812135749, 'subsample': 0.8142412911934166, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_depth': 11, 'max_features': 0.4867006455300885, 'min_impurity_decrease': 9.014368137436963e-05})
2020-10-28 12:42:15,766:INFO:Checking exceptions
2020-10-28 12:42:15,766:INFO:Importing libraries
2020-10-28 12:42:15,766:INFO:Copying training dataset
2020-10-28 12:42:15,767:INFO:Defining folds
2020-10-28 12:42:15,767:INFO:Declaring metric variables
2020-10-28 12:42:15,774:INFO:Importing untrained model
2020-10-28 12:42:15,774:INFO:Declaring custom model
2020-10-28 12:42:15,781:INFO:Gradient Boosting Regressor Imported succesfully
2020-10-28 12:42:15,794:INFO:Starting cross validation
2020-10-28 12:42:15,794:INFO:Cross validating with n_jobs=-1
2020-10-28 12:42:16,391:INFO:Calculating mean and std
2020-10-28 12:42:16,394:INFO:Creating metrics dataframe
2020-10-28 12:42:16,419:INFO:Finalizing model
2020-10-28 12:42:16,771:INFO:Uploading results into container
2020-10-28 12:42:16,772:INFO:Uploading model into container now
2020-10-28 12:42:16,772:INFO:create_model_container: 22
2020-10-28 12:42:16,772:INFO:master_model_container: 22
2020-10-28 12:42:16,772:INFO:display_container: 5
2020-10-28 12:42:16,773:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.008341152812135749,
                          loss='ls', max_depth=11,
                          max_features=0.4867006455300885, max_leaf_nodes=None,
                          min_impurity_decrease=9.014368137436963e-05,
                          min_impurity_split=None, min_samples_leaf=1,
                          min_samples_split=5, min_weight_fraction_leaf=0.0,
                          n_estimators=165, n_iter_no_change=None,
                          presort='deprecated', random_state=786,
                          subsample=0.8142412911934166, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-28 12:42:16,773:INFO:create_model() succesfully completed......................................
2020-10-28 12:42:16,981:INFO:SubProcess create_model() end ==================================
2020-10-28 12:42:17,010:INFO:create_model_container: 22
2020-10-28 12:42:17,010:INFO:master_model_container: 22
2020-10-28 12:42:17,010:INFO:display_container: 5
2020-10-28 12:42:17,011:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.008341152812135749,
                          loss='ls', max_depth=11,
                          max_features=0.4867006455300885, max_leaf_nodes=None,
                          min_impurity_decrease=9.014368137436963e-05,
                          min_impurity_split=None, min_samples_leaf=1,
                          min_samples_split=5, min_weight_fraction_leaf=0.0,
                          n_estimators=165, n_iter_no_change=None,
                          presort='deprecated', random_state=786,
                          subsample=0.8142412911934166, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2020-10-28 12:42:17,011:INFO:tune_model() succesfully completed......................................
2020-10-28 12:42:17,189:INFO:Initializing tune_model()
2020-10-28 12:42:17,190:INFO:tune_model(estimator=XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
             importance_type='gain', interaction_constraints='',
             learning_rate=0.300000012, max_delta_step=0, max_depth=6,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=-1, num_parallel_tree=1,
             objective='reg:squarederror', random_state=786, reg_alpha=0,
             reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
             validate_parameters=1, verbosity=0), fold=5, round=4, n_iter=120, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=optuna, search_algorithm=tpe, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-28 12:42:17,190:INFO:Checking exceptions
2020-10-28 12:42:17,190:INFO:Preparing display monitor
2020-10-28 12:42:17,206:INFO:Copying training dataset
2020-10-28 12:42:17,207:INFO:Checking base model
2020-10-28 12:42:17,209:INFO:Base model : Extreme Gradient Boosting
2020-10-28 12:42:17,217:INFO:Declaring metric variables
2020-10-28 12:42:17,224:INFO:Defining Hyperparameters
2020-10-28 12:42:17,391:INFO:Tuning with n_jobs=-1
2020-10-28 12:42:17,392:INFO:Initializing optuna.integration.OptunaSearchCV
2020-10-28 12:43:20,196:INFO:best_params: {'actual_estimator__learning_rate': 0.1540686590341447, 'actual_estimator__n_estimators': 260, 'actual_estimator__subsample': 0.8914176571412173, 'actual_estimator__max_depth': 4, 'actual_estimator__colsample_bytree': 0.7891841953324273, 'actual_estimator__min_child_weight': 3, 'actual_estimator__reg_alpha': 0.1192529102640915, 'actual_estimator__reg_lambda': 0.011092610670121805, 'actual_estimator__scale_pos_weight': 38.158895312148786}
2020-10-28 12:43:20,197:WARNING:Couldn't get cv_results from model_grid. Exception:
2020-10-28 12:43:20,197:WARNING:Traceback (most recent call last):
  File "/Users/aliagowani/opt/anaconda3/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 4433, in tune_model_supervised
    cv_results = model_grid.cv_results_
AttributeError: 'OptunaSearchCV' object has no attribute 'cv_results_'

2020-10-28 12:43:20,197:INFO:Random search completed
2020-10-28 12:43:20,197:INFO:SubProcess create_model() called ==================================
2020-10-28 12:43:20,198:INFO:Initializing create_model()
2020-10-28 12:43:20,198:INFO:create_model(estimator=XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
             importance_type='gain', interaction_constraints='',
             learning_rate=0.300000012, max_delta_step=0, max_depth=6,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=-1, num_parallel_tree=1,
             objective='reg:squarederror', random_state=786, reg_alpha=0,
             reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='auto',
             validate_parameters=1, verbosity=0), fold=KFold(n_splits=5, random_state=786, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x7f8467da5430>, kwargs={'learning_rate': 0.1540686590341447, 'n_estimators': 260, 'subsample': 0.8914176571412173, 'max_depth': 4, 'colsample_bytree': 0.7891841953324273, 'min_child_weight': 3, 'reg_alpha': 0.1192529102640915, 'reg_lambda': 0.011092610670121805, 'scale_pos_weight': 38.158895312148786})
2020-10-28 12:43:20,199:INFO:Checking exceptions
2020-10-28 12:43:20,199:INFO:Importing libraries
2020-10-28 12:43:20,199:INFO:Copying training dataset
2020-10-28 12:43:20,200:INFO:Defining folds
2020-10-28 12:43:20,200:INFO:Declaring metric variables
2020-10-28 12:43:20,207:INFO:Importing untrained model
2020-10-28 12:43:20,208:INFO:Declaring custom model
2020-10-28 12:43:20,215:INFO:Extreme Gradient Boosting Imported succesfully
2020-10-28 12:43:20,228:INFO:Starting cross validation
2020-10-28 12:43:20,229:INFO:Cross validating with n_jobs=-1
2020-10-28 12:43:26,080:INFO:Calculating mean and std
2020-10-28 12:43:26,081:INFO:Creating metrics dataframe
2020-10-28 12:43:26,097:INFO:Finalizing model
2020-10-28 12:43:26,855:INFO:Uploading results into container
2020-10-28 12:43:26,856:INFO:Uploading model into container now
2020-10-28 12:43:26,857:INFO:create_model_container: 23
2020-10-28 12:43:26,857:INFO:master_model_container: 23
2020-10-28 12:43:26,857:INFO:display_container: 6
2020-10-28 12:43:26,862:INFO:XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=0.7891841953324273, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.1540686590341447, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=260, n_jobs=-1, num_parallel_tree=1,
             objective='reg:squarederror', random_state=786,
             reg_alpha=0.1192529102640915, reg_lambda=0.011092610670121805,
             scale_pos_weight=38.158895312148786, subsample=0.8914176571412173,
             tree_method='auto', validate_parameters=1, verbosity=0)
2020-10-28 12:43:26,862:INFO:create_model() succesfully completed......................................
2020-10-28 12:43:27,019:INFO:SubProcess create_model() end ==================================
2020-10-28 12:43:27,048:INFO:create_model_container: 23
2020-10-28 12:43:27,048:INFO:master_model_container: 23
2020-10-28 12:43:27,048:INFO:display_container: 6
2020-10-28 12:43:27,050:INFO:XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=0.7891841953324273, gamma=0,
             gpu_id=-1, importance_type='gain', interaction_constraints='',
             learning_rate=0.1540686590341447, max_delta_step=0, max_depth=4,
             min_child_weight=3, missing=nan, monotone_constraints='()',
             n_estimators=260, n_jobs=-1, num_parallel_tree=1,
             objective='reg:squarederror', random_state=786,
             reg_alpha=0.1192529102640915, reg_lambda=0.011092610670121805,
             scale_pos_weight=38.158895312148786, subsample=0.8914176571412173,
             tree_method='auto', validate_parameters=1, verbosity=0)
2020-10-28 12:43:27,051:INFO:tune_model() succesfully completed......................................
